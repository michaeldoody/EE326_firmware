
webcam_firmware2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .text         00009534  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00409534  00409534  00019534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009bc  20000000  0040953c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000c844  200009bc  00409ef8  000209bc  2**2
                  ALLOC
  4 .stack        00003000  2000d200  0041673c  000209bc  2**0
=======
  0 .text         00009364  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00409364  00409364  00019364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  0040936c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000c864  200009c0  00409d2c  000209c0  2**2
                  ALLOC
  4 .stack        00003004  2000d224  00416590  000209c0  2**0
>>>>>>> parent of 8583d8d... Updated write_image to file
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209bc  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
<<<<<<< HEAD
  7 .debug_info   0001714e  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002f6d  00000000  00000000  00037b8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00007000  00000000  00000000  0003aafa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c70  00000000  00000000  00041afa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000b68  00000000  00000000  0004276a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015801  00000000  00000000  000432d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f228  00000000  00000000  00058ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051f7b  00000000  00000000  00067cfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000403c  00000000  00000000  000b9c78  2**2
=======
  7 .debug_info   0001718a  00000000  00000000  00020a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002f71  00000000  00000000  00037bcd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00007000  00000000  00000000  0003ab3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c70  00000000  00000000  00041b3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000b68  00000000  00000000  000427ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00015923  00000000  00000000  00043316  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f20d  00000000  00000000  00058c39  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000522ef  00000000  00000000  00067e46  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000040f8  00000000  00000000  000ba138  2**2
>>>>>>> parent of 8583d8d... Updated write_image to file
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
<<<<<<< HEAD
  400000:	00 02 01 20 81 2b 40 00 49 2c 40 00 49 2c 40 00     ... .+@.I,@.I,@.
  400010:	49 2c 40 00 49 2c 40 00 49 2c 40 00 00 00 00 00     I,@.I,@.I,@.....
	...
  40002c:	49 2c 40 00 49 2c 40 00 00 00 00 00 49 2c 40 00     I,@.I,@.....I,@.
  40003c:	49 2c 40 00 49 2c 40 00 49 2c 40 00 49 2c 40 00     I,@.I,@.I,@.I,@.
  40004c:	49 2c 40 00 49 2c 40 00 49 2c 40 00 49 2c 40 00     I,@.I,@.I,@.I,@.
  40005c:	00 00 00 00 49 2c 40 00 49 2c 40 00 00 00 00 00     ....I,@.I,@.....
  40006c:	51 0b 40 00 69 0b 40 00 00 00 00 00 69 25 40 00     Q.@.i.@.....i%@.
  40007c:	49 2c 40 00 00 00 00 00 00 00 00 00 49 2c 40 00     I,@.........I,@.
  40008c:	49 2c 40 00 49 2c 40 00 49 2c 40 00 49 2c 40 00     I,@.I,@.I,@.I,@.
  40009c:	95 23 40 00 49 2c 40 00 49 2c 40 00 00 00 00 00     .#@.I,@.I,@.....
	...
  4000b4:	49 2c 40 00 49 2c 40 00 49 2c 40 00 49 2c 40 00     I,@.I,@.I,@.I,@.
  4000c4:	49 2c 40 00 49 2c 40 00                             I,@.I,@.
=======
  400000:	28 02 01 20 b5 2a 40 00 7d 2b 40 00 7d 2b 40 00     (.. .*@.}+@.}+@.
  400010:	7d 2b 40 00 7d 2b 40 00 7d 2b 40 00 00 00 00 00     }+@.}+@.}+@.....
	...
  40002c:	7d 2b 40 00 7d 2b 40 00 00 00 00 00 7d 2b 40 00     }+@.}+@.....}+@.
  40003c:	7d 2b 40 00 7d 2b 40 00 7d 2b 40 00 7d 2b 40 00     }+@.}+@.}+@.}+@.
  40004c:	7d 2b 40 00 7d 2b 40 00 7d 2b 40 00 7d 2b 40 00     }+@.}+@.}+@.}+@.
  40005c:	00 00 00 00 7d 2b 40 00 7d 2b 40 00 00 00 00 00     ....}+@.}+@.....
  40006c:	51 0b 40 00 69 0b 40 00 00 00 00 00 7d 2b 40 00     Q.@.i.@.....}+@.
  40007c:	7d 2b 40 00 00 00 00 00 00 00 00 00 7d 2b 40 00     }+@.........}+@.
  40008c:	7d 2b 40 00 7d 2b 40 00 7d 2b 40 00 7d 2b 40 00     }+@.}+@.}+@.}+@.
  40009c:	49 23 40 00 7d 2b 40 00 7d 2b 40 00 00 00 00 00     I#@.}+@.}+@.....
	...
  4000b4:	7d 2b 40 00 7d 2b 40 00 7d 2b 40 00 7d 2b 40 00     }+@.}+@.}+@.}+@.
  4000c4:	7d 2b 40 00 7d 2b 40 00                             }+@.}+@.
>>>>>>> parent of 8583d8d... Updated write_image to file

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009bc 	.word	0x200009bc
  4000e8:	00000000 	.word	0x00000000
<<<<<<< HEAD
  4000ec:	0040953c 	.word	0x0040953c
=======
  4000ec:	0040936c 	.word	0x0040936c
>>>>>>> parent of 8583d8d... Updated write_image to file

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
<<<<<<< HEAD
  400128:	0040953c 	.word	0x0040953c
  40012c:	200009c0 	.word	0x200009c0
  400130:	0040953c 	.word	0x0040953c
=======
  400128:	0040936c 	.word	0x0040936c
  40012c:	200009c4 	.word	0x200009c4
  400130:	0040936c 	.word	0x0040936c
>>>>>>> parent of 8583d8d... Updated write_image to file
  400134:	00000000 	.word	0x00000000

00400138 <osc_enable>:
#define OSC_MAINCK_XTAL_HZ          BOARD_FREQ_MAINCK_XTAL          //!< External crystal oscillator.
#define OSC_MAINCK_BYPASS_HZ        BOARD_FREQ_MAINCK_BYPASS        //!< External bypass oscillator.
//@}

static inline void osc_enable(uint32_t ul_id)
{
  400138:	b580      	push	{r7, lr}
  40013a:	b082      	sub	sp, #8
  40013c:	af00      	add	r7, sp, #0
  40013e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400140:	687b      	ldr	r3, [r7, #4]
  400142:	2b07      	cmp	r3, #7
  400144:	d831      	bhi.n	4001aa <osc_enable+0x72>
  400146:	a201      	add	r2, pc, #4	; (adr r2, 40014c <osc_enable+0x14>)
  400148:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40014c:	004001a9 	.word	0x004001a9
  400150:	0040016d 	.word	0x0040016d
  400154:	00400175 	.word	0x00400175
  400158:	0040017d 	.word	0x0040017d
  40015c:	00400185 	.word	0x00400185
  400160:	0040018d 	.word	0x0040018d
  400164:	00400195 	.word	0x00400195
  400168:	0040019f 	.word	0x0040019f
	case OSC_SLCK_32K_RC:
		break;

	case OSC_SLCK_32K_XTAL:
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
  40016c:	2000      	movs	r0, #0
  40016e:	4b11      	ldr	r3, [pc, #68]	; (4001b4 <osc_enable+0x7c>)
  400170:	4798      	blx	r3
		break;
  400172:	e01a      	b.n	4001aa <osc_enable+0x72>

	case OSC_SLCK_32K_BYPASS:
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
  400174:	2001      	movs	r0, #1
  400176:	4b0f      	ldr	r3, [pc, #60]	; (4001b4 <osc_enable+0x7c>)
  400178:	4798      	blx	r3
		break;
  40017a:	e016      	b.n	4001aa <osc_enable+0x72>


	case OSC_MAINCK_4M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
  40017c:	2000      	movs	r0, #0
  40017e:	4b0e      	ldr	r3, [pc, #56]	; (4001b8 <osc_enable+0x80>)
  400180:	4798      	blx	r3
		break;
  400182:	e012      	b.n	4001aa <osc_enable+0x72>

	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
  400184:	2010      	movs	r0, #16
  400186:	4b0c      	ldr	r3, [pc, #48]	; (4001b8 <osc_enable+0x80>)
  400188:	4798      	blx	r3
		break;
  40018a:	e00e      	b.n	4001aa <osc_enable+0x72>

	case OSC_MAINCK_12M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  40018c:	2020      	movs	r0, #32
  40018e:	4b0a      	ldr	r3, [pc, #40]	; (4001b8 <osc_enable+0x80>)
  400190:	4798      	blx	r3
		break;
  400192:	e00a      	b.n	4001aa <osc_enable+0x72>


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400194:	213e      	movs	r1, #62	; 0x3e
  400196:	2000      	movs	r0, #0
  400198:	4b08      	ldr	r3, [pc, #32]	; (4001bc <osc_enable+0x84>)
  40019a:	4798      	blx	r3
			pmc_us_to_moscxtst(BOARD_OSC_STARTUP_US,
				OSC_SLCK_32K_RC_HZ));
		break;
  40019c:	e005      	b.n	4001aa <osc_enable+0x72>

	case OSC_MAINCK_BYPASS:
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
  40019e:	213e      	movs	r1, #62	; 0x3e
  4001a0:	2001      	movs	r0, #1
  4001a2:	4b06      	ldr	r3, [pc, #24]	; (4001bc <osc_enable+0x84>)
  4001a4:	4798      	blx	r3
			pmc_us_to_moscxtst(BOARD_OSC_STARTUP_US,
				OSC_SLCK_32K_RC_HZ));
		break;
  4001a6:	e000      	b.n	4001aa <osc_enable+0x72>
		break;
  4001a8:	bf00      	nop
	}
}
  4001aa:	bf00      	nop
  4001ac:	3708      	adds	r7, #8
  4001ae:	46bd      	mov	sp, r7
  4001b0:	bd80      	pop	{r7, pc}
  4001b2:	bf00      	nop
  4001b4:	00400c01 	.word	0x00400c01
  4001b8:	00400c6d 	.word	0x00400c6d
  4001bc:	00400cdd 	.word	0x00400cdd

004001c0 <osc_is_ready>:
		break;
	}
}

static inline bool osc_is_ready(uint32_t ul_id)
{
  4001c0:	b580      	push	{r7, lr}
  4001c2:	b082      	sub	sp, #8
  4001c4:	af00      	add	r7, sp, #0
  4001c6:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  4001c8:	687b      	ldr	r3, [r7, #4]
  4001ca:	2b07      	cmp	r3, #7
  4001cc:	d826      	bhi.n	40021c <osc_is_ready+0x5c>
  4001ce:	a201      	add	r2, pc, #4	; (adr r2, 4001d4 <osc_is_ready+0x14>)
  4001d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  4001d4:	004001f5 	.word	0x004001f5
  4001d8:	004001f9 	.word	0x004001f9
  4001dc:	004001f9 	.word	0x004001f9
  4001e0:	0040020b 	.word	0x0040020b
  4001e4:	0040020b 	.word	0x0040020b
  4001e8:	0040020b 	.word	0x0040020b
  4001ec:	0040020b 	.word	0x0040020b
  4001f0:	0040020b 	.word	0x0040020b
	case OSC_SLCK_32K_RC:
		return 1;
  4001f4:	2301      	movs	r3, #1
  4001f6:	e012      	b.n	40021e <osc_is_ready+0x5e>

	case OSC_SLCK_32K_XTAL:
	case OSC_SLCK_32K_BYPASS:
		return pmc_osc_is_ready_32kxtal();
  4001f8:	4b0b      	ldr	r3, [pc, #44]	; (400228 <osc_is_ready+0x68>)
  4001fa:	4798      	blx	r3
  4001fc:	4603      	mov	r3, r0
  4001fe:	2b00      	cmp	r3, #0
  400200:	bf14      	ite	ne
  400202:	2301      	movne	r3, #1
  400204:	2300      	moveq	r3, #0
  400206:	b2db      	uxtb	r3, r3
  400208:	e009      	b.n	40021e <osc_is_ready+0x5e>
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40020a:	4b08      	ldr	r3, [pc, #32]	; (40022c <osc_is_ready+0x6c>)
  40020c:	4798      	blx	r3
  40020e:	4603      	mov	r3, r0
  400210:	2b00      	cmp	r3, #0
  400212:	bf14      	ite	ne
  400214:	2301      	movne	r3, #1
  400216:	2300      	moveq	r3, #0
  400218:	b2db      	uxtb	r3, r3
  40021a:	e000      	b.n	40021e <osc_is_ready+0x5e>
	}

	return 0;
  40021c:	2300      	movs	r3, #0
}
  40021e:	4618      	mov	r0, r3
  400220:	3708      	adds	r7, #8
  400222:	46bd      	mov	sp, r7
  400224:	bd80      	pop	{r7, pc}
  400226:	bf00      	nop
  400228:	00400c39 	.word	0x00400c39
  40022c:	00400d55 	.word	0x00400d55

00400230 <osc_get_rate>:

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  400230:	b480      	push	{r7}
  400232:	b083      	sub	sp, #12
  400234:	af00      	add	r7, sp, #0
  400236:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400238:	687b      	ldr	r3, [r7, #4]
  40023a:	2b07      	cmp	r3, #7
  40023c:	d825      	bhi.n	40028a <osc_get_rate+0x5a>
  40023e:	a201      	add	r2, pc, #4	; (adr r2, 400244 <osc_get_rate+0x14>)
  400240:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400244:	00400265 	.word	0x00400265
  400248:	0040026b 	.word	0x0040026b
  40024c:	00400271 	.word	0x00400271
  400250:	00400277 	.word	0x00400277
  400254:	0040027b 	.word	0x0040027b
  400258:	0040027f 	.word	0x0040027f
  40025c:	00400283 	.word	0x00400283
  400260:	00400287 	.word	0x00400287
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  400264:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  400268:	e010      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  40026a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40026e:	e00d      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  400270:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400274:	e00a      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  400276:	4b08      	ldr	r3, [pc, #32]	; (400298 <osc_get_rate+0x68>)
  400278:	e008      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  40027a:	4b08      	ldr	r3, [pc, #32]	; (40029c <osc_get_rate+0x6c>)
  40027c:	e006      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  40027e:	4b08      	ldr	r3, [pc, #32]	; (4002a0 <osc_get_rate+0x70>)
  400280:	e004      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  400282:	4b07      	ldr	r3, [pc, #28]	; (4002a0 <osc_get_rate+0x70>)
  400284:	e002      	b.n	40028c <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  400286:	4b06      	ldr	r3, [pc, #24]	; (4002a0 <osc_get_rate+0x70>)
  400288:	e000      	b.n	40028c <osc_get_rate+0x5c>
	}

	return 0;
  40028a:	2300      	movs	r3, #0
}
  40028c:	4618      	mov	r0, r3
  40028e:	370c      	adds	r7, #12
  400290:	46bd      	mov	sp, r7
  400292:	bc80      	pop	{r7}
  400294:	4770      	bx	lr
  400296:	bf00      	nop
  400298:	003d0900 	.word	0x003d0900
  40029c:	007a1200 	.word	0x007a1200
  4002a0:	00b71b00 	.word	0x00b71b00

004002a4 <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
  4002a4:	b580      	push	{r7, lr}
  4002a6:	b082      	sub	sp, #8
  4002a8:	af00      	add	r7, sp, #0
  4002aa:	4603      	mov	r3, r0
  4002ac:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
  4002ae:	bf00      	nop
  4002b0:	79fb      	ldrb	r3, [r7, #7]
  4002b2:	4618      	mov	r0, r3
  4002b4:	4b05      	ldr	r3, [pc, #20]	; (4002cc <osc_wait_ready+0x28>)
  4002b6:	4798      	blx	r3
  4002b8:	4603      	mov	r3, r0
  4002ba:	f083 0301 	eor.w	r3, r3, #1
  4002be:	b2db      	uxtb	r3, r3
  4002c0:	2b00      	cmp	r3, #0
  4002c2:	d1f5      	bne.n	4002b0 <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
  4002c4:	bf00      	nop
  4002c6:	3708      	adds	r7, #8
  4002c8:	46bd      	mov	sp, r7
  4002ca:	bd80      	pop	{r7, pc}
  4002cc:	004001c1 	.word	0x004001c1

004002d0 <pll_config_init>:
 * \note The SAM3S PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
  4002d0:	b580      	push	{r7, lr}
  4002d2:	b086      	sub	sp, #24
  4002d4:	af00      	add	r7, sp, #0
  4002d6:	60f8      	str	r0, [r7, #12]
  4002d8:	607a      	str	r2, [r7, #4]
  4002da:	603b      	str	r3, [r7, #0]
  4002dc:	460b      	mov	r3, r1
  4002de:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	/* Calculate internal VCO frequency */
	vco_hz = osc_get_rate(e_src) / ul_div;
  4002e0:	7afb      	ldrb	r3, [r7, #11]
  4002e2:	4618      	mov	r0, r3
  4002e4:	4b0d      	ldr	r3, [pc, #52]	; (40031c <pll_config_init+0x4c>)
  4002e6:	4798      	blx	r3
  4002e8:	4602      	mov	r2, r0
  4002ea:	687b      	ldr	r3, [r7, #4]
  4002ec:	fbb2 f3f3 	udiv	r3, r2, r3
  4002f0:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_INPUT_MIN_HZ);
	Assert(vco_hz <= PLL_INPUT_MAX_HZ);

	vco_hz *= ul_mul;
  4002f2:	697b      	ldr	r3, [r7, #20]
  4002f4:	683a      	ldr	r2, [r7, #0]
  4002f6:	fb02 f303 	mul.w	r3, r2, r3
  4002fa:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
	Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

	/* PMC hardware will automatically make it mul+1 */
	p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
  4002fc:	683b      	ldr	r3, [r7, #0]
  4002fe:	3b01      	subs	r3, #1
  400300:	041a      	lsls	r2, r3, #16
  400302:	4b07      	ldr	r3, [pc, #28]	; (400320 <pll_config_init+0x50>)
  400304:	4013      	ands	r3, r2
  400306:	687a      	ldr	r2, [r7, #4]
  400308:	b2d2      	uxtb	r2, r2
  40030a:	4313      	orrs	r3, r2
  40030c:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
  400310:	68fb      	ldr	r3, [r7, #12]
  400312:	601a      	str	r2, [r3, #0]
}
  400314:	bf00      	nop
  400316:	3718      	adds	r7, #24
  400318:	46bd      	mov	sp, r7
  40031a:	bd80      	pop	{r7, pc}
  40031c:	00400231 	.word	0x00400231
  400320:	07ff0000 	.word	0x07ff0000

00400324 <pll_enable>:
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
  400324:	b580      	push	{r7, lr}
  400326:	b082      	sub	sp, #8
  400328:	af00      	add	r7, sp, #0
  40032a:	6078      	str	r0, [r7, #4]
  40032c:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  40032e:	683b      	ldr	r3, [r7, #0]
  400330:	2b00      	cmp	r3, #0
  400332:	d108      	bne.n	400346 <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
  400334:	4b09      	ldr	r3, [pc, #36]	; (40035c <pll_enable+0x38>)
  400336:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400338:	4a09      	ldr	r2, [pc, #36]	; (400360 <pll_enable+0x3c>)
  40033a:	687b      	ldr	r3, [r7, #4]
  40033c:	681b      	ldr	r3, [r3, #0]
  40033e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  400342:	6293      	str	r3, [r2, #40]	; 0x28
	} else {
		pmc_disable_pllbck();
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}
  400344:	e005      	b.n	400352 <pll_enable+0x2e>
		pmc_disable_pllbck();
  400346:	4b07      	ldr	r3, [pc, #28]	; (400364 <pll_enable+0x40>)
  400348:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  40034a:	4a05      	ldr	r2, [pc, #20]	; (400360 <pll_enable+0x3c>)
  40034c:	687b      	ldr	r3, [r7, #4]
  40034e:	681b      	ldr	r3, [r3, #0]
  400350:	62d3      	str	r3, [r2, #44]	; 0x2c
}
  400352:	bf00      	nop
  400354:	3708      	adds	r7, #8
  400356:	46bd      	mov	sp, r7
  400358:	bd80      	pop	{r7, pc}
  40035a:	bf00      	nop
  40035c:	00400d6d 	.word	0x00400d6d
  400360:	400e0400 	.word	0x400e0400
  400364:	00400ded 	.word	0x00400ded

00400368 <pll_is_locked>:
		pmc_disable_pllbck();
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
  400368:	b580      	push	{r7, lr}
  40036a:	b082      	sub	sp, #8
  40036c:	af00      	add	r7, sp, #0
  40036e:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  400370:	687b      	ldr	r3, [r7, #4]
  400372:	2b00      	cmp	r3, #0
  400374:	d103      	bne.n	40037e <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
  400376:	4b05      	ldr	r3, [pc, #20]	; (40038c <pll_is_locked+0x24>)
  400378:	4798      	blx	r3
  40037a:	4603      	mov	r3, r0
  40037c:	e002      	b.n	400384 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_pllbck();
  40037e:	4b04      	ldr	r3, [pc, #16]	; (400390 <pll_is_locked+0x28>)
  400380:	4798      	blx	r3
  400382:	4603      	mov	r3, r0
	}
}
  400384:	4618      	mov	r0, r3
  400386:	3708      	adds	r7, #8
  400388:	46bd      	mov	sp, r7
  40038a:	bd80      	pop	{r7, pc}
  40038c:	00400d85 	.word	0x00400d85
  400390:	00400e05 	.word	0x00400e05

00400394 <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
  400394:	b580      	push	{r7, lr}
  400396:	b082      	sub	sp, #8
  400398:	af00      	add	r7, sp, #0
  40039a:	4603      	mov	r3, r0
  40039c:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
  40039e:	79fb      	ldrb	r3, [r7, #7]
  4003a0:	3b03      	subs	r3, #3
  4003a2:	2b04      	cmp	r3, #4
  4003a4:	d808      	bhi.n	4003b8 <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
  4003a6:	79fb      	ldrb	r3, [r7, #7]
  4003a8:	4618      	mov	r0, r3
  4003aa:	4b06      	ldr	r3, [pc, #24]	; (4003c4 <pll_enable_source+0x30>)
  4003ac:	4798      	blx	r3
		osc_wait_ready(e_src);
  4003ae:	79fb      	ldrb	r3, [r7, #7]
  4003b0:	4618      	mov	r0, r3
  4003b2:	4b05      	ldr	r3, [pc, #20]	; (4003c8 <pll_enable_source+0x34>)
  4003b4:	4798      	blx	r3
		break;
  4003b6:	e000      	b.n	4003ba <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
  4003b8:	bf00      	nop
	}
}
  4003ba:	bf00      	nop
  4003bc:	3708      	adds	r7, #8
  4003be:	46bd      	mov	sp, r7
  4003c0:	bd80      	pop	{r7, pc}
  4003c2:	bf00      	nop
  4003c4:	00400139 	.word	0x00400139
  4003c8:	004002a5 	.word	0x004002a5

004003cc <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
  4003cc:	b580      	push	{r7, lr}
  4003ce:	b082      	sub	sp, #8
  4003d0:	af00      	add	r7, sp, #0
  4003d2:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4003d4:	bf00      	nop
  4003d6:	6878      	ldr	r0, [r7, #4]
  4003d8:	4b04      	ldr	r3, [pc, #16]	; (4003ec <pll_wait_for_lock+0x20>)
  4003da:	4798      	blx	r3
  4003dc:	4603      	mov	r3, r0
  4003de:	2b00      	cmp	r3, #0
  4003e0:	d0f9      	beq.n	4003d6 <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
  4003e2:	2300      	movs	r3, #0
}
  4003e4:	4618      	mov	r0, r3
  4003e6:	3708      	adds	r7, #8
  4003e8:	46bd      	mov	sp, r7
  4003ea:	bd80      	pop	{r7, pc}
  4003ec:	00400369 	.word	0x00400369

004003f0 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  4003f0:	b580      	push	{r7, lr}
  4003f2:	af00      	add	r7, sp, #0
	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
		return OSC_MAINCK_BYPASS_HZ;
	}
#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		return pll_get_default_rate(0);
  4003f4:	2006      	movs	r0, #6
  4003f6:	4b04      	ldr	r3, [pc, #16]	; (400408 <sysclk_get_main_hz+0x18>)
  4003f8:	4798      	blx	r3
  4003fa:	4602      	mov	r2, r0
  4003fc:	4613      	mov	r3, r2
  4003fe:	009b      	lsls	r3, r3, #2
  400400:	4413      	add	r3, r2
  400402:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  400404:	4618      	mov	r0, r3
  400406:	bd80      	pop	{r7, pc}
  400408:	00400231 	.word	0x00400231

0040040c <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  40040c:	b580      	push	{r7, lr}
  40040e:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  400410:	4b02      	ldr	r3, [pc, #8]	; (40041c <sysclk_get_cpu_hz+0x10>)
  400412:	4798      	blx	r3
  400414:	4603      	mov	r3, r0
  400416:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  400418:	4618      	mov	r0, r3
  40041a:	bd80      	pop	{r7, pc}
  40041c:	004003f1 	.word	0x004003f1

00400420 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400420:	b590      	push	{r4, r7, lr}
  400422:	b083      	sub	sp, #12
  400424:	af00      	add	r7, sp, #0
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400426:	4811      	ldr	r0, [pc, #68]	; (40046c <sysclk_init+0x4c>)
  400428:	4b11      	ldr	r3, [pc, #68]	; (400470 <sysclk_init+0x50>)
  40042a:	4798      	blx	r3

#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		struct pll_config pllcfg;

		pll_enable_source(CONFIG_PLL0_SOURCE);
  40042c:	2006      	movs	r0, #6
  40042e:	4b11      	ldr	r3, [pc, #68]	; (400474 <sysclk_init+0x54>)
  400430:	4798      	blx	r3
		pll_config_defaults(&pllcfg, 0);
  400432:	1d38      	adds	r0, r7, #4
  400434:	2314      	movs	r3, #20
  400436:	2201      	movs	r2, #1
  400438:	2106      	movs	r1, #6
  40043a:	4c0f      	ldr	r4, [pc, #60]	; (400478 <sysclk_init+0x58>)
  40043c:	47a0      	blx	r4
		pll_enable(&pllcfg, 0);
  40043e:	1d3b      	adds	r3, r7, #4
  400440:	2100      	movs	r1, #0
  400442:	4618      	mov	r0, r3
  400444:	4b0d      	ldr	r3, [pc, #52]	; (40047c <sysclk_init+0x5c>)
  400446:	4798      	blx	r3
		pll_wait_for_lock(0);
  400448:	2000      	movs	r0, #0
  40044a:	4b0d      	ldr	r3, [pc, #52]	; (400480 <sysclk_init+0x60>)
  40044c:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40044e:	2010      	movs	r0, #16
  400450:	4b0c      	ldr	r3, [pc, #48]	; (400484 <sysclk_init+0x64>)
  400452:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400454:	4b0c      	ldr	r3, [pc, #48]	; (400488 <sysclk_init+0x68>)
  400456:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400458:	4b0c      	ldr	r3, [pc, #48]	; (40048c <sysclk_init+0x6c>)
  40045a:	4798      	blx	r3
  40045c:	4603      	mov	r3, r0
  40045e:	4618      	mov	r0, r3
  400460:	4b03      	ldr	r3, [pc, #12]	; (400470 <sysclk_init+0x50>)
  400462:	4798      	blx	r3

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  400464:	bf00      	nop
  400466:	370c      	adds	r7, #12
  400468:	46bd      	mov	sp, r7
  40046a:	bd90      	pop	{r4, r7, pc}
  40046c:	07270e00 	.word	0x07270e00
<<<<<<< HEAD
  400470:	00402de9 	.word	0x00402de9
=======
  400470:	00402d1d 	.word	0x00402d1d
>>>>>>> parent of 8583d8d... Updated write_image to file
  400474:	00400395 	.word	0x00400395
  400478:	004002d1 	.word	0x004002d1
  40047c:	00400325 	.word	0x00400325
  400480:	004003cd 	.word	0x004003cd
  400484:	00400b81 	.word	0x00400b81
<<<<<<< HEAD
  400488:	00402c51 	.word	0x00402c51
=======
  400488:	00402b85 	.word	0x00402b85
>>>>>>> parent of 8583d8d... Updated write_image to file
  40048c:	0040040d 	.word	0x0040040d

00400490 <pio_pull_up>:
 * \param ul_pull_up_enable Indicates if the pin(s) internal pull-up shall be
 * configured.
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
  400490:	b480      	push	{r7}
  400492:	b085      	sub	sp, #20
  400494:	af00      	add	r7, sp, #0
  400496:	60f8      	str	r0, [r7, #12]
  400498:	60b9      	str	r1, [r7, #8]
  40049a:	607a      	str	r2, [r7, #4]
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40049c:	687b      	ldr	r3, [r7, #4]
  40049e:	2b00      	cmp	r3, #0
  4004a0:	d003      	beq.n	4004aa <pio_pull_up+0x1a>
		p_pio->PIO_PUER = ul_mask;
  4004a2:	68fb      	ldr	r3, [r7, #12]
  4004a4:	68ba      	ldr	r2, [r7, #8]
  4004a6:	665a      	str	r2, [r3, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
	}
}
  4004a8:	e002      	b.n	4004b0 <pio_pull_up+0x20>
		p_pio->PIO_PUDR = ul_mask;
  4004aa:	68fb      	ldr	r3, [r7, #12]
  4004ac:	68ba      	ldr	r2, [r7, #8]
  4004ae:	661a      	str	r2, [r3, #96]	; 0x60
}
  4004b0:	bf00      	nop
  4004b2:	3714      	adds	r7, #20
  4004b4:	46bd      	mov	sp, r7
  4004b6:	bc80      	pop	{r7}
  4004b8:	4770      	bx	lr

004004ba <pio_set_debounce_filter>:
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 * \param ul_cut_off Cuts off frequency for debouncing filter.
 */
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
  4004ba:	b480      	push	{r7}
  4004bc:	b085      	sub	sp, #20
  4004be:	af00      	add	r7, sp, #0
  4004c0:	60f8      	str	r0, [r7, #12]
  4004c2:	60b9      	str	r1, [r7, #8]
  4004c4:	607a      	str	r2, [r7, #4]
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  4004c6:	68fb      	ldr	r3, [r7, #12]
  4004c8:	68ba      	ldr	r2, [r7, #8]
  4004ca:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4004ce:	687b      	ldr	r3, [r7, #4]
  4004d0:	005b      	lsls	r3, r3, #1
  4004d2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4004d6:	fbb2 f3f3 	udiv	r3, r2, r3
  4004da:	3b01      	subs	r3, #1
  4004dc:	f3c3 020d 	ubfx	r2, r3, #0, #14
  4004e0:	68fb      	ldr	r3, [r7, #12]
  4004e2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			(2 * (ul_cut_off))) - 1);
}
  4004e6:	bf00      	nop
  4004e8:	3714      	adds	r7, #20
  4004ea:	46bd      	mov	sp, r7
  4004ec:	bc80      	pop	{r7}
  4004ee:	4770      	bx	lr

004004f0 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4004f0:	b480      	push	{r7}
  4004f2:	b087      	sub	sp, #28
  4004f4:	af00      	add	r7, sp, #0
  4004f6:	60f8      	str	r0, [r7, #12]
  4004f8:	60b9      	str	r1, [r7, #8]
  4004fa:	607a      	str	r2, [r7, #4]
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4004fc:	68fb      	ldr	r3, [r7, #12]
  4004fe:	687a      	ldr	r2, [r7, #4]
  400500:	645a      	str	r2, [r3, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400502:	68bb      	ldr	r3, [r7, #8]
  400504:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400508:	d04a      	beq.n	4005a0 <pio_set_peripheral+0xb0>
  40050a:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  40050e:	d808      	bhi.n	400522 <pio_set_peripheral+0x32>
  400510:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  400514:	d016      	beq.n	400544 <pio_set_peripheral+0x54>
  400516:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  40051a:	d02c      	beq.n	400576 <pio_set_peripheral+0x86>
  40051c:	2b00      	cmp	r3, #0
  40051e:	d069      	beq.n	4005f4 <pio_set_peripheral+0x104>
  400520:	e064      	b.n	4005ec <pio_set_peripheral+0xfc>
  400522:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400526:	d065      	beq.n	4005f4 <pio_set_peripheral+0x104>
  400528:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40052c:	d803      	bhi.n	400536 <pio_set_peripheral+0x46>
  40052e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  400532:	d04a      	beq.n	4005ca <pio_set_peripheral+0xda>
  400534:	e05a      	b.n	4005ec <pio_set_peripheral+0xfc>
  400536:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  40053a:	d05b      	beq.n	4005f4 <pio_set_peripheral+0x104>
  40053c:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400540:	d058      	beq.n	4005f4 <pio_set_peripheral+0x104>
  400542:	e053      	b.n	4005ec <pio_set_peripheral+0xfc>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400544:	68fb      	ldr	r3, [r7, #12]
  400546:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  400548:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40054a:	68fb      	ldr	r3, [r7, #12]
  40054c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40054e:	687b      	ldr	r3, [r7, #4]
  400550:	43d9      	mvns	r1, r3
  400552:	697b      	ldr	r3, [r7, #20]
  400554:	400b      	ands	r3, r1
  400556:	401a      	ands	r2, r3
  400558:	68fb      	ldr	r3, [r7, #12]
  40055a:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40055c:	68fb      	ldr	r3, [r7, #12]
  40055e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  400560:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400562:	68fb      	ldr	r3, [r7, #12]
  400564:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400566:	687b      	ldr	r3, [r7, #4]
  400568:	43d9      	mvns	r1, r3
  40056a:	697b      	ldr	r3, [r7, #20]
  40056c:	400b      	ands	r3, r1
  40056e:	401a      	ands	r2, r3
  400570:	68fb      	ldr	r3, [r7, #12]
  400572:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  400574:	e03a      	b.n	4005ec <pio_set_peripheral+0xfc>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400576:	68fb      	ldr	r3, [r7, #12]
  400578:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  40057a:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40057c:	687a      	ldr	r2, [r7, #4]
  40057e:	697b      	ldr	r3, [r7, #20]
  400580:	431a      	orrs	r2, r3
  400582:	68fb      	ldr	r3, [r7, #12]
  400584:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400586:	68fb      	ldr	r3, [r7, #12]
  400588:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  40058a:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40058c:	68fb      	ldr	r3, [r7, #12]
  40058e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400590:	687b      	ldr	r3, [r7, #4]
  400592:	43d9      	mvns	r1, r3
  400594:	697b      	ldr	r3, [r7, #20]
  400596:	400b      	ands	r3, r1
  400598:	401a      	ands	r2, r3
  40059a:	68fb      	ldr	r3, [r7, #12]
  40059c:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  40059e:	e025      	b.n	4005ec <pio_set_peripheral+0xfc>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4005a0:	68fb      	ldr	r3, [r7, #12]
  4005a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  4005a4:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4005a6:	68fb      	ldr	r3, [r7, #12]
  4005a8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4005aa:	687b      	ldr	r3, [r7, #4]
  4005ac:	43d9      	mvns	r1, r3
  4005ae:	697b      	ldr	r3, [r7, #20]
  4005b0:	400b      	ands	r3, r1
  4005b2:	401a      	ands	r2, r3
  4005b4:	68fb      	ldr	r3, [r7, #12]
  4005b6:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4005b8:	68fb      	ldr	r3, [r7, #12]
  4005ba:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  4005bc:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4005be:	687a      	ldr	r2, [r7, #4]
  4005c0:	697b      	ldr	r3, [r7, #20]
  4005c2:	431a      	orrs	r2, r3
  4005c4:	68fb      	ldr	r3, [r7, #12]
  4005c6:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  4005c8:	e010      	b.n	4005ec <pio_set_peripheral+0xfc>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4005ca:	68fb      	ldr	r3, [r7, #12]
  4005cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  4005ce:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4005d0:	687a      	ldr	r2, [r7, #4]
  4005d2:	697b      	ldr	r3, [r7, #20]
  4005d4:	431a      	orrs	r2, r3
  4005d6:	68fb      	ldr	r3, [r7, #12]
  4005d8:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4005da:	68fb      	ldr	r3, [r7, #12]
  4005dc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  4005de:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4005e0:	687a      	ldr	r2, [r7, #4]
  4005e2:	697b      	ldr	r3, [r7, #20]
  4005e4:	431a      	orrs	r2, r3
  4005e6:	68fb      	ldr	r3, [r7, #12]
  4005e8:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  4005ea:	bf00      	nop
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4005ec:	68fb      	ldr	r3, [r7, #12]
  4005ee:	687a      	ldr	r2, [r7, #4]
  4005f0:	605a      	str	r2, [r3, #4]
  4005f2:	e000      	b.n	4005f6 <pio_set_peripheral+0x106>
		return;
  4005f4:	bf00      	nop
}
  4005f6:	371c      	adds	r7, #28
  4005f8:	46bd      	mov	sp, r7
  4005fa:	bc80      	pop	{r7}
  4005fc:	4770      	bx	lr
	...

00400600 <pio_set_input>:
 * \param ul_mask Bitmask indicating which pin(s) to configure as input(s).
 * \param ul_attribute PIO attribute(s).
 */
void pio_set_input(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attribute)
{
  400600:	b580      	push	{r7, lr}
  400602:	b084      	sub	sp, #16
  400604:	af00      	add	r7, sp, #0
  400606:	60f8      	str	r0, [r7, #12]
  400608:	60b9      	str	r1, [r7, #8]
  40060a:	607a      	str	r2, [r7, #4]
	pio_disable_interrupt(p_pio, ul_mask);
  40060c:	68b9      	ldr	r1, [r7, #8]
  40060e:	68f8      	ldr	r0, [r7, #12]
  400610:	4b19      	ldr	r3, [pc, #100]	; (400678 <pio_set_input+0x78>)
  400612:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);
  400614:	687b      	ldr	r3, [r7, #4]
  400616:	f003 0301 	and.w	r3, r3, #1
  40061a:	461a      	mov	r2, r3
  40061c:	68b9      	ldr	r1, [r7, #8]
  40061e:	68f8      	ldr	r0, [r7, #12]
  400620:	4b16      	ldr	r3, [pc, #88]	; (40067c <pio_set_input+0x7c>)
  400622:	4798      	blx	r3

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400624:	687b      	ldr	r3, [r7, #4]
  400626:	f003 030a 	and.w	r3, r3, #10
  40062a:	2b00      	cmp	r3, #0
  40062c:	d003      	beq.n	400636 <pio_set_input+0x36>
		p_pio->PIO_IFER = ul_mask;
  40062e:	68fb      	ldr	r3, [r7, #12]
  400630:	68ba      	ldr	r2, [r7, #8]
  400632:	621a      	str	r2, [r3, #32]
  400634:	e002      	b.n	40063c <pio_set_input+0x3c>
	} else {
		p_pio->PIO_IFDR = ul_mask;
  400636:	68fb      	ldr	r3, [r7, #12]
  400638:	68ba      	ldr	r2, [r7, #8]
  40063a:	625a      	str	r2, [r3, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  40063c:	687b      	ldr	r3, [r7, #4]
  40063e:	f003 0302 	and.w	r3, r3, #2
  400642:	2b00      	cmp	r3, #0
  400644:	d004      	beq.n	400650 <pio_set_input+0x50>
		p_pio->PIO_IFSCDR = ul_mask;
  400646:	68fb      	ldr	r3, [r7, #12]
  400648:	68ba      	ldr	r2, [r7, #8]
  40064a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  40064e:	e008      	b.n	400662 <pio_set_input+0x62>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  400650:	687b      	ldr	r3, [r7, #4]
  400652:	f003 0308 	and.w	r3, r3, #8
  400656:	2b00      	cmp	r3, #0
  400658:	d003      	beq.n	400662 <pio_set_input+0x62>
			p_pio->PIO_IFSCER = ul_mask;
  40065a:	68fb      	ldr	r3, [r7, #12]
  40065c:	68ba      	ldr	r2, [r7, #8]
  40065e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400662:	68fb      	ldr	r3, [r7, #12]
  400664:	68ba      	ldr	r2, [r7, #8]
  400666:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
  400668:	68fb      	ldr	r3, [r7, #12]
  40066a:	68ba      	ldr	r2, [r7, #8]
  40066c:	601a      	str	r2, [r3, #0]
}
  40066e:	bf00      	nop
  400670:	3710      	adds	r7, #16
  400672:	46bd      	mov	sp, r7
  400674:	bd80      	pop	{r7, pc}
  400676:	bf00      	nop
  400678:	00400769 	.word	0x00400769
  40067c:	00400491 	.word	0x00400491

00400680 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  400680:	b580      	push	{r7, lr}
  400682:	b084      	sub	sp, #16
  400684:	af00      	add	r7, sp, #0
  400686:	60f8      	str	r0, [r7, #12]
  400688:	60b9      	str	r1, [r7, #8]
  40068a:	607a      	str	r2, [r7, #4]
  40068c:	603b      	str	r3, [r7, #0]
	pio_disable_interrupt(p_pio, ul_mask);
  40068e:	68b9      	ldr	r1, [r7, #8]
  400690:	68f8      	ldr	r0, [r7, #12]
  400692:	4b12      	ldr	r3, [pc, #72]	; (4006dc <pio_set_output+0x5c>)
  400694:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);
  400696:	69ba      	ldr	r2, [r7, #24]
  400698:	68b9      	ldr	r1, [r7, #8]
  40069a:	68f8      	ldr	r0, [r7, #12]
  40069c:	4b10      	ldr	r3, [pc, #64]	; (4006e0 <pio_set_output+0x60>)
  40069e:	4798      	blx	r3

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  4006a0:	683b      	ldr	r3, [r7, #0]
  4006a2:	2b00      	cmp	r3, #0
  4006a4:	d003      	beq.n	4006ae <pio_set_output+0x2e>
		p_pio->PIO_MDER = ul_mask;
  4006a6:	68fb      	ldr	r3, [r7, #12]
  4006a8:	68ba      	ldr	r2, [r7, #8]
  4006aa:	651a      	str	r2, [r3, #80]	; 0x50
  4006ac:	e002      	b.n	4006b4 <pio_set_output+0x34>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  4006ae:	68fb      	ldr	r3, [r7, #12]
  4006b0:	68ba      	ldr	r2, [r7, #8]
  4006b2:	655a      	str	r2, [r3, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  4006b4:	687b      	ldr	r3, [r7, #4]
  4006b6:	2b00      	cmp	r3, #0
  4006b8:	d003      	beq.n	4006c2 <pio_set_output+0x42>
		p_pio->PIO_SODR = ul_mask;
  4006ba:	68fb      	ldr	r3, [r7, #12]
  4006bc:	68ba      	ldr	r2, [r7, #8]
  4006be:	631a      	str	r2, [r3, #48]	; 0x30
  4006c0:	e002      	b.n	4006c8 <pio_set_output+0x48>
	} else {
		p_pio->PIO_CODR = ul_mask;
  4006c2:	68fb      	ldr	r3, [r7, #12]
  4006c4:	68ba      	ldr	r2, [r7, #8]
  4006c6:	635a      	str	r2, [r3, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  4006c8:	68fb      	ldr	r3, [r7, #12]
  4006ca:	68ba      	ldr	r2, [r7, #8]
  4006cc:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
  4006ce:	68fb      	ldr	r3, [r7, #12]
  4006d0:	68ba      	ldr	r2, [r7, #8]
  4006d2:	601a      	str	r2, [r3, #0]
}
  4006d4:	bf00      	nop
  4006d6:	3710      	adds	r7, #16
  4006d8:	46bd      	mov	sp, r7
  4006da:	bd80      	pop	{r7, pc}
  4006dc:	00400769 	.word	0x00400769
  4006e0:	00400491 	.word	0x00400491

004006e4 <pio_configure_interrupt>:
 * \param ul_mask Interrupt source bit map.
 * \param ul_attr Interrupt source attributes.
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
  4006e4:	b480      	push	{r7}
  4006e6:	b085      	sub	sp, #20
  4006e8:	af00      	add	r7, sp, #0
  4006ea:	60f8      	str	r0, [r7, #12]
  4006ec:	60b9      	str	r1, [r7, #8]
  4006ee:	607a      	str	r2, [r7, #4]
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
  4006f0:	687b      	ldr	r3, [r7, #4]
  4006f2:	f003 0310 	and.w	r3, r3, #16
  4006f6:	2b00      	cmp	r3, #0
  4006f8:	d020      	beq.n	40073c <pio_configure_interrupt+0x58>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
  4006fa:	68fb      	ldr	r3, [r7, #12]
  4006fc:	68ba      	ldr	r2, [r7, #8]
  4006fe:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400702:	687b      	ldr	r3, [r7, #4]
  400704:	f003 0320 	and.w	r3, r3, #32
  400708:	2b00      	cmp	r3, #0
  40070a:	d004      	beq.n	400716 <pio_configure_interrupt+0x32>
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
  40070c:	68fb      	ldr	r3, [r7, #12]
  40070e:	68ba      	ldr	r2, [r7, #8]
  400710:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
  400714:	e003      	b.n	40071e <pio_configure_interrupt+0x3a>
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
  400716:	68fb      	ldr	r3, [r7, #12]
  400718:	68ba      	ldr	r2, [r7, #8]
  40071a:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
  40071e:	687b      	ldr	r3, [r7, #4]
  400720:	f003 0340 	and.w	r3, r3, #64	; 0x40
  400724:	2b00      	cmp	r3, #0
  400726:	d004      	beq.n	400732 <pio_configure_interrupt+0x4e>
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  400728:	68fb      	ldr	r3, [r7, #12]
  40072a:	68ba      	ldr	r2, [r7, #8]
  40072c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
	}
}
  400730:	e008      	b.n	400744 <pio_configure_interrupt+0x60>
			p_pio->PIO_LSR = ul_mask;
  400732:	68fb      	ldr	r3, [r7, #12]
  400734:	68ba      	ldr	r2, [r7, #8]
  400736:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
}
  40073a:	e003      	b.n	400744 <pio_configure_interrupt+0x60>
		p_pio->PIO_AIMDR = ul_mask;
  40073c:	68fb      	ldr	r3, [r7, #12]
  40073e:	68ba      	ldr	r2, [r7, #8]
  400740:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
}
  400744:	bf00      	nop
  400746:	3714      	adds	r7, #20
  400748:	46bd      	mov	sp, r7
  40074a:	bc80      	pop	{r7}
  40074c:	4770      	bx	lr

0040074e <pio_enable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  40074e:	b480      	push	{r7}
  400750:	b083      	sub	sp, #12
  400752:	af00      	add	r7, sp, #0
  400754:	6078      	str	r0, [r7, #4]
  400756:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IER = ul_mask;
  400758:	687b      	ldr	r3, [r7, #4]
  40075a:	683a      	ldr	r2, [r7, #0]
  40075c:	641a      	str	r2, [r3, #64]	; 0x40
}
  40075e:	bf00      	nop
  400760:	370c      	adds	r7, #12
  400762:	46bd      	mov	sp, r7
  400764:	bc80      	pop	{r7}
  400766:	4770      	bx	lr

00400768 <pio_disable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  400768:	b480      	push	{r7}
  40076a:	b083      	sub	sp, #12
  40076c:	af00      	add	r7, sp, #0
  40076e:	6078      	str	r0, [r7, #4]
  400770:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IDR = ul_mask;
  400772:	687b      	ldr	r3, [r7, #4]
  400774:	683a      	ldr	r2, [r7, #0]
  400776:	645a      	str	r2, [r3, #68]	; 0x44
}
  400778:	bf00      	nop
  40077a:	370c      	adds	r7, #12
  40077c:	46bd      	mov	sp, r7
  40077e:	bc80      	pop	{r7}
  400780:	4770      	bx	lr

00400782 <pio_get_interrupt_status>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
  400782:	b480      	push	{r7}
  400784:	b083      	sub	sp, #12
  400786:	af00      	add	r7, sp, #0
  400788:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_ISR;
  40078a:	687b      	ldr	r3, [r7, #4]
  40078c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
  40078e:	4618      	mov	r0, r3
  400790:	370c      	adds	r7, #12
  400792:	46bd      	mov	sp, r7
  400794:	bc80      	pop	{r7}
  400796:	4770      	bx	lr

00400798 <pio_get_interrupt_mask>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
  400798:	b480      	push	{r7}
  40079a:	b083      	sub	sp, #12
  40079c:	af00      	add	r7, sp, #0
  40079e:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_IMR;
  4007a0:	687b      	ldr	r3, [r7, #4]
  4007a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
  4007a4:	4618      	mov	r0, r3
  4007a6:	370c      	adds	r7, #12
  4007a8:	46bd      	mov	sp, r7
  4007aa:	bc80      	pop	{r7}
  4007ac:	4770      	bx	lr
	...

004007b0 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4007b0:	b590      	push	{r4, r7, lr}
  4007b2:	b087      	sub	sp, #28
  4007b4:	af02      	add	r7, sp, #8
  4007b6:	6078      	str	r0, [r7, #4]
  4007b8:	6039      	str	r1, [r7, #0]
	Pio *p_pio = pio_get_pin_group(ul_pin);
  4007ba:	6878      	ldr	r0, [r7, #4]
  4007bc:	4b63      	ldr	r3, [pc, #396]	; (40094c <pio_configure_pin+0x19c>)
  4007be:	4798      	blx	r3
  4007c0:	60f8      	str	r0, [r7, #12]

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  4007c2:	683b      	ldr	r3, [r7, #0]
  4007c4:	f003 43f0 	and.w	r3, r3, #2013265920	; 0x78000000
  4007c8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4007cc:	d067      	beq.n	40089e <pio_configure_pin+0xee>
  4007ce:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4007d2:	d809      	bhi.n	4007e8 <pio_configure_pin+0x38>
  4007d4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4007d8:	d02b      	beq.n	400832 <pio_configure_pin+0x82>
  4007da:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4007de:	d043      	beq.n	400868 <pio_configure_pin+0xb8>
  4007e0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4007e4:	d00a      	beq.n	4007fc <pio_configure_pin+0x4c>
  4007e6:	e0a9      	b.n	40093c <pio_configure_pin+0x18c>
  4007e8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4007ec:	d07e      	beq.n	4008ec <pio_configure_pin+0x13c>
  4007ee:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4007f2:	d07b      	beq.n	4008ec <pio_configure_pin+0x13c>
  4007f4:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4007f8:	d06c      	beq.n	4008d4 <pio_configure_pin+0x124>
  4007fa:	e09f      	b.n	40093c <pio_configure_pin+0x18c>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4007fc:	687b      	ldr	r3, [r7, #4]
  4007fe:	f003 031f 	and.w	r3, r3, #31
  400802:	2201      	movs	r2, #1
  400804:	fa02 f303 	lsl.w	r3, r2, r3
  400808:	461a      	mov	r2, r3
  40080a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40080e:	68f8      	ldr	r0, [r7, #12]
  400810:	4b4f      	ldr	r3, [pc, #316]	; (400950 <pio_configure_pin+0x1a0>)
  400812:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  400814:	687b      	ldr	r3, [r7, #4]
  400816:	f003 031f 	and.w	r3, r3, #31
  40081a:	2201      	movs	r2, #1
  40081c:	fa02 f303 	lsl.w	r3, r2, r3
  400820:	4619      	mov	r1, r3
  400822:	683b      	ldr	r3, [r7, #0]
  400824:	f003 0301 	and.w	r3, r3, #1
  400828:	461a      	mov	r2, r3
  40082a:	68f8      	ldr	r0, [r7, #12]
  40082c:	4b49      	ldr	r3, [pc, #292]	; (400954 <pio_configure_pin+0x1a4>)
  40082e:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  400830:	e086      	b.n	400940 <pio_configure_pin+0x190>
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400832:	687b      	ldr	r3, [r7, #4]
  400834:	f003 031f 	and.w	r3, r3, #31
  400838:	2201      	movs	r2, #1
  40083a:	fa02 f303 	lsl.w	r3, r2, r3
  40083e:	461a      	mov	r2, r3
  400840:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400844:	68f8      	ldr	r0, [r7, #12]
  400846:	4b42      	ldr	r3, [pc, #264]	; (400950 <pio_configure_pin+0x1a0>)
  400848:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  40084a:	687b      	ldr	r3, [r7, #4]
  40084c:	f003 031f 	and.w	r3, r3, #31
  400850:	2201      	movs	r2, #1
  400852:	fa02 f303 	lsl.w	r3, r2, r3
  400856:	4619      	mov	r1, r3
  400858:	683b      	ldr	r3, [r7, #0]
  40085a:	f003 0301 	and.w	r3, r3, #1
  40085e:	461a      	mov	r2, r3
  400860:	68f8      	ldr	r0, [r7, #12]
  400862:	4b3c      	ldr	r3, [pc, #240]	; (400954 <pio_configure_pin+0x1a4>)
  400864:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  400866:	e06b      	b.n	400940 <pio_configure_pin+0x190>
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400868:	687b      	ldr	r3, [r7, #4]
  40086a:	f003 031f 	and.w	r3, r3, #31
  40086e:	2201      	movs	r2, #1
  400870:	fa02 f303 	lsl.w	r3, r2, r3
  400874:	461a      	mov	r2, r3
  400876:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40087a:	68f8      	ldr	r0, [r7, #12]
  40087c:	4b34      	ldr	r3, [pc, #208]	; (400950 <pio_configure_pin+0x1a0>)
  40087e:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  400880:	687b      	ldr	r3, [r7, #4]
  400882:	f003 031f 	and.w	r3, r3, #31
  400886:	2201      	movs	r2, #1
  400888:	fa02 f303 	lsl.w	r3, r2, r3
  40088c:	4619      	mov	r1, r3
  40088e:	683b      	ldr	r3, [r7, #0]
  400890:	f003 0301 	and.w	r3, r3, #1
  400894:	461a      	mov	r2, r3
  400896:	68f8      	ldr	r0, [r7, #12]
  400898:	4b2e      	ldr	r3, [pc, #184]	; (400954 <pio_configure_pin+0x1a4>)
  40089a:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  40089c:	e050      	b.n	400940 <pio_configure_pin+0x190>
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  40089e:	687b      	ldr	r3, [r7, #4]
  4008a0:	f003 031f 	and.w	r3, r3, #31
  4008a4:	2201      	movs	r2, #1
  4008a6:	fa02 f303 	lsl.w	r3, r2, r3
  4008aa:	461a      	mov	r2, r3
  4008ac:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4008b0:	68f8      	ldr	r0, [r7, #12]
  4008b2:	4b27      	ldr	r3, [pc, #156]	; (400950 <pio_configure_pin+0x1a0>)
  4008b4:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  4008b6:	687b      	ldr	r3, [r7, #4]
  4008b8:	f003 031f 	and.w	r3, r3, #31
  4008bc:	2201      	movs	r2, #1
  4008be:	fa02 f303 	lsl.w	r3, r2, r3
  4008c2:	4619      	mov	r1, r3
  4008c4:	683b      	ldr	r3, [r7, #0]
  4008c6:	f003 0301 	and.w	r3, r3, #1
  4008ca:	461a      	mov	r2, r3
  4008cc:	68f8      	ldr	r0, [r7, #12]
  4008ce:	4b21      	ldr	r3, [pc, #132]	; (400954 <pio_configure_pin+0x1a4>)
  4008d0:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  4008d2:	e035      	b.n	400940 <pio_configure_pin+0x190>
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  4008d4:	687b      	ldr	r3, [r7, #4]
  4008d6:	f003 031f 	and.w	r3, r3, #31
  4008da:	2201      	movs	r2, #1
  4008dc:	fa02 f303 	lsl.w	r3, r2, r3
  4008e0:	683a      	ldr	r2, [r7, #0]
  4008e2:	4619      	mov	r1, r3
  4008e4:	68f8      	ldr	r0, [r7, #12]
  4008e6:	4b1c      	ldr	r3, [pc, #112]	; (400958 <pio_configure_pin+0x1a8>)
  4008e8:	4798      	blx	r3
		break;
  4008ea:	e029      	b.n	400940 <pio_configure_pin+0x190>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4008ec:	687b      	ldr	r3, [r7, #4]
  4008ee:	f003 031f 	and.w	r3, r3, #31
  4008f2:	2201      	movs	r2, #1
  4008f4:	fa02 f303 	lsl.w	r3, r2, r3
  4008f8:	4619      	mov	r1, r3
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4008fa:	683b      	ldr	r3, [r7, #0]
  4008fc:	f003 5360 	and.w	r3, r3, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400900:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  400904:	bf0c      	ite	eq
  400906:	2301      	moveq	r3, #1
  400908:	2300      	movne	r3, #0
  40090a:	b2db      	uxtb	r3, r3
  40090c:	461a      	mov	r2, r3
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  40090e:	683b      	ldr	r3, [r7, #0]
  400910:	f003 0304 	and.w	r3, r3, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400914:	2b00      	cmp	r3, #0
  400916:	bf14      	ite	ne
  400918:	2301      	movne	r3, #1
  40091a:	2300      	moveq	r3, #0
  40091c:	b2db      	uxtb	r3, r3
  40091e:	4618      	mov	r0, r3
				(ul_flags & PIO_PULLUP) ? 1 : 0);
  400920:	683b      	ldr	r3, [r7, #0]
  400922:	f003 0301 	and.w	r3, r3, #1
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400926:	2b00      	cmp	r3, #0
  400928:	bf14      	ite	ne
  40092a:	2301      	movne	r3, #1
  40092c:	2300      	moveq	r3, #0
  40092e:	b2db      	uxtb	r3, r3
  400930:	9300      	str	r3, [sp, #0]
  400932:	4603      	mov	r3, r0
  400934:	68f8      	ldr	r0, [r7, #12]
  400936:	4c09      	ldr	r4, [pc, #36]	; (40095c <pio_configure_pin+0x1ac>)
  400938:	47a0      	blx	r4
		break;
  40093a:	e001      	b.n	400940 <pio_configure_pin+0x190>

	default:
		return 0;
  40093c:	2300      	movs	r3, #0
  40093e:	e000      	b.n	400942 <pio_configure_pin+0x192>
	}

	return 1;
  400940:	2301      	movs	r3, #1
}
  400942:	4618      	mov	r0, r3
  400944:	3714      	adds	r7, #20
  400946:	46bd      	mov	sp, r7
  400948:	bd90      	pop	{r4, r7, pc}
  40094a:	bf00      	nop
  40094c:	00400961 	.word	0x00400961
  400950:	004004f1 	.word	0x004004f1
  400954:	00400491 	.word	0x00400491
  400958:	00400601 	.word	0x00400601
  40095c:	00400681 	.word	0x00400681

00400960 <pio_get_pin_group>:
 * \param ul_pin The pin index.
 *
 * \return Pointer to \ref Pio struct for GPIO port.
 */
Pio *pio_get_pin_group(uint32_t ul_pin)
{
  400960:	b480      	push	{r7}
  400962:	b085      	sub	sp, #20
  400964:	af00      	add	r7, sp, #0
  400966:	6078      	str	r0, [r7, #4]
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400968:	687b      	ldr	r3, [r7, #4]
  40096a:	095b      	lsrs	r3, r3, #5
  40096c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400970:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400974:	025b      	lsls	r3, r3, #9
  400976:	60fb      	str	r3, [r7, #12]
#endif
	return p_pio;
  400978:	68fb      	ldr	r3, [r7, #12]
}
  40097a:	4618      	mov	r0, r3
  40097c:	3714      	adds	r7, #20
  40097e:	46bd      	mov	sp, r7
  400980:	bc80      	pop	{r7}
  400982:	4770      	bx	lr

00400984 <pio_capture_enable>:
 * \brief Enable PIO capture mode.
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
  400984:	b480      	push	{r7}
  400986:	b083      	sub	sp, #12
  400988:	af00      	add	r7, sp, #0
  40098a:	6078      	str	r0, [r7, #4]
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  40098c:	687b      	ldr	r3, [r7, #4]
  40098e:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  400992:	f043 0201 	orr.w	r2, r3, #1
  400996:	687b      	ldr	r3, [r7, #4]
  400998:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	pio_capture_enable_flag = true;
  40099c:	4b03      	ldr	r3, [pc, #12]	; (4009ac <pio_capture_enable+0x28>)
  40099e:	2201      	movs	r2, #1
  4009a0:	601a      	str	r2, [r3, #0]
}
  4009a2:	bf00      	nop
  4009a4:	370c      	adds	r7, #12
  4009a6:	46bd      	mov	sp, r7
  4009a8:	bc80      	pop	{r7}
  4009aa:	4770      	bx	lr
  4009ac:	20000ab4 	.word	0x20000ab4

004009b0 <pio_capture_disable>:
 * \brief Disable PIO capture mode.
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
  4009b0:	b480      	push	{r7}
  4009b2:	b083      	sub	sp, #12
  4009b4:	af00      	add	r7, sp, #0
  4009b6:	6078      	str	r0, [r7, #4]
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  4009b8:	687b      	ldr	r3, [r7, #4]
  4009ba:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4009be:	f023 0201 	bic.w	r2, r3, #1
  4009c2:	687b      	ldr	r3, [r7, #4]
  4009c4:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	pio_capture_enable_flag = false;
  4009c8:	4b03      	ldr	r3, [pc, #12]	; (4009d8 <pio_capture_disable+0x28>)
  4009ca:	2200      	movs	r2, #0
  4009cc:	601a      	str	r2, [r3, #0]
}
  4009ce:	bf00      	nop
  4009d0:	370c      	adds	r7, #12
  4009d2:	46bd      	mov	sp, r7
  4009d4:	bc80      	pop	{r7}
  4009d6:	4770      	bx	lr
  4009d8:	20000ab4 	.word	0x20000ab4

004009dc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4009dc:	b580      	push	{r7, lr}
  4009de:	b084      	sub	sp, #16
  4009e0:	af00      	add	r7, sp, #0
  4009e2:	6078      	str	r0, [r7, #4]
  4009e4:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  4009e6:	6878      	ldr	r0, [r7, #4]
  4009e8:	4b2c      	ldr	r3, [pc, #176]	; (400a9c <pio_handler_process+0xc0>)
  4009ea:	4798      	blx	r3
  4009ec:	60f8      	str	r0, [r7, #12]
	status &= pio_get_interrupt_mask(p_pio);
  4009ee:	6878      	ldr	r0, [r7, #4]
  4009f0:	4b2b      	ldr	r3, [pc, #172]	; (400aa0 <pio_handler_process+0xc4>)
  4009f2:	4798      	blx	r3
  4009f4:	4602      	mov	r2, r0
  4009f6:	68fb      	ldr	r3, [r7, #12]
  4009f8:	4013      	ands	r3, r2
  4009fa:	60fb      	str	r3, [r7, #12]

	/* Check pending events */
	if (status != 0) {
  4009fc:	68fb      	ldr	r3, [r7, #12]
  4009fe:	2b00      	cmp	r3, #0
  400a00:	d03c      	beq.n	400a7c <pio_handler_process+0xa0>
		/* Find triggering source */
		i = 0;
  400a02:	2300      	movs	r3, #0
  400a04:	60bb      	str	r3, [r7, #8]
		while (status != 0) {
  400a06:	e034      	b.n	400a72 <pio_handler_process+0x96>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  400a08:	4a26      	ldr	r2, [pc, #152]	; (400aa4 <pio_handler_process+0xc8>)
  400a0a:	68bb      	ldr	r3, [r7, #8]
  400a0c:	011b      	lsls	r3, r3, #4
  400a0e:	4413      	add	r3, r2
  400a10:	681a      	ldr	r2, [r3, #0]
  400a12:	683b      	ldr	r3, [r7, #0]
  400a14:	429a      	cmp	r2, r3
  400a16:	d126      	bne.n	400a66 <pio_handler_process+0x8a>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400a18:	4a22      	ldr	r2, [pc, #136]	; (400aa4 <pio_handler_process+0xc8>)
  400a1a:	68bb      	ldr	r3, [r7, #8]
  400a1c:	011b      	lsls	r3, r3, #4
  400a1e:	4413      	add	r3, r2
  400a20:	3304      	adds	r3, #4
  400a22:	681a      	ldr	r2, [r3, #0]
  400a24:	68fb      	ldr	r3, [r7, #12]
  400a26:	4013      	ands	r3, r2
  400a28:	2b00      	cmp	r3, #0
  400a2a:	d01c      	beq.n	400a66 <pio_handler_process+0x8a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400a2c:	4a1d      	ldr	r2, [pc, #116]	; (400aa4 <pio_handler_process+0xc8>)
  400a2e:	68bb      	ldr	r3, [r7, #8]
  400a30:	011b      	lsls	r3, r3, #4
  400a32:	4413      	add	r3, r2
  400a34:	330c      	adds	r3, #12
  400a36:	681b      	ldr	r3, [r3, #0]
  400a38:	491a      	ldr	r1, [pc, #104]	; (400aa4 <pio_handler_process+0xc8>)
  400a3a:	68ba      	ldr	r2, [r7, #8]
  400a3c:	0112      	lsls	r2, r2, #4
  400a3e:	440a      	add	r2, r1
  400a40:	6810      	ldr	r0, [r2, #0]
  400a42:	4918      	ldr	r1, [pc, #96]	; (400aa4 <pio_handler_process+0xc8>)
  400a44:	68ba      	ldr	r2, [r7, #8]
  400a46:	0112      	lsls	r2, r2, #4
  400a48:	440a      	add	r2, r1
  400a4a:	3204      	adds	r2, #4
  400a4c:	6812      	ldr	r2, [r2, #0]
  400a4e:	4611      	mov	r1, r2
  400a50:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  400a52:	4a14      	ldr	r2, [pc, #80]	; (400aa4 <pio_handler_process+0xc8>)
  400a54:	68bb      	ldr	r3, [r7, #8]
  400a56:	011b      	lsls	r3, r3, #4
  400a58:	4413      	add	r3, r2
  400a5a:	3304      	adds	r3, #4
  400a5c:	681b      	ldr	r3, [r3, #0]
  400a5e:	43db      	mvns	r3, r3
  400a60:	68fa      	ldr	r2, [r7, #12]
  400a62:	4013      	ands	r3, r2
  400a64:	60fb      	str	r3, [r7, #12]
				}
			}
			i++;
  400a66:	68bb      	ldr	r3, [r7, #8]
  400a68:	3301      	adds	r3, #1
  400a6a:	60bb      	str	r3, [r7, #8]
			if (i >= MAX_INTERRUPT_SOURCES) {
  400a6c:	68bb      	ldr	r3, [r7, #8]
  400a6e:	2b06      	cmp	r3, #6
  400a70:	d803      	bhi.n	400a7a <pio_handler_process+0x9e>
		while (status != 0) {
  400a72:	68fb      	ldr	r3, [r7, #12]
  400a74:	2b00      	cmp	r3, #0
  400a76:	d1c7      	bne.n	400a08 <pio_handler_process+0x2c>
  400a78:	e000      	b.n	400a7c <pio_handler_process+0xa0>
				break;
  400a7a:	bf00      	nop
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400a7c:	4b0a      	ldr	r3, [pc, #40]	; (400aa8 <pio_handler_process+0xcc>)
  400a7e:	681b      	ldr	r3, [r3, #0]
  400a80:	2b00      	cmp	r3, #0
  400a82:	d007      	beq.n	400a94 <pio_handler_process+0xb8>
		if (pio_capture_handler) {
  400a84:	4b09      	ldr	r3, [pc, #36]	; (400aac <pio_handler_process+0xd0>)
  400a86:	681b      	ldr	r3, [r3, #0]
  400a88:	2b00      	cmp	r3, #0
  400a8a:	d003      	beq.n	400a94 <pio_handler_process+0xb8>
			pio_capture_handler(p_pio);
  400a8c:	4b07      	ldr	r3, [pc, #28]	; (400aac <pio_handler_process+0xd0>)
  400a8e:	681b      	ldr	r3, [r3, #0]
  400a90:	6878      	ldr	r0, [r7, #4]
  400a92:	4798      	blx	r3
		}
	}
#endif
}
  400a94:	bf00      	nop
  400a96:	3710      	adds	r7, #16
  400a98:	46bd      	mov	sp, r7
  400a9a:	bd80      	pop	{r7, pc}
  400a9c:	00400783 	.word	0x00400783
  400aa0:	00400799 	.word	0x00400799
<<<<<<< HEAD
  400aa4:	200009d8 	.word	0x200009d8
  400aa8:	20000ab4 	.word	0x20000ab4
  400aac:	20000a4c 	.word	0x20000a4c
=======
  400aa4:	200009dc 	.word	0x200009dc
  400aa8:	20000ab4 	.word	0x20000ab4
  400aac:	20000a50 	.word	0x20000a50
>>>>>>> parent of 8583d8d... Updated write_image to file

00400ab0 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400ab0:	b580      	push	{r7, lr}
  400ab2:	b086      	sub	sp, #24
  400ab4:	af00      	add	r7, sp, #0
  400ab6:	60f8      	str	r0, [r7, #12]
  400ab8:	60b9      	str	r1, [r7, #8]
  400aba:	607a      	str	r2, [r7, #4]
  400abc:	603b      	str	r3, [r7, #0]
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400abe:	4b21      	ldr	r3, [pc, #132]	; (400b44 <pio_handler_set+0x94>)
  400ac0:	681b      	ldr	r3, [r3, #0]
  400ac2:	2b06      	cmp	r3, #6
  400ac4:	d901      	bls.n	400aca <pio_handler_set+0x1a>
		return 1;
  400ac6:	2301      	movs	r3, #1
  400ac8:	e038      	b.n	400b3c <pio_handler_set+0x8c>

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400aca:	2300      	movs	r3, #0
  400acc:	75fb      	strb	r3, [r7, #23]
  400ace:	e011      	b.n	400af4 <pio_handler_set+0x44>
		pSource = &(gs_interrupt_sources[i]);
  400ad0:	7dfb      	ldrb	r3, [r7, #23]
  400ad2:	011b      	lsls	r3, r3, #4
  400ad4:	4a1c      	ldr	r2, [pc, #112]	; (400b48 <pio_handler_set+0x98>)
  400ad6:	4413      	add	r3, r2
  400ad8:	613b      	str	r3, [r7, #16]
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400ada:	693b      	ldr	r3, [r7, #16]
  400adc:	681a      	ldr	r2, [r3, #0]
  400ade:	68bb      	ldr	r3, [r7, #8]
  400ae0:	429a      	cmp	r2, r3
  400ae2:	d104      	bne.n	400aee <pio_handler_set+0x3e>
  400ae4:	693b      	ldr	r3, [r7, #16]
  400ae6:	685a      	ldr	r2, [r3, #4]
  400ae8:	687b      	ldr	r3, [r7, #4]
  400aea:	429a      	cmp	r2, r3
  400aec:	d008      	beq.n	400b00 <pio_handler_set+0x50>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400aee:	7dfb      	ldrb	r3, [r7, #23]
  400af0:	3301      	adds	r3, #1
  400af2:	75fb      	strb	r3, [r7, #23]
  400af4:	7dfa      	ldrb	r2, [r7, #23]
  400af6:	4b13      	ldr	r3, [pc, #76]	; (400b44 <pio_handler_set+0x94>)
  400af8:	681b      	ldr	r3, [r3, #0]
  400afa:	429a      	cmp	r2, r3
  400afc:	d9e8      	bls.n	400ad0 <pio_handler_set+0x20>
  400afe:	e000      	b.n	400b02 <pio_handler_set+0x52>
			break;
  400b00:	bf00      	nop
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400b02:	693b      	ldr	r3, [r7, #16]
  400b04:	68ba      	ldr	r2, [r7, #8]
  400b06:	601a      	str	r2, [r3, #0]
	pSource->mask = ul_mask;
  400b08:	693b      	ldr	r3, [r7, #16]
  400b0a:	687a      	ldr	r2, [r7, #4]
  400b0c:	605a      	str	r2, [r3, #4]
	pSource->attr = ul_attr;
  400b0e:	693b      	ldr	r3, [r7, #16]
  400b10:	683a      	ldr	r2, [r7, #0]
  400b12:	609a      	str	r2, [r3, #8]
	pSource->handler = p_handler;
  400b14:	693b      	ldr	r3, [r7, #16]
  400b16:	6a3a      	ldr	r2, [r7, #32]
  400b18:	60da      	str	r2, [r3, #12]
	if (i == gs_ul_nb_sources + 1) {
  400b1a:	7dfa      	ldrb	r2, [r7, #23]
  400b1c:	4b09      	ldr	r3, [pc, #36]	; (400b44 <pio_handler_set+0x94>)
  400b1e:	681b      	ldr	r3, [r3, #0]
  400b20:	3301      	adds	r3, #1
  400b22:	429a      	cmp	r2, r3
  400b24:	d104      	bne.n	400b30 <pio_handler_set+0x80>
		gs_ul_nb_sources++;
  400b26:	4b07      	ldr	r3, [pc, #28]	; (400b44 <pio_handler_set+0x94>)
  400b28:	681b      	ldr	r3, [r3, #0]
  400b2a:	3301      	adds	r3, #1
  400b2c:	4a05      	ldr	r2, [pc, #20]	; (400b44 <pio_handler_set+0x94>)
  400b2e:	6013      	str	r3, [r2, #0]
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400b30:	683a      	ldr	r2, [r7, #0]
  400b32:	6879      	ldr	r1, [r7, #4]
  400b34:	68f8      	ldr	r0, [r7, #12]
  400b36:	4b05      	ldr	r3, [pc, #20]	; (400b4c <pio_handler_set+0x9c>)
  400b38:	4798      	blx	r3

	return 0;
  400b3a:	2300      	movs	r3, #0
}
  400b3c:	4618      	mov	r0, r3
  400b3e:	3718      	adds	r7, #24
  400b40:	46bd      	mov	sp, r7
  400b42:	bd80      	pop	{r7, pc}
  400b44:	20000a48 	.word	0x20000a48
  400b48:	200009d8 	.word	0x200009d8
  400b4c:	004006e5 	.word	0x004006e5

00400b50 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400b50:	b580      	push	{r7, lr}
  400b52:	af00      	add	r7, sp, #0
	pio_handler_process(PIOA, ID_PIOA);
  400b54:	210b      	movs	r1, #11
  400b56:	4802      	ldr	r0, [pc, #8]	; (400b60 <PIOA_Handler+0x10>)
  400b58:	4b02      	ldr	r3, [pc, #8]	; (400b64 <PIOA_Handler+0x14>)
  400b5a:	4798      	blx	r3
}
  400b5c:	bf00      	nop
  400b5e:	bd80      	pop	{r7, pc}
  400b60:	400e0e00 	.word	0x400e0e00
  400b64:	004009dd 	.word	0x004009dd

00400b68 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400b68:	b580      	push	{r7, lr}
  400b6a:	af00      	add	r7, sp, #0
    pio_handler_process(PIOB, ID_PIOB);
  400b6c:	210c      	movs	r1, #12
  400b6e:	4802      	ldr	r0, [pc, #8]	; (400b78 <PIOB_Handler+0x10>)
  400b70:	4b02      	ldr	r3, [pc, #8]	; (400b7c <PIOB_Handler+0x14>)
  400b72:	4798      	blx	r3
}
  400b74:	bf00      	nop
  400b76:	bd80      	pop	{r7, pc}
  400b78:	400e1000 	.word	0x400e1000
  400b7c:	004009dd 	.word	0x004009dd

00400b80 <pmc_switch_mck_to_pllack>:
 *
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
  400b80:	b480      	push	{r7}
  400b82:	b085      	sub	sp, #20
  400b84:	af00      	add	r7, sp, #0
  400b86:	6078      	str	r0, [r7, #4]
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400b88:	491c      	ldr	r1, [pc, #112]	; (400bfc <pmc_switch_mck_to_pllack+0x7c>)
  400b8a:	4b1c      	ldr	r3, [pc, #112]	; (400bfc <pmc_switch_mck_to_pllack+0x7c>)
  400b8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400b8e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
  400b92:	687b      	ldr	r3, [r7, #4]
  400b94:	4313      	orrs	r3, r2
  400b96:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400b98:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400b9c:	60fb      	str	r3, [r7, #12]
  400b9e:	e007      	b.n	400bb0 <pmc_switch_mck_to_pllack+0x30>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400ba0:	68fb      	ldr	r3, [r7, #12]
  400ba2:	2b00      	cmp	r3, #0
  400ba4:	d101      	bne.n	400baa <pmc_switch_mck_to_pllack+0x2a>
			return 1;
  400ba6:	2301      	movs	r3, #1
  400ba8:	e023      	b.n	400bf2 <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
  400baa:	68fb      	ldr	r3, [r7, #12]
  400bac:	3b01      	subs	r3, #1
  400bae:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400bb0:	4b12      	ldr	r3, [pc, #72]	; (400bfc <pmc_switch_mck_to_pllack+0x7c>)
  400bb2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400bb4:	f003 0308 	and.w	r3, r3, #8
  400bb8:	2b00      	cmp	r3, #0
  400bba:	d0f1      	beq.n	400ba0 <pmc_switch_mck_to_pllack+0x20>
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400bbc:	4a0f      	ldr	r2, [pc, #60]	; (400bfc <pmc_switch_mck_to_pllack+0x7c>)
  400bbe:	4b0f      	ldr	r3, [pc, #60]	; (400bfc <pmc_switch_mck_to_pllack+0x7c>)
  400bc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400bc2:	f023 0303 	bic.w	r3, r3, #3
  400bc6:	f043 0302 	orr.w	r3, r3, #2
  400bca:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400bcc:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400bd0:	60fb      	str	r3, [r7, #12]
  400bd2:	e007      	b.n	400be4 <pmc_switch_mck_to_pllack+0x64>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400bd4:	68fb      	ldr	r3, [r7, #12]
  400bd6:	2b00      	cmp	r3, #0
  400bd8:	d101      	bne.n	400bde <pmc_switch_mck_to_pllack+0x5e>
			return 1;
  400bda:	2301      	movs	r3, #1
  400bdc:	e009      	b.n	400bf2 <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
  400bde:	68fb      	ldr	r3, [r7, #12]
  400be0:	3b01      	subs	r3, #1
  400be2:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400be4:	4b05      	ldr	r3, [pc, #20]	; (400bfc <pmc_switch_mck_to_pllack+0x7c>)
  400be6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400be8:	f003 0308 	and.w	r3, r3, #8
  400bec:	2b00      	cmp	r3, #0
  400bee:	d0f1      	beq.n	400bd4 <pmc_switch_mck_to_pllack+0x54>
		}
	}

	return 0;
  400bf0:	2300      	movs	r3, #0
}
  400bf2:	4618      	mov	r0, r3
  400bf4:	3714      	adds	r7, #20
  400bf6:	46bd      	mov	sp, r7
  400bf8:	bc80      	pop	{r7}
  400bfa:	4770      	bx	lr
  400bfc:	400e0400 	.word	0x400e0400

00400c00 <pmc_switch_sclk_to_32kxtal>:
 *       VDDIO power supply.
 *
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void pmc_switch_sclk_to_32kxtal(uint32_t ul_bypass)
{
  400c00:	b480      	push	{r7}
  400c02:	b083      	sub	sp, #12
  400c04:	af00      	add	r7, sp, #0
  400c06:	6078      	str	r0, [r7, #4]
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
  400c08:	687b      	ldr	r3, [r7, #4]
  400c0a:	2b01      	cmp	r3, #1
  400c0c:	d107      	bne.n	400c1e <pmc_switch_sclk_to_32kxtal+0x1e>
		SUPC->SUPC_MR |= SUPC_MR_KEY_PASSWD |
  400c0e:	4a08      	ldr	r2, [pc, #32]	; (400c30 <pmc_switch_sclk_to_32kxtal+0x30>)
  400c10:	4b07      	ldr	r3, [pc, #28]	; (400c30 <pmc_switch_sclk_to_32kxtal+0x30>)
  400c12:	689b      	ldr	r3, [r3, #8]
  400c14:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  400c18:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  400c1c:	6093      	str	r3, [r2, #8]
			SUPC_MR_OSCBYPASS;
	}

	SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
  400c1e:	4b04      	ldr	r3, [pc, #16]	; (400c30 <pmc_switch_sclk_to_32kxtal+0x30>)
  400c20:	4a04      	ldr	r2, [pc, #16]	; (400c34 <pmc_switch_sclk_to_32kxtal+0x34>)
  400c22:	601a      	str	r2, [r3, #0]
}
  400c24:	bf00      	nop
  400c26:	370c      	adds	r7, #12
  400c28:	46bd      	mov	sp, r7
  400c2a:	bc80      	pop	{r7}
  400c2c:	4770      	bx	lr
  400c2e:	bf00      	nop
  400c30:	400e1410 	.word	0x400e1410
  400c34:	a5000008 	.word	0xa5000008

00400c38 <pmc_osc_is_ready_32kxtal>:
 *
 * \retval 1 External 32k Xtal is ready.
 * \retval 0 External 32k Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_32kxtal(void)
{
  400c38:	b480      	push	{r7}
  400c3a:	af00      	add	r7, sp, #0
	return ((SUPC->SUPC_SR & SUPC_SR_OSCSEL)
  400c3c:	4b09      	ldr	r3, [pc, #36]	; (400c64 <pmc_osc_is_ready_32kxtal+0x2c>)
  400c3e:	695b      	ldr	r3, [r3, #20]
  400c40:	f003 0380 	and.w	r3, r3, #128	; 0x80
			&& (PMC->PMC_SR & PMC_SR_OSCSELS));
  400c44:	2b00      	cmp	r3, #0
  400c46:	d007      	beq.n	400c58 <pmc_osc_is_ready_32kxtal+0x20>
  400c48:	4b07      	ldr	r3, [pc, #28]	; (400c68 <pmc_osc_is_ready_32kxtal+0x30>)
  400c4a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400c4c:	f003 0380 	and.w	r3, r3, #128	; 0x80
  400c50:	2b00      	cmp	r3, #0
  400c52:	d001      	beq.n	400c58 <pmc_osc_is_ready_32kxtal+0x20>
  400c54:	2301      	movs	r3, #1
  400c56:	e000      	b.n	400c5a <pmc_osc_is_ready_32kxtal+0x22>
  400c58:	2300      	movs	r3, #0
}
  400c5a:	4618      	mov	r0, r3
  400c5c:	46bd      	mov	sp, r7
  400c5e:	bc80      	pop	{r7}
  400c60:	4770      	bx	lr
  400c62:	bf00      	nop
  400c64:	400e1410 	.word	0x400e1410
  400c68:	400e0400 	.word	0x400e0400

00400c6c <pmc_switch_mainck_to_fastrc>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
  400c6c:	b480      	push	{r7}
  400c6e:	b083      	sub	sp, #12
  400c70:	af00      	add	r7, sp, #0
  400c72:	6078      	str	r0, [r7, #4]
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  400c74:	4a18      	ldr	r2, [pc, #96]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400c76:	4b18      	ldr	r3, [pc, #96]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400c78:	6a1b      	ldr	r3, [r3, #32]
  400c7a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400c7e:	f043 0308 	orr.w	r3, r3, #8
  400c82:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  400c84:	bf00      	nop
  400c86:	4b14      	ldr	r3, [pc, #80]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400c88:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400c8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  400c8e:	2b00      	cmp	r3, #0
  400c90:	d0f9      	beq.n	400c86 <pmc_switch_mainck_to_fastrc+0x1a>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  400c92:	4911      	ldr	r1, [pc, #68]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400c94:	4b10      	ldr	r3, [pc, #64]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400c96:	6a1b      	ldr	r3, [r3, #32]
  400c98:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400c9c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  400ca0:	687a      	ldr	r2, [r7, #4]
  400ca2:	4313      	orrs	r3, r2
  400ca4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  400ca8:	620b      	str	r3, [r1, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  400caa:	bf00      	nop
  400cac:	4b0a      	ldr	r3, [pc, #40]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400cae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400cb0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  400cb4:	2b00      	cmp	r3, #0
  400cb6:	d0f9      	beq.n	400cac <pmc_switch_mainck_to_fastrc+0x40>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  400cb8:	4a07      	ldr	r2, [pc, #28]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400cba:	4b07      	ldr	r3, [pc, #28]	; (400cd8 <pmc_switch_mainck_to_fastrc+0x6c>)
  400cbc:	6a1b      	ldr	r3, [r3, #32]
  400cbe:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  400cc2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  400cc6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400cca:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
  400ccc:	bf00      	nop
  400cce:	370c      	adds	r7, #12
  400cd0:	46bd      	mov	sp, r7
  400cd2:	bc80      	pop	{r7}
  400cd4:	4770      	bx	lr
  400cd6:	bf00      	nop
  400cd8:	400e0400 	.word	0x400e0400

00400cdc <pmc_switch_mainck_to_xtal>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
  400cdc:	b480      	push	{r7}
  400cde:	b083      	sub	sp, #12
  400ce0:	af00      	add	r7, sp, #0
  400ce2:	6078      	str	r0, [r7, #4]
  400ce4:	6039      	str	r1, [r7, #0]
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400ce6:	687b      	ldr	r3, [r7, #4]
  400ce8:	2b00      	cmp	r3, #0
  400cea:	d008      	beq.n	400cfe <pmc_switch_mainck_to_xtal+0x22>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400cec:	4916      	ldr	r1, [pc, #88]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400cee:	4b16      	ldr	r3, [pc, #88]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400cf0:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400cf2:	4a16      	ldr	r2, [pc, #88]	; (400d4c <pmc_switch_mainck_to_xtal+0x70>)
  400cf4:	401a      	ands	r2, r3
  400cf6:	4b16      	ldr	r3, [pc, #88]	; (400d50 <pmc_switch_mainck_to_xtal+0x74>)
  400cf8:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400cfa:	620b      	str	r3, [r1, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
	}
}
  400cfc:	e01e      	b.n	400d3c <pmc_switch_mainck_to_xtal+0x60>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400cfe:	4912      	ldr	r1, [pc, #72]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400d00:	4b11      	ldr	r3, [pc, #68]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400d02:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400d04:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400d08:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400d0c:	683a      	ldr	r2, [r7, #0]
  400d0e:	0212      	lsls	r2, r2, #8
  400d10:	b292      	uxth	r2, r2
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400d12:	4313      	orrs	r3, r2
  400d14:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400d18:	f043 0301 	orr.w	r3, r3, #1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400d1c:	620b      	str	r3, [r1, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400d1e:	bf00      	nop
  400d20:	4b09      	ldr	r3, [pc, #36]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400d22:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400d24:	f003 0301 	and.w	r3, r3, #1
  400d28:	2b00      	cmp	r3, #0
  400d2a:	d0f9      	beq.n	400d20 <pmc_switch_mainck_to_xtal+0x44>
		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400d2c:	4a06      	ldr	r2, [pc, #24]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400d2e:	4b06      	ldr	r3, [pc, #24]	; (400d48 <pmc_switch_mainck_to_xtal+0x6c>)
  400d30:	6a1b      	ldr	r3, [r3, #32]
  400d32:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400d36:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400d3a:	6213      	str	r3, [r2, #32]
}
  400d3c:	bf00      	nop
  400d3e:	370c      	adds	r7, #12
  400d40:	46bd      	mov	sp, r7
  400d42:	bc80      	pop	{r7}
  400d44:	4770      	bx	lr
  400d46:	bf00      	nop
  400d48:	400e0400 	.word	0x400e0400
  400d4c:	fec8fffc 	.word	0xfec8fffc
  400d50:	01370002 	.word	0x01370002

00400d54 <pmc_osc_is_ready_mainck>:
 *
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
  400d54:	b480      	push	{r7}
  400d56:	af00      	add	r7, sp, #0
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400d58:	4b03      	ldr	r3, [pc, #12]	; (400d68 <pmc_osc_is_ready_mainck+0x14>)
  400d5a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400d5c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
}
  400d60:	4618      	mov	r0, r3
  400d62:	46bd      	mov	sp, r7
  400d64:	bc80      	pop	{r7}
  400d66:	4770      	bx	lr
  400d68:	400e0400 	.word	0x400e0400

00400d6c <pmc_disable_pllack>:

/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
  400d6c:	b480      	push	{r7}
  400d6e:	af00      	add	r7, sp, #0
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400d70:	4b03      	ldr	r3, [pc, #12]	; (400d80 <pmc_disable_pllack+0x14>)
  400d72:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400d76:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
  400d78:	bf00      	nop
  400d7a:	46bd      	mov	sp, r7
  400d7c:	bc80      	pop	{r7}
  400d7e:	4770      	bx	lr
  400d80:	400e0400 	.word	0x400e0400

00400d84 <pmc_is_locked_pllack>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
  400d84:	b480      	push	{r7}
  400d86:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400d88:	4b03      	ldr	r3, [pc, #12]	; (400d98 <pmc_is_locked_pllack+0x14>)
  400d8a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400d8c:	f003 0302 	and.w	r3, r3, #2
}
  400d90:	4618      	mov	r0, r3
  400d92:	46bd      	mov	sp, r7
  400d94:	bc80      	pop	{r7}
  400d96:	4770      	bx	lr
  400d98:	400e0400 	.word	0x400e0400

00400d9c <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400d9c:	b580      	push	{r7, lr}
  400d9e:	b084      	sub	sp, #16
  400da0:	af00      	add	r7, sp, #0
  400da2:	60f8      	str	r0, [r7, #12]
  400da4:	60b9      	str	r1, [r7, #8]
  400da6:	607a      	str	r2, [r7, #4]
	/* first disable the PLL to unlock the lock */
	pmc_disable_pllbck();
  400da8:	4b0d      	ldr	r3, [pc, #52]	; (400de0 <pmc_enable_pllbck+0x44>)
  400daa:	4798      	blx	r3

#if SAMG55
	PMC->CKGR_PLLAR = CKGR_PLLAR_PLLAEN(divb) |
		CKGR_PLLAR_PLLACOUNT(pllbcount) | CKGR_PLLAR_MULA(mulb);
#else
	PMC->CKGR_PLLBR =
  400dac:	480d      	ldr	r0, [pc, #52]	; (400de4 <pmc_enable_pllbck+0x48>)
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  400dae:	687b      	ldr	r3, [r7, #4]
  400db0:	b2da      	uxtb	r2, r3
  400db2:	68bb      	ldr	r3, [r7, #8]
  400db4:	021b      	lsls	r3, r3, #8
  400db6:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00
  400dba:	431a      	orrs	r2, r3
			| CKGR_PLLBR_MULB(mulb);
  400dbc:	68fb      	ldr	r3, [r7, #12]
  400dbe:	0419      	lsls	r1, r3, #16
  400dc0:	4b09      	ldr	r3, [pc, #36]	; (400de8 <pmc_enable_pllbck+0x4c>)
  400dc2:	400b      	ands	r3, r1
  400dc4:	4313      	orrs	r3, r2
	PMC->CKGR_PLLBR =
  400dc6:	62c3      	str	r3, [r0, #44]	; 0x2c
#endif
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400dc8:	bf00      	nop
  400dca:	4b06      	ldr	r3, [pc, #24]	; (400de4 <pmc_enable_pllbck+0x48>)
  400dcc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400dce:	f003 0304 	and.w	r3, r3, #4
  400dd2:	2b00      	cmp	r3, #0
  400dd4:	d0f9      	beq.n	400dca <pmc_enable_pllbck+0x2e>
}
  400dd6:	bf00      	nop
  400dd8:	3710      	adds	r7, #16
  400dda:	46bd      	mov	sp, r7
  400ddc:	bd80      	pop	{r7, pc}
  400dde:	bf00      	nop
  400de0:	00400ded 	.word	0x00400ded
  400de4:	400e0400 	.word	0x400e0400
  400de8:	07ff0000 	.word	0x07ff0000

00400dec <pmc_disable_pllbck>:

/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
  400dec:	b480      	push	{r7}
  400dee:	af00      	add	r7, sp, #0
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  400df0:	4b03      	ldr	r3, [pc, #12]	; (400e00 <pmc_disable_pllbck+0x14>)
  400df2:	2200      	movs	r2, #0
  400df4:	62da      	str	r2, [r3, #44]	; 0x2c
}
  400df6:	bf00      	nop
  400df8:	46bd      	mov	sp, r7
  400dfa:	bc80      	pop	{r7}
  400dfc:	4770      	bx	lr
  400dfe:	bf00      	nop
  400e00:	400e0400 	.word	0x400e0400

00400e04 <pmc_is_locked_pllbck>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllbck(void)
{
  400e04:	b480      	push	{r7}
  400e06:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKB);
  400e08:	4b03      	ldr	r3, [pc, #12]	; (400e18 <pmc_is_locked_pllbck+0x14>)
  400e0a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400e0c:	f003 0304 	and.w	r3, r3, #4
}
  400e10:	4618      	mov	r0, r3
  400e12:	46bd      	mov	sp, r7
  400e14:	bc80      	pop	{r7}
  400e16:	4770      	bx	lr
  400e18:	400e0400 	.word	0x400e0400

00400e1c <pmc_enable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
  400e1c:	b480      	push	{r7}
  400e1e:	b083      	sub	sp, #12
  400e20:	af00      	add	r7, sp, #0
  400e22:	6078      	str	r0, [r7, #4]
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400e24:	687b      	ldr	r3, [r7, #4]
  400e26:	2b22      	cmp	r3, #34	; 0x22
  400e28:	d901      	bls.n	400e2e <pmc_enable_periph_clk+0x12>
		return 1;
  400e2a:	2301      	movs	r3, #1
  400e2c:	e02f      	b.n	400e8e <pmc_enable_periph_clk+0x72>
	}

	if (ul_id < 32) {
  400e2e:	687b      	ldr	r3, [r7, #4]
  400e30:	2b1f      	cmp	r3, #31
  400e32:	d813      	bhi.n	400e5c <pmc_enable_periph_clk+0x40>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400e34:	4b18      	ldr	r3, [pc, #96]	; (400e98 <pmc_enable_periph_clk+0x7c>)
  400e36:	699a      	ldr	r2, [r3, #24]
  400e38:	2101      	movs	r1, #1
  400e3a:	687b      	ldr	r3, [r7, #4]
  400e3c:	fa01 f303 	lsl.w	r3, r1, r3
  400e40:	401a      	ands	r2, r3
  400e42:	2101      	movs	r1, #1
  400e44:	687b      	ldr	r3, [r7, #4]
  400e46:	fa01 f303 	lsl.w	r3, r1, r3
  400e4a:	429a      	cmp	r2, r3
  400e4c:	d01e      	beq.n	400e8c <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER0 = 1 << ul_id;
  400e4e:	4a12      	ldr	r2, [pc, #72]	; (400e98 <pmc_enable_periph_clk+0x7c>)
  400e50:	2101      	movs	r1, #1
  400e52:	687b      	ldr	r3, [r7, #4]
  400e54:	fa01 f303 	lsl.w	r3, r1, r3
  400e58:	6113      	str	r3, [r2, #16]
  400e5a:	e017      	b.n	400e8c <pmc_enable_periph_clk+0x70>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  400e5c:	687b      	ldr	r3, [r7, #4]
  400e5e:	3b20      	subs	r3, #32
  400e60:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400e62:	4b0d      	ldr	r3, [pc, #52]	; (400e98 <pmc_enable_periph_clk+0x7c>)
  400e64:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400e68:	2101      	movs	r1, #1
  400e6a:	687b      	ldr	r3, [r7, #4]
  400e6c:	fa01 f303 	lsl.w	r3, r1, r3
  400e70:	401a      	ands	r2, r3
  400e72:	2101      	movs	r1, #1
  400e74:	687b      	ldr	r3, [r7, #4]
  400e76:	fa01 f303 	lsl.w	r3, r1, r3
  400e7a:	429a      	cmp	r2, r3
  400e7c:	d006      	beq.n	400e8c <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER1 = 1 << ul_id;
  400e7e:	4a06      	ldr	r2, [pc, #24]	; (400e98 <pmc_enable_periph_clk+0x7c>)
  400e80:	2101      	movs	r1, #1
  400e82:	687b      	ldr	r3, [r7, #4]
  400e84:	fa01 f303 	lsl.w	r3, r1, r3
  400e88:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  400e8c:	2300      	movs	r3, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400e8e:	4618      	mov	r0, r3
  400e90:	370c      	adds	r7, #12
  400e92:	46bd      	mov	sp, r7
  400e94:	bc80      	pop	{r7}
  400e96:	4770      	bx	lr
  400e98:	400e0400 	.word	0x400e0400

00400e9c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400e9c:	b480      	push	{r7}
  400e9e:	b087      	sub	sp, #28
  400ea0:	af00      	add	r7, sp, #0
  400ea2:	60f8      	str	r0, [r7, #12]
  400ea4:	60b9      	str	r1, [r7, #8]
  400ea6:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400ea8:	68fa      	ldr	r2, [r7, #12]
  400eaa:	68bb      	ldr	r3, [r7, #8]
  400eac:	019b      	lsls	r3, r3, #6
  400eae:	4413      	add	r3, r2
  400eb0:	617b      	str	r3, [r7, #20]

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  400eb2:	697b      	ldr	r3, [r7, #20]
  400eb4:	2202      	movs	r2, #2
  400eb6:	601a      	str	r2, [r3, #0]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400eb8:	697b      	ldr	r3, [r7, #20]
  400eba:	f04f 32ff 	mov.w	r2, #4294967295
  400ebe:	629a      	str	r2, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400ec0:	697b      	ldr	r3, [r7, #20]
  400ec2:	6a1b      	ldr	r3, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400ec4:	697b      	ldr	r3, [r7, #20]
  400ec6:	687a      	ldr	r2, [r7, #4]
  400ec8:	605a      	str	r2, [r3, #4]
}
  400eca:	bf00      	nop
  400ecc:	371c      	adds	r7, #28
  400ece:	46bd      	mov	sp, r7
  400ed0:	bc80      	pop	{r7}
  400ed2:	4770      	bx	lr

00400ed4 <tc_start>:
 * \param[in] ul_channel Channel to configure
 */
void tc_start(
		Tc *p_tc,
		uint32_t ul_channel)
{
  400ed4:	b480      	push	{r7}
  400ed6:	b083      	sub	sp, #12
  400ed8:	af00      	add	r7, sp, #0
  400eda:	6078      	str	r0, [r7, #4]
  400edc:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400ede:	687a      	ldr	r2, [r7, #4]
  400ee0:	683b      	ldr	r3, [r7, #0]
  400ee2:	019b      	lsls	r3, r3, #6
  400ee4:	4413      	add	r3, r2
  400ee6:	2205      	movs	r2, #5
  400ee8:	601a      	str	r2, [r3, #0]
}
  400eea:	bf00      	nop
  400eec:	370c      	adds	r7, #12
  400eee:	46bd      	mov	sp, r7
  400ef0:	bc80      	pop	{r7}
  400ef2:	4770      	bx	lr

00400ef4 <tc_write_rc>:
 */
void tc_write_rc(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_value)
{
  400ef4:	b480      	push	{r7}
  400ef6:	b085      	sub	sp, #20
  400ef8:	af00      	add	r7, sp, #0
  400efa:	60f8      	str	r0, [r7, #12]
  400efc:	60b9      	str	r1, [r7, #8]
  400efe:	607a      	str	r2, [r7, #4]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400f00:	68fa      	ldr	r2, [r7, #12]
  400f02:	68bb      	ldr	r3, [r7, #8]
  400f04:	019b      	lsls	r3, r3, #6
  400f06:	4413      	add	r3, r2
  400f08:	331c      	adds	r3, #28
  400f0a:	687a      	ldr	r2, [r7, #4]
  400f0c:	601a      	str	r2, [r3, #0]
}
  400f0e:	bf00      	nop
  400f10:	3714      	adds	r7, #20
  400f12:	46bd      	mov	sp, r7
  400f14:	bc80      	pop	{r7}
  400f16:	4770      	bx	lr

00400f18 <tc_enable_interrupt>:
 */
void tc_enable_interrupt(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_sources)
{
  400f18:	b480      	push	{r7}
  400f1a:	b087      	sub	sp, #28
  400f1c:	af00      	add	r7, sp, #0
  400f1e:	60f8      	str	r0, [r7, #12]
  400f20:	60b9      	str	r1, [r7, #8]
  400f22:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400f24:	68fa      	ldr	r2, [r7, #12]
  400f26:	68bb      	ldr	r3, [r7, #8]
  400f28:	019b      	lsls	r3, r3, #6
  400f2a:	4413      	add	r3, r2
  400f2c:	617b      	str	r3, [r7, #20]
	tc_channel->TC_IER = ul_sources;
  400f2e:	697b      	ldr	r3, [r7, #20]
  400f30:	687a      	ldr	r2, [r7, #4]
  400f32:	625a      	str	r2, [r3, #36]	; 0x24
}
  400f34:	bf00      	nop
  400f36:	371c      	adds	r7, #28
  400f38:	46bd      	mov	sp, r7
  400f3a:	bc80      	pop	{r7}
  400f3c:	4770      	bx	lr

00400f3e <tc_get_status>:
 * \return The current TC status.
 */
uint32_t tc_get_status(
		Tc *p_tc,
		uint32_t ul_channel)
{
  400f3e:	b480      	push	{r7}
  400f40:	b085      	sub	sp, #20
  400f42:	af00      	add	r7, sp, #0
  400f44:	6078      	str	r0, [r7, #4]
  400f46:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400f48:	687a      	ldr	r2, [r7, #4]
  400f4a:	683b      	ldr	r3, [r7, #0]
  400f4c:	019b      	lsls	r3, r3, #6
  400f4e:	4413      	add	r3, r2
  400f50:	60fb      	str	r3, [r7, #12]
	return tc_channel->TC_SR;
  400f52:	68fb      	ldr	r3, [r7, #12]
  400f54:	6a1b      	ldr	r3, [r3, #32]
}
  400f56:	4618      	mov	r0, r3
  400f58:	3714      	adds	r7, #20
  400f5a:	46bd      	mov	sp, r7
  400f5c:	bc80      	pop	{r7}
  400f5e:	4770      	bx	lr

00400f60 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400f60:	b480      	push	{r7}
  400f62:	b08d      	sub	sp, #52	; 0x34
  400f64:	af00      	add	r7, sp, #0
  400f66:	60f8      	str	r0, [r7, #12]
  400f68:	60b9      	str	r1, [r7, #8]
  400f6a:	607a      	str	r2, [r7, #4]
  400f6c:	603b      	str	r3, [r7, #0]
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400f6e:	2302      	movs	r3, #2
  400f70:	613b      	str	r3, [r7, #16]
  400f72:	2308      	movs	r3, #8
  400f74:	617b      	str	r3, [r7, #20]
  400f76:	2320      	movs	r3, #32
  400f78:	61bb      	str	r3, [r7, #24]
  400f7a:	2380      	movs	r3, #128	; 0x80
  400f7c:	61fb      	str	r3, [r7, #28]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400f7e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  400f80:	0bdb      	lsrs	r3, r3, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400f82:	623b      	str	r3, [r7, #32]
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
  400f84:	2300      	movs	r3, #0
  400f86:	62fb      	str	r3, [r7, #44]	; 0x2c
  400f88:	e01a      	b.n	400fc0 <tc_find_mck_divisor+0x60>
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
  400f8a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400f8c:	009b      	lsls	r3, r3, #2
  400f8e:	f107 0230 	add.w	r2, r7, #48	; 0x30
  400f92:	4413      	add	r3, r2
  400f94:	f853 3c20 	ldr.w	r3, [r3, #-32]
  400f98:	68ba      	ldr	r2, [r7, #8]
  400f9a:	fbb2 f3f3 	udiv	r3, r2, r3
  400f9e:	62bb      	str	r3, [r7, #40]	; 0x28
		ul_low  = ul_high / TC_DIV_FACTOR;
  400fa0:	6abb      	ldr	r3, [r7, #40]	; 0x28
  400fa2:	0c1b      	lsrs	r3, r3, #16
  400fa4:	627b      	str	r3, [r7, #36]	; 0x24
		if (ul_freq > ul_high) {
  400fa6:	68fa      	ldr	r2, [r7, #12]
  400fa8:	6abb      	ldr	r3, [r7, #40]	; 0x28
  400faa:	429a      	cmp	r2, r3
  400fac:	d901      	bls.n	400fb2 <tc_find_mck_divisor+0x52>
			return 0;
  400fae:	2300      	movs	r3, #0
  400fb0:	e023      	b.n	400ffa <tc_find_mck_divisor+0x9a>
		} else if (ul_freq >= ul_low) {
  400fb2:	68fa      	ldr	r2, [r7, #12]
  400fb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400fb6:	429a      	cmp	r2, r3
  400fb8:	d206      	bcs.n	400fc8 <tc_find_mck_divisor+0x68>
			ul_index++) {
  400fba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400fbc:	3301      	adds	r3, #1
  400fbe:	62fb      	str	r3, [r7, #44]	; 0x2c
	for (ul_index = 0;
  400fc0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400fc2:	2b04      	cmp	r3, #4
  400fc4:	d9e1      	bls.n	400f8a <tc_find_mck_divisor+0x2a>
  400fc6:	e000      	b.n	400fca <tc_find_mck_divisor+0x6a>
			break;
  400fc8:	bf00      	nop
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
  400fca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400fcc:	2b04      	cmp	r3, #4
  400fce:	d901      	bls.n	400fd4 <tc_find_mck_divisor+0x74>
		return 0;
  400fd0:	2300      	movs	r3, #0
  400fd2:	e012      	b.n	400ffa <tc_find_mck_divisor+0x9a>
	}

	/*  Store results. */
	if (p_uldiv) {
  400fd4:	687b      	ldr	r3, [r7, #4]
  400fd6:	2b00      	cmp	r3, #0
  400fd8:	d008      	beq.n	400fec <tc_find_mck_divisor+0x8c>
		*p_uldiv = divisors[ul_index];
  400fda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400fdc:	009b      	lsls	r3, r3, #2
  400fde:	f107 0230 	add.w	r2, r7, #48	; 0x30
  400fe2:	4413      	add	r3, r2
  400fe4:	f853 2c20 	ldr.w	r2, [r3, #-32]
  400fe8:	687b      	ldr	r3, [r7, #4]
  400fea:	601a      	str	r2, [r3, #0]
	}

	if (p_ultcclks) {
  400fec:	683b      	ldr	r3, [r7, #0]
  400fee:	2b00      	cmp	r3, #0
  400ff0:	d002      	beq.n	400ff8 <tc_find_mck_divisor+0x98>
		*p_ultcclks = ul_index;
  400ff2:	683b      	ldr	r3, [r7, #0]
  400ff4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  400ff6:	601a      	str	r2, [r3, #0]
	}

	return 1;
  400ff8:	2301      	movs	r3, #1
}
  400ffa:	4618      	mov	r0, r3
  400ffc:	3734      	adds	r7, #52	; 0x34
  400ffe:	46bd      	mov	sp, r7
  401000:	bc80      	pop	{r7}
  401002:	4770      	bx	lr

00401004 <twi_enable_master_mode>:
 * \brief Enable TWI master mode.
 *
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_master_mode(Twi *p_twi)
{
  401004:	b480      	push	{r7}
  401006:	b083      	sub	sp, #12
  401008:	af00      	add	r7, sp, #0
  40100a:	6078      	str	r0, [r7, #4]
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
  40100c:	687b      	ldr	r3, [r7, #4]
  40100e:	2208      	movs	r2, #8
  401010:	601a      	str	r2, [r3, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  401012:	687b      	ldr	r3, [r7, #4]
  401014:	2220      	movs	r2, #32
  401016:	601a      	str	r2, [r3, #0]

	/* Set Master Enable bit */
	p_twi->TWI_CR = TWI_CR_MSEN;
  401018:	687b      	ldr	r3, [r7, #4]
  40101a:	2204      	movs	r2, #4
  40101c:	601a      	str	r2, [r3, #0]
}
  40101e:	bf00      	nop
  401020:	370c      	adds	r7, #12
  401022:	46bd      	mov	sp, r7
  401024:	bc80      	pop	{r7}
  401026:	4770      	bx	lr

00401028 <twi_master_init>:
 * \param p_opt Options for initializing the TWI module (see \ref twi_options_t).
 *
 * \return TWI_SUCCESS if initialization is complete, error code otherwise.
 */
uint32_t twi_master_init(Twi *p_twi, const twi_options_t *p_opt)
{
  401028:	b580      	push	{r7, lr}
  40102a:	b084      	sub	sp, #16
  40102c:	af00      	add	r7, sp, #0
  40102e:	6078      	str	r0, [r7, #4]
  401030:	6039      	str	r1, [r7, #0]
	uint32_t status = TWI_SUCCESS;
  401032:	2300      	movs	r3, #0
  401034:	60fb      	str	r3, [r7, #12]

	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
  401036:	687b      	ldr	r3, [r7, #4]
  401038:	f04f 32ff 	mov.w	r2, #4294967295
  40103c:	629a      	str	r2, [r3, #40]	; 0x28

	/* Dummy read in status register */
	p_twi->TWI_SR;
  40103e:	687b      	ldr	r3, [r7, #4]
  401040:	6a1b      	ldr	r3, [r3, #32]

	/* Reset TWI peripheral */
	twi_reset(p_twi);
  401042:	6878      	ldr	r0, [r7, #4]
  401044:	4b0e      	ldr	r3, [pc, #56]	; (401080 <twi_master_init+0x58>)
  401046:	4798      	blx	r3

	twi_enable_master_mode(p_twi);
  401048:	6878      	ldr	r0, [r7, #4]
  40104a:	4b0e      	ldr	r3, [pc, #56]	; (401084 <twi_master_init+0x5c>)
  40104c:	4798      	blx	r3

	/* Select the speed */
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  40104e:	683b      	ldr	r3, [r7, #0]
  401050:	6859      	ldr	r1, [r3, #4]
  401052:	683b      	ldr	r3, [r7, #0]
  401054:	681b      	ldr	r3, [r3, #0]
  401056:	461a      	mov	r2, r3
  401058:	6878      	ldr	r0, [r7, #4]
  40105a:	4b0b      	ldr	r3, [pc, #44]	; (401088 <twi_master_init+0x60>)
  40105c:	4798      	blx	r3
  40105e:	4603      	mov	r3, r0
  401060:	2b01      	cmp	r3, #1
  401062:	d101      	bne.n	401068 <twi_master_init+0x40>
		/* The desired speed setting is rejected */
		status = TWI_INVALID_ARGUMENT;
  401064:	2301      	movs	r3, #1
  401066:	60fb      	str	r3, [r7, #12]
	}

	if (p_opt->smbus == 1) {
  401068:	683b      	ldr	r3, [r7, #0]
  40106a:	7a5b      	ldrb	r3, [r3, #9]
  40106c:	2b01      	cmp	r3, #1
  40106e:	d102      	bne.n	401076 <twi_master_init+0x4e>
		p_twi->TWI_CR = TWI_CR_QUICK;
  401070:	687b      	ldr	r3, [r7, #4]
  401072:	2240      	movs	r2, #64	; 0x40
  401074:	601a      	str	r2, [r3, #0]
	}

	return status;
  401076:	68fb      	ldr	r3, [r7, #12]
}
  401078:	4618      	mov	r0, r3
  40107a:	3710      	adds	r7, #16
  40107c:	46bd      	mov	sp, r7
  40107e:	bd80      	pop	{r7, pc}
  401080:	004013c5 	.word	0x004013c5
  401084:	00401005 	.word	0x00401005
  401088:	0040108d 	.word	0x0040108d

0040108c <twi_set_speed>:
 *
 * \retval PASS New speed setting is accepted.
 * \retval FAIL New speed setting is rejected.
 */
uint32_t twi_set_speed(Twi *p_twi, uint32_t ul_speed, uint32_t ul_mck)
{
  40108c:	b480      	push	{r7}
  40108e:	b089      	sub	sp, #36	; 0x24
  401090:	af00      	add	r7, sp, #0
  401092:	60f8      	str	r0, [r7, #12]
  401094:	60b9      	str	r1, [r7, #8]
  401096:	607a      	str	r2, [r7, #4]
	uint32_t ckdiv = 0;
  401098:	2300      	movs	r3, #0
  40109a:	61fb      	str	r3, [r7, #28]
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  40109c:	68bb      	ldr	r3, [r7, #8]
  40109e:	4a34      	ldr	r2, [pc, #208]	; (401170 <twi_set_speed+0xe4>)
  4010a0:	4293      	cmp	r3, r2
  4010a2:	d901      	bls.n	4010a8 <twi_set_speed+0x1c>
		return FAIL;
  4010a4:	2301      	movs	r3, #1
  4010a6:	e05d      	b.n	401164 <twi_set_speed+0xd8>
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  4010a8:	68bb      	ldr	r3, [r7, #8]
  4010aa:	4a32      	ldr	r2, [pc, #200]	; (401174 <twi_set_speed+0xe8>)
  4010ac:	4293      	cmp	r3, r2
  4010ae:	d937      	bls.n	401120 <twi_set_speed+0x94>
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4010b0:	687b      	ldr	r3, [r7, #4]
  4010b2:	4a31      	ldr	r2, [pc, #196]	; (401178 <twi_set_speed+0xec>)
  4010b4:	fba2 2303 	umull	r2, r3, r2, r3
  4010b8:	0b9b      	lsrs	r3, r3, #14
  4010ba:	3b04      	subs	r3, #4
  4010bc:	617b      	str	r3, [r7, #20]
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4010be:	68ba      	ldr	r2, [r7, #8]
  4010c0:	4b2e      	ldr	r3, [pc, #184]	; (40117c <twi_set_speed+0xf0>)
  4010c2:	4413      	add	r3, r2
  4010c4:	009b      	lsls	r3, r3, #2
  4010c6:	687a      	ldr	r2, [r7, #4]
  4010c8:	fbb2 f3f3 	udiv	r3, r2, r3
  4010cc:	3b04      	subs	r3, #4
  4010ce:	613b      	str	r3, [r7, #16]
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4010d0:	e005      	b.n	4010de <twi_set_speed+0x52>
			/* Increase clock divider */
			ckdiv++;
  4010d2:	69fb      	ldr	r3, [r7, #28]
  4010d4:	3301      	adds	r3, #1
  4010d6:	61fb      	str	r3, [r7, #28]
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  4010d8:	697b      	ldr	r3, [r7, #20]
  4010da:	085b      	lsrs	r3, r3, #1
  4010dc:	617b      	str	r3, [r7, #20]
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4010de:	697b      	ldr	r3, [r7, #20]
  4010e0:	2bff      	cmp	r3, #255	; 0xff
  4010e2:	d909      	bls.n	4010f8 <twi_set_speed+0x6c>
  4010e4:	69fb      	ldr	r3, [r7, #28]
  4010e6:	2b06      	cmp	r3, #6
  4010e8:	d9f3      	bls.n	4010d2 <twi_set_speed+0x46>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4010ea:	e005      	b.n	4010f8 <twi_set_speed+0x6c>
			/* Increase clock divider */
			ckdiv++;
  4010ec:	69fb      	ldr	r3, [r7, #28]
  4010ee:	3301      	adds	r3, #1
  4010f0:	61fb      	str	r3, [r7, #28]
			/* Divide cldiv value */
			chdiv /= TWI_CLK_DIVIDER;
  4010f2:	693b      	ldr	r3, [r7, #16]
  4010f4:	085b      	lsrs	r3, r3, #1
  4010f6:	613b      	str	r3, [r7, #16]
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4010f8:	693b      	ldr	r3, [r7, #16]
  4010fa:	2bff      	cmp	r3, #255	; 0xff
  4010fc:	d902      	bls.n	401104 <twi_set_speed+0x78>
  4010fe:	69fb      	ldr	r3, [r7, #28]
  401100:	2b06      	cmp	r3, #6
  401102:	d9f3      	bls.n	4010ec <twi_set_speed+0x60>
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  401104:	697b      	ldr	r3, [r7, #20]
  401106:	b2da      	uxtb	r2, r3
  401108:	693b      	ldr	r3, [r7, #16]
  40110a:	021b      	lsls	r3, r3, #8
  40110c:	b29b      	uxth	r3, r3
  40110e:	431a      	orrs	r2, r3
				TWI_CWGR_CKDIV(ckdiv);		
  401110:	69fb      	ldr	r3, [r7, #28]
  401112:	041b      	lsls	r3, r3, #16
  401114:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  401118:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  40111a:	68fb      	ldr	r3, [r7, #12]
  40111c:	611a      	str	r2, [r3, #16]
  40111e:	e020      	b.n	401162 <twi_set_speed+0xd6>
	} else {
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401120:	68bb      	ldr	r3, [r7, #8]
  401122:	005b      	lsls	r3, r3, #1
  401124:	687a      	ldr	r2, [r7, #4]
  401126:	fbb2 f3f3 	udiv	r3, r2, r3
  40112a:	3b04      	subs	r3, #4
  40112c:	61bb      	str	r3, [r7, #24]

		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40112e:	e005      	b.n	40113c <twi_set_speed+0xb0>
			/* Increase clock divider */
			ckdiv++;
  401130:	69fb      	ldr	r3, [r7, #28]
  401132:	3301      	adds	r3, #1
  401134:	61fb      	str	r3, [r7, #28]
			/* Divide cldiv value */
			c_lh_div /= TWI_CLK_DIVIDER;
  401136:	69bb      	ldr	r3, [r7, #24]
  401138:	085b      	lsrs	r3, r3, #1
  40113a:	61bb      	str	r3, [r7, #24]
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40113c:	69bb      	ldr	r3, [r7, #24]
  40113e:	2bff      	cmp	r3, #255	; 0xff
  401140:	d902      	bls.n	401148 <twi_set_speed+0xbc>
  401142:	69fb      	ldr	r3, [r7, #28]
  401144:	2b06      	cmp	r3, #6
  401146:	d9f3      	bls.n	401130 <twi_set_speed+0xa4>
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  401148:	69bb      	ldr	r3, [r7, #24]
  40114a:	b2da      	uxtb	r2, r3
  40114c:	69bb      	ldr	r3, [r7, #24]
  40114e:	021b      	lsls	r3, r3, #8
  401150:	b29b      	uxth	r3, r3
  401152:	431a      	orrs	r2, r3
				TWI_CWGR_CKDIV(ckdiv);
  401154:	69fb      	ldr	r3, [r7, #28]
  401156:	041b      	lsls	r3, r3, #16
  401158:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  40115c:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  40115e:	68fb      	ldr	r3, [r7, #12]
  401160:	611a      	str	r2, [r3, #16]
	}

	return PASS;
  401162:	2300      	movs	r3, #0
}
  401164:	4618      	mov	r0, r3
  401166:	3724      	adds	r7, #36	; 0x24
  401168:	46bd      	mov	sp, r7
  40116a:	bc80      	pop	{r7}
  40116c:	4770      	bx	lr
  40116e:	bf00      	nop
  401170:	00061a80 	.word	0x00061a80
  401174:	0005dc00 	.word	0x0005dc00
  401178:	057619f1 	.word	0x057619f1
  40117c:	3ffd1200 	.word	0x3ffd1200

00401180 <twi_mk_addr>:
 * which byte is the MSB to start with.
 *
 * Please see the device datasheet for details on this.
 */
uint32_t twi_mk_addr(const uint8_t *addr, int len)
{
  401180:	b480      	push	{r7}
  401182:	b085      	sub	sp, #20
  401184:	af00      	add	r7, sp, #0
  401186:	6078      	str	r0, [r7, #4]
  401188:	6039      	str	r1, [r7, #0]
	uint32_t val;

	if (len == 0)
  40118a:	683b      	ldr	r3, [r7, #0]
  40118c:	2b00      	cmp	r3, #0
  40118e:	d101      	bne.n	401194 <twi_mk_addr+0x14>
		return 0;
  401190:	2300      	movs	r3, #0
  401192:	e01d      	b.n	4011d0 <twi_mk_addr+0x50>

	val = addr[0];
  401194:	687b      	ldr	r3, [r7, #4]
  401196:	781b      	ldrb	r3, [r3, #0]
  401198:	60fb      	str	r3, [r7, #12]
	if (len > 1) {
  40119a:	683b      	ldr	r3, [r7, #0]
  40119c:	2b01      	cmp	r3, #1
  40119e:	dd09      	ble.n	4011b4 <twi_mk_addr+0x34>
		val <<= 8;
  4011a0:	68fb      	ldr	r3, [r7, #12]
  4011a2:	021b      	lsls	r3, r3, #8
  4011a4:	60fb      	str	r3, [r7, #12]
		val |= addr[1];
  4011a6:	687b      	ldr	r3, [r7, #4]
  4011a8:	3301      	adds	r3, #1
  4011aa:	781b      	ldrb	r3, [r3, #0]
  4011ac:	461a      	mov	r2, r3
  4011ae:	68fb      	ldr	r3, [r7, #12]
  4011b0:	4313      	orrs	r3, r2
  4011b2:	60fb      	str	r3, [r7, #12]
	}
	if (len > 2) {
  4011b4:	683b      	ldr	r3, [r7, #0]
  4011b6:	2b02      	cmp	r3, #2
  4011b8:	dd09      	ble.n	4011ce <twi_mk_addr+0x4e>
		val <<= 8;
  4011ba:	68fb      	ldr	r3, [r7, #12]
  4011bc:	021b      	lsls	r3, r3, #8
  4011be:	60fb      	str	r3, [r7, #12]
		val |= addr[2];
  4011c0:	687b      	ldr	r3, [r7, #4]
  4011c2:	3302      	adds	r3, #2
  4011c4:	781b      	ldrb	r3, [r3, #0]
  4011c6:	461a      	mov	r2, r3
  4011c8:	68fb      	ldr	r3, [r7, #12]
  4011ca:	4313      	orrs	r3, r2
  4011cc:	60fb      	str	r3, [r7, #12]
	}
	return val;
  4011ce:	68fb      	ldr	r3, [r7, #12]
}
  4011d0:	4618      	mov	r0, r3
  4011d2:	3714      	adds	r7, #20
  4011d4:	46bd      	mov	sp, r7
  4011d6:	bc80      	pop	{r7}
  4011d8:	4770      	bx	lr
	...

004011dc <twi_master_read>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were read, error code otherwise.
 */
uint32_t twi_master_read(Twi *p_twi, twi_packet_t *p_packet)
{
  4011dc:	b580      	push	{r7, lr}
  4011de:	b088      	sub	sp, #32
  4011e0:	af00      	add	r7, sp, #0
  4011e2:	6078      	str	r0, [r7, #4]
  4011e4:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t cnt = p_packet->length;
  4011e6:	683b      	ldr	r3, [r7, #0]
  4011e8:	68db      	ldr	r3, [r3, #12]
  4011ea:	61fb      	str	r3, [r7, #28]
	uint8_t *buffer = p_packet->buffer;
  4011ec:	683b      	ldr	r3, [r7, #0]
  4011ee:	689b      	ldr	r3, [r3, #8]
  4011f0:	61bb      	str	r3, [r7, #24]
	uint8_t stop_sent = 0;
  4011f2:	2300      	movs	r3, #0
  4011f4:	75fb      	strb	r3, [r7, #23]
	uint32_t timeout = TWI_TIMEOUT;;
  4011f6:	f247 5330 	movw	r3, #30000	; 0x7530
  4011fa:	613b      	str	r3, [r7, #16]
	
	/* Check argument */
	if (cnt == 0) {
  4011fc:	69fb      	ldr	r3, [r7, #28]
  4011fe:	2b00      	cmp	r3, #0
  401200:	d101      	bne.n	401206 <twi_master_read+0x2a>
		return TWI_INVALID_ARGUMENT;
  401202:	2301      	movs	r3, #1
  401204:	e069      	b.n	4012da <twi_master_read+0xfe>
	}

	/* Set read mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
  401206:	687b      	ldr	r3, [r7, #4]
  401208:	2200      	movs	r2, #0
  40120a:	605a      	str	r2, [r3, #4]
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  40120c:	683b      	ldr	r3, [r7, #0]
  40120e:	7c1b      	ldrb	r3, [r3, #16]
  401210:	041b      	lsls	r3, r3, #16
  401212:	f403 02fe 	and.w	r2, r3, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  401216:	683b      	ldr	r3, [r7, #0]
  401218:	685b      	ldr	r3, [r3, #4]
  40121a:	021b      	lsls	r3, r3, #8
  40121c:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  401220:	4313      	orrs	r3, r2
  401222:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
  401226:	687b      	ldr	r3, [r7, #4]
  401228:	605a      	str	r2, [r3, #4]
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
  40122a:	687b      	ldr	r3, [r7, #4]
  40122c:	2200      	movs	r2, #0
  40122e:	60da      	str	r2, [r3, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  401230:	683a      	ldr	r2, [r7, #0]
  401232:	683b      	ldr	r3, [r7, #0]
  401234:	685b      	ldr	r3, [r3, #4]
  401236:	4619      	mov	r1, r3
  401238:	4610      	mov	r0, r2
  40123a:	4b2a      	ldr	r3, [pc, #168]	; (4012e4 <twi_master_read+0x108>)
  40123c:	4798      	blx	r3
  40123e:	4602      	mov	r2, r0
  401240:	687b      	ldr	r3, [r7, #4]
  401242:	60da      	str	r2, [r3, #12]

	/* Send a START condition */
	if (cnt == 1) {
  401244:	69fb      	ldr	r3, [r7, #28]
  401246:	2b01      	cmp	r3, #1
  401248:	d105      	bne.n	401256 <twi_master_read+0x7a>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  40124a:	687b      	ldr	r3, [r7, #4]
  40124c:	2203      	movs	r2, #3
  40124e:	601a      	str	r2, [r3, #0]
		stop_sent = 1;
  401250:	2301      	movs	r3, #1
  401252:	75fb      	strb	r3, [r7, #23]
  401254:	e034      	b.n	4012c0 <twi_master_read+0xe4>
	} else {
		p_twi->TWI_CR = TWI_CR_START;
  401256:	687b      	ldr	r3, [r7, #4]
  401258:	2201      	movs	r2, #1
  40125a:	601a      	str	r2, [r3, #0]
		stop_sent = 0;
  40125c:	2300      	movs	r3, #0
  40125e:	75fb      	strb	r3, [r7, #23]
	}

	while (cnt > 0) {
  401260:	e02e      	b.n	4012c0 <twi_master_read+0xe4>
		status = p_twi->TWI_SR;
  401262:	687b      	ldr	r3, [r7, #4]
  401264:	6a1b      	ldr	r3, [r3, #32]
  401266:	60fb      	str	r3, [r7, #12]
		if (status & TWI_SR_NACK) {
  401268:	68fb      	ldr	r3, [r7, #12]
  40126a:	f403 7380 	and.w	r3, r3, #256	; 0x100
  40126e:	2b00      	cmp	r3, #0
  401270:	d001      	beq.n	401276 <twi_master_read+0x9a>
			return TWI_RECEIVE_NACK;
  401272:	2305      	movs	r3, #5
  401274:	e031      	b.n	4012da <twi_master_read+0xfe>
		}

		if (!timeout--) {
  401276:	693b      	ldr	r3, [r7, #16]
  401278:	1e5a      	subs	r2, r3, #1
  40127a:	613a      	str	r2, [r7, #16]
  40127c:	2b00      	cmp	r3, #0
  40127e:	d101      	bne.n	401284 <twi_master_read+0xa8>
			return TWI_ERROR_TIMEOUT;
  401280:	2309      	movs	r3, #9
  401282:	e02a      	b.n	4012da <twi_master_read+0xfe>
		}
				
		/* Last byte ? */
		if (cnt == 1  && !stop_sent) {
  401284:	69fb      	ldr	r3, [r7, #28]
  401286:	2b01      	cmp	r3, #1
  401288:	d107      	bne.n	40129a <twi_master_read+0xbe>
  40128a:	7dfb      	ldrb	r3, [r7, #23]
  40128c:	2b00      	cmp	r3, #0
  40128e:	d104      	bne.n	40129a <twi_master_read+0xbe>
			p_twi->TWI_CR = TWI_CR_STOP;
  401290:	687b      	ldr	r3, [r7, #4]
  401292:	2202      	movs	r2, #2
  401294:	601a      	str	r2, [r3, #0]
			stop_sent = 1;
  401296:	2301      	movs	r3, #1
  401298:	75fb      	strb	r3, [r7, #23]
		}

		if (!(status & TWI_SR_RXRDY)) {
  40129a:	68fb      	ldr	r3, [r7, #12]
  40129c:	f003 0302 	and.w	r3, r3, #2
  4012a0:	2b00      	cmp	r3, #0
  4012a2:	d100      	bne.n	4012a6 <twi_master_read+0xca>
			continue;
  4012a4:	e00c      	b.n	4012c0 <twi_master_read+0xe4>
		}
		*buffer++ = p_twi->TWI_RHR;
  4012a6:	69bb      	ldr	r3, [r7, #24]
  4012a8:	1c5a      	adds	r2, r3, #1
  4012aa:	61ba      	str	r2, [r7, #24]
  4012ac:	687a      	ldr	r2, [r7, #4]
  4012ae:	6b12      	ldr	r2, [r2, #48]	; 0x30
  4012b0:	b2d2      	uxtb	r2, r2
  4012b2:	701a      	strb	r2, [r3, #0]

		cnt--;
  4012b4:	69fb      	ldr	r3, [r7, #28]
  4012b6:	3b01      	subs	r3, #1
  4012b8:	61fb      	str	r3, [r7, #28]
		timeout = TWI_TIMEOUT;
  4012ba:	f247 5330 	movw	r3, #30000	; 0x7530
  4012be:	613b      	str	r3, [r7, #16]
	while (cnt > 0) {
  4012c0:	69fb      	ldr	r3, [r7, #28]
  4012c2:	2b00      	cmp	r3, #0
  4012c4:	d1cd      	bne.n	401262 <twi_master_read+0x86>
	}

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4012c6:	bf00      	nop
  4012c8:	687b      	ldr	r3, [r7, #4]
  4012ca:	6a1b      	ldr	r3, [r3, #32]
  4012cc:	f003 0301 	and.w	r3, r3, #1
  4012d0:	2b00      	cmp	r3, #0
  4012d2:	d0f9      	beq.n	4012c8 <twi_master_read+0xec>
	}

	p_twi->TWI_SR;
  4012d4:	687b      	ldr	r3, [r7, #4]
  4012d6:	6a1b      	ldr	r3, [r3, #32]

	return TWI_SUCCESS;
  4012d8:	2300      	movs	r3, #0
}
  4012da:	4618      	mov	r0, r3
  4012dc:	3720      	adds	r7, #32
  4012de:	46bd      	mov	sp, r7
  4012e0:	bd80      	pop	{r7, pc}
  4012e2:	bf00      	nop
  4012e4:	00401181 	.word	0x00401181

004012e8 <twi_master_write>:
 * \param p_packet Packet information and data (see \ref twi_packet_t).
 *
 * \return TWI_SUCCESS if all bytes were written, error code otherwise.
 */
uint32_t twi_master_write(Twi *p_twi, twi_packet_t *p_packet)
{
  4012e8:	b580      	push	{r7, lr}
  4012ea:	b086      	sub	sp, #24
  4012ec:	af00      	add	r7, sp, #0
  4012ee:	6078      	str	r0, [r7, #4]
  4012f0:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t cnt = p_packet->length;
  4012f2:	683b      	ldr	r3, [r7, #0]
  4012f4:	68db      	ldr	r3, [r3, #12]
  4012f6:	617b      	str	r3, [r7, #20]
	uint8_t *buffer = p_packet->buffer;
  4012f8:	683b      	ldr	r3, [r7, #0]
  4012fa:	689b      	ldr	r3, [r3, #8]
  4012fc:	613b      	str	r3, [r7, #16]

	/* Check argument */
	if (cnt == 0) {
  4012fe:	697b      	ldr	r3, [r7, #20]
  401300:	2b00      	cmp	r3, #0
  401302:	d101      	bne.n	401308 <twi_master_write+0x20>
		return TWI_INVALID_ARGUMENT;
  401304:	2301      	movs	r3, #1
  401306:	e056      	b.n	4013b6 <twi_master_write+0xce>
	}

	/* Set write mode, slave address and 3 internal address byte lengths */
	p_twi->TWI_MMR = 0;
  401308:	687b      	ldr	r3, [r7, #4]
  40130a:	2200      	movs	r2, #0
  40130c:	605a      	str	r2, [r3, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  40130e:	683b      	ldr	r3, [r7, #0]
  401310:	7c1b      	ldrb	r3, [r3, #16]
  401312:	041b      	lsls	r3, r3, #16
  401314:	f403 02fe 	and.w	r2, r3, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  401318:	683b      	ldr	r3, [r7, #0]
  40131a:	685b      	ldr	r3, [r3, #4]
  40131c:	021b      	lsls	r3, r3, #8
  40131e:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  401322:	431a      	orrs	r2, r3
  401324:	687b      	ldr	r3, [r7, #4]
  401326:	605a      	str	r2, [r3, #4]
			TWI_MMR_IADRSZ_Msk);

	/* Set internal address for remote chip */
	p_twi->TWI_IADR = 0;
  401328:	687b      	ldr	r3, [r7, #4]
  40132a:	2200      	movs	r2, #0
  40132c:	60da      	str	r2, [r3, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  40132e:	683a      	ldr	r2, [r7, #0]
  401330:	683b      	ldr	r3, [r7, #0]
  401332:	685b      	ldr	r3, [r3, #4]
  401334:	4619      	mov	r1, r3
  401336:	4610      	mov	r0, r2
  401338:	4b21      	ldr	r3, [pc, #132]	; (4013c0 <twi_master_write+0xd8>)
  40133a:	4798      	blx	r3
  40133c:	4602      	mov	r2, r0
  40133e:	687b      	ldr	r3, [r7, #4]
  401340:	60da      	str	r2, [r3, #12]

	/* Send all bytes */
	while (cnt > 0) {
  401342:	e019      	b.n	401378 <twi_master_write+0x90>
		status = p_twi->TWI_SR;
  401344:	687b      	ldr	r3, [r7, #4]
  401346:	6a1b      	ldr	r3, [r3, #32]
  401348:	60fb      	str	r3, [r7, #12]
		if (status & TWI_SR_NACK) {
  40134a:	68fb      	ldr	r3, [r7, #12]
  40134c:	f403 7380 	and.w	r3, r3, #256	; 0x100
  401350:	2b00      	cmp	r3, #0
  401352:	d001      	beq.n	401358 <twi_master_write+0x70>
			return TWI_RECEIVE_NACK;
  401354:	2305      	movs	r3, #5
  401356:	e02e      	b.n	4013b6 <twi_master_write+0xce>
		}

		if (!(status & TWI_SR_TXRDY)) {
  401358:	68fb      	ldr	r3, [r7, #12]
  40135a:	f003 0304 	and.w	r3, r3, #4
  40135e:	2b00      	cmp	r3, #0
  401360:	d100      	bne.n	401364 <twi_master_write+0x7c>
			continue;
  401362:	e009      	b.n	401378 <twi_master_write+0x90>
		}
		p_twi->TWI_THR = *buffer++;
  401364:	693b      	ldr	r3, [r7, #16]
  401366:	1c5a      	adds	r2, r3, #1
  401368:	613a      	str	r2, [r7, #16]
  40136a:	781b      	ldrb	r3, [r3, #0]
  40136c:	461a      	mov	r2, r3
  40136e:	687b      	ldr	r3, [r7, #4]
  401370:	635a      	str	r2, [r3, #52]	; 0x34

		cnt--;
  401372:	697b      	ldr	r3, [r7, #20]
  401374:	3b01      	subs	r3, #1
  401376:	617b      	str	r3, [r7, #20]
	while (cnt > 0) {
  401378:	697b      	ldr	r3, [r7, #20]
  40137a:	2b00      	cmp	r3, #0
  40137c:	d1e2      	bne.n	401344 <twi_master_write+0x5c>
	}

	while (1) {
		status = p_twi->TWI_SR;
  40137e:	687b      	ldr	r3, [r7, #4]
  401380:	6a1b      	ldr	r3, [r3, #32]
  401382:	60fb      	str	r3, [r7, #12]
		if (status & TWI_SR_NACK) {
  401384:	68fb      	ldr	r3, [r7, #12]
  401386:	f403 7380 	and.w	r3, r3, #256	; 0x100
  40138a:	2b00      	cmp	r3, #0
  40138c:	d001      	beq.n	401392 <twi_master_write+0xaa>
			return TWI_RECEIVE_NACK;
  40138e:	2305      	movs	r3, #5
  401390:	e011      	b.n	4013b6 <twi_master_write+0xce>
		}

		if (status & TWI_SR_TXRDY) {
  401392:	68fb      	ldr	r3, [r7, #12]
  401394:	f003 0304 	and.w	r3, r3, #4
  401398:	2b00      	cmp	r3, #0
  40139a:	d100      	bne.n	40139e <twi_master_write+0xb6>
		status = p_twi->TWI_SR;
  40139c:	e7ef      	b.n	40137e <twi_master_write+0x96>
			break;
  40139e:	bf00      	nop
		}
	}

	p_twi->TWI_CR = TWI_CR_STOP;
  4013a0:	687b      	ldr	r3, [r7, #4]
  4013a2:	2202      	movs	r2, #2
  4013a4:	601a      	str	r2, [r3, #0]

	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4013a6:	bf00      	nop
  4013a8:	687b      	ldr	r3, [r7, #4]
  4013aa:	6a1b      	ldr	r3, [r3, #32]
  4013ac:	f003 0301 	and.w	r3, r3, #1
  4013b0:	2b00      	cmp	r3, #0
  4013b2:	d0f9      	beq.n	4013a8 <twi_master_write+0xc0>
	}

	return TWI_SUCCESS;
  4013b4:	2300      	movs	r3, #0
}
  4013b6:	4618      	mov	r0, r3
  4013b8:	3718      	adds	r7, #24
  4013ba:	46bd      	mov	sp, r7
  4013bc:	bd80      	pop	{r7, pc}
  4013be:	bf00      	nop
  4013c0:	00401181 	.word	0x00401181

004013c4 <twi_reset>:
 * \brief Reset TWI.
 *
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
  4013c4:	b480      	push	{r7}
  4013c6:	b083      	sub	sp, #12
  4013c8:	af00      	add	r7, sp, #0
  4013ca:	6078      	str	r0, [r7, #4]
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  4013cc:	687b      	ldr	r3, [r7, #4]
  4013ce:	2280      	movs	r2, #128	; 0x80
  4013d0:	601a      	str	r2, [r3, #0]
	p_twi->TWI_RHR;
  4013d2:	687b      	ldr	r3, [r7, #4]
  4013d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
  4013d6:	bf00      	nop
  4013d8:	370c      	adds	r7, #12
  4013da:	46bd      	mov	sp, r7
  4013dc:	bc80      	pop	{r7}
  4013de:	4770      	bx	lr

004013e0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4013e0:	b480      	push	{r7}
  4013e2:	b089      	sub	sp, #36	; 0x24
  4013e4:	af00      	add	r7, sp, #0
  4013e6:	60f8      	str	r0, [r7, #12]
  4013e8:	60b9      	str	r1, [r7, #8]
  4013ea:	607a      	str	r2, [r7, #4]
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4013ec:	68bb      	ldr	r3, [r7, #8]
  4013ee:	011a      	lsls	r2, r3, #4
  4013f0:	687b      	ldr	r3, [r7, #4]
  4013f2:	429a      	cmp	r2, r3
  4013f4:	d802      	bhi.n	4013fc <usart_set_async_baudrate+0x1c>
		over = HIGH_FRQ_SAMPLE_DIV;
  4013f6:	2310      	movs	r3, #16
  4013f8:	61fb      	str	r3, [r7, #28]
  4013fa:	e001      	b.n	401400 <usart_set_async_baudrate+0x20>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
  4013fc:	2308      	movs	r3, #8
  4013fe:	61fb      	str	r3, [r7, #28]
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401400:	687b      	ldr	r3, [r7, #4]
  401402:	00da      	lsls	r2, r3, #3
  401404:	69fb      	ldr	r3, [r7, #28]
  401406:	68b9      	ldr	r1, [r7, #8]
  401408:	fb01 f303 	mul.w	r3, r1, r3
  40140c:	085b      	lsrs	r3, r3, #1
  40140e:	441a      	add	r2, r3
  401410:	69fb      	ldr	r3, [r7, #28]
  401412:	68b9      	ldr	r1, [r7, #8]
  401414:	fb01 f303 	mul.w	r3, r1, r3
  401418:	fbb2 f3f3 	udiv	r3, r2, r3
  40141c:	61bb      	str	r3, [r7, #24]
	cd = cd_fp >> 3;
  40141e:	69bb      	ldr	r3, [r7, #24]
  401420:	08db      	lsrs	r3, r3, #3
  401422:	617b      	str	r3, [r7, #20]
	fp = cd_fp & 0x07;
  401424:	69bb      	ldr	r3, [r7, #24]
  401426:	f003 0307 	and.w	r3, r3, #7
  40142a:	613b      	str	r3, [r7, #16]
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40142c:	697b      	ldr	r3, [r7, #20]
  40142e:	2b00      	cmp	r3, #0
  401430:	d003      	beq.n	40143a <usart_set_async_baudrate+0x5a>
  401432:	697b      	ldr	r3, [r7, #20]
  401434:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
  401438:	d301      	bcc.n	40143e <usart_set_async_baudrate+0x5e>
		return 1;
  40143a:	2301      	movs	r3, #1
  40143c:	e00f      	b.n	40145e <usart_set_async_baudrate+0x7e>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
  40143e:	69fb      	ldr	r3, [r7, #28]
  401440:	2b08      	cmp	r3, #8
  401442:	d105      	bne.n	401450 <usart_set_async_baudrate+0x70>
		p_usart->US_MR |= US_MR_OVER;
  401444:	68fb      	ldr	r3, [r7, #12]
  401446:	685b      	ldr	r3, [r3, #4]
  401448:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
  40144c:	68fb      	ldr	r3, [r7, #12]
  40144e:	605a      	str	r2, [r3, #4]
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  401450:	693b      	ldr	r3, [r7, #16]
  401452:	041a      	lsls	r2, r3, #16
  401454:	697b      	ldr	r3, [r7, #20]
  401456:	431a      	orrs	r2, r3
  401458:	68fb      	ldr	r3, [r7, #12]
  40145a:	621a      	str	r2, [r3, #32]

	return 0;
  40145c:	2300      	movs	r3, #0
}
  40145e:	4618      	mov	r0, r3
  401460:	3724      	adds	r7, #36	; 0x24
  401462:	46bd      	mov	sp, r7
  401464:	bc80      	pop	{r7}
  401466:	4770      	bx	lr

00401468 <usart_reset>:
 * \brief Reset the USART and disable TX and RX.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset(Usart *p_usart)
{
  401468:	b580      	push	{r7, lr}
  40146a:	b082      	sub	sp, #8
  40146c:	af00      	add	r7, sp, #0
  40146e:	6078      	str	r0, [r7, #4]
	/* Disable the Write Protect. */
	usart_disable_writeprotect(p_usart);
  401470:	6878      	ldr	r0, [r7, #4]
  401472:	4b0f      	ldr	r3, [pc, #60]	; (4014b0 <usart_reset+0x48>)
  401474:	4798      	blx	r3

	/* Reset registers that could cause unpredictable behavior after reset. */
	p_usart->US_MR = 0;
  401476:	687b      	ldr	r3, [r7, #4]
  401478:	2200      	movs	r2, #0
  40147a:	605a      	str	r2, [r3, #4]
	p_usart->US_RTOR = 0;
  40147c:	687b      	ldr	r3, [r7, #4]
  40147e:	2200      	movs	r2, #0
  401480:	625a      	str	r2, [r3, #36]	; 0x24
	p_usart->US_TTGR = 0;
  401482:	687b      	ldr	r3, [r7, #4]
  401484:	2200      	movs	r2, #0
  401486:	629a      	str	r2, [r3, #40]	; 0x28

	/* Disable TX and RX. */
	usart_reset_tx(p_usart);
  401488:	6878      	ldr	r0, [r7, #4]
  40148a:	4b0a      	ldr	r3, [pc, #40]	; (4014b4 <usart_reset+0x4c>)
  40148c:	4798      	blx	r3
	usart_reset_rx(p_usart);
  40148e:	6878      	ldr	r0, [r7, #4]
  401490:	4b09      	ldr	r3, [pc, #36]	; (4014b8 <usart_reset+0x50>)
  401492:	4798      	blx	r3
	/* Reset status bits. */
	usart_reset_status(p_usart);
  401494:	6878      	ldr	r0, [r7, #4]
  401496:	4b09      	ldr	r3, [pc, #36]	; (4014bc <usart_reset+0x54>)
  401498:	4798      	blx	r3
	/* Turn off RTS and DTR if exist. */
	usart_drive_RTS_pin_high(p_usart);
  40149a:	6878      	ldr	r0, [r7, #4]
  40149c:	4b08      	ldr	r3, [pc, #32]	; (4014c0 <usart_reset+0x58>)
  40149e:	4798      	blx	r3
#if (SAM3S || SAM4S || SAM3U || SAM4L || SAM4E)
	usart_drive_DTR_pin_high(p_usart);
  4014a0:	6878      	ldr	r0, [r7, #4]
  4014a2:	4b08      	ldr	r3, [pc, #32]	; (4014c4 <usart_reset+0x5c>)
  4014a4:	4798      	blx	r3
#endif
}
  4014a6:	bf00      	nop
  4014a8:	3708      	adds	r7, #8
  4014aa:	46bd      	mov	sp, r7
  4014ac:	bd80      	pop	{r7, pc}
  4014ae:	bf00      	nop
  4014b0:	004016cd 	.word	0x004016cd
  4014b4:	004015a5 	.word	0x004015a5
  4014b8:	004015d5 	.word	0x004015d5
  4014bc:	00401621 	.word	0x00401621
  4014c0:	00401655 	.word	0x00401655
  4014c4:	0040163b 	.word	0x0040163b

004014c8 <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  4014c8:	b580      	push	{r7, lr}
  4014ca:	b084      	sub	sp, #16
  4014cc:	af00      	add	r7, sp, #0
  4014ce:	60f8      	str	r0, [r7, #12]
  4014d0:	60b9      	str	r1, [r7, #8]
  4014d2:	607a      	str	r2, [r7, #4]
	static uint32_t ul_reg_val;

	/* Reset the USART and shut down TX and RX. */
	usart_reset(p_usart);
  4014d4:	68f8      	ldr	r0, [r7, #12]
  4014d6:	4b1a      	ldr	r3, [pc, #104]	; (401540 <usart_init_rs232+0x78>)
  4014d8:	4798      	blx	r3

	ul_reg_val = 0;
  4014da:	4b1a      	ldr	r3, [pc, #104]	; (401544 <usart_init_rs232+0x7c>)
  4014dc:	2200      	movs	r2, #0
  4014de:	601a      	str	r2, [r3, #0]
	/* Check whether the input values are legal. */
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  4014e0:	68bb      	ldr	r3, [r7, #8]
  4014e2:	2b00      	cmp	r3, #0
  4014e4:	d009      	beq.n	4014fa <usart_init_rs232+0x32>
  4014e6:	68bb      	ldr	r3, [r7, #8]
  4014e8:	681b      	ldr	r3, [r3, #0]
  4014ea:	687a      	ldr	r2, [r7, #4]
  4014ec:	4619      	mov	r1, r3
  4014ee:	68f8      	ldr	r0, [r7, #12]
  4014f0:	4b15      	ldr	r3, [pc, #84]	; (401548 <usart_init_rs232+0x80>)
  4014f2:	4798      	blx	r3
  4014f4:	4603      	mov	r3, r0
  4014f6:	2b00      	cmp	r3, #0
  4014f8:	d001      	beq.n	4014fe <usart_init_rs232+0x36>
			p_usart_opt->baudrate, ul_mck)) {
		return 1;
  4014fa:	2301      	movs	r3, #1
  4014fc:	e01b      	b.n	401536 <usart_init_rs232+0x6e>
	}

	/* Configure the USART option. */
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4014fe:	68bb      	ldr	r3, [r7, #8]
  401500:	685a      	ldr	r2, [r3, #4]
  401502:	68bb      	ldr	r3, [r7, #8]
  401504:	689b      	ldr	r3, [r3, #8]
  401506:	431a      	orrs	r2, r3
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  401508:	68bb      	ldr	r3, [r7, #8]
  40150a:	691b      	ldr	r3, [r3, #16]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  40150c:	431a      	orrs	r2, r3
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  40150e:	68bb      	ldr	r3, [r7, #8]
  401510:	68db      	ldr	r3, [r3, #12]
  401512:	431a      	orrs	r2, r3
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401514:	4b0b      	ldr	r3, [pc, #44]	; (401544 <usart_init_rs232+0x7c>)
  401516:	681b      	ldr	r3, [r3, #0]
  401518:	4313      	orrs	r3, r2
  40151a:	4a0a      	ldr	r2, [pc, #40]	; (401544 <usart_init_rs232+0x7c>)
  40151c:	6013      	str	r3, [r2, #0]

	/* Configure the USART mode as normal mode. */
	ul_reg_val |= US_MR_USART_MODE_NORMAL;
  40151e:	4b09      	ldr	r3, [pc, #36]	; (401544 <usart_init_rs232+0x7c>)
  401520:	681b      	ldr	r3, [r3, #0]
  401522:	4a08      	ldr	r2, [pc, #32]	; (401544 <usart_init_rs232+0x7c>)
  401524:	6013      	str	r3, [r2, #0]

	p_usart->US_MR |= ul_reg_val;
  401526:	68fb      	ldr	r3, [r7, #12]
  401528:	685a      	ldr	r2, [r3, #4]
  40152a:	4b06      	ldr	r3, [pc, #24]	; (401544 <usart_init_rs232+0x7c>)
  40152c:	681b      	ldr	r3, [r3, #0]
  40152e:	431a      	orrs	r2, r3
  401530:	68fb      	ldr	r3, [r7, #12]
  401532:	605a      	str	r2, [r3, #4]

	return 0;
  401534:	2300      	movs	r3, #0
}
  401536:	4618      	mov	r0, r3
  401538:	3710      	adds	r7, #16
  40153a:	46bd      	mov	sp, r7
  40153c:	bd80      	pop	{r7, pc}
  40153e:	bf00      	nop
  401540:	00401469 	.word	0x00401469
  401544:	20000a50 	.word	0x20000a50
  401548:	004013e1 	.word	0x004013e1

0040154c <usart_init_hw_handshaking>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_hw_handshaking(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  40154c:	b580      	push	{r7, lr}
  40154e:	b084      	sub	sp, #16
  401550:	af00      	add	r7, sp, #0
  401552:	60f8      	str	r0, [r7, #12]
  401554:	60b9      	str	r1, [r7, #8]
  401556:	607a      	str	r2, [r7, #4]
	/* Initialize the USART as standard RS232. */
	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
  401558:	687a      	ldr	r2, [r7, #4]
  40155a:	68b9      	ldr	r1, [r7, #8]
  40155c:	68f8      	ldr	r0, [r7, #12]
  40155e:	4b0a      	ldr	r3, [pc, #40]	; (401588 <usart_init_hw_handshaking+0x3c>)
  401560:	4798      	blx	r3
  401562:	4603      	mov	r3, r0
  401564:	2b00      	cmp	r3, #0
  401566:	d001      	beq.n	40156c <usart_init_hw_handshaking+0x20>
		return 1;
  401568:	2301      	movs	r3, #1
  40156a:	e008      	b.n	40157e <usart_init_hw_handshaking+0x32>
	}

	/* Set hardware handshaking mode. */
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  40156c:	68fb      	ldr	r3, [r7, #12]
  40156e:	685b      	ldr	r3, [r3, #4]
  401570:	f023 030f 	bic.w	r3, r3, #15
  401574:	f043 0202 	orr.w	r2, r3, #2
  401578:	68fb      	ldr	r3, [r7, #12]
  40157a:	605a      	str	r2, [r3, #4]
			US_MR_USART_MODE_HW_HANDSHAKING;

	return 0;
  40157c:	2300      	movs	r3, #0
}
  40157e:	4618      	mov	r0, r3
  401580:	3710      	adds	r7, #16
  401582:	46bd      	mov	sp, r7
  401584:	bd80      	pop	{r7, pc}
  401586:	bf00      	nop
  401588:	004014c9 	.word	0x004014c9

0040158c <usart_enable_tx>:
 * \brief Enable USART transmitter.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_tx(Usart *p_usart)
{
  40158c:	b480      	push	{r7}
  40158e:	b083      	sub	sp, #12
  401590:	af00      	add	r7, sp, #0
  401592:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_TXEN;
  401594:	687b      	ldr	r3, [r7, #4]
  401596:	2240      	movs	r2, #64	; 0x40
  401598:	601a      	str	r2, [r3, #0]
}
  40159a:	bf00      	nop
  40159c:	370c      	adds	r7, #12
  40159e:	46bd      	mov	sp, r7
  4015a0:	bc80      	pop	{r7}
  4015a2:	4770      	bx	lr

004015a4 <usart_reset_tx>:
 * \brief Immediately stop and disable USART transmitter.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_tx(Usart *p_usart)
{
  4015a4:	b480      	push	{r7}
  4015a6:	b083      	sub	sp, #12
  4015a8:	af00      	add	r7, sp, #0
  4015aa:	6078      	str	r0, [r7, #4]
	/* Reset transmitter */
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  4015ac:	687b      	ldr	r3, [r7, #4]
  4015ae:	2288      	movs	r2, #136	; 0x88
  4015b0:	601a      	str	r2, [r3, #0]
}
  4015b2:	bf00      	nop
  4015b4:	370c      	adds	r7, #12
  4015b6:	46bd      	mov	sp, r7
  4015b8:	bc80      	pop	{r7}
  4015ba:	4770      	bx	lr

004015bc <usart_enable_rx>:
 * \brief Enable USART receiver.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_rx(Usart *p_usart)
{
  4015bc:	b480      	push	{r7}
  4015be:	b083      	sub	sp, #12
  4015c0:	af00      	add	r7, sp, #0
  4015c2:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RXEN;
  4015c4:	687b      	ldr	r3, [r7, #4]
  4015c6:	2210      	movs	r2, #16
  4015c8:	601a      	str	r2, [r3, #0]
}
  4015ca:	bf00      	nop
  4015cc:	370c      	adds	r7, #12
  4015ce:	46bd      	mov	sp, r7
  4015d0:	bc80      	pop	{r7}
  4015d2:	4770      	bx	lr

004015d4 <usart_reset_rx>:
 * \brief Immediately stop and disable USART receiver.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_rx(Usart *p_usart)
{
  4015d4:	b480      	push	{r7}
  4015d6:	b083      	sub	sp, #12
  4015d8:	af00      	add	r7, sp, #0
  4015da:	6078      	str	r0, [r7, #4]
	/* Reset Receiver */
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  4015dc:	687b      	ldr	r3, [r7, #4]
  4015de:	2224      	movs	r2, #36	; 0x24
  4015e0:	601a      	str	r2, [r3, #0]
}
  4015e2:	bf00      	nop
  4015e4:	370c      	adds	r7, #12
  4015e6:	46bd      	mov	sp, r7
  4015e8:	bc80      	pop	{r7}
  4015ea:	4770      	bx	lr

004015ec <usart_enable_interrupt>:
 *
 * \param p_usart Pointer to a USART peripheral.
 * \param ul_sources Interrupt sources bit map.
 */
void usart_enable_interrupt(Usart *p_usart, uint32_t ul_sources)
{
  4015ec:	b480      	push	{r7}
  4015ee:	b083      	sub	sp, #12
  4015f0:	af00      	add	r7, sp, #0
  4015f2:	6078      	str	r0, [r7, #4]
  4015f4:	6039      	str	r1, [r7, #0]
	p_usart->US_IER = ul_sources;
  4015f6:	687b      	ldr	r3, [r7, #4]
  4015f8:	683a      	ldr	r2, [r7, #0]
  4015fa:	609a      	str	r2, [r3, #8]
}
  4015fc:	bf00      	nop
  4015fe:	370c      	adds	r7, #12
  401600:	46bd      	mov	sp, r7
  401602:	bc80      	pop	{r7}
  401604:	4770      	bx	lr

00401606 <usart_disable_interrupt>:
 *
 * \param p_usart Pointer to a USART peripheral.
 * \param ul_sources Interrupt sources bit map.
 */
void usart_disable_interrupt(Usart *p_usart, uint32_t ul_sources)
{
  401606:	b480      	push	{r7}
  401608:	b083      	sub	sp, #12
  40160a:	af00      	add	r7, sp, #0
  40160c:	6078      	str	r0, [r7, #4]
  40160e:	6039      	str	r1, [r7, #0]
	p_usart->US_IDR = ul_sources;
  401610:	687b      	ldr	r3, [r7, #4]
  401612:	683a      	ldr	r2, [r7, #0]
  401614:	60da      	str	r2, [r3, #12]
}
  401616:	bf00      	nop
  401618:	370c      	adds	r7, #12
  40161a:	46bd      	mov	sp, r7
  40161c:	bc80      	pop	{r7}
  40161e:	4770      	bx	lr

00401620 <usart_reset_status>:
 * \brief Reset status bits (PARE, OVER, MANERR, UNRE and PXBRK in US_CSR).
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_status(Usart *p_usart)
{
  401620:	b480      	push	{r7}
  401622:	b083      	sub	sp, #12
  401624:	af00      	add	r7, sp, #0
  401626:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RSTSTA;
  401628:	687b      	ldr	r3, [r7, #4]
  40162a:	f44f 7280 	mov.w	r2, #256	; 0x100
  40162e:	601a      	str	r2, [r3, #0]
}
  401630:	bf00      	nop
  401632:	370c      	adds	r7, #12
  401634:	46bd      	mov	sp, r7
  401636:	bc80      	pop	{r7}
  401638:	4770      	bx	lr

0040163a <usart_drive_DTR_pin_high>:
 * \brief Drive the pin DTR to 1.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_DTR_pin_high(Usart *p_usart)
{
  40163a:	b480      	push	{r7}
  40163c:	b083      	sub	sp, #12
  40163e:	af00      	add	r7, sp, #0
  401640:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_DTRDIS;
  401642:	687b      	ldr	r3, [r7, #4]
  401644:	f44f 3200 	mov.w	r2, #131072	; 0x20000
  401648:	601a      	str	r2, [r3, #0]
}
  40164a:	bf00      	nop
  40164c:	370c      	adds	r7, #12
  40164e:	46bd      	mov	sp, r7
  401650:	bc80      	pop	{r7}
  401652:	4770      	bx	lr

00401654 <usart_drive_RTS_pin_high>:
 * \brief Drive the pin RTS to 1.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_RTS_pin_high(Usart *p_usart)
{
  401654:	b480      	push	{r7}
  401656:	b083      	sub	sp, #12
  401658:	af00      	add	r7, sp, #0
  40165a:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RTSDIS;
  40165c:	687b      	ldr	r3, [r7, #4]
  40165e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  401662:	601a      	str	r2, [r3, #0]
}
  401664:	bf00      	nop
  401666:	370c      	adds	r7, #12
  401668:	46bd      	mov	sp, r7
  40166a:	bc80      	pop	{r7}
  40166c:	4770      	bx	lr

0040166e <usart_putchar>:
 *
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_putchar(Usart *p_usart, uint32_t c)
{
  40166e:	b480      	push	{r7}
  401670:	b083      	sub	sp, #12
  401672:	af00      	add	r7, sp, #0
  401674:	6078      	str	r0, [r7, #4]
  401676:	6039      	str	r1, [r7, #0]
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  401678:	bf00      	nop
  40167a:	687b      	ldr	r3, [r7, #4]
  40167c:	695b      	ldr	r3, [r3, #20]
  40167e:	f003 0302 	and.w	r3, r3, #2
  401682:	2b00      	cmp	r3, #0
  401684:	d0f9      	beq.n	40167a <usart_putchar+0xc>
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  401686:	683b      	ldr	r3, [r7, #0]
  401688:	f3c3 0208 	ubfx	r2, r3, #0, #9
  40168c:	687b      	ldr	r3, [r7, #4]
  40168e:	61da      	str	r2, [r3, #28]

	return 0;
  401690:	2300      	movs	r3, #0
}
  401692:	4618      	mov	r0, r3
  401694:	370c      	adds	r7, #12
  401696:	46bd      	mov	sp, r7
  401698:	bc80      	pop	{r7}
  40169a:	4770      	bx	lr

0040169c <usart_write_line>:
 *
 * \param p_usart Pointer to a USART instance.
 * \param string Pointer to one-line string to be sent.
 */
void usart_write_line(Usart *p_usart, const char *string)
{
  40169c:	b580      	push	{r7, lr}
  40169e:	b082      	sub	sp, #8
  4016a0:	af00      	add	r7, sp, #0
  4016a2:	6078      	str	r0, [r7, #4]
  4016a4:	6039      	str	r1, [r7, #0]
	while (*string != '\0') {
  4016a6:	e007      	b.n	4016b8 <usart_write_line+0x1c>
		usart_putchar(p_usart, *string++);
  4016a8:	683b      	ldr	r3, [r7, #0]
  4016aa:	1c5a      	adds	r2, r3, #1
  4016ac:	603a      	str	r2, [r7, #0]
  4016ae:	781b      	ldrb	r3, [r3, #0]
  4016b0:	4619      	mov	r1, r3
  4016b2:	6878      	ldr	r0, [r7, #4]
  4016b4:	4b04      	ldr	r3, [pc, #16]	; (4016c8 <usart_write_line+0x2c>)
  4016b6:	4798      	blx	r3
	while (*string != '\0') {
  4016b8:	683b      	ldr	r3, [r7, #0]
  4016ba:	781b      	ldrb	r3, [r3, #0]
  4016bc:	2b00      	cmp	r3, #0
  4016be:	d1f3      	bne.n	4016a8 <usart_write_line+0xc>
	}
}
  4016c0:	bf00      	nop
  4016c2:	3708      	adds	r7, #8
  4016c4:	46bd      	mov	sp, r7
  4016c6:	bd80      	pop	{r7, pc}
  4016c8:	0040166f 	.word	0x0040166f

004016cc <usart_disable_writeprotect>:
 * \brief Disable write protect of USART registers.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
  4016cc:	b480      	push	{r7}
  4016ce:	b083      	sub	sp, #12
  4016d0:	af00      	add	r7, sp, #0
  4016d2:	6078      	str	r0, [r7, #4]
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  4016d4:	687b      	ldr	r3, [r7, #4]
  4016d6:	4a04      	ldr	r2, [pc, #16]	; (4016e8 <usart_disable_writeprotect+0x1c>)
  4016d8:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
}
  4016dc:	bf00      	nop
  4016de:	370c      	adds	r7, #12
  4016e0:	46bd      	mov	sp, r7
  4016e2:	bc80      	pop	{r7}
  4016e4:	4770      	bx	lr
  4016e6:	bf00      	nop
  4016e8:	55534100 	.word	0x55534100

004016ec <wdt_disable>:

/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
  4016ec:	b480      	push	{r7}
  4016ee:	b083      	sub	sp, #12
  4016f0:	af00      	add	r7, sp, #0
  4016f2:	6078      	str	r0, [r7, #4]
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  4016f4:	687b      	ldr	r3, [r7, #4]
  4016f6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4016fa:	605a      	str	r2, [r3, #4]

}
  4016fc:	bf00      	nop
  4016fe:	370c      	adds	r7, #12
  401700:	46bd      	mov	sp, r7
  401702:	bc80      	pop	{r7}
  401704:	4770      	bx	lr
	...

00401708 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  401708:	b480      	push	{r7}
  40170a:	b083      	sub	sp, #12
  40170c:	af00      	add	r7, sp, #0
  40170e:	4603      	mov	r3, r0
  401710:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
  401712:	f997 3007 	ldrsb.w	r3, [r7, #7]
  401716:	2b00      	cmp	r3, #0
  401718:	db0b      	blt.n	401732 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40171a:	4908      	ldr	r1, [pc, #32]	; (40173c <__NVIC_EnableIRQ+0x34>)
  40171c:	f997 3007 	ldrsb.w	r3, [r7, #7]
  401720:	095b      	lsrs	r3, r3, #5
  401722:	79fa      	ldrb	r2, [r7, #7]
  401724:	f002 021f 	and.w	r2, r2, #31
  401728:	2001      	movs	r0, #1
  40172a:	fa00 f202 	lsl.w	r2, r0, r2
  40172e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
  401732:	bf00      	nop
  401734:	370c      	adds	r7, #12
  401736:	46bd      	mov	sp, r7
  401738:	bc80      	pop	{r7}
  40173a:	4770      	bx	lr
  40173c:	e000e100 	.word	0xe000e100

00401740 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  401740:	b480      	push	{r7}
  401742:	b083      	sub	sp, #12
  401744:	af00      	add	r7, sp, #0
  401746:	4603      	mov	r3, r0
  401748:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
  40174a:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40174e:	2b00      	cmp	r3, #0
  401750:	db10      	blt.n	401774 <__NVIC_DisableIRQ+0x34>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401752:	490b      	ldr	r1, [pc, #44]	; (401780 <__NVIC_DisableIRQ+0x40>)
  401754:	f997 3007 	ldrsb.w	r3, [r7, #7]
  401758:	095b      	lsrs	r3, r3, #5
  40175a:	79fa      	ldrb	r2, [r7, #7]
  40175c:	f002 021f 	and.w	r2, r2, #31
  401760:	2001      	movs	r0, #1
  401762:	fa00 f202 	lsl.w	r2, r0, r2
  401766:	3320      	adds	r3, #32
  401768:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  40176c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  401770:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
  401774:	bf00      	nop
  401776:	370c      	adds	r7, #12
  401778:	46bd      	mov	sp, r7
  40177a:	bc80      	pop	{r7}
  40177c:	4770      	bx	lr
  40177e:	bf00      	nop
  401780:	e000e100 	.word	0xe000e100

00401784 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  401784:	b480      	push	{r7}
  401786:	b083      	sub	sp, #12
  401788:	af00      	add	r7, sp, #0
  40178a:	4603      	mov	r3, r0
  40178c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
  40178e:	f997 3007 	ldrsb.w	r3, [r7, #7]
  401792:	2b00      	cmp	r3, #0
  401794:	db0c      	blt.n	4017b0 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401796:	4909      	ldr	r1, [pc, #36]	; (4017bc <__NVIC_ClearPendingIRQ+0x38>)
  401798:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40179c:	095b      	lsrs	r3, r3, #5
  40179e:	79fa      	ldrb	r2, [r7, #7]
  4017a0:	f002 021f 	and.w	r2, r2, #31
  4017a4:	2001      	movs	r0, #1
  4017a6:	fa00 f202 	lsl.w	r2, r0, r2
  4017aa:	3360      	adds	r3, #96	; 0x60
  4017ac:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
  4017b0:	bf00      	nop
  4017b2:	370c      	adds	r7, #12
  4017b4:	46bd      	mov	sp, r7
  4017b6:	bc80      	pop	{r7}
  4017b8:	4770      	bx	lr
  4017ba:	bf00      	nop
  4017bc:	e000e100 	.word	0xe000e100

004017c0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  4017c0:	b480      	push	{r7}
  4017c2:	b083      	sub	sp, #12
  4017c4:	af00      	add	r7, sp, #0
  4017c6:	4603      	mov	r3, r0
  4017c8:	6039      	str	r1, [r7, #0]
  4017ca:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
  4017cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
  4017d0:	2b00      	cmp	r3, #0
  4017d2:	db0a      	blt.n	4017ea <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  4017d4:	490d      	ldr	r1, [pc, #52]	; (40180c <__NVIC_SetPriority+0x4c>)
  4017d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
  4017da:	683a      	ldr	r2, [r7, #0]
  4017dc:	b2d2      	uxtb	r2, r2
  4017de:	0112      	lsls	r2, r2, #4
  4017e0:	b2d2      	uxtb	r2, r2
  4017e2:	440b      	add	r3, r1
  4017e4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
  4017e8:	e00a      	b.n	401800 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  4017ea:	4909      	ldr	r1, [pc, #36]	; (401810 <__NVIC_SetPriority+0x50>)
  4017ec:	79fb      	ldrb	r3, [r7, #7]
  4017ee:	f003 030f 	and.w	r3, r3, #15
  4017f2:	3b04      	subs	r3, #4
  4017f4:	683a      	ldr	r2, [r7, #0]
  4017f6:	b2d2      	uxtb	r2, r2
  4017f8:	0112      	lsls	r2, r2, #4
  4017fa:	b2d2      	uxtb	r2, r2
  4017fc:	440b      	add	r3, r1
  4017fe:	761a      	strb	r2, [r3, #24]
}
  401800:	bf00      	nop
  401802:	370c      	adds	r7, #12
  401804:	46bd      	mov	sp, r7
  401806:	bc80      	pop	{r7}
  401808:	4770      	bx	lr
  40180a:	bf00      	nop
  40180c:	e000e100 	.word	0xe000e100
  401810:	e000ed00 	.word	0xe000ed00

00401814 <osc_get_rate>:
{
  401814:	b480      	push	{r7}
  401816:	b083      	sub	sp, #12
  401818:	af00      	add	r7, sp, #0
  40181a:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  40181c:	687b      	ldr	r3, [r7, #4]
  40181e:	2b07      	cmp	r3, #7
  401820:	d825      	bhi.n	40186e <osc_get_rate+0x5a>
  401822:	a201      	add	r2, pc, #4	; (adr r2, 401828 <osc_get_rate+0x14>)
  401824:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401828:	00401849 	.word	0x00401849
  40182c:	0040184f 	.word	0x0040184f
  401830:	00401855 	.word	0x00401855
  401834:	0040185b 	.word	0x0040185b
  401838:	0040185f 	.word	0x0040185f
  40183c:	00401863 	.word	0x00401863
  401840:	00401867 	.word	0x00401867
  401844:	0040186b 	.word	0x0040186b
		return OSC_SLCK_32K_RC_HZ;
  401848:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  40184c:	e010      	b.n	401870 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  40184e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401852:	e00d      	b.n	401870 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  401854:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401858:	e00a      	b.n	401870 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  40185a:	4b08      	ldr	r3, [pc, #32]	; (40187c <osc_get_rate+0x68>)
  40185c:	e008      	b.n	401870 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  40185e:	4b08      	ldr	r3, [pc, #32]	; (401880 <osc_get_rate+0x6c>)
  401860:	e006      	b.n	401870 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  401862:	4b08      	ldr	r3, [pc, #32]	; (401884 <osc_get_rate+0x70>)
  401864:	e004      	b.n	401870 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  401866:	4b07      	ldr	r3, [pc, #28]	; (401884 <osc_get_rate+0x70>)
  401868:	e002      	b.n	401870 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  40186a:	4b06      	ldr	r3, [pc, #24]	; (401884 <osc_get_rate+0x70>)
  40186c:	e000      	b.n	401870 <osc_get_rate+0x5c>
	return 0;
  40186e:	2300      	movs	r3, #0
}
  401870:	4618      	mov	r0, r3
  401872:	370c      	adds	r7, #12
  401874:	46bd      	mov	sp, r7
  401876:	bc80      	pop	{r7}
  401878:	4770      	bx	lr
  40187a:	bf00      	nop
  40187c:	003d0900 	.word	0x003d0900
  401880:	007a1200 	.word	0x007a1200
  401884:	00b71b00 	.word	0x00b71b00

00401888 <sysclk_get_main_hz>:
{
  401888:	b580      	push	{r7, lr}
  40188a:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  40188c:	2006      	movs	r0, #6
  40188e:	4b04      	ldr	r3, [pc, #16]	; (4018a0 <sysclk_get_main_hz+0x18>)
  401890:	4798      	blx	r3
  401892:	4602      	mov	r2, r0
  401894:	4613      	mov	r3, r2
  401896:	009b      	lsls	r3, r3, #2
  401898:	4413      	add	r3, r2
  40189a:	009b      	lsls	r3, r3, #2
}
  40189c:	4618      	mov	r0, r3
  40189e:	bd80      	pop	{r7, pc}
  4018a0:	00401815 	.word	0x00401815

004018a4 <sysclk_get_cpu_hz>:
{
  4018a4:	b580      	push	{r7, lr}
  4018a6:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  4018a8:	4b02      	ldr	r3, [pc, #8]	; (4018b4 <sysclk_get_cpu_hz+0x10>)
  4018aa:	4798      	blx	r3
  4018ac:	4603      	mov	r3, r0
  4018ae:	085b      	lsrs	r3, r3, #1
}
  4018b0:	4618      	mov	r0, r3
  4018b2:	bd80      	pop	{r7, pc}
  4018b4:	00401889 	.word	0x00401889

004018b8 <vsync_handler>:
#include "ov2640.h"

static volatile uint32_t g_ul_vsync_flag = false;

void vsync_handler(uint32_t ul_id, uint32_t ul_mask)
{
  4018b8:	b480      	push	{r7}
  4018ba:	b083      	sub	sp, #12
  4018bc:	af00      	add	r7, sp, #0
  4018be:	6078      	str	r0, [r7, #4]
  4018c0:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);

	g_ul_vsync_flag = true;
  4018c2:	4b04      	ldr	r3, [pc, #16]	; (4018d4 <vsync_handler+0x1c>)
  4018c4:	2201      	movs	r2, #1
  4018c6:	601a      	str	r2, [r3, #0]
}
<<<<<<< HEAD
  401914:	bf00      	nop
  401916:	370c      	adds	r7, #12
  401918:	46bd      	mov	sp, r7
  40191a:	bc80      	pop	{r7}
  40191c:	4770      	bx	lr
  40191e:	bf00      	nop
  401920:	20000a54 	.word	0x20000a54
=======
  4018c8:	bf00      	nop
  4018ca:	370c      	adds	r7, #12
  4018cc:	46bd      	mov	sp, r7
  4018ce:	bc80      	pop	{r7}
  4018d0:	4770      	bx	lr
  4018d2:	bf00      	nop
  4018d4:	20000a58 	.word	0x20000a58
>>>>>>> parent of 8583d8d... Updated write_image to file

004018d8 <init_vsync_interrupts>:

void init_vsync_interrupts(void)
{
  4018d8:	b590      	push	{r4, r7, lr}
  4018da:	b083      	sub	sp, #12
  4018dc:	af02      	add	r7, sp, #8
	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  4018de:	4b0a      	ldr	r3, [pc, #40]	; (401908 <init_vsync_interrupts+0x30>)
  4018e0:	9300      	str	r3, [sp, #0]
  4018e2:	2301      	movs	r3, #1
  4018e4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4018e8:	210b      	movs	r1, #11
  4018ea:	4808      	ldr	r0, [pc, #32]	; (40190c <init_vsync_interrupts+0x34>)
  4018ec:	4c08      	ldr	r4, [pc, #32]	; (401910 <init_vsync_interrupts+0x38>)
  4018ee:	47a0      	blx	r4
			OV2640_VSYNC_TYPE, vsync_handler);

	/* Enable PIO controller IRQs */
	NVIC_EnableIRQ((IRQn_Type)OV2640_VSYNC_ID);
  4018f0:	200b      	movs	r0, #11
  4018f2:	4b08      	ldr	r3, [pc, #32]	; (401914 <init_vsync_interrupts+0x3c>)
  4018f4:	4798      	blx	r3
	
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  4018f6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  4018fa:	4804      	ldr	r0, [pc, #16]	; (40190c <init_vsync_interrupts+0x34>)
  4018fc:	4b06      	ldr	r3, [pc, #24]	; (401918 <init_vsync_interrupts+0x40>)
  4018fe:	4798      	blx	r3
}
  401900:	bf00      	nop
  401902:	3704      	adds	r7, #4
  401904:	46bd      	mov	sp, r7
  401906:	bd90      	pop	{r4, r7, pc}
  401908:	004018b9 	.word	0x004018b9
  40190c:	400e0e00 	.word	0x400e0e00
  401910:	00400ab1 	.word	0x00400ab1
  401914:	00401709 	.word	0x00401709
  401918:	0040074f 	.word	0x0040074f

0040191c <configure_twi>:

void configure_twi(void)
{
  40191c:	b580      	push	{r7, lr}
  40191e:	b084      	sub	sp, #16
  401920:	af00      	add	r7, sp, #0
	twi_options_t opt;
	
	/* Enable TWI peripheral */
	pmc_enable_periph_clk(ID_BOARD_TWI);
  401922:	2013      	movs	r0, #19
  401924:	4b13      	ldr	r3, [pc, #76]	; (401974 <configure_twi+0x58>)
  401926:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  401928:	4b13      	ldr	r3, [pc, #76]	; (401978 <configure_twi+0x5c>)
  40192a:	4798      	blx	r3
  40192c:	4603      	mov	r3, r0
  40192e:	607b      	str	r3, [r7, #4]
	opt.speed      = TWI_CLK;
  401930:	4b12      	ldr	r3, [pc, #72]	; (40197c <configure_twi+0x60>)
  401932:	60bb      	str	r3, [r7, #8]
	twi_master_init(BOARD_TWI, &opt);
  401934:	1d3b      	adds	r3, r7, #4
  401936:	4619      	mov	r1, r3
  401938:	4811      	ldr	r0, [pc, #68]	; (401980 <configure_twi+0x64>)
  40193a:	4b12      	ldr	r3, [pc, #72]	; (401984 <configure_twi+0x68>)
  40193c:	4798      	blx	r3

	/* Configure TWI interrupts */
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
  40193e:	2013      	movs	r0, #19
  401940:	4b11      	ldr	r3, [pc, #68]	; (401988 <configure_twi+0x6c>)
  401942:	4798      	blx	r3
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
  401944:	2013      	movs	r0, #19
  401946:	4b11      	ldr	r3, [pc, #68]	; (40198c <configure_twi+0x70>)
  401948:	4798      	blx	r3
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
  40194a:	2100      	movs	r1, #0
  40194c:	2013      	movs	r0, #19
  40194e:	4b10      	ldr	r3, [pc, #64]	; (401990 <configure_twi+0x74>)
  401950:	4798      	blx	r3
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
  401952:	2013      	movs	r0, #19
  401954:	4b0f      	ldr	r3, [pc, #60]	; (401994 <configure_twi+0x78>)
  401956:	4798      	blx	r3
	
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
  401958:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40195c:	2003      	movs	r0, #3
  40195e:	4b0e      	ldr	r3, [pc, #56]	; (401998 <configure_twi+0x7c>)
  401960:	4798      	blx	r3
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
  401962:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401966:	2004      	movs	r0, #4
  401968:	4b0b      	ldr	r3, [pc, #44]	; (401998 <configure_twi+0x7c>)
  40196a:	4798      	blx	r3
	
}
  40196c:	bf00      	nop
  40196e:	3710      	adds	r7, #16
  401970:	46bd      	mov	sp, r7
  401972:	bd80      	pop	{r7, pc}
  401974:	00400e1d 	.word	0x00400e1d
  401978:	004018a5 	.word	0x004018a5
  40197c:	00061a80 	.word	0x00061a80
  401980:	40018000 	.word	0x40018000
  401984:	00401029 	.word	0x00401029
  401988:	00401741 	.word	0x00401741
  40198c:	00401785 	.word	0x00401785
  401990:	004017c1 	.word	0x004017c1
  401994:	00401709 	.word	0x00401709
  401998:	004007b1 	.word	0x004007b1

0040199c <pio_capture_init>:



void pio_capture_init(Pio *p_pio, uint32_t ul_id)
{
  40199c:	b580      	push	{r7, lr}
  40199e:	b082      	sub	sp, #8
  4019a0:	af00      	add	r7, sp, #0
  4019a2:	6078      	str	r0, [r7, #4]
  4019a4:	6039      	str	r1, [r7, #0]
	/* Enable peripheral clock */
	pmc_enable_periph_clk(ul_id);
  4019a6:	6838      	ldr	r0, [r7, #0]
  4019a8:	4b1a      	ldr	r3, [pc, #104]	; (401a14 <pio_capture_init+0x78>)
  4019aa:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  4019ac:	687b      	ldr	r3, [r7, #4]
  4019ae:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4019b2:	f023 0201 	bic.w	r2, r3, #1
  4019b6:	687b      	ldr	r3, [r7, #4]
  4019b8:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  4019bc:	687b      	ldr	r3, [r7, #4]
  4019be:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
  4019c2:	f043 0208 	orr.w	r2, r3, #8
  4019c6:	687b      	ldr	r3, [r7, #4]
  4019c8:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  4019cc:	687b      	ldr	r3, [r7, #4]
  4019ce:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4019d2:	f023 0230 	bic.w	r2, r3, #48	; 0x30
  4019d6:	687b      	ldr	r3, [r7, #4]
  4019d8:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  4019dc:	687b      	ldr	r3, [r7, #4]
  4019de:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4019e2:	f043 0220 	orr.w	r2, r3, #32
  4019e6:	687b      	ldr	r3, [r7, #4]
  4019e8:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  4019ec:	687b      	ldr	r3, [r7, #4]
  4019ee:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  4019f2:	f423 7200 	bic.w	r2, r3, #512	; 0x200
  4019f6:	687b      	ldr	r3, [r7, #4]
  4019f8:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  4019fc:	687b      	ldr	r3, [r7, #4]
  4019fe:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
  401a02:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
  401a06:	687b      	ldr	r3, [r7, #4]
  401a08:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150



}
  401a0c:	bf00      	nop
  401a0e:	3708      	adds	r7, #8
  401a10:	46bd      	mov	sp, r7
  401a12:	bd80      	pop	{r7, pc}
  401a14:	00400e1d 	.word	0x00400e1d

00401a18 <pio_capture_to_buffer>:

static uint8_t pio_capture_to_buffer(Pio *p_pio, uint8_t *uc_buf,
uint32_t ul_size)
{
  401a18:	b480      	push	{r7}
  401a1a:	b085      	sub	sp, #20
  401a1c:	af00      	add	r7, sp, #0
  401a1e:	60f8      	str	r0, [r7, #12]
  401a20:	60b9      	str	r1, [r7, #8]
  401a22:	607a      	str	r2, [r7, #4]
	/* Check if the first PDC bank is free */
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  401a24:	68fb      	ldr	r3, [r7, #12]
  401a26:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
  401a2a:	2b00      	cmp	r3, #0
  401a2c:	d112      	bne.n	401a54 <pio_capture_to_buffer+0x3c>
  401a2e:	68fb      	ldr	r3, [r7, #12]
  401a30:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
  401a34:	2b00      	cmp	r3, #0
  401a36:	d10d      	bne.n	401a54 <pio_capture_to_buffer+0x3c>
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  401a38:	68ba      	ldr	r2, [r7, #8]
  401a3a:	68fb      	ldr	r3, [r7, #12]
  401a3c:	f8c3 2168 	str.w	r2, [r3, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  401a40:	68fb      	ldr	r3, [r7, #12]
  401a42:	687a      	ldr	r2, [r7, #4]
  401a44:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  401a48:	68fb      	ldr	r3, [r7, #12]
  401a4a:	2201      	movs	r2, #1
  401a4c:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
		return 1;
  401a50:	2301      	movs	r3, #1
  401a52:	e00f      	b.n	401a74 <pio_capture_to_buffer+0x5c>
		} else if (p_pio->PIO_RNCR == 0) {
  401a54:	68fb      	ldr	r3, [r7, #12]
  401a56:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
  401a5a:	2b00      	cmp	r3, #0
  401a5c:	d109      	bne.n	401a72 <pio_capture_to_buffer+0x5a>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  401a5e:	68ba      	ldr	r2, [r7, #8]
  401a60:	68fb      	ldr	r3, [r7, #12]
  401a62:	f8c3 2178 	str.w	r2, [r3, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  401a66:	68fb      	ldr	r3, [r7, #12]
  401a68:	687a      	ldr	r2, [r7, #4]
  401a6a:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
		return 1;
  401a6e:	2301      	movs	r3, #1
  401a70:	e000      	b.n	401a74 <pio_capture_to_buffer+0x5c>
		} else {
		return 0;
  401a72:	2300      	movs	r3, #0
	}
}
  401a74:	4618      	mov	r0, r3
  401a76:	3714      	adds	r7, #20
  401a78:	46bd      	mov	sp, r7
  401a7a:	bc80      	pop	{r7}
  401a7c:	4770      	bx	lr
	...

00401a80 <init_camera>:


void init_camera(void)
{
  401a80:	b580      	push	{r7, lr}
  401a82:	af00      	add	r7, sp, #0
	
	pmc_enable_pllbck(7, 0x1, 1);
  401a84:	2201      	movs	r2, #1
  401a86:	2101      	movs	r1, #1
  401a88:	2007      	movs	r0, #7
  401a8a:	4b26      	ldr	r3, [pc, #152]	; (401b24 <init_camera+0xa4>)
  401a8c:	4798      	blx	r3
	
	pio_capture_init(OV_DATA_BUS_PIO, OV_DATA_BUS_ID);
  401a8e:	210b      	movs	r1, #11
  401a90:	4825      	ldr	r0, [pc, #148]	; (401b28 <init_camera+0xa8>)
  401a92:	4b26      	ldr	r3, [pc, #152]	; (401b2c <init_camera+0xac>)
  401a94:	4798      	blx	r3
	
	init_vsync_interrupts();
  401a96:	4b26      	ldr	r3, [pc, #152]	; (401b30 <init_camera+0xb0>)
  401a98:	4798      	blx	r3
	
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  401a9a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401a9e:	2011      	movs	r0, #17
  401aa0:	4b24      	ldr	r3, [pc, #144]	; (401b34 <init_camera+0xb4>)
  401aa2:	4798      	blx	r3
	
	/* Init PCK1 to work at 24 Mhz */
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[1] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  401aa4:	4b24      	ldr	r3, [pc, #144]	; (401b38 <init_camera+0xb8>)
  401aa6:	2223      	movs	r2, #35	; 0x23
  401aa8:	645a      	str	r2, [r3, #68]	; 0x44
	PMC->PMC_SCER = PMC_SCER_PCK1;
  401aaa:	4b23      	ldr	r3, [pc, #140]	; (401b38 <init_camera+0xb8>)
  401aac:	f44f 7200 	mov.w	r2, #512	; 0x200
  401ab0:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK1)) {
  401ab2:	bf00      	nop
  401ab4:	4b20      	ldr	r3, [pc, #128]	; (401b38 <init_camera+0xb8>)
  401ab6:	689b      	ldr	r3, [r3, #8]
  401ab8:	f403 7300 	and.w	r3, r3, #512	; 0x200
  401abc:	2b00      	cmp	r3, #0
  401abe:	d0f9      	beq.n	401ab4 <init_camera+0x34>
	}
	
	configure_twi();	
  401ac0:	4b1e      	ldr	r3, [pc, #120]	; (401b3c <init_camera+0xbc>)
  401ac2:	4798      	blx	r3
	
	
	gpio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
  401ac4:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  401ac8:	2014      	movs	r0, #20
  401aca:	4b1a      	ldr	r3, [pc, #104]	; (401b34 <init_camera+0xb4>)
  401acc:	4798      	blx	r3
	gpio_configure_pin(OV_HSYNC_GPIO, OV_HSYNC_FLAGS);
  401ace:	2171      	movs	r1, #113	; 0x71
  401ad0:	2010      	movs	r0, #16
  401ad2:	4b18      	ldr	r3, [pc, #96]	; (401b34 <init_camera+0xb4>)
  401ad4:	4798      	blx	r3
	gpio_configure_pin(OV_VSYNC_GPIO, OV_VSYNC_FLAGS);
  401ad6:	2171      	movs	r1, #113	; 0x71
  401ad8:	200f      	movs	r0, #15
  401ada:	4b16      	ldr	r3, [pc, #88]	; (401b34 <init_camera+0xb4>)
  401adc:	4798      	blx	r3
	
	gpio_configure_pin(OV_DATA_BUS_D0, OV_DATA_BUS_FLAGS);
  401ade:	4918      	ldr	r1, [pc, #96]	; (401b40 <init_camera+0xc0>)
  401ae0:	2018      	movs	r0, #24
  401ae2:	4b14      	ldr	r3, [pc, #80]	; (401b34 <init_camera+0xb4>)
  401ae4:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D1, OV_DATA_BUS_FLAGS);
  401ae6:	4916      	ldr	r1, [pc, #88]	; (401b40 <init_camera+0xc0>)
  401ae8:	2019      	movs	r0, #25
  401aea:	4b12      	ldr	r3, [pc, #72]	; (401b34 <init_camera+0xb4>)
  401aec:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  401aee:	4914      	ldr	r1, [pc, #80]	; (401b40 <init_camera+0xc0>)
  401af0:	201a      	movs	r0, #26
  401af2:	4b10      	ldr	r3, [pc, #64]	; (401b34 <init_camera+0xb4>)
  401af4:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  401af6:	4912      	ldr	r1, [pc, #72]	; (401b40 <init_camera+0xc0>)
  401af8:	201b      	movs	r0, #27
  401afa:	4b0e      	ldr	r3, [pc, #56]	; (401b34 <init_camera+0xb4>)
  401afc:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  401afe:	4910      	ldr	r1, [pc, #64]	; (401b40 <init_camera+0xc0>)
  401b00:	201c      	movs	r0, #28
  401b02:	4b0c      	ldr	r3, [pc, #48]	; (401b34 <init_camera+0xb4>)
  401b04:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  401b06:	490e      	ldr	r1, [pc, #56]	; (401b40 <init_camera+0xc0>)
  401b08:	201d      	movs	r0, #29
  401b0a:	4b0a      	ldr	r3, [pc, #40]	; (401b34 <init_camera+0xb4>)
  401b0c:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  401b0e:	490c      	ldr	r1, [pc, #48]	; (401b40 <init_camera+0xc0>)
  401b10:	201e      	movs	r0, #30
  401b12:	4b08      	ldr	r3, [pc, #32]	; (401b34 <init_camera+0xb4>)
  401b14:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  401b16:	490a      	ldr	r1, [pc, #40]	; (401b40 <init_camera+0xc0>)
  401b18:	201f      	movs	r0, #31
  401b1a:	4b06      	ldr	r3, [pc, #24]	; (401b34 <init_camera+0xb4>)
  401b1c:	4798      	blx	r3


	/* Init PIO capture*/


}
  401b1e:	bf00      	nop
  401b20:	bd80      	pop	{r7, pc}
  401b22:	bf00      	nop
  401b24:	00400d9d 	.word	0x00400d9d
  401b28:	400e0e00 	.word	0x400e0e00
  401b2c:	0040199d 	.word	0x0040199d
  401b30:	004018d9 	.word	0x004018d9
  401b34:	004007b1 	.word	0x004007b1
  401b38:	400e0400 	.word	0x400e0400
  401b3c:	0040191d 	.word	0x0040191d
  401b40:	28000001 	.word	0x28000001

00401b44 <configure_camera>:

void configure_camera(void)
{
  401b44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401b48:	af00      	add	r7, sp, #0
	/* ov7740 Initialization */
	while (ov_init(BOARD_TWI) == 1) {
  401b4a:	bf00      	nop
  401b4c:	482c      	ldr	r0, [pc, #176]	; (401c00 <configure_camera+0xbc>)
  401b4e:	4b2d      	ldr	r3, [pc, #180]	; (401c04 <configure_camera+0xc0>)
  401b50:	4798      	blx	r3
  401b52:	4603      	mov	r3, r0
  401b54:	2b01      	cmp	r3, #1
  401b56:	d0f9      	beq.n	401b4c <configure_camera+0x8>
	}

	/* ov7740 configuration */
	ov_configure(BOARD_TWI, JPEG_INIT);
  401b58:	2100      	movs	r1, #0
  401b5a:	4829      	ldr	r0, [pc, #164]	; (401c00 <configure_camera+0xbc>)
  401b5c:	4b2a      	ldr	r3, [pc, #168]	; (401c08 <configure_camera+0xc4>)
  401b5e:	4798      	blx	r3
	ov_configure(BOARD_TWI, YUV422);
  401b60:	2101      	movs	r1, #1
  401b62:	4827      	ldr	r0, [pc, #156]	; (401c00 <configure_camera+0xbc>)
  401b64:	4b28      	ldr	r3, [pc, #160]	; (401c08 <configure_camera+0xc4>)
  401b66:	4798      	blx	r3
	ov_configure(BOARD_TWI, JPEG);
  401b68:	2102      	movs	r1, #2
  401b6a:	4825      	ldr	r0, [pc, #148]	; (401c00 <configure_camera+0xbc>)
  401b6c:	4b26      	ldr	r3, [pc, #152]	; (401c08 <configure_camera+0xc4>)
  401b6e:	4798      	blx	r3
	ov_configure(BOARD_TWI, JPEG_640x480);
  401b70:	2104      	movs	r1, #4
  401b72:	4823      	ldr	r0, [pc, #140]	; (401c00 <configure_camera+0xbc>)
  401b74:	4b24      	ldr	r3, [pc, #144]	; (401c08 <configure_camera+0xc4>)
  401b76:	4798      	blx	r3

	/* Wait 3 seconds to let the image sensor to adapt to environment */
	delay_ms(3000);
  401b78:	4b24      	ldr	r3, [pc, #144]	; (401c0c <configure_camera+0xc8>)
  401b7a:	4798      	blx	r3
  401b7c:	4603      	mov	r3, r0
  401b7e:	4619      	mov	r1, r3
  401b80:	f04f 0200 	mov.w	r2, #0
  401b84:	460b      	mov	r3, r1
  401b86:	4614      	mov	r4, r2
  401b88:	18db      	adds	r3, r3, r3
  401b8a:	eb44 0404 	adc.w	r4, r4, r4
  401b8e:	185b      	adds	r3, r3, r1
  401b90:	eb44 0402 	adc.w	r4, r4, r2
  401b94:	ea4f 1b04 	mov.w	fp, r4, lsl #4
  401b98:	ea4b 7b13 	orr.w	fp, fp, r3, lsr #28
  401b9c:	ea4f 1a03 	mov.w	sl, r3, lsl #4
  401ba0:	4653      	mov	r3, sl
  401ba2:	465c      	mov	r4, fp
  401ba4:	1a5b      	subs	r3, r3, r1
  401ba6:	eb64 0402 	sbc.w	r4, r4, r2
  401baa:	ea4f 09c4 	mov.w	r9, r4, lsl #3
  401bae:	ea49 7953 	orr.w	r9, r9, r3, lsr #29
  401bb2:	ea4f 08c3 	mov.w	r8, r3, lsl #3
  401bb6:	4643      	mov	r3, r8
  401bb8:	464c      	mov	r4, r9
  401bba:	1a5b      	subs	r3, r3, r1
  401bbc:	eb64 0402 	sbc.w	r4, r4, r2
  401bc0:	00e6      	lsls	r6, r4, #3
  401bc2:	ea46 7653 	orr.w	r6, r6, r3, lsr #29
  401bc6:	00dd      	lsls	r5, r3, #3
  401bc8:	462b      	mov	r3, r5
  401bca:	4634      	mov	r4, r6
  401bcc:	4619      	mov	r1, r3
  401bce:	4622      	mov	r2, r4
  401bd0:	f243 63af 	movw	r3, #13999	; 0x36af
  401bd4:	f04f 0400 	mov.w	r4, #0
  401bd8:	18cd      	adds	r5, r1, r3
  401bda:	eb42 0604 	adc.w	r6, r2, r4
  401bde:	4628      	mov	r0, r5
  401be0:	4631      	mov	r1, r6
  401be2:	4c0b      	ldr	r4, [pc, #44]	; (401c10 <configure_camera+0xcc>)
  401be4:	f243 62b0 	movw	r2, #14000	; 0x36b0
  401be8:	f04f 0300 	mov.w	r3, #0
  401bec:	47a0      	blx	r4
  401bee:	4603      	mov	r3, r0
  401bf0:	460c      	mov	r4, r1
  401bf2:	4618      	mov	r0, r3
  401bf4:	4b07      	ldr	r3, [pc, #28]	; (401c14 <configure_camera+0xd0>)
  401bf6:	4798      	blx	r3
}
<<<<<<< HEAD
  401c44:	bf00      	nop
  401c46:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c4a:	bf00      	nop
  401c4c:	40018000 	.word	0x40018000
  401c50:	004020f1 	.word	0x004020f1
  401c54:	0040217d 	.word	0x0040217d
  401c58:	004018f1 	.word	0x004018f1
  401c5c:	0040361d 	.word	0x0040361d
  401c60:	20000001 	.word	0x20000001
=======
  401bf8:	bf00      	nop
  401bfa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bfe:	bf00      	nop
  401c00:	40018000 	.word	0x40018000
  401c04:	004020a5 	.word	0x004020a5
  401c08:	00402131 	.word	0x00402131
  401c0c:	004018a5 	.word	0x004018a5
  401c10:	00403431 	.word	0x00403431
  401c14:	20000001 	.word	0x20000001
>>>>>>> parent of 8583d8d... Updated write_image to file

00401c18 <start_capture>:


uint8_t start_capture(void)
{
  401c18:	b580      	push	{r7, lr}
  401c1a:	b082      	sub	sp, #8
  401c1c:	af00      	add	r7, sp, #0

	/* Enable vsync interrupt*/
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  401c1e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  401c22:	4818      	ldr	r0, [pc, #96]	; (401c84 <start_capture+0x6c>)
  401c24:	4b18      	ldr	r3, [pc, #96]	; (401c88 <start_capture+0x70>)
  401c26:	4798      	blx	r3

	/* Capture acquisition will start on rising edge of Vsync signal.
	 * So wait g_vsync_flag = 1 before start process
	 */
	while (!g_ul_vsync_flag) {
  401c28:	bf00      	nop
  401c2a:	4b18      	ldr	r3, [pc, #96]	; (401c8c <start_capture+0x74>)
  401c2c:	681b      	ldr	r3, [r3, #0]
  401c2e:	2b00      	cmp	r3, #0
  401c30:	d0fb      	beq.n	401c2a <start_capture+0x12>
	}

	/* Disable vsync interrupt*/
	pio_disable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  401c32:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  401c36:	4813      	ldr	r0, [pc, #76]	; (401c84 <start_capture+0x6c>)
  401c38:	4b15      	ldr	r3, [pc, #84]	; (401c90 <start_capture+0x78>)
  401c3a:	4798      	blx	r3

	/* Enable pio capture*/
	pio_capture_enable(OV_DATA_BUS_PIO);
  401c3c:	4811      	ldr	r0, [pc, #68]	; (401c84 <start_capture+0x6c>)
  401c3e:	4b15      	ldr	r3, [pc, #84]	; (401c94 <start_capture+0x7c>)
  401c40:	4798      	blx	r3

	/* Capture data and send it to external SRAM memory thanks to PDC
	 * feature */
	pio_capture_to_buffer(OV_DATA_BUS_PIO, image_buffer,
  401c42:	f243 02d4 	movw	r2, #12500	; 0x30d4
  401c46:	4914      	ldr	r1, [pc, #80]	; (401c98 <start_capture+0x80>)
  401c48:	480e      	ldr	r0, [pc, #56]	; (401c84 <start_capture+0x6c>)
  401c4a:	4b14      	ldr	r3, [pc, #80]	; (401c9c <start_capture+0x84>)
  401c4c:	4798      	blx	r3
			IMAGE_MAX >> 2);


	/* Wait end of capture*/
	while (!((OV_DATA_BUS_PIO->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  401c4e:	bf00      	nop
  401c50:	4b0c      	ldr	r3, [pc, #48]	; (401c84 <start_capture+0x6c>)
  401c52:	f8d3 3160 	ldr.w	r3, [r3, #352]	; 0x160
  401c56:	f003 0308 	and.w	r3, r3, #8
  401c5a:	2b08      	cmp	r3, #8
  401c5c:	d1f8      	bne.n	401c50 <start_capture+0x38>
			PIO_PCIMR_RXBUFF)) {
	}

	/* Disable pio capture*/
	pio_capture_disable(OV_DATA_BUS_PIO);
  401c5e:	4809      	ldr	r0, [pc, #36]	; (401c84 <start_capture+0x6c>)
  401c60:	4b0f      	ldr	r3, [pc, #60]	; (401ca0 <start_capture+0x88>)
  401c62:	4798      	blx	r3
	
				
				
	vsync_flag = false;
  401c64:	4b0f      	ldr	r3, [pc, #60]	; (401ca4 <start_capture+0x8c>)
  401c66:	2200      	movs	r2, #0
  401c68:	601a      	str	r2, [r3, #0]

	/* Reset vsync flag*/
	g_ul_vsync_flag = false;
  401c6a:	4b08      	ldr	r3, [pc, #32]	; (401c8c <start_capture+0x74>)
  401c6c:	2200      	movs	r2, #0
  401c6e:	601a      	str	r2, [r3, #0]
	
	uint8_t val = find_image_len();
  401c70:	4b0d      	ldr	r3, [pc, #52]	; (401ca8 <start_capture+0x90>)
  401c72:	4798      	blx	r3
  401c74:	4603      	mov	r3, r0
  401c76:	71fb      	strb	r3, [r7, #7]
	return val;
  401c78:	79fb      	ldrb	r3, [r7, #7]
}
<<<<<<< HEAD
  401cc6:	4618      	mov	r0, r3
  401cc8:	3708      	adds	r7, #8
  401cca:	46bd      	mov	sp, r7
  401ccc:	bd80      	pop	{r7, pc}
  401cce:	bf00      	nop
  401cd0:	400e0e00 	.word	0x400e0e00
  401cd4:	0040074f 	.word	0x0040074f
  401cd8:	20000a54 	.word	0x20000a54
  401cdc:	00400769 	.word	0x00400769
  401ce0:	00400985 	.word	0x00400985
  401ce4:	20000ac4 	.word	0x20000ac4
  401ce8:	00401a65 	.word	0x00401a65
  401cec:	004009b1 	.word	0x004009b1
  401cf0:	20000abc 	.word	0x20000abc
  401cf4:	00401cf9 	.word	0x00401cf9

00401cf8 <find_image_len>:
=======
  401c7a:	4618      	mov	r0, r3
  401c7c:	3708      	adds	r7, #8
  401c7e:	46bd      	mov	sp, r7
  401c80:	bd80      	pop	{r7, pc}
  401c82:	bf00      	nop
  401c84:	400e0e00 	.word	0x400e0e00
  401c88:	0040074f 	.word	0x0040074f
  401c8c:	20000a58 	.word	0x20000a58
  401c90:	00400769 	.word	0x00400769
  401c94:	00400985 	.word	0x00400985
  401c98:	20000ac4 	.word	0x20000ac4
  401c9c:	00401a19 	.word	0x00401a19
  401ca0:	004009b1 	.word	0x004009b1
  401ca4:	20000abc 	.word	0x20000abc
  401ca8:	00401cad 	.word	0x00401cad

00401cac <find_image_len>:
>>>>>>> parent of 8583d8d... Updated write_image to file


uint8_t find_image_len(void){
  401cac:	b480      	push	{r7}
  401cae:	b083      	sub	sp, #12
  401cb0:	af00      	add	r7, sp, #0
		uint8_t start_exists = 0;
  401cb2:	2300      	movs	r3, #0
  401cb4:	71fb      	strb	r3, [r7, #7]
		uint32_t arrSize = 0;
  401cb6:	2300      	movs	r3, #0
  401cb8:	603b      	str	r3, [r7, #0]
		start_of_image = 0;
  401cba:	4b21      	ldr	r3, [pc, #132]	; (401d40 <find_image_len+0x94>)
  401cbc:	2200      	movs	r2, #0
  401cbe:	601a      	str	r2, [r3, #0]
		end_of_image = 0;
  401cc0:	4b20      	ldr	r3, [pc, #128]	; (401d44 <find_image_len+0x98>)
  401cc2:	2200      	movs	r2, #0
  401cc4:	601a      	str	r2, [r3, #0]
		while( arrSize+1 < IMAGE_MAX){
  401cc6:	e028      	b.n	401d1a <find_image_len+0x6e>
			if(image_buffer[arrSize] == 0xff && image_buffer[arrSize+1] == 0xd8){
  401cc8:	4a1f      	ldr	r2, [pc, #124]	; (401d48 <find_image_len+0x9c>)
  401cca:	683b      	ldr	r3, [r7, #0]
  401ccc:	4413      	add	r3, r2
  401cce:	781b      	ldrb	r3, [r3, #0]
  401cd0:	2bff      	cmp	r3, #255	; 0xff
  401cd2:	d10a      	bne.n	401cea <find_image_len+0x3e>
  401cd4:	683b      	ldr	r3, [r7, #0]
  401cd6:	3301      	adds	r3, #1
  401cd8:	4a1b      	ldr	r2, [pc, #108]	; (401d48 <find_image_len+0x9c>)
  401cda:	5cd3      	ldrb	r3, [r2, r3]
  401cdc:	2bd8      	cmp	r3, #216	; 0xd8
  401cde:	d104      	bne.n	401cea <find_image_len+0x3e>
				start_of_image = arrSize;
  401ce0:	4a17      	ldr	r2, [pc, #92]	; (401d40 <find_image_len+0x94>)
  401ce2:	683b      	ldr	r3, [r7, #0]
  401ce4:	6013      	str	r3, [r2, #0]
				start_exists = 1;
  401ce6:	2301      	movs	r3, #1
  401ce8:	71fb      	strb	r3, [r7, #7]
			}
			if(image_buffer[arrSize] == 0xff && image_buffer[arrSize+1] == 0xd9 && start_exists == 1){
  401cea:	4a17      	ldr	r2, [pc, #92]	; (401d48 <find_image_len+0x9c>)
  401cec:	683b      	ldr	r3, [r7, #0]
  401cee:	4413      	add	r3, r2
  401cf0:	781b      	ldrb	r3, [r3, #0]
  401cf2:	2bff      	cmp	r3, #255	; 0xff
  401cf4:	d10e      	bne.n	401d14 <find_image_len+0x68>
  401cf6:	683b      	ldr	r3, [r7, #0]
  401cf8:	3301      	adds	r3, #1
  401cfa:	4a13      	ldr	r2, [pc, #76]	; (401d48 <find_image_len+0x9c>)
  401cfc:	5cd3      	ldrb	r3, [r2, r3]
  401cfe:	2bd9      	cmp	r3, #217	; 0xd9
  401d00:	d108      	bne.n	401d14 <find_image_len+0x68>
  401d02:	79fb      	ldrb	r3, [r7, #7]
  401d04:	2b01      	cmp	r3, #1
  401d06:	d105      	bne.n	401d14 <find_image_len+0x68>
				end_of_image = arrSize+2;
  401d08:	683b      	ldr	r3, [r7, #0]
  401d0a:	3302      	adds	r3, #2
  401d0c:	4a0d      	ldr	r2, [pc, #52]	; (401d44 <find_image_len+0x98>)
  401d0e:	6013      	str	r3, [r2, #0]
				return 1;
  401d10:	2301      	movs	r3, #1
  401d12:	e00f      	b.n	401d34 <find_image_len+0x88>
			}
			arrSize = arrSize + 1;
  401d14:	683b      	ldr	r3, [r7, #0]
  401d16:	3301      	adds	r3, #1
  401d18:	603b      	str	r3, [r7, #0]
		while( arrSize+1 < IMAGE_MAX){
  401d1a:	683b      	ldr	r3, [r7, #0]
  401d1c:	3301      	adds	r3, #1
  401d1e:	f24c 324f 	movw	r2, #49999	; 0xc34f
  401d22:	4293      	cmp	r3, r2
  401d24:	d9d0      	bls.n	401cc8 <find_image_len+0x1c>
		}
		start_of_image = 0;
  401d26:	4b06      	ldr	r3, [pc, #24]	; (401d40 <find_image_len+0x94>)
  401d28:	2200      	movs	r2, #0
  401d2a:	601a      	str	r2, [r3, #0]
		end_of_image = 0;
  401d2c:	4b05      	ldr	r3, [pc, #20]	; (401d44 <find_image_len+0x98>)
  401d2e:	2200      	movs	r2, #0
  401d30:	601a      	str	r2, [r3, #0]
		
		return 0;
  401d32:	2300      	movs	r3, #0
}
<<<<<<< HEAD
  401d80:	4618      	mov	r0, r3
  401d82:	370c      	adds	r7, #12
  401d84:	46bd      	mov	sp, r7
  401d86:	bc80      	pop	{r7}
  401d88:	4770      	bx	lr
  401d8a:	bf00      	nop
  401d8c:	20000ab8 	.word	0x20000ab8
  401d90:	20000ac0 	.word	0x20000ac0
  401d94:	20000ac4 	.word	0x20000ac4

00401d98 <osc_get_rate>:
=======
  401d34:	4618      	mov	r0, r3
  401d36:	370c      	adds	r7, #12
  401d38:	46bd      	mov	sp, r7
  401d3a:	bc80      	pop	{r7}
  401d3c:	4770      	bx	lr
  401d3e:	bf00      	nop
  401d40:	20000ab8 	.word	0x20000ab8
  401d44:	20000ac0 	.word	0x20000ac0
  401d48:	20000ac4 	.word	0x20000ac4

00401d4c <osc_get_rate>:
>>>>>>> parent of 8583d8d... Updated write_image to file
{
  401d4c:	b480      	push	{r7}
  401d4e:	b083      	sub	sp, #12
  401d50:	af00      	add	r7, sp, #0
  401d52:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  401d54:	687b      	ldr	r3, [r7, #4]
  401d56:	2b07      	cmp	r3, #7
  401d58:	d825      	bhi.n	401da6 <osc_get_rate+0x5a>
  401d5a:	a201      	add	r2, pc, #4	; (adr r2, 401d60 <osc_get_rate+0x14>)
  401d5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401d60:	00401d81 	.word	0x00401d81
  401d64:	00401d87 	.word	0x00401d87
  401d68:	00401d8d 	.word	0x00401d8d
  401d6c:	00401d93 	.word	0x00401d93
  401d70:	00401d97 	.word	0x00401d97
  401d74:	00401d9b 	.word	0x00401d9b
  401d78:	00401d9f 	.word	0x00401d9f
  401d7c:	00401da3 	.word	0x00401da3
		return OSC_SLCK_32K_RC_HZ;
  401d80:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  401d84:	e010      	b.n	401da8 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  401d86:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401d8a:	e00d      	b.n	401da8 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  401d8c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401d90:	e00a      	b.n	401da8 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  401d92:	4b08      	ldr	r3, [pc, #32]	; (401db4 <osc_get_rate+0x68>)
  401d94:	e008      	b.n	401da8 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  401d96:	4b08      	ldr	r3, [pc, #32]	; (401db8 <osc_get_rate+0x6c>)
  401d98:	e006      	b.n	401da8 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  401d9a:	4b08      	ldr	r3, [pc, #32]	; (401dbc <osc_get_rate+0x70>)
  401d9c:	e004      	b.n	401da8 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  401d9e:	4b07      	ldr	r3, [pc, #28]	; (401dbc <osc_get_rate+0x70>)
  401da0:	e002      	b.n	401da8 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  401da2:	4b06      	ldr	r3, [pc, #24]	; (401dbc <osc_get_rate+0x70>)
  401da4:	e000      	b.n	401da8 <osc_get_rate+0x5c>
	return 0;
  401da6:	2300      	movs	r3, #0
}
  401da8:	4618      	mov	r0, r3
  401daa:	370c      	adds	r7, #12
  401dac:	46bd      	mov	sp, r7
  401dae:	bc80      	pop	{r7}
  401db0:	4770      	bx	lr
  401db2:	bf00      	nop
  401db4:	003d0900 	.word	0x003d0900
  401db8:	007a1200 	.word	0x007a1200
  401dbc:	00b71b00 	.word	0x00b71b00

00401dc0 <sysclk_get_main_hz>:
{
  401dc0:	b580      	push	{r7, lr}
  401dc2:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  401dc4:	2006      	movs	r0, #6
  401dc6:	4b04      	ldr	r3, [pc, #16]	; (401dd8 <sysclk_get_main_hz+0x18>)
  401dc8:	4798      	blx	r3
  401dca:	4602      	mov	r2, r0
  401dcc:	4613      	mov	r3, r2
  401dce:	009b      	lsls	r3, r3, #2
  401dd0:	4413      	add	r3, r2
  401dd2:	009b      	lsls	r3, r3, #2
}
  401dd4:	4618      	mov	r0, r3
  401dd6:	bd80      	pop	{r7, pc}
  401dd8:	00401d4d 	.word	0x00401d4d

00401ddc <sysclk_get_cpu_hz>:
{
  401ddc:	b580      	push	{r7, lr}
  401dde:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  401de0:	4b02      	ldr	r3, [pc, #8]	; (401dec <sysclk_get_cpu_hz+0x10>)
  401de2:	4798      	blx	r3
  401de4:	4603      	mov	r3, r0
  401de6:	085b      	lsrs	r3, r3, #1
}
  401de8:	4618      	mov	r0, r3
  401dea:	bd80      	pop	{r7, pc}
  401dec:	00401dc1 	.word	0x00401dc1

00401df0 <ov_id>:
 *
 * \param p_twi TWI interface.
 * \return PID and VER.
 */
static uint32_t ov_id(Twi* const p_twi)
{
  401df0:	b580      	push	{r7, lr}
  401df2:	b08e      	sub	sp, #56	; 0x38
  401df4:	af00      	add	r7, sp, #0
  401df6:	6078      	str	r0, [r7, #4]
	twi_packet_t packet_pid;
	twi_packet_t packet_ver;
	uint32_t ul_id = 0;
  401df8:	2300      	movs	r3, #0
  401dfa:	60fb      	str	r3, [r7, #12]
	uint32_t ul_ver = 0;
  401dfc:	2300      	movs	r3, #0
  401dfe:	60bb      	str	r3, [r7, #8]

	/* OV_PID */
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  401e00:	2330      	movs	r3, #48	; 0x30
  401e02:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	packet_pid.addr[0] = OV2640_PIDH;
  401e06:	230a      	movs	r3, #10
  401e08:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	packet_pid.addr_length = 1;
  401e0c:	2301      	movs	r3, #1
  401e0e:	62bb      	str	r3, [r7, #40]	; 0x28
	packet_pid.buffer = &ul_id;
  401e10:	f107 030c 	add.w	r3, r7, #12
  401e14:	62fb      	str	r3, [r7, #44]	; 0x2c
	packet_pid.length = 1;
  401e16:	2301      	movs	r3, #1
  401e18:	633b      	str	r3, [r7, #48]	; 0x30

	ov_read_reg(p_twi, &packet_pid);
  401e1a:	f107 0324 	add.w	r3, r7, #36	; 0x24
  401e1e:	4619      	mov	r1, r3
  401e20:	6878      	ldr	r0, [r7, #4]
  401e22:	4b0e      	ldr	r3, [pc, #56]	; (401e5c <ov_id+0x6c>)
  401e24:	4798      	blx	r3

	/* OV_VER */
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  401e26:	2330      	movs	r3, #48	; 0x30
  401e28:	f887 3020 	strb.w	r3, [r7, #32]
	packet_ver.addr[0] = OV2640_PIDL;
  401e2c:	230b      	movs	r3, #11
  401e2e:	743b      	strb	r3, [r7, #16]
	packet_ver.addr_length = 1;
  401e30:	2301      	movs	r3, #1
  401e32:	617b      	str	r3, [r7, #20]
	packet_ver.buffer = &ul_ver;
  401e34:	f107 0308 	add.w	r3, r7, #8
  401e38:	61bb      	str	r3, [r7, #24]
	packet_ver.length = 1;
  401e3a:	2301      	movs	r3, #1
  401e3c:	61fb      	str	r3, [r7, #28]

	ov_read_reg(p_twi, &packet_ver);
  401e3e:	f107 0310 	add.w	r3, r7, #16
  401e42:	4619      	mov	r1, r3
  401e44:	6878      	ldr	r0, [r7, #4]
  401e46:	4b05      	ldr	r3, [pc, #20]	; (401e5c <ov_id+0x6c>)
  401e48:	4798      	blx	r3
	return ((uint32_t)(ul_id << 8) | ul_ver);
  401e4a:	68fb      	ldr	r3, [r7, #12]
  401e4c:	021a      	lsls	r2, r3, #8
  401e4e:	68bb      	ldr	r3, [r7, #8]
  401e50:	4313      	orrs	r3, r2
}
  401e52:	4618      	mov	r0, r3
  401e54:	3738      	adds	r7, #56	; 0x38
  401e56:	46bd      	mov	sp, r7
  401e58:	bd80      	pop	{r7, pc}
  401e5a:	bf00      	nop
  401e5c:	00401f89 	.word	0x00401f89

00401e60 <ov_manufacturer>:
 *
 * \param p_twi TWI interface.
 * \return 0 if the sensor is present, 1 otherwise.
 */
static uint32_t ov_manufacturer(Twi* const p_twi)
{
  401e60:	b580      	push	{r7, lr}
  401e62:	b08a      	sub	sp, #40	; 0x28
  401e64:	af00      	add	r7, sp, #0
  401e66:	6078      	str	r0, [r7, #4]
	twi_packet_t twi_packet;
	uint32_t ul_midh = 0;
  401e68:	2300      	movs	r3, #0
  401e6a:	613b      	str	r3, [r7, #16]
	uint32_t ul_midl = 0;
  401e6c:	2300      	movs	r3, #0
  401e6e:	60fb      	str	r3, [r7, #12]

	/* OV_MIDH */
	twi_packet.addr[0] = OV2640_MIDH;
  401e70:	231c      	movs	r3, #28
  401e72:	753b      	strb	r3, [r7, #20]
	twi_packet.addr_length = 1;
  401e74:	2301      	movs	r3, #1
  401e76:	61bb      	str	r3, [r7, #24]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401e78:	2330      	movs	r3, #48	; 0x30
  401e7a:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	twi_packet.buffer = &ul_midh;
  401e7e:	f107 0310 	add.w	r3, r7, #16
  401e82:	61fb      	str	r3, [r7, #28]
	twi_packet.length = 1;
  401e84:	2301      	movs	r3, #1
  401e86:	623b      	str	r3, [r7, #32]

	ov_read_reg(p_twi, &twi_packet);
  401e88:	f107 0314 	add.w	r3, r7, #20
  401e8c:	4619      	mov	r1, r3
  401e8e:	6878      	ldr	r0, [r7, #4]
  401e90:	4b10      	ldr	r3, [pc, #64]	; (401ed4 <ov_manufacturer+0x74>)
  401e92:	4798      	blx	r3

	/* OV_MIDL */
	twi_packet.addr[0] = OV2640_MIDL;
  401e94:	231d      	movs	r3, #29
  401e96:	753b      	strb	r3, [r7, #20]
	twi_packet.addr_length = 1;
  401e98:	2301      	movs	r3, #1
  401e9a:	61bb      	str	r3, [r7, #24]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401e9c:	2330      	movs	r3, #48	; 0x30
  401e9e:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	twi_packet.buffer = &ul_midl;
  401ea2:	f107 030c 	add.w	r3, r7, #12
  401ea6:	61fb      	str	r3, [r7, #28]
	twi_packet.length = 1;
  401ea8:	2301      	movs	r3, #1
  401eaa:	623b      	str	r3, [r7, #32]

	ov_read_reg(p_twi, &twi_packet);
  401eac:	f107 0314 	add.w	r3, r7, #20
  401eb0:	4619      	mov	r1, r3
  401eb2:	6878      	ldr	r0, [r7, #4]
  401eb4:	4b07      	ldr	r3, [pc, #28]	; (401ed4 <ov_manufacturer+0x74>)
  401eb6:	4798      	blx	r3

	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  401eb8:	693b      	ldr	r3, [r7, #16]
  401eba:	2b7f      	cmp	r3, #127	; 0x7f
  401ebc:	d104      	bne.n	401ec8 <ov_manufacturer+0x68>
  401ebe:	68fb      	ldr	r3, [r7, #12]
  401ec0:	2ba2      	cmp	r3, #162	; 0xa2
  401ec2:	d101      	bne.n	401ec8 <ov_manufacturer+0x68>
		return 0;
  401ec4:	2300      	movs	r3, #0
  401ec6:	e000      	b.n	401eca <ov_manufacturer+0x6a>
	}

	return 1;
  401ec8:	2301      	movs	r3, #1
}
  401eca:	4618      	mov	r0, r3
  401ecc:	3728      	adds	r7, #40	; 0x28
  401ece:	46bd      	mov	sp, r7
  401ed0:	bd80      	pop	{r7, pc}
  401ed2:	bf00      	nop
  401ed4:	00401f89 	.word	0x00401f89

00401ed8 <ov_test_write>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
static uint32_t ov_test_write(Twi* const p_twi)
{
  401ed8:	b580      	push	{r7, lr}
  401eda:	b08a      	sub	sp, #40	; 0x28
  401edc:	af00      	add	r7, sp, #0
  401ede:	6078      	str	r0, [r7, #4]
	twi_packet_t twi_packet;
	uint32_t ul_value = 0;
  401ee0:	2300      	movs	r3, #0
  401ee2:	613b      	str	r3, [r7, #16]
	uint32_t ul_oldvalue = 0;
  401ee4:	2300      	movs	r3, #0
  401ee6:	60fb      	str	r3, [r7, #12]
	uint32_t ul_entervalue = 0;
  401ee8:	2300      	movs	r3, #0
  401eea:	60bb      	str	r3, [r7, #8]

	/* OV_BLUE_GAIN */
	twi_packet.addr[0] = 0x01;
  401eec:	2301      	movs	r3, #1
  401eee:	753b      	strb	r3, [r7, #20]
	twi_packet.addr_length = 1;
  401ef0:	2301      	movs	r3, #1
  401ef2:	61bb      	str	r3, [r7, #24]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  401ef4:	2330      	movs	r3, #48	; 0x30
  401ef6:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	twi_packet.length = 1;
  401efa:	2301      	movs	r3, #1
  401efc:	623b      	str	r3, [r7, #32]

	twi_packet.buffer = &ul_oldvalue;
  401efe:	f107 030c 	add.w	r3, r7, #12
  401f02:	61fb      	str	r3, [r7, #28]
	ov_read_reg(p_twi, &twi_packet);
  401f04:	f107 0314 	add.w	r3, r7, #20
  401f08:	4619      	mov	r1, r3
  401f0a:	6878      	ldr	r0, [r7, #4]
  401f0c:	4b1c      	ldr	r3, [pc, #112]	; (401f80 <ov_test_write+0xa8>)
  401f0e:	4798      	blx	r3

	ul_entervalue = 0xAD;
  401f10:	23ad      	movs	r3, #173	; 0xad
  401f12:	60bb      	str	r3, [r7, #8]
	twi_packet.buffer = &ul_entervalue;
  401f14:	f107 0308 	add.w	r3, r7, #8
  401f18:	61fb      	str	r3, [r7, #28]
	ov_write_reg(p_twi, &twi_packet);
  401f1a:	f107 0314 	add.w	r3, r7, #20
  401f1e:	4619      	mov	r1, r3
  401f20:	6878      	ldr	r0, [r7, #4]
  401f22:	4b18      	ldr	r3, [pc, #96]	; (401f84 <ov_test_write+0xac>)
  401f24:	4798      	blx	r3

	twi_packet.buffer = &ul_value;
  401f26:	f107 0310 	add.w	r3, r7, #16
  401f2a:	61fb      	str	r3, [r7, #28]
	ov_read_reg(p_twi, &twi_packet);
  401f2c:	f107 0314 	add.w	r3, r7, #20
  401f30:	4619      	mov	r1, r3
  401f32:	6878      	ldr	r0, [r7, #4]
  401f34:	4b12      	ldr	r3, [pc, #72]	; (401f80 <ov_test_write+0xa8>)
  401f36:	4798      	blx	r3

	if (ul_value != ul_entervalue) {
  401f38:	693a      	ldr	r2, [r7, #16]
  401f3a:	68bb      	ldr	r3, [r7, #8]
  401f3c:	429a      	cmp	r2, r3
  401f3e:	d001      	beq.n	401f44 <ov_test_write+0x6c>
		return 1;
  401f40:	2301      	movs	r3, #1
  401f42:	e018      	b.n	401f76 <ov_test_write+0x9e>
	}

	/* return old value */
	twi_packet.buffer = &ul_oldvalue;
  401f44:	f107 030c 	add.w	r3, r7, #12
  401f48:	61fb      	str	r3, [r7, #28]
	ov_write_reg(p_twi, &twi_packet);
  401f4a:	f107 0314 	add.w	r3, r7, #20
  401f4e:	4619      	mov	r1, r3
  401f50:	6878      	ldr	r0, [r7, #4]
  401f52:	4b0c      	ldr	r3, [pc, #48]	; (401f84 <ov_test_write+0xac>)
  401f54:	4798      	blx	r3

	twi_packet.buffer = &ul_value;
  401f56:	f107 0310 	add.w	r3, r7, #16
  401f5a:	61fb      	str	r3, [r7, #28]
	ov_read_reg(p_twi, &twi_packet);
  401f5c:	f107 0314 	add.w	r3, r7, #20
  401f60:	4619      	mov	r1, r3
  401f62:	6878      	ldr	r0, [r7, #4]
  401f64:	4b06      	ldr	r3, [pc, #24]	; (401f80 <ov_test_write+0xa8>)
  401f66:	4798      	blx	r3

	if (ul_value != ul_oldvalue) {
  401f68:	693a      	ldr	r2, [r7, #16]
  401f6a:	68fb      	ldr	r3, [r7, #12]
  401f6c:	429a      	cmp	r2, r3
  401f6e:	d001      	beq.n	401f74 <ov_test_write+0x9c>
		return 1;
  401f70:	2301      	movs	r3, #1
  401f72:	e000      	b.n	401f76 <ov_test_write+0x9e>
	}

	return 0;
  401f74:	2300      	movs	r3, #0
}
  401f76:	4618      	mov	r0, r3
  401f78:	3728      	adds	r7, #40	; 0x28
  401f7a:	46bd      	mov	sp, r7
  401f7c:	bd80      	pop	{r7, pc}
  401f7e:	bf00      	nop
  401f80:	00401f89 	.word	0x00401f89
  401f84:	00401fad 	.word	0x00401fad

00401f88 <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  401f88:	b580      	push	{r7, lr}
  401f8a:	b084      	sub	sp, #16
  401f8c:	af00      	add	r7, sp, #0
  401f8e:	6078      	str	r0, [r7, #4]
  401f90:	6039      	str	r1, [r7, #0]
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  401f92:	6839      	ldr	r1, [r7, #0]
  401f94:	6878      	ldr	r0, [r7, #4]
  401f96:	4b04      	ldr	r3, [pc, #16]	; (401fa8 <ov_read_reg+0x20>)
  401f98:	4798      	blx	r3
  401f9a:	60f8      	str	r0, [r7, #12]

	return ul_status;
  401f9c:	68fb      	ldr	r3, [r7, #12]
}
  401f9e:	4618      	mov	r0, r3
  401fa0:	3710      	adds	r7, #16
  401fa2:	46bd      	mov	sp, r7
  401fa4:	bd80      	pop	{r7, pc}
  401fa6:	bf00      	nop
  401fa8:	004011dd 	.word	0x004011dd

00401fac <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  401fac:	b580      	push	{r7, lr}
  401fae:	b084      	sub	sp, #16
  401fb0:	af00      	add	r7, sp, #0
  401fb2:	6078      	str	r0, [r7, #4]
  401fb4:	6039      	str	r1, [r7, #0]
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  401fb6:	6839      	ldr	r1, [r7, #0]
  401fb8:	6878      	ldr	r0, [r7, #4]
  401fba:	4b04      	ldr	r3, [pc, #16]	; (401fcc <ov_write_reg+0x20>)
  401fbc:	4798      	blx	r3
  401fbe:	60f8      	str	r0, [r7, #12]

	return ul_status;
  401fc0:	68fb      	ldr	r3, [r7, #12]
}
  401fc2:	4618      	mov	r0, r3
  401fc4:	3710      	adds	r7, #16
  401fc6:	46bd      	mov	sp, r7
  401fc8:	bd80      	pop	{r7, pc}
  401fca:	bf00      	nop
  401fcc:	004012e9 	.word	0x004012e9

00401fd0 <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  401fd0:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
  401fd4:	b08a      	sub	sp, #40	; 0x28
  401fd6:	af00      	add	r7, sp, #0
  401fd8:	6078      	str	r0, [r7, #4]
  401fda:	6039      	str	r1, [r7, #0]
	uint32_t ul_err;
	uint32_t ul_size = 0;
  401fdc:	2300      	movs	r3, #0
  401fde:	627b      	str	r3, [r7, #36]	; 0x24
	twi_packet_t twi_packet_regs;
	ov_reg *p_next = (ov_reg *)p_reg_list;
  401fe0:	683b      	ldr	r3, [r7, #0]
  401fe2:	623b      	str	r3, [r7, #32]

	while (!((p_next->reg == OV_REG_TERM) &&
  401fe4:	e048      	b.n	402078 <ov_write_regs+0xa8>
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
  401fe6:	6a3b      	ldr	r3, [r7, #32]
  401fe8:	781b      	ldrb	r3, [r3, #0]
  401fea:	2bfe      	cmp	r3, #254	; 0xfe
  401fec:	d126      	bne.n	40203c <ov_write_regs+0x6c>
			delay_ms(5);
  401fee:	4b29      	ldr	r3, [pc, #164]	; (402094 <ov_write_regs+0xc4>)
  401ff0:	4798      	blx	r3
  401ff2:	4603      	mov	r3, r0
  401ff4:	4619      	mov	r1, r3
  401ff6:	f04f 0200 	mov.w	r2, #0
  401ffa:	460b      	mov	r3, r1
  401ffc:	4614      	mov	r4, r2
  401ffe:	00a6      	lsls	r6, r4, #2
  402000:	ea46 7693 	orr.w	r6, r6, r3, lsr #30
  402004:	009d      	lsls	r5, r3, #2
  402006:	462b      	mov	r3, r5
  402008:	4634      	mov	r4, r6
  40200a:	185b      	adds	r3, r3, r1
  40200c:	eb44 0402 	adc.w	r4, r4, r2
  402010:	f243 61af 	movw	r1, #13999	; 0x36af
  402014:	f04f 0200 	mov.w	r2, #0
  402018:	eb13 0b01 	adds.w	fp, r3, r1
  40201c:	eb44 0c02 	adc.w	ip, r4, r2
  402020:	4658      	mov	r0, fp
  402022:	4661      	mov	r1, ip
  402024:	4c1c      	ldr	r4, [pc, #112]	; (402098 <ov_write_regs+0xc8>)
  402026:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40202a:	f04f 0300 	mov.w	r3, #0
  40202e:	47a0      	blx	r4
  402030:	4603      	mov	r3, r0
  402032:	460c      	mov	r4, r1
  402034:	4618      	mov	r0, r3
  402036:	4b19      	ldr	r3, [pc, #100]	; (40209c <ov_write_regs+0xcc>)
  402038:	4798      	blx	r3
  40203a:	e01a      	b.n	402072 <ov_write_regs+0xa2>
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
  40203c:	6a3b      	ldr	r3, [r7, #32]
  40203e:	781b      	ldrb	r3, [r3, #0]
  402040:	723b      	strb	r3, [r7, #8]
			twi_packet_regs.addr_length = 1;
  402042:	2301      	movs	r3, #1
  402044:	60fb      	str	r3, [r7, #12]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  402046:	2330      	movs	r3, #48	; 0x30
  402048:	763b      	strb	r3, [r7, #24]
			twi_packet_regs.length = 1;
  40204a:	2301      	movs	r3, #1
  40204c:	617b      	str	r3, [r7, #20]
			twi_packet_regs.buffer = &(p_next->val);
  40204e:	6a3b      	ldr	r3, [r7, #32]
  402050:	3301      	adds	r3, #1
  402052:	613b      	str	r3, [r7, #16]

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  402054:	f107 0308 	add.w	r3, r7, #8
  402058:	4619      	mov	r1, r3
  40205a:	6878      	ldr	r0, [r7, #4]
  40205c:	4b10      	ldr	r3, [pc, #64]	; (4020a0 <ov_write_regs+0xd0>)
  40205e:	4798      	blx	r3
  402060:	61f8      	str	r0, [r7, #28]
			ul_size++;
  402062:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402064:	3301      	adds	r3, #1
  402066:	627b      	str	r3, [r7, #36]	; 0x24

			if (ul_err == TWI_BUSY) {
  402068:	69fb      	ldr	r3, [r7, #28]
  40206a:	2b08      	cmp	r3, #8
  40206c:	d101      	bne.n	402072 <ov_write_regs+0xa2>
				return ul_err;
  40206e:	69fb      	ldr	r3, [r7, #28]
  402070:	e00b      	b.n	40208a <ov_write_regs+0xba>
			}
		}

		p_next++;
  402072:	6a3b      	ldr	r3, [r7, #32]
  402074:	3302      	adds	r3, #2
  402076:	623b      	str	r3, [r7, #32]
	while (!((p_next->reg == OV_REG_TERM) &&
  402078:	6a3b      	ldr	r3, [r7, #32]
  40207a:	781b      	ldrb	r3, [r3, #0]
  40207c:	2bff      	cmp	r3, #255	; 0xff
  40207e:	d1b2      	bne.n	401fe6 <ov_write_regs+0x16>
			(p_next->val == OV_VAL_TERM))) {
  402080:	6a3b      	ldr	r3, [r7, #32]
  402082:	785b      	ldrb	r3, [r3, #1]
	while (!((p_next->reg == OV_REG_TERM) &&
  402084:	2bff      	cmp	r3, #255	; 0xff
  402086:	d1ae      	bne.n	401fe6 <ov_write_regs+0x16>
	}
	return 0;
  402088:	2300      	movs	r3, #0
}
<<<<<<< HEAD
  4020d6:	4618      	mov	r0, r3
  4020d8:	3728      	adds	r7, #40	; 0x28
  4020da:	46bd      	mov	sp, r7
  4020dc:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
  4020e0:	00401e29 	.word	0x00401e29
  4020e4:	0040361d 	.word	0x0040361d
  4020e8:	20000001 	.word	0x20000001
  4020ec:	00401ff9 	.word	0x00401ff9

004020f0 <ov_init>:
=======
  40208a:	4618      	mov	r0, r3
  40208c:	3728      	adds	r7, #40	; 0x28
  40208e:	46bd      	mov	sp, r7
  402090:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
  402094:	00401ddd 	.word	0x00401ddd
  402098:	00403431 	.word	0x00403431
  40209c:	20000001 	.word	0x20000001
  4020a0:	00401fad 	.word	0x00401fad

004020a4 <ov_init>:
>>>>>>> parent of 8583d8d... Updated write_image to file
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  4020a4:	b580      	push	{r7, lr}
  4020a6:	b08a      	sub	sp, #40	; 0x28
  4020a8:	af00      	add	r7, sp, #0
  4020aa:	6078      	str	r0, [r7, #4]
	const uint8_t cont_reg_val = 1;
  4020ac:	2301      	movs	r3, #1
  4020ae:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	twi_packet_t init_packet = {
  4020b2:	f107 030c 	add.w	r3, r7, #12
  4020b6:	2200      	movs	r2, #0
  4020b8:	601a      	str	r2, [r3, #0]
  4020ba:	605a      	str	r2, [r3, #4]
  4020bc:	609a      	str	r2, [r3, #8]
  4020be:	60da      	str	r2, [r3, #12]
  4020c0:	611a      	str	r2, [r3, #16]
  4020c2:	23ff      	movs	r3, #255	; 0xff
  4020c4:	733b      	strb	r3, [r7, #12]
  4020c6:	2301      	movs	r3, #1
  4020c8:	613b      	str	r3, [r7, #16]
  4020ca:	f107 0323 	add.w	r3, r7, #35	; 0x23
  4020ce:	617b      	str	r3, [r7, #20]
  4020d0:	2301      	movs	r3, #1
  4020d2:	61bb      	str	r3, [r7, #24]
  4020d4:	2330      	movs	r3, #48	; 0x30
  4020d6:	773b      	strb	r3, [r7, #28]
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  4020d8:	f107 030c 	add.w	r3, r7, #12
  4020dc:	4619      	mov	r1, r3
  4020de:	6878      	ldr	r0, [r7, #4]
  4020e0:	4b0f      	ldr	r3, [pc, #60]	; (402120 <ov_init+0x7c>)
  4020e2:	4798      	blx	r3
	
	
	uint32_t ul_id = 0;
  4020e4:	2300      	movs	r3, #0
  4020e6:	627b      	str	r3, [r7, #36]	; 0x24

	ul_id = ov_id( p_twi );
  4020e8:	6878      	ldr	r0, [r7, #4]
  4020ea:	4b0e      	ldr	r3, [pc, #56]	; (402124 <ov_init+0x80>)
  4020ec:	4798      	blx	r3
  4020ee:	6278      	str	r0, [r7, #36]	; 0x24

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  4020f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  4020f2:	0a1b      	lsrs	r3, r3, #8
  4020f4:	b2db      	uxtb	r3, r3
  4020f6:	2b26      	cmp	r3, #38	; 0x26
  4020f8:	d10d      	bne.n	402116 <ov_init+0x72>
		if (ov_manufacturer( p_twi ) == 0) {
  4020fa:	6878      	ldr	r0, [r7, #4]
  4020fc:	4b0a      	ldr	r3, [pc, #40]	; (402128 <ov_init+0x84>)
  4020fe:	4798      	blx	r3
  402100:	4603      	mov	r3, r0
  402102:	2b00      	cmp	r3, #0
  402104:	d107      	bne.n	402116 <ov_init+0x72>
			if (ov_test_write( p_twi ) == 0) {
  402106:	6878      	ldr	r0, [r7, #4]
  402108:	4b08      	ldr	r3, [pc, #32]	; (40212c <ov_init+0x88>)
  40210a:	4798      	blx	r3
  40210c:	4603      	mov	r3, r0
  40210e:	2b00      	cmp	r3, #0
  402110:	d101      	bne.n	402116 <ov_init+0x72>
				return 0;
  402112:	2300      	movs	r3, #0
  402114:	e000      	b.n	402118 <ov_init+0x74>
			}
		}
	}
	
	return 1;
  402116:	2301      	movs	r3, #1
}
  402118:	4618      	mov	r0, r3
  40211a:	3728      	adds	r7, #40	; 0x28
  40211c:	46bd      	mov	sp, r7
  40211e:	bd80      	pop	{r7, pc}
  402120:	00401fad 	.word	0x00401fad
  402124:	00401df1 	.word	0x00401df1
  402128:	00401e61 	.word	0x00401e61
  40212c:	00401ed9 	.word	0x00401ed9

00402130 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  402130:	b580      	push	{r7, lr}
  402132:	b084      	sub	sp, #16
  402134:	af00      	add	r7, sp, #0
  402136:	6078      	str	r0, [r7, #4]
  402138:	460b      	mov	r3, r1
  40213a:	70fb      	strb	r3, [r7, #3]
	const ov_reg *p_regs_conf = NULL;
  40213c:	2300      	movs	r3, #0
  40213e:	60fb      	str	r3, [r7, #12]

	/* Common register initialization */
	switch (format) {
  402140:	78fb      	ldrb	r3, [r7, #3]
  402142:	2b11      	cmp	r3, #17
  402144:	d85c      	bhi.n	402200 <ov_configure+0xd0>
  402146:	a201      	add	r2, pc, #4	; (adr r2, 40214c <ov_configure+0x1c>)
  402148:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40214c:	00402195 	.word	0x00402195
  402150:	0040219b 	.word	0x0040219b
  402154:	004021a1 	.word	0x004021a1
  402158:	004021a7 	.word	0x004021a7
  40215c:	004021ad 	.word	0x004021ad
  402160:	004021b3 	.word	0x004021b3
  402164:	004021b9 	.word	0x004021b9
  402168:	004021bf 	.word	0x004021bf
  40216c:	004021c5 	.word	0x004021c5
  402170:	004021cb 	.word	0x004021cb
  402174:	004021d1 	.word	0x004021d1
  402178:	004021d7 	.word	0x004021d7
  40217c:	004021dd 	.word	0x004021dd
  402180:	004021e3 	.word	0x004021e3
  402184:	004021e9 	.word	0x004021e9
  402188:	004021ef 	.word	0x004021ef
  40218c:	004021f5 	.word	0x004021f5
  402190:	004021fb 	.word	0x004021fb
		
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
  402194:	4b22      	ldr	r3, [pc, #136]	; (402220 <ov_configure+0xf0>)
  402196:	60fb      	str	r3, [r7, #12]
		break;
  402198:	e033      	b.n	402202 <ov_configure+0xd2>
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  40219a:	4b22      	ldr	r3, [pc, #136]	; (402224 <ov_configure+0xf4>)
  40219c:	60fb      	str	r3, [r7, #12]
		break;
  40219e:	e030      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG:
		p_regs_conf = OV2640_JPEG;
  4021a0:	4b21      	ldr	r3, [pc, #132]	; (402228 <ov_configure+0xf8>)
  4021a2:	60fb      	str	r3, [r7, #12]
		break;
  4021a4:	e02d      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  4021a6:	4b21      	ldr	r3, [pc, #132]	; (40222c <ov_configure+0xfc>)
  4021a8:	60fb      	str	r3, [r7, #12]
		break;
  4021aa:	e02a      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  4021ac:	4b20      	ldr	r3, [pc, #128]	; (402230 <ov_configure+0x100>)
  4021ae:	60fb      	str	r3, [r7, #12]
		break;
  4021b0:	e027      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  4021b2:	4b20      	ldr	r3, [pc, #128]	; (402234 <ov_configure+0x104>)
  4021b4:	60fb      	str	r3, [r7, #12]
		break;
  4021b6:	e024      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  4021b8:	4b1f      	ldr	r3, [pc, #124]	; (402238 <ov_configure+0x108>)
  4021ba:	60fb      	str	r3, [r7, #12]
		break;
  4021bc:	e021      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  4021be:	4b1f      	ldr	r3, [pc, #124]	; (40223c <ov_configure+0x10c>)
  4021c0:	60fb      	str	r3, [r7, #12]
		break;
  4021c2:	e01e      	b.n	402202 <ov_configure+0xd2>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  4021c4:	4b1e      	ldr	r3, [pc, #120]	; (402240 <ov_configure+0x110>)
  4021c6:	60fb      	str	r3, [r7, #12]
		break;
  4021c8:	e01b      	b.n	402202 <ov_configure+0xd2>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  4021ca:	4b1e      	ldr	r3, [pc, #120]	; (402244 <ov_configure+0x114>)
  4021cc:	60fb      	str	r3, [r7, #12]
		break;
  4021ce:	e018      	b.n	402202 <ov_configure+0xd2>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  4021d0:	4b1d      	ldr	r3, [pc, #116]	; (402248 <ov_configure+0x118>)
  4021d2:	60fb      	str	r3, [r7, #12]
		break;
  4021d4:	e015      	b.n	402202 <ov_configure+0xd2>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  4021d6:	4b1d      	ldr	r3, [pc, #116]	; (40224c <ov_configure+0x11c>)
  4021d8:	60fb      	str	r3, [r7, #12]
		break;
  4021da:	e012      	b.n	402202 <ov_configure+0xd2>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  4021dc:	4b1c      	ldr	r3, [pc, #112]	; (402250 <ov_configure+0x120>)
  4021de:	60fb      	str	r3, [r7, #12]
		break;
  4021e0:	e00f      	b.n	402202 <ov_configure+0xd2>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  4021e2:	4b1c      	ldr	r3, [pc, #112]	; (402254 <ov_configure+0x124>)
  4021e4:	60fb      	str	r3, [r7, #12]
		break;
  4021e6:	e00c      	b.n	402202 <ov_configure+0xd2>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  4021e8:	4b1b      	ldr	r3, [pc, #108]	; (402258 <ov_configure+0x128>)
  4021ea:	60fb      	str	r3, [r7, #12]
		break;
  4021ec:	e009      	b.n	402202 <ov_configure+0xd2>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  4021ee:	4b1b      	ldr	r3, [pc, #108]	; (40225c <ov_configure+0x12c>)
  4021f0:	60fb      	str	r3, [r7, #12]
		break;
  4021f2:	e006      	b.n	402202 <ov_configure+0xd2>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  4021f4:	4b1a      	ldr	r3, [pc, #104]	; (402260 <ov_configure+0x130>)
  4021f6:	60fb      	str	r3, [r7, #12]
		break;
  4021f8:	e003      	b.n	402202 <ov_configure+0xd2>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  4021fa:	4b1a      	ldr	r3, [pc, #104]	; (402264 <ov_configure+0x134>)
  4021fc:	60fb      	str	r3, [r7, #12]
		break;
  4021fe:	e000      	b.n	402202 <ov_configure+0xd2>

	default:
		break;
  402200:	bf00      	nop
	}

	if (p_regs_conf != NULL) {
  402202:	68fb      	ldr	r3, [r7, #12]
  402204:	2b00      	cmp	r3, #0
  402206:	d005      	beq.n	402214 <ov_configure+0xe4>
		ov_write_regs( p_twi, p_regs_conf );
  402208:	68f9      	ldr	r1, [r7, #12]
  40220a:	6878      	ldr	r0, [r7, #4]
  40220c:	4b16      	ldr	r3, [pc, #88]	; (402268 <ov_configure+0x138>)
  40220e:	4798      	blx	r3
		return 0;
  402210:	2300      	movs	r3, #0
  402212:	e000      	b.n	402216 <ov_configure+0xe6>
	}

	return 1;
  402214:	2301      	movs	r3, #1
}
<<<<<<< HEAD
  402262:	4618      	mov	r0, r3
  402264:	3710      	adds	r7, #16
  402266:	46bd      	mov	sp, r7
  402268:	bd80      	pop	{r7, pc}
  40226a:	bf00      	nop
  40226c:	00408504 	.word	0x00408504
  402270:	00408684 	.word	0x00408684
  402274:	00408698 	.word	0x00408698
  402278:	004086ac 	.word	0x004086ac
  40227c:	004086fc 	.word	0x004086fc
  402280:	00408750 	.word	0x00408750
  402284:	004087a4 	.word	0x004087a4
  402288:	004087f4 	.word	0x004087f4
  40228c:	00408848 	.word	0x00408848
  402290:	0040889c 	.word	0x0040889c
  402294:	0040898c 	.word	0x0040898c
  402298:	00408a7c 	.word	0x00408a7c
  40229c:	00408b6c 	.word	0x00408b6c
  4022a0:	00408c5c 	.word	0x00408c5c
  4022a4:	00408d50 	.word	0x00408d50
  4022a8:	00408e44 	.word	0x00408e44
  4022ac:	00408f38 	.word	0x00408f38
  4022b0:	0040902c 	.word	0x0040902c
  4022b4:	0040201d 	.word	0x0040201d

004022b8 <__NVIC_EnableIRQ>:
=======
  402216:	4618      	mov	r0, r3
  402218:	3710      	adds	r7, #16
  40221a:	46bd      	mov	sp, r7
  40221c:	bd80      	pop	{r7, pc}
  40221e:	bf00      	nop
  402220:	00408364 	.word	0x00408364
  402224:	004084e4 	.word	0x004084e4
  402228:	004084f8 	.word	0x004084f8
  40222c:	0040850c 	.word	0x0040850c
  402230:	0040855c 	.word	0x0040855c
  402234:	004085b0 	.word	0x004085b0
  402238:	00408604 	.word	0x00408604
  40223c:	00408654 	.word	0x00408654
  402240:	004086a8 	.word	0x004086a8
  402244:	004086fc 	.word	0x004086fc
  402248:	004087ec 	.word	0x004087ec
  40224c:	004088dc 	.word	0x004088dc
  402250:	004089cc 	.word	0x004089cc
  402254:	00408abc 	.word	0x00408abc
  402258:	00408bb0 	.word	0x00408bb0
  40225c:	00408ca4 	.word	0x00408ca4
  402260:	00408d98 	.word	0x00408d98
  402264:	00408e8c 	.word	0x00408e8c
  402268:	00401fd1 	.word	0x00401fd1

0040226c <__NVIC_EnableIRQ>:
>>>>>>> parent of 8583d8d... Updated write_image to file
{
  40226c:	b480      	push	{r7}
  40226e:	b083      	sub	sp, #12
  402270:	af00      	add	r7, sp, #0
  402272:	4603      	mov	r3, r0
  402274:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
  402276:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40227a:	2b00      	cmp	r3, #0
  40227c:	db0b      	blt.n	402296 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40227e:	4908      	ldr	r1, [pc, #32]	; (4022a0 <__NVIC_EnableIRQ+0x34>)
  402280:	f997 3007 	ldrsb.w	r3, [r7, #7]
  402284:	095b      	lsrs	r3, r3, #5
  402286:	79fa      	ldrb	r2, [r7, #7]
  402288:	f002 021f 	and.w	r2, r2, #31
  40228c:	2001      	movs	r0, #1
  40228e:	fa00 f202 	lsl.w	r2, r0, r2
  402292:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  402296:	bf00      	nop
  402298:	370c      	adds	r7, #12
  40229a:	46bd      	mov	sp, r7
  40229c:	bc80      	pop	{r7}
  40229e:	4770      	bx	lr
  4022a0:	e000e100 	.word	0xe000e100

004022a4 <osc_get_rate>:
{
  4022a4:	b480      	push	{r7}
  4022a6:	b083      	sub	sp, #12
  4022a8:	af00      	add	r7, sp, #0
  4022aa:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  4022ac:	687b      	ldr	r3, [r7, #4]
  4022ae:	2b07      	cmp	r3, #7
  4022b0:	d825      	bhi.n	4022fe <osc_get_rate+0x5a>
  4022b2:	a201      	add	r2, pc, #4	; (adr r2, 4022b8 <osc_get_rate+0x14>)
  4022b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  4022b8:	004022d9 	.word	0x004022d9
  4022bc:	004022df 	.word	0x004022df
  4022c0:	004022e5 	.word	0x004022e5
  4022c4:	004022eb 	.word	0x004022eb
  4022c8:	004022ef 	.word	0x004022ef
  4022cc:	004022f3 	.word	0x004022f3
  4022d0:	004022f7 	.word	0x004022f7
  4022d4:	004022fb 	.word	0x004022fb
		return OSC_SLCK_32K_RC_HZ;
  4022d8:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  4022dc:	e010      	b.n	402300 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  4022de:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4022e2:	e00d      	b.n	402300 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  4022e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4022e8:	e00a      	b.n	402300 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  4022ea:	4b08      	ldr	r3, [pc, #32]	; (40230c <osc_get_rate+0x68>)
  4022ec:	e008      	b.n	402300 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  4022ee:	4b08      	ldr	r3, [pc, #32]	; (402310 <osc_get_rate+0x6c>)
  4022f0:	e006      	b.n	402300 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  4022f2:	4b08      	ldr	r3, [pc, #32]	; (402314 <osc_get_rate+0x70>)
  4022f4:	e004      	b.n	402300 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  4022f6:	4b07      	ldr	r3, [pc, #28]	; (402314 <osc_get_rate+0x70>)
  4022f8:	e002      	b.n	402300 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  4022fa:	4b06      	ldr	r3, [pc, #24]	; (402314 <osc_get_rate+0x70>)
  4022fc:	e000      	b.n	402300 <osc_get_rate+0x5c>
	return 0;
  4022fe:	2300      	movs	r3, #0
}
  402300:	4618      	mov	r0, r3
  402302:	370c      	adds	r7, #12
  402304:	46bd      	mov	sp, r7
  402306:	bc80      	pop	{r7}
  402308:	4770      	bx	lr
  40230a:	bf00      	nop
  40230c:	003d0900 	.word	0x003d0900
  402310:	007a1200 	.word	0x007a1200
  402314:	00b71b00 	.word	0x00b71b00

00402318 <sysclk_get_main_hz>:
{
  402318:	b580      	push	{r7, lr}
  40231a:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  40231c:	2006      	movs	r0, #6
  40231e:	4b04      	ldr	r3, [pc, #16]	; (402330 <sysclk_get_main_hz+0x18>)
  402320:	4798      	blx	r3
  402322:	4602      	mov	r2, r0
  402324:	4613      	mov	r3, r2
  402326:	009b      	lsls	r3, r3, #2
  402328:	4413      	add	r3, r2
  40232a:	009b      	lsls	r3, r3, #2
}
  40232c:	4618      	mov	r0, r3
  40232e:	bd80      	pop	{r7, pc}
  402330:	004022a5 	.word	0x004022a5

00402334 <sysclk_get_cpu_hz>:
{
  402334:	b580      	push	{r7, lr}
  402336:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  402338:	4b02      	ldr	r3, [pc, #8]	; (402344 <sysclk_get_cpu_hz+0x10>)
  40233a:	4798      	blx	r3
  40233c:	4603      	mov	r3, r0
  40233e:	085b      	lsrs	r3, r3, #1
}
  402340:	4618      	mov	r0, r3
  402342:	bd80      	pop	{r7, pc}
  402344:	00402319 	.word	0x00402319

00402348 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  402348:	b580      	push	{r7, lr}
  40234a:	b082      	sub	sp, #8
  40234c:	af00      	add	r7, sp, #0
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  40234e:	2100      	movs	r1, #0
  402350:	4809      	ldr	r0, [pc, #36]	; (402378 <TC0_Handler+0x30>)
  402352:	4b0a      	ldr	r3, [pc, #40]	; (40237c <TC0_Handler+0x34>)
  402354:	4798      	blx	r3
  402356:	6078      	str	r0, [r7, #4]

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  402358:	687b      	ldr	r3, [r7, #4]
  40235a:	f003 0310 	and.w	r3, r3, #16
  40235e:	2b00      	cmp	r3, #0
  402360:	d006      	beq.n	402370 <TC0_Handler+0x28>
		counts++;
  402362:	4b07      	ldr	r3, [pc, #28]	; (402380 <TC0_Handler+0x38>)
  402364:	781b      	ldrb	r3, [r3, #0]
  402366:	b2db      	uxtb	r3, r3
  402368:	3301      	adds	r3, #1
  40236a:	b2da      	uxtb	r2, r3
  40236c:	4b04      	ldr	r3, [pc, #16]	; (402380 <TC0_Handler+0x38>)
  40236e:	701a      	strb	r2, [r3, #0]
	}
}
<<<<<<< HEAD
  4023bc:	bf00      	nop
  4023be:	3708      	adds	r7, #8
  4023c0:	46bd      	mov	sp, r7
  4023c2:	bd80      	pop	{r7, pc}
  4023c4:	40010000 	.word	0x40010000
  4023c8:	00400f3f 	.word	0x00400f3f
  4023cc:	20000a74 	.word	0x20000a74
=======
  402370:	bf00      	nop
  402372:	3708      	adds	r7, #8
  402374:	46bd      	mov	sp, r7
  402376:	bd80      	pop	{r7, pc}
  402378:	40010000 	.word	0x40010000
  40237c:	00400f3f 	.word	0x00400f3f
  402380:	20000a74 	.word	0x20000a74
>>>>>>> parent of 8583d8d... Updated write_image to file

00402384 <configure_tc>:

void configure_tc(void)
{
  402384:	b590      	push	{r4, r7, lr}
  402386:	b087      	sub	sp, #28
  402388:	af02      	add	r7, sp, #8
	uint32_t ul_div;
	uint32_t ul_tcclks;
	uint32_t ul_sysclk;

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();
  40238a:	4b18      	ldr	r3, [pc, #96]	; (4023ec <configure_tc+0x68>)
  40238c:	4798      	blx	r3
  40238e:	60f8      	str	r0, [r7, #12]

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  402390:	2017      	movs	r0, #23
  402392:	4b17      	ldr	r3, [pc, #92]	; (4023f0 <configure_tc+0x6c>)
  402394:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  402396:	1d39      	adds	r1, r7, #4
  402398:	f107 0208 	add.w	r2, r7, #8
  40239c:	68fb      	ldr	r3, [r7, #12]
  40239e:	9300      	str	r3, [sp, #0]
  4023a0:	460b      	mov	r3, r1
  4023a2:	68f9      	ldr	r1, [r7, #12]
  4023a4:	2001      	movs	r0, #1
  4023a6:	4c13      	ldr	r4, [pc, #76]	; (4023f4 <configure_tc+0x70>)
  4023a8:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  4023aa:	687b      	ldr	r3, [r7, #4]
  4023ac:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  4023b0:	461a      	mov	r2, r3
  4023b2:	2100      	movs	r1, #0
  4023b4:	4810      	ldr	r0, [pc, #64]	; (4023f8 <configure_tc+0x74>)
  4023b6:	4b11      	ldr	r3, [pc, #68]	; (4023fc <configure_tc+0x78>)
  4023b8:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4023ba:	68bb      	ldr	r3, [r7, #8]
  4023bc:	68fa      	ldr	r2, [r7, #12]
  4023be:	fbb2 f3f3 	udiv	r3, r2, r3
  4023c2:	461a      	mov	r2, r3
  4023c4:	2100      	movs	r1, #0
  4023c6:	480c      	ldr	r0, [pc, #48]	; (4023f8 <configure_tc+0x74>)
  4023c8:	4b0d      	ldr	r3, [pc, #52]	; (402400 <configure_tc+0x7c>)
  4023ca:	4798      	blx	r3

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
  4023cc:	2017      	movs	r0, #23
  4023ce:	4b0d      	ldr	r3, [pc, #52]	; (402404 <configure_tc+0x80>)
  4023d0:	4798      	blx	r3
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4023d2:	2210      	movs	r2, #16
  4023d4:	2100      	movs	r1, #0
  4023d6:	4808      	ldr	r0, [pc, #32]	; (4023f8 <configure_tc+0x74>)
  4023d8:	4b0b      	ldr	r3, [pc, #44]	; (402408 <configure_tc+0x84>)
  4023da:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4023dc:	2100      	movs	r1, #0
  4023de:	4806      	ldr	r0, [pc, #24]	; (4023f8 <configure_tc+0x74>)
  4023e0:	4b0a      	ldr	r3, [pc, #40]	; (40240c <configure_tc+0x88>)
  4023e2:	4798      	blx	r3
  4023e4:	bf00      	nop
  4023e6:	3714      	adds	r7, #20
  4023e8:	46bd      	mov	sp, r7
  4023ea:	bd90      	pop	{r4, r7, pc}
  4023ec:	00402335 	.word	0x00402335
  4023f0:	00400e1d 	.word	0x00400e1d
  4023f4:	00400f61 	.word	0x00400f61
  4023f8:	40010000 	.word	0x40010000
  4023fc:	00400e9d 	.word	0x00400e9d
  402400:	00400ef5 	.word	0x00400ef5
  402404:	0040226d 	.word	0x0040226d
  402408:	00400f19 	.word	0x00400f19
  40240c:	00400ed5 	.word	0x00400ed5

00402410 <__NVIC_EnableIRQ>:
{
  402410:	b480      	push	{r7}
  402412:	b083      	sub	sp, #12
  402414:	af00      	add	r7, sp, #0
  402416:	4603      	mov	r3, r0
  402418:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
  40241a:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40241e:	2b00      	cmp	r3, #0
  402420:	db0b      	blt.n	40243a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  402422:	4908      	ldr	r1, [pc, #32]	; (402444 <__NVIC_EnableIRQ+0x34>)
  402424:	f997 3007 	ldrsb.w	r3, [r7, #7]
  402428:	095b      	lsrs	r3, r3, #5
  40242a:	79fa      	ldrb	r2, [r7, #7]
  40242c:	f002 021f 	and.w	r2, r2, #31
  402430:	2001      	movs	r0, #1
  402432:	fa00 f202 	lsl.w	r2, r0, r2
  402436:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  40243a:	bf00      	nop
  40243c:	370c      	adds	r7, #12
  40243e:	46bd      	mov	sp, r7
  402440:	bc80      	pop	{r7}
  402442:	4770      	bx	lr
  402444:	e000e100 	.word	0xe000e100

00402448 <osc_get_rate>:
{
  402448:	b480      	push	{r7}
  40244a:	b083      	sub	sp, #12
  40244c:	af00      	add	r7, sp, #0
  40244e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  402450:	687b      	ldr	r3, [r7, #4]
  402452:	2b07      	cmp	r3, #7
  402454:	d825      	bhi.n	4024a2 <osc_get_rate+0x5a>
  402456:	a201      	add	r2, pc, #4	; (adr r2, 40245c <osc_get_rate+0x14>)
  402458:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40245c:	0040247d 	.word	0x0040247d
  402460:	00402483 	.word	0x00402483
  402464:	00402489 	.word	0x00402489
  402468:	0040248f 	.word	0x0040248f
  40246c:	00402493 	.word	0x00402493
  402470:	00402497 	.word	0x00402497
  402474:	0040249b 	.word	0x0040249b
  402478:	0040249f 	.word	0x0040249f
		return OSC_SLCK_32K_RC_HZ;
  40247c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  402480:	e010      	b.n	4024a4 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  402482:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402486:	e00d      	b.n	4024a4 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  402488:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40248c:	e00a      	b.n	4024a4 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  40248e:	4b08      	ldr	r3, [pc, #32]	; (4024b0 <osc_get_rate+0x68>)
  402490:	e008      	b.n	4024a4 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  402492:	4b08      	ldr	r3, [pc, #32]	; (4024b4 <osc_get_rate+0x6c>)
  402494:	e006      	b.n	4024a4 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  402496:	4b08      	ldr	r3, [pc, #32]	; (4024b8 <osc_get_rate+0x70>)
  402498:	e004      	b.n	4024a4 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  40249a:	4b07      	ldr	r3, [pc, #28]	; (4024b8 <osc_get_rate+0x70>)
  40249c:	e002      	b.n	4024a4 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  40249e:	4b06      	ldr	r3, [pc, #24]	; (4024b8 <osc_get_rate+0x70>)
  4024a0:	e000      	b.n	4024a4 <osc_get_rate+0x5c>
	return 0;
  4024a2:	2300      	movs	r3, #0
}
  4024a4:	4618      	mov	r0, r3
  4024a6:	370c      	adds	r7, #12
  4024a8:	46bd      	mov	sp, r7
  4024aa:	bc80      	pop	{r7}
  4024ac:	4770      	bx	lr
  4024ae:	bf00      	nop
  4024b0:	003d0900 	.word	0x003d0900
  4024b4:	007a1200 	.word	0x007a1200
  4024b8:	00b71b00 	.word	0x00b71b00

004024bc <sysclk_get_main_hz>:
{
  4024bc:	b580      	push	{r7, lr}
  4024be:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  4024c0:	2006      	movs	r0, #6
  4024c2:	4b04      	ldr	r3, [pc, #16]	; (4024d4 <sysclk_get_main_hz+0x18>)
  4024c4:	4798      	blx	r3
  4024c6:	4602      	mov	r2, r0
  4024c8:	4613      	mov	r3, r2
  4024ca:	009b      	lsls	r3, r3, #2
  4024cc:	4413      	add	r3, r2
  4024ce:	009b      	lsls	r3, r3, #2
}
  4024d0:	4618      	mov	r0, r3
  4024d2:	bd80      	pop	{r7, pc}
  4024d4:	00402449 	.word	0x00402449

004024d8 <sysclk_get_cpu_hz>:
{
  4024d8:	b580      	push	{r7, lr}
  4024da:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  4024dc:	4b02      	ldr	r3, [pc, #8]	; (4024e8 <sysclk_get_cpu_hz+0x10>)
  4024de:	4798      	blx	r3
  4024e0:	4603      	mov	r3, r0
  4024e2:	085b      	lsrs	r3, r3, #1
}
  4024e4:	4618      	mov	r0, r3
  4024e6:	bd80      	pop	{r7, pc}
  4024e8:	004024bd 	.word	0x004024bd

004024ec <sysclk_get_peripheral_hz>:
 * \brief Retrieves the current rate in Hz of the peripheral clocks.
 *
 * \return Frequency of the peripheral clocks, in Hz.
 */
static inline uint32_t sysclk_get_peripheral_hz(void)
{
  4024ec:	b580      	push	{r7, lr}
  4024ee:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  4024f0:	4b02      	ldr	r3, [pc, #8]	; (4024fc <sysclk_get_peripheral_hz+0x10>)
  4024f2:	4798      	blx	r3
  4024f4:	4603      	mov	r3, r0
  4024f6:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  4024f8:	4618      	mov	r0, r3
  4024fa:	bd80      	pop	{r7, pc}
  4024fc:	004024bd 	.word	0x004024bd

00402500 <sysclk_enable_peripheral_clock>:
 * \brief Enable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
  402500:	b580      	push	{r7, lr}
  402502:	b082      	sub	sp, #8
  402504:	af00      	add	r7, sp, #0
  402506:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  402508:	6878      	ldr	r0, [r7, #4]
  40250a:	4b03      	ldr	r3, [pc, #12]	; (402518 <sysclk_enable_peripheral_clock+0x18>)
  40250c:	4798      	blx	r3
}
<<<<<<< HEAD
  40255a:	bf00      	nop
  40255c:	3708      	adds	r7, #8
  40255e:	46bd      	mov	sp, r7
  402560:	bd80      	pop	{r7, pc}
  402562:	bf00      	nop
  402564:	00400e1d 	.word	0x00400e1d

00402568 <USART0_Handler>:
volatile uint32_t image_length=0;
volatile uint32_t start_image_transfer = 0;
volatile uint32_t wait_flag = 0;

void wifi_usart_handler(void)
{
  402568:	b580      	push	{r7, lr}
  40256a:	b082      	sub	sp, #8
  40256c:	af00      	add	r7, sp, #0
	uint32_t ul_status;

	/* Read USART status. */
	ul_status = usart_get_status(WIFI_USART);
  40256e:	480b      	ldr	r0, [pc, #44]	; (40259c <USART0_Handler+0x34>)
  402570:	4b0b      	ldr	r3, [pc, #44]	; (4025a0 <USART0_Handler+0x38>)
  402572:	4798      	blx	r3
  402574:	6078      	str	r0, [r7, #4]

	/* Receive buffer is full. */
	if (ul_status & US_CSR_RXBUFF) {
  402576:	687b      	ldr	r3, [r7, #4]
  402578:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  40257c:	2b00      	cmp	r3, #0
  40257e:	d009      	beq.n	402594 <USART0_Handler+0x2c>
		usart_read(WIFI_USART, &received_byte_wifi);
  402580:	4908      	ldr	r1, [pc, #32]	; (4025a4 <USART0_Handler+0x3c>)
  402582:	4806      	ldr	r0, [pc, #24]	; (40259c <USART0_Handler+0x34>)
  402584:	4b08      	ldr	r3, [pc, #32]	; (4025a8 <USART0_Handler+0x40>)
  402586:	4798      	blx	r3
=======
  40250e:	bf00      	nop
  402510:	3708      	adds	r7, #8
  402512:	46bd      	mov	sp, r7
  402514:	bd80      	pop	{r7, pc}
  402516:	bf00      	nop
  402518:	00400e1d 	.word	0x00400e1d

0040251c <wifi_command_response_handler>:
>>>>>>> parent of 8583d8d... Updated write_image to file
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
	}
}
<<<<<<< HEAD
  402594:	bf00      	nop
  402596:	3708      	adds	r7, #8
  402598:	46bd      	mov	sp, r7
  40259a:	bd80      	pop	{r7, pc}
  40259c:	40024000 	.word	0x40024000
  4025a0:	00401621 	.word	0x00401621
  4025a4:	20000a58 	.word	0x20000a58
  4025a8:	004016e5 	.word	0x004016e5
  4025ac:	00402995 	.word	0x00402995

004025b0 <wifi_command_response_handler>:
=======
>>>>>>> parent of 8583d8d... Updated write_image to file

void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask)
{
  40251c:	b580      	push	{r7, lr}
  40251e:	b084      	sub	sp, #16
  402520:	af00      	add	r7, sp, #0
  402522:	6078      	str	r0, [r7, #4]
  402524:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);
	process_data_wifi();
  402526:	4b0d      	ldr	r3, [pc, #52]	; (40255c <wifi_command_response_handler+0x40>)
  402528:	4798      	blx	r3
	wifi_comm_success = true;
  40252a:	4b0d      	ldr	r3, [pc, #52]	; (402560 <wifi_command_response_handler+0x44>)
  40252c:	2201      	movs	r2, #1
  40252e:	601a      	str	r2, [r3, #0]
	for (int jj = 0;jj<1000;jj++) {
  402530:	2300      	movs	r3, #0
  402532:	60fb      	str	r3, [r7, #12]
  402534:	e007      	b.n	402546 <wifi_command_response_handler+0x2a>
		 input_line_wifi[jj] = 0;
  402536:	4a0b      	ldr	r2, [pc, #44]	; (402564 <wifi_command_response_handler+0x48>)
  402538:	68fb      	ldr	r3, [r7, #12]
  40253a:	4413      	add	r3, r2
  40253c:	2200      	movs	r2, #0
  40253e:	701a      	strb	r2, [r3, #0]
	for (int jj = 0;jj<1000;jj++) {
  402540:	68fb      	ldr	r3, [r7, #12]
  402542:	3301      	adds	r3, #1
  402544:	60fb      	str	r3, [r7, #12]
  402546:	68fb      	ldr	r3, [r7, #12]
  402548:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  40254c:	dbf3      	blt.n	402536 <wifi_command_response_handler+0x1a>
	}
	input_pos_wifi = 0;
  40254e:	4b06      	ldr	r3, [pc, #24]	; (402568 <wifi_command_response_handler+0x4c>)
  402550:	2200      	movs	r2, #0
  402552:	601a      	str	r2, [r3, #0]
}
<<<<<<< HEAD
  4025e8:	bf00      	nop
  4025ea:	3710      	adds	r7, #16
  4025ec:	46bd      	mov	sp, r7
  4025ee:	bd80      	pop	{r7, pc}
  4025f0:	004029c5 	.word	0x004029c5
  4025f4:	20000a64 	.word	0x20000a64
  4025f8:	2000ce14 	.word	0x2000ce14
  4025fc:	20000a5c 	.word	0x20000a5c
=======
  402554:	bf00      	nop
  402556:	3710      	adds	r7, #16
  402558:	46bd      	mov	sp, r7
  40255a:	bd80      	pop	{r7, pc}
  40255c:	004028e9 	.word	0x004028e9
  402560:	20000a64 	.word	0x20000a64
  402564:	2000ce14 	.word	0x2000ce14
  402568:	20000a5c 	.word	0x20000a5c
>>>>>>> parent of 8583d8d... Updated write_image to file

0040256c <wifi_web_setup_handler>:

void wifi_web_setup_handler(uint32_t ul_id, uint32_t ul_mask)
{
  40256c:	b480      	push	{r7}
  40256e:	b083      	sub	sp, #12
  402570:	af00      	add	r7, sp, #0
  402572:	6078      	str	r0, [r7, #4]
  402574:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);
	
	wifi_setup_button_flag = true;
  402576:	4b04      	ldr	r3, [pc, #16]	; (402588 <wifi_web_setup_handler+0x1c>)
  402578:	2201      	movs	r2, #1
  40257a:	601a      	str	r2, [r3, #0]
}
<<<<<<< HEAD
  402610:	bf00      	nop
  402612:	370c      	adds	r7, #12
  402614:	46bd      	mov	sp, r7
  402616:	bc80      	pop	{r7}
  402618:	4770      	bx	lr
  40261a:	bf00      	nop
  40261c:	20000a60 	.word	0x20000a60
=======
  40257c:	bf00      	nop
  40257e:	370c      	adds	r7, #12
  402580:	46bd      	mov	sp, r7
  402582:	bc80      	pop	{r7}
  402584:	4770      	bx	lr
  402586:	bf00      	nop
  402588:	20000a60 	.word	0x20000a60
>>>>>>> parent of 8583d8d... Updated write_image to file

0040258c <configure_usart_wifi>:

void configure_usart_wifi(void)
{
  40258c:	b5b0      	push	{r4, r5, r7, lr}
  40258e:	b086      	sub	sp, #24
  402590:	af00      	add	r7, sp, #0
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  402592:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  402596:	2005      	movs	r0, #5
  402598:	4b1c      	ldr	r3, [pc, #112]	; (40260c <configure_usart_wifi+0x80>)
  40259a:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  40259c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4025a0:	2006      	movs	r0, #6
  4025a2:	4b1a      	ldr	r3, [pc, #104]	; (40260c <configure_usart_wifi+0x80>)
  4025a4:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
  4025a6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4025aa:	2008      	movs	r0, #8
  4025ac:	4b17      	ldr	r3, [pc, #92]	; (40260c <configure_usart_wifi+0x80>)
  4025ae:	4798      	blx	r3
	//gpio_configure_pin(PIN_USART1_RTS_IDX, PIN_USART1_RTS_FLAGS);

	static uint32_t ul_sysclk;
	const sam_usart_opt_t usart_console_settings = {
  4025b0:	4b17      	ldr	r3, [pc, #92]	; (402610 <configure_usart_wifi+0x84>)
  4025b2:	463c      	mov	r4, r7
  4025b4:	461d      	mov	r5, r3
  4025b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4025b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  4025ba:	e895 0003 	ldmia.w	r5, {r0, r1}
  4025be:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};

	/* Get peripheral clock. */
	ul_sysclk = sysclk_get_peripheral_hz();
  4025c2:	4b14      	ldr	r3, [pc, #80]	; (402614 <configure_usart_wifi+0x88>)
  4025c4:	4798      	blx	r3
  4025c6:	4602      	mov	r2, r0
  4025c8:	4b13      	ldr	r3, [pc, #76]	; (402618 <configure_usart_wifi+0x8c>)
  4025ca:	601a      	str	r2, [r3, #0]

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(BOARD_ID_USART);
  4025cc:	200e      	movs	r0, #14
  4025ce:	4b13      	ldr	r3, [pc, #76]	; (40261c <configure_usart_wifi+0x90>)
  4025d0:	4798      	blx	r3

	/* Configure USART. */
	usart_init_hw_handshaking(WIFI_USART, &usart_console_settings, ul_sysclk);
  4025d2:	4b11      	ldr	r3, [pc, #68]	; (402618 <configure_usart_wifi+0x8c>)
  4025d4:	681a      	ldr	r2, [r3, #0]
  4025d6:	463b      	mov	r3, r7
  4025d8:	4619      	mov	r1, r3
  4025da:	4811      	ldr	r0, [pc, #68]	; (402620 <configure_usart_wifi+0x94>)
  4025dc:	4b11      	ldr	r3, [pc, #68]	; (402624 <configure_usart_wifi+0x98>)
  4025de:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  4025e0:	f04f 31ff 	mov.w	r1, #4294967295
  4025e4:	480e      	ldr	r0, [pc, #56]	; (402620 <configure_usart_wifi+0x94>)
  4025e6:	4b10      	ldr	r3, [pc, #64]	; (402628 <configure_usart_wifi+0x9c>)
  4025e8:	4798      	blx	r3

	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  4025ea:	480d      	ldr	r0, [pc, #52]	; (402620 <configure_usart_wifi+0x94>)
  4025ec:	4b0f      	ldr	r3, [pc, #60]	; (40262c <configure_usart_wifi+0xa0>)
  4025ee:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  4025f0:	480b      	ldr	r0, [pc, #44]	; (402620 <configure_usart_wifi+0x94>)
  4025f2:	4b0f      	ldr	r3, [pc, #60]	; (402630 <configure_usart_wifi+0xa4>)
  4025f4:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  4025f6:	2101      	movs	r1, #1
  4025f8:	4809      	ldr	r0, [pc, #36]	; (402620 <configure_usart_wifi+0x94>)
  4025fa:	4b0e      	ldr	r3, [pc, #56]	; (402634 <configure_usart_wifi+0xa8>)
  4025fc:	4798      	blx	r3

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(USART_IRQn);
  4025fe:	200e      	movs	r0, #14
  402600:	4b0d      	ldr	r3, [pc, #52]	; (402638 <configure_usart_wifi+0xac>)
  402602:	4798      	blx	r3
}
<<<<<<< HEAD
  402698:	bf00      	nop
  40269a:	3718      	adds	r7, #24
  40269c:	46bd      	mov	sp, r7
  40269e:	bdb0      	pop	{r4, r5, r7, pc}
  4026a0:	004007b1 	.word	0x004007b1
  4026a4:	0040911c 	.word	0x0040911c
  4026a8:	00402539 	.word	0x00402539
  4026ac:	20000a78 	.word	0x20000a78
  4026b0:	0040254d 	.word	0x0040254d
  4026b4:	40024000 	.word	0x40024000
  4026b8:	0040154d 	.word	0x0040154d
  4026bc:	00401607 	.word	0x00401607
  4026c0:	0040158d 	.word	0x0040158d
  4026c4:	004015bd 	.word	0x004015bd
  4026c8:	004015ed 	.word	0x004015ed
  4026cc:	0040245d 	.word	0x0040245d

004026d0 <configure_wifi_command_pin>:
=======
  402604:	bf00      	nop
  402606:	3718      	adds	r7, #24
  402608:	46bd      	mov	sp, r7
  40260a:	bdb0      	pop	{r4, r5, r7, pc}
  40260c:	004007b1 	.word	0x004007b1
  402610:	00408f7c 	.word	0x00408f7c
  402614:	004024ed 	.word	0x004024ed
  402618:	20000a78 	.word	0x20000a78
  40261c:	00402501 	.word	0x00402501
  402620:	40024000 	.word	0x40024000
  402624:	0040154d 	.word	0x0040154d
  402628:	00401607 	.word	0x00401607
  40262c:	0040158d 	.word	0x0040158d
  402630:	004015bd 	.word	0x004015bd
  402634:	004015ed 	.word	0x004015ed
  402638:	00402411 	.word	0x00402411

0040263c <configure_wifi_command_pin>:
>>>>>>> parent of 8583d8d... Updated write_image to file

void configure_wifi_command_pin(void)
{
  40263c:	b590      	push	{r4, r7, lr}
  40263e:	b083      	sub	sp, #12
  402640:	af02      	add	r7, sp, #8
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  402642:	200c      	movs	r0, #12
  402644:	4b0e      	ldr	r3, [pc, #56]	; (402680 <configure_wifi_command_pin+0x44>)
  402646:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WIFI_COMM_PIO, WIFI_COMM_PIN_MSK, 10);
  402648:	220a      	movs	r2, #10
  40264a:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40264e:	480d      	ldr	r0, [pc, #52]	; (402684 <configure_wifi_command_pin+0x48>)
  402650:	4b0d      	ldr	r3, [pc, #52]	; (402688 <configure_wifi_command_pin+0x4c>)
  402652:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_MSK,
  402654:	4b0d      	ldr	r3, [pc, #52]	; (40268c <configure_wifi_command_pin+0x50>)
  402656:	9300      	str	r3, [sp, #0]
  402658:	2370      	movs	r3, #112	; 0x70
  40265a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40265e:	210c      	movs	r1, #12
  402660:	4808      	ldr	r0, [pc, #32]	; (402684 <configure_wifi_command_pin+0x48>)
  402662:	4c0b      	ldr	r4, [pc, #44]	; (402690 <configure_wifi_command_pin+0x54>)
  402664:	47a0      	blx	r4
			WIFI_COMM_ATTR, wifi_command_response_handler);

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);
  402666:	200c      	movs	r0, #12
  402668:	4b0a      	ldr	r3, [pc, #40]	; (402694 <configure_wifi_command_pin+0x58>)
  40266a:	4798      	blx	r3

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_MSK);
  40266c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  402670:	4804      	ldr	r0, [pc, #16]	; (402684 <configure_wifi_command_pin+0x48>)
  402672:	4b09      	ldr	r3, [pc, #36]	; (402698 <configure_wifi_command_pin+0x5c>)
  402674:	4798      	blx	r3
}
  402676:	bf00      	nop
  402678:	3704      	adds	r7, #4
  40267a:	46bd      	mov	sp, r7
  40267c:	bd90      	pop	{r4, r7, pc}
  40267e:	bf00      	nop
  402680:	00400e1d 	.word	0x00400e1d
  402684:	400e1000 	.word	0x400e1000
  402688:	004004bb 	.word	0x004004bb
  40268c:	0040251d 	.word	0x0040251d
  402690:	00400ab1 	.word	0x00400ab1
  402694:	00402411 	.word	0x00402411
  402698:	0040074f 	.word	0x0040074f

0040269c <configure_wifi_web_setup_pin>:

void configure_wifi_web_setup_pin(void)
{
  40269c:	b590      	push	{r4, r7, lr}
  40269e:	b083      	sub	sp, #12
  4026a0:	af02      	add	r7, sp, #8
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WEB_SETUP_BUTTON_ID);
  4026a2:	200b      	movs	r0, #11
  4026a4:	4b0e      	ldr	r3, [pc, #56]	; (4026e0 <configure_wifi_web_setup_pin+0x44>)
  4026a6:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WEB_SETUP_BUTTON_PIO, WEB_SETUP_BUTTON_PIN_MSK, 10);
  4026a8:	220a      	movs	r2, #10
  4026aa:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  4026ae:	480d      	ldr	r0, [pc, #52]	; (4026e4 <configure_wifi_web_setup_pin+0x48>)
  4026b0:	4b0d      	ldr	r3, [pc, #52]	; (4026e8 <configure_wifi_web_setup_pin+0x4c>)
  4026b2:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WEB_SETUP_BUTTON_PIO, WEB_SETUP_BUTTON_ID, WEB_SETUP_BUTTON_PIN_MSK,
  4026b4:	4b0d      	ldr	r3, [pc, #52]	; (4026ec <configure_wifi_web_setup_pin+0x50>)
  4026b6:	9300      	str	r3, [sp, #0]
  4026b8:	2370      	movs	r3, #112	; 0x70
  4026ba:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4026be:	210b      	movs	r1, #11
  4026c0:	4808      	ldr	r0, [pc, #32]	; (4026e4 <configure_wifi_web_setup_pin+0x48>)
  4026c2:	4c0b      	ldr	r4, [pc, #44]	; (4026f0 <configure_wifi_web_setup_pin+0x54>)
  4026c4:	47a0      	blx	r4
			WEB_SETUP_BUTTON_ATTR, wifi_web_setup_handler);

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WEB_SETUP_BUTTON_ID);
  4026c6:	200b      	movs	r0, #11
  4026c8:	4b0a      	ldr	r3, [pc, #40]	; (4026f4 <configure_wifi_web_setup_pin+0x58>)
  4026ca:	4798      	blx	r3

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WEB_SETUP_BUTTON_PIO, WEB_SETUP_BUTTON_PIN_MSK);
  4026cc:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  4026d0:	4804      	ldr	r0, [pc, #16]	; (4026e4 <configure_wifi_web_setup_pin+0x48>)
  4026d2:	4b09      	ldr	r3, [pc, #36]	; (4026f8 <configure_wifi_web_setup_pin+0x5c>)
  4026d4:	4798      	blx	r3
}
  4026d6:	bf00      	nop
  4026d8:	3704      	adds	r7, #4
  4026da:	46bd      	mov	sp, r7
  4026dc:	bd90      	pop	{r4, r7, pc}
  4026de:	bf00      	nop
  4026e0:	00400e1d 	.word	0x00400e1d
  4026e4:	400e0e00 	.word	0x400e0e00
  4026e8:	004004bb 	.word	0x004004bb
  4026ec:	0040256d 	.word	0x0040256d
  4026f0:	00400ab1 	.word	0x00400ab1
  4026f4:	00402411 	.word	0x00402411
  4026f8:	0040074f 	.word	0x0040074f

004026fc <write_wifi_command>:

void write_wifi_command(char* comm, uint8_t cnt)
{
  4026fc:	b580      	push	{r7, lr}
  4026fe:	b082      	sub	sp, #8
  402700:	af00      	add	r7, sp, #0
  402702:	6078      	str	r0, [r7, #4]
  402704:	460b      	mov	r3, r1
  402706:	70fb      	strb	r3, [r7, #3]
	//Write command to the AMW136
	usart_write_line(WIFI_USART, comm);
<<<<<<< HEAD
  40279c:	6879      	ldr	r1, [r7, #4]
  40279e:	480e      	ldr	r0, [pc, #56]	; (4027d8 <write_wifi_command+0x48>)
  4027a0:	4b0e      	ldr	r3, [pc, #56]	; (4027dc <write_wifi_command+0x4c>)
  4027a2:	4798      	blx	r3
	
	//Wait for either an acknowledgment or a timeout
	counts = 0;
  4027a4:	4b0e      	ldr	r3, [pc, #56]	; (4027e0 <write_wifi_command+0x50>)
  4027a6:	2200      	movs	r2, #0
  4027a8:	601a      	str	r2, [r3, #0]
	while (counts < cnt)
  4027aa:	e00c      	b.n	4027c6 <write_wifi_command+0x36>
	{
		if (wifi_comm_success==true)
  4027ac:	4b0d      	ldr	r3, [pc, #52]	; (4027e4 <write_wifi_command+0x54>)
  4027ae:	681b      	ldr	r3, [r3, #0]
  4027b0:	2b01      	cmp	r3, #1
  4027b2:	d103      	bne.n	4027bc <write_wifi_command+0x2c>
		{
			wifi_comm_success = false;
  4027b4:	4b0b      	ldr	r3, [pc, #44]	; (4027e4 <write_wifi_command+0x54>)
  4027b6:	2200      	movs	r2, #0
  4027b8:	601a      	str	r2, [r3, #0]
			return;
  4027ba:	e00a      	b.n	4027d2 <write_wifi_command+0x42>
		}
		else{
			counts++;
  4027bc:	4b08      	ldr	r3, [pc, #32]	; (4027e0 <write_wifi_command+0x50>)
  4027be:	681b      	ldr	r3, [r3, #0]
  4027c0:	3301      	adds	r3, #1
  4027c2:	4a07      	ldr	r2, [pc, #28]	; (4027e0 <write_wifi_command+0x50>)
  4027c4:	6013      	str	r3, [r2, #0]
	while (counts < cnt)
  4027c6:	78fa      	ldrb	r2, [r7, #3]
  4027c8:	4b05      	ldr	r3, [pc, #20]	; (4027e0 <write_wifi_command+0x50>)
  4027ca:	681b      	ldr	r3, [r3, #0]
  4027cc:	429a      	cmp	r2, r3
  4027ce:	d8ed      	bhi.n	4027ac <write_wifi_command+0x1c>
=======
  402708:	6879      	ldr	r1, [r7, #4]
  40270a:	480c      	ldr	r0, [pc, #48]	; (40273c <write_wifi_command+0x40>)
  40270c:	4b0c      	ldr	r3, [pc, #48]	; (402740 <write_wifi_command+0x44>)
  40270e:	4798      	blx	r3
	
	//Wait for either an acknowledgment or a timeout
	counts = 0;
  402710:	4b0c      	ldr	r3, [pc, #48]	; (402744 <write_wifi_command+0x48>)
  402712:	2200      	movs	r2, #0
  402714:	601a      	str	r2, [r3, #0]
	while (counts < cnt)
  402716:	e007      	b.n	402728 <write_wifi_command+0x2c>
	{
		if (wifi_comm_success==true)
  402718:	4b0b      	ldr	r3, [pc, #44]	; (402748 <write_wifi_command+0x4c>)
  40271a:	681b      	ldr	r3, [r3, #0]
  40271c:	2b01      	cmp	r3, #1
  40271e:	d103      	bne.n	402728 <write_wifi_command+0x2c>
		{
			wifi_comm_success = false;
  402720:	4b09      	ldr	r3, [pc, #36]	; (402748 <write_wifi_command+0x4c>)
  402722:	2200      	movs	r2, #0
  402724:	601a      	str	r2, [r3, #0]
			return;
  402726:	e005      	b.n	402734 <write_wifi_command+0x38>
	while (counts < cnt)
  402728:	78fa      	ldrb	r2, [r7, #3]
  40272a:	4b06      	ldr	r3, [pc, #24]	; (402744 <write_wifi_command+0x48>)
  40272c:	681b      	ldr	r3, [r3, #0]
  40272e:	429a      	cmp	r2, r3
  402730:	d8f2      	bhi.n	402718 <write_wifi_command+0x1c>
>>>>>>> parent of 8583d8d... Updated write_image to file
		}
		
	}
	return;
<<<<<<< HEAD
  4027d0:	bf00      	nop
}
  4027d2:	3708      	adds	r7, #8
  4027d4:	46bd      	mov	sp, r7
  4027d6:	bd80      	pop	{r7, pc}
  4027d8:	40024000 	.word	0x40024000
  4027dc:	004016b5 	.word	0x004016b5
  4027e0:	20000a74 	.word	0x20000a74
  4027e4:	20000a64 	.word	0x20000a64

004027e8 <write_image_to_file>:

void write_image_to_file(void)
{
  4027e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4027ec:	b09d      	sub	sp, #116	; 0x74
  4027ee:	af00      	add	r7, sp, #0
	if (find_image_len()==0)
  4027f0:	4b57      	ldr	r3, [pc, #348]	; (402950 <write_image_to_file+0x168>)
  4027f2:	4798      	blx	r3
  4027f4:	4603      	mov	r3, r0
  4027f6:	2b00      	cmp	r3, #0
  4027f8:	f000 80a4 	beq.w	402944 <write_image_to_file+0x15c>
=======
  402732:	bf00      	nop
}
  402734:	3708      	adds	r7, #8
  402736:	46bd      	mov	sp, r7
  402738:	bd80      	pop	{r7, pc}
  40273a:	bf00      	nop
  40273c:	40024000 	.word	0x40024000
  402740:	0040169d 	.word	0x0040169d
  402744:	20000a74 	.word	0x20000a74
  402748:	20000a64 	.word	0x20000a64

0040274c <write_image_to_file>:

void write_image_to_file(void)
{
  40274c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402750:	b091      	sub	sp, #68	; 0x44
  402752:	af00      	add	r7, sp, #0
	if (find_image_len()==0)
  402754:	4b54      	ldr	r3, [pc, #336]	; (4028a8 <write_image_to_file+0x15c>)
  402756:	4798      	blx	r3
  402758:	4603      	mov	r3, r0
  40275a:	2b00      	cmp	r3, #0
  40275c:	f000 809f 	beq.w	40289e <write_image_to_file+0x152>
>>>>>>> parent of 8583d8d... Updated write_image to file
	{
		return;
	}
	
	image_length = end_of_image - start_of_image;
<<<<<<< HEAD
  4027fc:	4b55      	ldr	r3, [pc, #340]	; (402954 <write_image_to_file+0x16c>)
  4027fe:	681a      	ldr	r2, [r3, #0]
  402800:	4b55      	ldr	r3, [pc, #340]	; (402958 <write_image_to_file+0x170>)
  402802:	681b      	ldr	r3, [r3, #0]
  402804:	1ad3      	subs	r3, r2, r3
  402806:	4a55      	ldr	r2, [pc, #340]	; (40295c <write_image_to_file+0x174>)
  402808:	6013      	str	r3, [r2, #0]
<<<<<<< HEAD
  40280a:	f107 0308 	add.w	r3, r7, #8
  40280e:	2264      	movs	r2, #100	; 0x64
  402810:	2100      	movs	r1, #0
  402812:	4618      	mov	r0, r3
  402814:	4b52      	ldr	r3, [pc, #328]	; (402960 <write_image_to_file+0x178>)
  402816:	4798      	blx	r3
<<<<<<< HEAD
  402818:	4b50      	ldr	r3, [pc, #320]	; (40295c <write_image_to_file+0x174>)
  40281a:	681a      	ldr	r2, [r3, #0]
  40281c:	f107 0308 	add.w	r3, r7, #8
  402820:	4950      	ldr	r1, [pc, #320]	; (402964 <write_image_to_file+0x17c>)
  402822:	4618      	mov	r0, r3
  402824:	4b50      	ldr	r3, [pc, #320]	; (402968 <write_image_to_file+0x180>)
  402826:	4798      	blx	r3
	char string[100] = {0};
  402828:	f107 0308 	add.w	r3, r7, #8
  40282c:	2102      	movs	r1, #2
  40282e:	4618      	mov	r0, r3
  402830:	4b4e      	ldr	r3, [pc, #312]	; (40296c <write_image_to_file+0x184>)
  402832:	4798      	blx	r3
	sprintf(string,"image_transfer %u\r\n\0", image_length);
  402834:	4b4e      	ldr	r3, [pc, #312]	; (402970 <write_image_to_file+0x188>)
  402836:	4798      	blx	r3
  402838:	4603      	mov	r3, r0
  40283a:	4619      	mov	r1, r3
  40283c:	f04f 0200 	mov.w	r2, #0
  402840:	460b      	mov	r3, r1
  402842:	4614      	mov	r4, r2
  402844:	18db      	adds	r3, r3, r3
  402846:	eb44 0404 	adc.w	r4, r4, r4
  40284a:	185b      	adds	r3, r3, r1
  40284c:	eb44 0402 	adc.w	r4, r4, r2
  402850:	0166      	lsls	r6, r4, #5
  402852:	ea46 66d3 	orr.w	r6, r6, r3, lsr #27
  402856:	015d      	lsls	r5, r3, #5
  402858:	195b      	adds	r3, r3, r5
  40285a:	eb44 0406 	adc.w	r4, r4, r6
  40285e:	185b      	adds	r3, r3, r1
  402860:	eb44 0402 	adc.w	r4, r4, r2
  402864:	f243 61af 	movw	r1, #13999	; 0x36af
  402868:	f04f 0200 	mov.w	r2, #0
  40286c:	185d      	adds	r5, r3, r1
  40286e:	eb44 0602 	adc.w	r6, r4, r2
  402872:	4628      	mov	r0, r5
  402874:	4631      	mov	r1, r6
  402876:	4c3f      	ldr	r4, [pc, #252]	; (402974 <write_image_to_file+0x18c>)
  402878:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40287c:	f04f 0300 	mov.w	r3, #0
  402880:	47a0      	blx	r4
  402882:	4603      	mov	r3, r0
  402884:	460c      	mov	r4, r1
  402886:	4618      	mov	r0, r3
  402888:	4b3b      	ldr	r3, [pc, #236]	; (402978 <write_image_to_file+0x190>)
  40288a:	4798      	blx	r3
	write_wifi_command(string, 2);
	delay_ms(100);
  40288c:	bf00      	nop
  40288e:	4b3b      	ldr	r3, [pc, #236]	; (40297c <write_image_to_file+0x194>)
  402890:	681b      	ldr	r3, [r3, #0]
  402892:	2b00      	cmp	r3, #0
  402894:	d0fb      	beq.n	40288e <write_image_to_file+0xa6>
	
 	while(!start_image_transfer){}
  402896:	4b30      	ldr	r3, [pc, #192]	; (402958 <write_image_to_file+0x170>)
  402898:	681b      	ldr	r3, [r3, #0]
  40289a:	66fb      	str	r3, [r7, #108]	; 0x6c
=======
  40289c:	e00a      	b.n	4028b4 <write_image_to_file+0xcc>
=======
>>>>>>> parent of 8583d8d... Updated write_image to file
  40289e:	4a38      	ldr	r2, [pc, #224]	; (402980 <write_image_to_file+0x198>)
  4028a0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
  4028a2:	4413      	add	r3, r2
  4028a4:	781b      	ldrb	r3, [r3, #0]
  4028a6:	4619      	mov	r1, r3
  4028a8:	4836      	ldr	r0, [pc, #216]	; (402984 <write_image_to_file+0x19c>)
  4028aa:	4b37      	ldr	r3, [pc, #220]	; (402988 <write_image_to_file+0x1a0>)
  4028ac:	4798      	blx	r3
	char string[50] = {0};
  4028ae:	6efb      	ldr	r3, [r7, #108]	; 0x6c
  4028b0:	3301      	adds	r3, #1
  4028b2:	66fb      	str	r3, [r7, #108]	; 0x6c
=======
  4028b4:	4b27      	ldr	r3, [pc, #156]	; (402954 <write_image_to_file+0x16c>)
  4028b6:	681b      	ldr	r3, [r3, #0]
  4028b8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
  4028ba:	429a      	cmp	r2, r3
  4028bc:	d3ef      	bcc.n	40289e <write_image_to_file+0xb6>
	sprintf(string,"image_transfer %d\r\n", image_length);
	write_wifi_command(string, 20);
	delay_ms(100);
  4028be:	4933      	ldr	r1, [pc, #204]	; (40298c <write_image_to_file+0x1a4>)
  4028c0:	4830      	ldr	r0, [pc, #192]	; (402984 <write_image_to_file+0x19c>)
  4028c2:	4b33      	ldr	r3, [pc, #204]	; (402990 <write_image_to_file+0x1a8>)
  4028c4:	4798      	blx	r3
	
  4028c6:	4b2a      	ldr	r3, [pc, #168]	; (402970 <write_image_to_file+0x188>)
  4028c8:	4798      	blx	r3
  4028ca:	4603      	mov	r3, r0
  4028cc:	4619      	mov	r1, r3
  4028ce:	f04f 0200 	mov.w	r2, #0
  4028d2:	460b      	mov	r3, r1
  4028d4:	4614      	mov	r4, r2
  4028d6:	0160      	lsls	r0, r4, #5
  4028d8:	6078      	str	r0, [r7, #4]
  4028da:	6878      	ldr	r0, [r7, #4]
  4028dc:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  4028e0:	6078      	str	r0, [r7, #4]
  4028e2:	015b      	lsls	r3, r3, #5
  4028e4:	603b      	str	r3, [r7, #0]
  4028e6:	e9d7 3400 	ldrd	r3, r4, [r7]
  4028ea:	1a5b      	subs	r3, r3, r1
  4028ec:	eb64 0402 	sbc.w	r4, r4, r2
  4028f0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
  4028f4:	ea4b 7b93 	orr.w	fp, fp, r3, lsr #30
  4028f8:	ea4f 0a83 	mov.w	sl, r3, lsl #2
  4028fc:	4653      	mov	r3, sl
  4028fe:	465c      	mov	r4, fp
  402900:	185b      	adds	r3, r3, r1
  402902:	eb44 0402 	adc.w	r4, r4, r2
  402906:	ea4f 1904 	mov.w	r9, r4, lsl #4
  40290a:	ea49 7913 	orr.w	r9, r9, r3, lsr #28
  40290e:	ea4f 1803 	mov.w	r8, r3, lsl #4
  402912:	4643      	mov	r3, r8
  402914:	464c      	mov	r4, r9
  402916:	4619      	mov	r1, r3
  402918:	4622      	mov	r2, r4
  40291a:	f243 63af 	movw	r3, #13999	; 0x36af
  40291e:	f04f 0400 	mov.w	r4, #0
  402922:	18cd      	adds	r5, r1, r3
  402924:	eb42 0604 	adc.w	r6, r2, r4
  402928:	4628      	mov	r0, r5
  40292a:	4631      	mov	r1, r6
  40292c:	4c11      	ldr	r4, [pc, #68]	; (402974 <write_image_to_file+0x18c>)
  40292e:	f243 62b0 	movw	r2, #14000	; 0x36b0
  402932:	f04f 0300 	mov.w	r3, #0
  402936:	47a0      	blx	r4
  402938:	4603      	mov	r3, r0
  40293a:	460c      	mov	r4, r1
  40293c:	4618      	mov	r0, r3
  40293e:	4b0e      	ldr	r3, [pc, #56]	; (402978 <write_image_to_file+0x190>)
  402940:	4798      	blx	r3
  402942:	e000      	b.n	402946 <write_image_to_file+0x15e>
		return;
  402944:	bf00      	nop
// 	while(!wifi_comm_success)
// 	{
  402946:	3774      	adds	r7, #116	; 0x74
  402948:	46bd      	mov	sp, r7
  40294a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40294e:	bf00      	nop
  402950:	00401cf9 	.word	0x00401cf9
  402954:	20000ac0 	.word	0x20000ac0
  402958:	20000ab8 	.word	0x20000ab8
  40295c:	20000a68 	.word	0x20000a68
  402960:	0040397d 	.word	0x0040397d
  402964:	00409134 	.word	0x00409134
  402968:	00403a19 	.word	0x00403a19
  40296c:	00402791 	.word	0x00402791
  402970:	00402525 	.word	0x00402525
  402974:	0040361d 	.word	0x0040361d
  402978:	20000001 	.word	0x20000001
  40297c:	20000a6c 	.word	0x20000a6c
  402980:	20000ac4 	.word	0x20000ac4
  402984:	40024000 	.word	0x40024000
  402988:	00401685 	.word	0x00401685
  40298c:	0040914c 	.word	0x0040914c
  402990:	004016b5 	.word	0x004016b5

00402994 <process_incoming_byte_wifi>:
// 		
// 	}
  402994:	b480      	push	{r7}
  402996:	b083      	sub	sp, #12
  402998:	af00      	add	r7, sp, #0
  40299a:	4603      	mov	r3, r0
  40299c:	71fb      	strb	r3, [r7, #7]
<<<<<<< HEAD
>>>>>>> parent of 8583d8d... Updated write_image to file
  40299e:	4b07      	ldr	r3, [pc, #28]	; (4029bc <process_incoming_byte_wifi+0x28>)
  4029a0:	681b      	ldr	r3, [r3, #0]
  4029a2:	4907      	ldr	r1, [pc, #28]	; (4029c0 <process_incoming_byte_wifi+0x2c>)
  4029a4:	79fa      	ldrb	r2, [r7, #7]
  4029a6:	54ca      	strb	r2, [r1, r3]
=======
  4029a8:	4b04      	ldr	r3, [pc, #16]	; (4029bc <process_incoming_byte_wifi+0x28>)
  4029aa:	681b      	ldr	r3, [r3, #0]
  4029ac:	3301      	adds	r3, #1
  4029ae:	4a03      	ldr	r2, [pc, #12]	; (4029bc <process_incoming_byte_wifi+0x28>)
  4029b0:	6013      	str	r3, [r2, #0]
>>>>>>> parent of 8583d8d... Updated write_image to file
  4029b2:	bf00      	nop
  4029b4:	370c      	adds	r7, #12
  4029b6:	46bd      	mov	sp, r7
  4029b8:	bc80      	pop	{r7}
  4029ba:	4770      	bx	lr
  4029bc:	20000a5c 	.word	0x20000a5c
  4029c0:	2000ce14 	.word	0x2000ce14

004029c4 <process_data_wifi>:
	
	uint32_t img = start_of_image;
  4029c4:	b580      	push	{r7, lr}
  4029c6:	af00      	add	r7, sp, #0
	while (img < end_of_image)
=======
  402760:	4b52      	ldr	r3, [pc, #328]	; (4028ac <write_image_to_file+0x160>)
  402762:	681a      	ldr	r2, [r3, #0]
  402764:	4b52      	ldr	r3, [pc, #328]	; (4028b0 <write_image_to_file+0x164>)
  402766:	681b      	ldr	r3, [r3, #0]
  402768:	1ad3      	subs	r3, r2, r3
  40276a:	4a52      	ldr	r2, [pc, #328]	; (4028b4 <write_image_to_file+0x168>)
  40276c:	6013      	str	r3, [r2, #0]
	char string[50] = {0};
  40276e:	f107 0308 	add.w	r3, r7, #8
  402772:	2232      	movs	r2, #50	; 0x32
  402774:	2100      	movs	r1, #0
  402776:	4618      	mov	r0, r3
  402778:	4b4f      	ldr	r3, [pc, #316]	; (4028b8 <write_image_to_file+0x16c>)
  40277a:	4798      	blx	r3
	sprintf(string,"image_transfer %d\r\n", image_length);
  40277c:	4b4d      	ldr	r3, [pc, #308]	; (4028b4 <write_image_to_file+0x168>)
  40277e:	681a      	ldr	r2, [r3, #0]
  402780:	f107 0308 	add.w	r3, r7, #8
  402784:	494d      	ldr	r1, [pc, #308]	; (4028bc <write_image_to_file+0x170>)
  402786:	4618      	mov	r0, r3
  402788:	4b4d      	ldr	r3, [pc, #308]	; (4028c0 <write_image_to_file+0x174>)
  40278a:	4798      	blx	r3
	write_wifi_command(string, 20);
  40278c:	f107 0308 	add.w	r3, r7, #8
  402790:	2114      	movs	r1, #20
  402792:	4618      	mov	r0, r3
  402794:	4b4b      	ldr	r3, [pc, #300]	; (4028c4 <write_image_to_file+0x178>)
  402796:	4798      	blx	r3
	delay_ms(100);
  402798:	4b4b      	ldr	r3, [pc, #300]	; (4028c8 <write_image_to_file+0x17c>)
  40279a:	4798      	blx	r3
  40279c:	4603      	mov	r3, r0
  40279e:	4619      	mov	r1, r3
  4027a0:	f04f 0200 	mov.w	r2, #0
  4027a4:	460b      	mov	r3, r1
  4027a6:	4614      	mov	r4, r2
  4027a8:	18db      	adds	r3, r3, r3
  4027aa:	eb44 0404 	adc.w	r4, r4, r4
  4027ae:	185b      	adds	r3, r3, r1
  4027b0:	eb44 0402 	adc.w	r4, r4, r2
  4027b4:	0166      	lsls	r6, r4, #5
  4027b6:	ea46 66d3 	orr.w	r6, r6, r3, lsr #27
  4027ba:	015d      	lsls	r5, r3, #5
  4027bc:	195b      	adds	r3, r3, r5
  4027be:	eb44 0406 	adc.w	r4, r4, r6
  4027c2:	185b      	adds	r3, r3, r1
  4027c4:	eb44 0402 	adc.w	r4, r4, r2
  4027c8:	f243 61af 	movw	r1, #13999	; 0x36af
  4027cc:	f04f 0200 	mov.w	r2, #0
  4027d0:	185d      	adds	r5, r3, r1
  4027d2:	eb44 0602 	adc.w	r6, r4, r2
  4027d6:	4628      	mov	r0, r5
  4027d8:	4631      	mov	r1, r6
  4027da:	4c3c      	ldr	r4, [pc, #240]	; (4028cc <write_image_to_file+0x180>)
  4027dc:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4027e0:	f04f 0300 	mov.w	r3, #0
  4027e4:	47a0      	blx	r4
  4027e6:	4603      	mov	r3, r0
  4027e8:	460c      	mov	r4, r1
  4027ea:	4618      	mov	r0, r3
  4027ec:	4b38      	ldr	r3, [pc, #224]	; (4028d0 <write_image_to_file+0x184>)
  4027ee:	4798      	blx	r3
// 	while(!wifi_comm_success)
// 	{
// 		
// 	}
	
	uint32_t img = start_of_image;
  4027f0:	4b2f      	ldr	r3, [pc, #188]	; (4028b0 <write_image_to_file+0x164>)
  4027f2:	681b      	ldr	r3, [r3, #0]
  4027f4:	63fb      	str	r3, [r7, #60]	; 0x3c
	while (img < end_of_image)
  4027f6:	e00a      	b.n	40280e <write_image_to_file+0xc2>
>>>>>>> parent of 8583d8d... Updated write_image to file
	{
  4029c8:	490a      	ldr	r1, [pc, #40]	; (4029f4 <process_data_wifi+0x30>)
  4029ca:	480b      	ldr	r0, [pc, #44]	; (4029f8 <process_data_wifi+0x34>)
  4029cc:	4b0b      	ldr	r3, [pc, #44]	; (4029fc <process_data_wifi+0x38>)
  4029ce:	4798      	blx	r3
  4029d0:	4603      	mov	r3, r0
  4029d2:	2b00      	cmp	r3, #0
  4029d4:	d002      	beq.n	4029dc <process_data_wifi+0x18>
		usart_putchar(WIFI_USART, image_buffer[img]);
<<<<<<< HEAD
  4029d6:	4b0a      	ldr	r3, [pc, #40]	; (402a00 <process_data_wifi+0x3c>)
  4029d8:	2201      	movs	r2, #1
  4029da:	601a      	str	r2, [r3, #0]
		img++;
=======
  4027f8:	4a36      	ldr	r2, [pc, #216]	; (4028d4 <write_image_to_file+0x188>)
  4027fa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
  4027fc:	4413      	add	r3, r2
  4027fe:	781b      	ldrb	r3, [r3, #0]
  402800:	4619      	mov	r1, r3
  402802:	4835      	ldr	r0, [pc, #212]	; (4028d8 <write_image_to_file+0x18c>)
  402804:	4b35      	ldr	r3, [pc, #212]	; (4028dc <write_image_to_file+0x190>)
  402806:	4798      	blx	r3
		img++;
  402808:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
  40280a:	3301      	adds	r3, #1
  40280c:	63fb      	str	r3, [r7, #60]	; 0x3c
	while (img < end_of_image)
  40280e:	4b27      	ldr	r3, [pc, #156]	; (4028ac <write_image_to_file+0x160>)
  402810:	681b      	ldr	r3, [r3, #0]
  402812:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
  402814:	429a      	cmp	r2, r3
  402816:	d3ef      	bcc.n	4027f8 <write_image_to_file+0xac>
>>>>>>> parent of 8583d8d... Updated write_image to file
	}
  4029dc:	4909      	ldr	r1, [pc, #36]	; (402a04 <process_data_wifi+0x40>)
  4029de:	4806      	ldr	r0, [pc, #24]	; (4029f8 <process_data_wifi+0x34>)
  4029e0:	4b06      	ldr	r3, [pc, #24]	; (4029fc <process_data_wifi+0x38>)
  4029e2:	4798      	blx	r3
  4029e4:	4603      	mov	r3, r0
  4029e6:	2b00      	cmp	r3, #0
  4029e8:	d002      	beq.n	4029f0 <process_data_wifi+0x2c>
	
  4029ea:	4b07      	ldr	r3, [pc, #28]	; (402a08 <process_data_wifi+0x44>)
  4029ec:	2201      	movs	r2, #1
  4029ee:	601a      	str	r2, [r3, #0]
	usart_write_line(WIFI_USART, "Complete\r\n");
<<<<<<< HEAD
	delay_s(2);
  4029f0:	bf00      	nop
  4029f2:	bd80      	pop	{r7, pc}
  4029f4:	00409158 	.word	0x00409158
  4029f8:	2000ce14 	.word	0x2000ce14
  4029fc:	00403d15 	.word	0x00403d15
  402a00:	20000a70 	.word	0x20000a70
  402a04:	00409160 	.word	0x00409160
  402a08:	20000a6c 	.word	0x20000a6c

00402a0c <sysclk_enable_peripheral_clock>:
{
  402a0c:	b580      	push	{r7, lr}
  402a0e:	b082      	sub	sp, #8
  402a10:	af00      	add	r7, sp, #0
  402a12:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  402a14:	6878      	ldr	r0, [r7, #4]
  402a16:	4b03      	ldr	r3, [pc, #12]	; (402a24 <sysclk_enable_peripheral_clock+0x18>)
  402a18:	4798      	blx	r3
}
  402a1a:	bf00      	nop
  402a1c:	3708      	adds	r7, #8
  402a1e:	46bd      	mov	sp, r7
  402a20:	bd80      	pop	{r7, pc}
  402a22:	bf00      	nop
  402a24:	00400e1d 	.word	0x00400e1d

00402a28 <ioport_init>:
=======
  402818:	4931      	ldr	r1, [pc, #196]	; (4028e0 <write_image_to_file+0x194>)
  40281a:	482f      	ldr	r0, [pc, #188]	; (4028d8 <write_image_to_file+0x18c>)
  40281c:	4b31      	ldr	r3, [pc, #196]	; (4028e4 <write_image_to_file+0x198>)
  40281e:	4798      	blx	r3
	delay_s(2);
  402820:	4b29      	ldr	r3, [pc, #164]	; (4028c8 <write_image_to_file+0x17c>)
  402822:	4798      	blx	r3
  402824:	4603      	mov	r3, r0
  402826:	4619      	mov	r1, r3
  402828:	f04f 0200 	mov.w	r2, #0
  40282c:	460b      	mov	r3, r1
  40282e:	4614      	mov	r4, r2
  402830:	0160      	lsls	r0, r4, #5
  402832:	6078      	str	r0, [r7, #4]
  402834:	6878      	ldr	r0, [r7, #4]
  402836:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  40283a:	6078      	str	r0, [r7, #4]
  40283c:	015b      	lsls	r3, r3, #5
  40283e:	603b      	str	r3, [r7, #0]
  402840:	e9d7 3400 	ldrd	r3, r4, [r7]
  402844:	1a5b      	subs	r3, r3, r1
  402846:	eb64 0402 	sbc.w	r4, r4, r2
  40284a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
  40284e:	ea4b 7b93 	orr.w	fp, fp, r3, lsr #30
  402852:	ea4f 0a83 	mov.w	sl, r3, lsl #2
  402856:	4653      	mov	r3, sl
  402858:	465c      	mov	r4, fp
  40285a:	185b      	adds	r3, r3, r1
  40285c:	eb44 0402 	adc.w	r4, r4, r2
  402860:	ea4f 1904 	mov.w	r9, r4, lsl #4
  402864:	ea49 7913 	orr.w	r9, r9, r3, lsr #28
  402868:	ea4f 1803 	mov.w	r8, r3, lsl #4
  40286c:	4643      	mov	r3, r8
  40286e:	464c      	mov	r4, r9
  402870:	4619      	mov	r1, r3
  402872:	4622      	mov	r2, r4
  402874:	f243 63af 	movw	r3, #13999	; 0x36af
  402878:	f04f 0400 	mov.w	r4, #0
  40287c:	18cd      	adds	r5, r1, r3
  40287e:	eb42 0604 	adc.w	r6, r2, r4
  402882:	4628      	mov	r0, r5
  402884:	4631      	mov	r1, r6
  402886:	4c11      	ldr	r4, [pc, #68]	; (4028cc <write_image_to_file+0x180>)
  402888:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40288c:	f04f 0300 	mov.w	r3, #0
  402890:	47a0      	blx	r4
  402892:	4603      	mov	r3, r0
  402894:	460c      	mov	r4, r1
  402896:	4618      	mov	r0, r3
  402898:	4b0d      	ldr	r3, [pc, #52]	; (4028d0 <write_image_to_file+0x184>)
  40289a:	4798      	blx	r3
  40289c:	e000      	b.n	4028a0 <write_image_to_file+0x154>
		return;
  40289e:	bf00      	nop
	
}
  4028a0:	3744      	adds	r7, #68	; 0x44
  4028a2:	46bd      	mov	sp, r7
  4028a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4028a8:	00401cad 	.word	0x00401cad
  4028ac:	20000ac0 	.word	0x20000ac0
  4028b0:	20000ab8 	.word	0x20000ab8
  4028b4:	20000a68 	.word	0x20000a68
  4028b8:	00403791 	.word	0x00403791
  4028bc:	00408f94 	.word	0x00408f94
  4028c0:	0040382d 	.word	0x0040382d
  4028c4:	004026fd 	.word	0x004026fd
  4028c8:	004024d9 	.word	0x004024d9
  4028cc:	00403431 	.word	0x00403431
  4028d0:	20000001 	.word	0x20000001
  4028d4:	20000ac4 	.word	0x20000ac4
  4028d8:	40024000 	.word	0x40024000
  4028dc:	0040166f 	.word	0x0040166f
  4028e0:	00408fa8 	.word	0x00408fa8
  4028e4:	0040169d 	.word	0x0040169d

004028e8 <process_data_wifi>:
	
	input_line_wifi[input_pos_wifi] = in_byte;
	input_pos_wifi++;
}

void process_data_wifi(void) {
  4028e8:	b580      	push	{r7, lr}
  4028ea:	af00      	add	r7, sp, #0
	
	if (strstr(input_line_wifi, "None")) {
  4028ec:	490a      	ldr	r1, [pc, #40]	; (402918 <process_data_wifi+0x30>)
  4028ee:	480b      	ldr	r0, [pc, #44]	; (40291c <process_data_wifi+0x34>)
  4028f0:	4b0b      	ldr	r3, [pc, #44]	; (402920 <process_data_wifi+0x38>)
  4028f2:	4798      	blx	r3
  4028f4:	4603      	mov	r3, r0
  4028f6:	2b00      	cmp	r3, #0
  4028f8:	d002      	beq.n	402900 <process_data_wifi+0x18>
		wait_flag = 1;
  4028fa:	4b0a      	ldr	r3, [pc, #40]	; (402924 <process_data_wifi+0x3c>)
  4028fc:	2201      	movs	r2, #1
  4028fe:	601a      	str	r2, [r3, #0]
	} 
	if (strstr(input_line_wifi, "Image")){
  402900:	4909      	ldr	r1, [pc, #36]	; (402928 <process_data_wifi+0x40>)
  402902:	4806      	ldr	r0, [pc, #24]	; (40291c <process_data_wifi+0x34>)
  402904:	4b06      	ldr	r3, [pc, #24]	; (402920 <process_data_wifi+0x38>)
  402906:	4798      	blx	r3
  402908:	4603      	mov	r3, r0
  40290a:	2b00      	cmp	r3, #0
  40290c:	d002      	beq.n	402914 <process_data_wifi+0x2c>
		start_image_transfer = 1;
  40290e:	4b07      	ldr	r3, [pc, #28]	; (40292c <process_data_wifi+0x44>)
  402910:	2201      	movs	r2, #1
  402912:	601a      	str	r2, [r3, #0]
	}
  402914:	bf00      	nop
  402916:	bd80      	pop	{r7, pc}
  402918:	00408fb4 	.word	0x00408fb4
  40291c:	2000ce14 	.word	0x2000ce14
  402920:	00403b29 	.word	0x00403b29
  402924:	20000a70 	.word	0x20000a70
  402928:	00408fbc 	.word	0x00408fbc
  40292c:	20000a6c 	.word	0x20000a6c

00402930 <sysclk_enable_peripheral_clock>:
{
  402930:	b580      	push	{r7, lr}
  402932:	b082      	sub	sp, #8
  402934:	af00      	add	r7, sp, #0
  402936:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  402938:	6878      	ldr	r0, [r7, #4]
  40293a:	4b03      	ldr	r3, [pc, #12]	; (402948 <sysclk_enable_peripheral_clock+0x18>)
  40293c:	4798      	blx	r3
}
  40293e:	bf00      	nop
  402940:	3708      	adds	r7, #8
  402942:	46bd      	mov	sp, r7
  402944:	bd80      	pop	{r7, pc}
  402946:	bf00      	nop
  402948:	00400e1d 	.word	0x00400e1d

0040294c <ioport_init>:
>>>>>>> parent of 8583d8d... Updated write_image to file
 *
 * This function must be called before using any other functions in the IOPORT
 * service.
 */
static inline void ioport_init(void)
{
<<<<<<< HEAD
  402a28:	b580      	push	{r7, lr}
  402a2a:	af00      	add	r7, sp, #0
=======
  40294c:	b580      	push	{r7, lr}
  40294e:	af00      	add	r7, sp, #0
>>>>>>> parent of 8583d8d... Updated write_image to file
}

__always_inline static void arch_ioport_init(void)
{
#ifdef ID_PIOA
	sysclk_enable_peripheral_clock(ID_PIOA);
<<<<<<< HEAD
  402a2c:	200b      	movs	r0, #11
  402a2e:	4b03      	ldr	r3, [pc, #12]	; (402a3c <ioport_init+0x14>)
  402a30:	4798      	blx	r3
#endif
#ifdef ID_PIOB
	sysclk_enable_peripheral_clock(ID_PIOB);
  402a32:	200c      	movs	r0, #12
  402a34:	4b01      	ldr	r3, [pc, #4]	; (402a3c <ioport_init+0x14>)
  402a36:	4798      	blx	r3
	arch_ioport_init();
}
  402a38:	bf00      	nop
  402a3a:	bd80      	pop	{r7, pc}
  402a3c:	00402a0d 	.word	0x00402a0d

00402a40 <ioport_set_pin_dir>:
=======
  402950:	200b      	movs	r0, #11
  402952:	4b03      	ldr	r3, [pc, #12]	; (402960 <ioport_init+0x14>)
  402954:	4798      	blx	r3
#endif
#ifdef ID_PIOB
	sysclk_enable_peripheral_clock(ID_PIOB);
  402956:	200c      	movs	r0, #12
  402958:	4b01      	ldr	r3, [pc, #4]	; (402960 <ioport_init+0x14>)
  40295a:	4798      	blx	r3
	arch_ioport_init();
}
  40295c:	bf00      	nop
  40295e:	bd80      	pop	{r7, pc}
  402960:	00402931 	.word	0x00402931

00402964 <ioport_set_pin_dir>:
>>>>>>> parent of 8583d8d... Updated write_image to file
 * \param pin IOPORT pin to configure
 * \param dir Direction to set for the specified pin (\ref ioport_direction)
 */
static inline void ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
<<<<<<< HEAD
  402a40:	b480      	push	{r7}
  402a42:	b08d      	sub	sp, #52	; 0x34
  402a44:	af00      	add	r7, sp, #0
  402a46:	6078      	str	r0, [r7, #4]
  402a48:	460b      	mov	r3, r1
  402a4a:	70fb      	strb	r3, [r7, #3]
  402a4c:	687b      	ldr	r3, [r7, #4]
  402a4e:	62fb      	str	r3, [r7, #44]	; 0x2c
  402a50:	78fb      	ldrb	r3, [r7, #3]
  402a52:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
  402a56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  402a58:	627b      	str	r3, [r7, #36]	; 0x24
  402a5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402a5c:	623b      	str	r3, [r7, #32]
	return pin >> 5;
  402a5e:	6a3b      	ldr	r3, [r7, #32]
  402a60:	095b      	lsrs	r3, r3, #5
  402a62:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402a64:	69fb      	ldr	r3, [r7, #28]
  402a66:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402a6a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402a6e:	025b      	lsls	r3, r3, #9
=======
  402964:	b480      	push	{r7}
  402966:	b08d      	sub	sp, #52	; 0x34
  402968:	af00      	add	r7, sp, #0
  40296a:	6078      	str	r0, [r7, #4]
  40296c:	460b      	mov	r3, r1
  40296e:	70fb      	strb	r3, [r7, #3]
  402970:	687b      	ldr	r3, [r7, #4]
  402972:	62fb      	str	r3, [r7, #44]	; 0x2c
  402974:	78fb      	ldrb	r3, [r7, #3]
  402976:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
  40297a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  40297c:	627b      	str	r3, [r7, #36]	; 0x24
  40297e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402980:	623b      	str	r3, [r7, #32]
	return pin >> 5;
  402982:	6a3b      	ldr	r3, [r7, #32]
  402984:	095b      	lsrs	r3, r3, #5
  402986:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402988:	69fb      	ldr	r3, [r7, #28]
  40298a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  40298e:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402992:	025b      	lsls	r3, r3, #9
>>>>>>> parent of 8583d8d... Updated write_image to file
}

__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);
<<<<<<< HEAD
  402a70:	61bb      	str	r3, [r7, #24]

	if (dir == IOPORT_DIR_OUTPUT) {
  402a72:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  402a76:	2b01      	cmp	r3, #1
  402a78:	d109      	bne.n	402a8e <ioport_set_pin_dir+0x4e>
  402a7a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  402a7c:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
  402a7e:	697b      	ldr	r3, [r7, #20]
  402a80:	f003 031f 	and.w	r3, r3, #31
  402a84:	2201      	movs	r2, #1
  402a86:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402a88:	69bb      	ldr	r3, [r7, #24]
  402a8a:	611a      	str	r2, [r3, #16]
  402a8c:	e00c      	b.n	402aa8 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
  402a8e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  402a92:	2b00      	cmp	r3, #0
  402a94:	d108      	bne.n	402aa8 <ioport_set_pin_dir+0x68>
  402a96:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  402a98:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
  402a9a:	693b      	ldr	r3, [r7, #16]
  402a9c:	f003 031f 	and.w	r3, r3, #31
  402aa0:	2201      	movs	r2, #1
  402aa2:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  402aa4:	69bb      	ldr	r3, [r7, #24]
  402aa6:	615a      	str	r2, [r3, #20]
  402aa8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  402aaa:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  402aac:	68fb      	ldr	r3, [r7, #12]
  402aae:	f003 031f 	and.w	r3, r3, #31
  402ab2:	2201      	movs	r2, #1
  402ab4:	409a      	lsls	r2, r3
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  402ab6:	69bb      	ldr	r3, [r7, #24]
  402ab8:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	arch_ioport_set_pin_dir(pin, dir);
}
  402abc:	bf00      	nop
  402abe:	3734      	adds	r7, #52	; 0x34
  402ac0:	46bd      	mov	sp, r7
  402ac2:	bc80      	pop	{r7}
  402ac4:	4770      	bx	lr

00402ac6 <ioport_set_pin_level>:
=======
  402994:	61bb      	str	r3, [r7, #24]

	if (dir == IOPORT_DIR_OUTPUT) {
  402996:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  40299a:	2b01      	cmp	r3, #1
  40299c:	d109      	bne.n	4029b2 <ioport_set_pin_dir+0x4e>
  40299e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4029a0:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
  4029a2:	697b      	ldr	r3, [r7, #20]
  4029a4:	f003 031f 	and.w	r3, r3, #31
  4029a8:	2201      	movs	r2, #1
  4029aa:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4029ac:	69bb      	ldr	r3, [r7, #24]
  4029ae:	611a      	str	r2, [r3, #16]
  4029b0:	e00c      	b.n	4029cc <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
  4029b2:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  4029b6:	2b00      	cmp	r3, #0
  4029b8:	d108      	bne.n	4029cc <ioport_set_pin_dir+0x68>
  4029ba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4029bc:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
  4029be:	693b      	ldr	r3, [r7, #16]
  4029c0:	f003 031f 	and.w	r3, r3, #31
  4029c4:	2201      	movs	r2, #1
  4029c6:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4029c8:	69bb      	ldr	r3, [r7, #24]
  4029ca:	615a      	str	r2, [r3, #20]
  4029cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  4029ce:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  4029d0:	68fb      	ldr	r3, [r7, #12]
  4029d2:	f003 031f 	and.w	r3, r3, #31
  4029d6:	2201      	movs	r2, #1
  4029d8:	409a      	lsls	r2, r3
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4029da:	69bb      	ldr	r3, [r7, #24]
  4029dc:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	arch_ioport_set_pin_dir(pin, dir);
}
  4029e0:	bf00      	nop
  4029e2:	3734      	adds	r7, #52	; 0x34
  4029e4:	46bd      	mov	sp, r7
  4029e6:	bc80      	pop	{r7}
  4029e8:	4770      	bx	lr

004029ea <ioport_set_pin_level>:
>>>>>>> parent of 8583d8d... Updated write_image to file
 *
 * \param pin IOPORT pin to configure
 * \param level Logical value of the pin
 */
static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
{
<<<<<<< HEAD
  402ac6:	b480      	push	{r7}
  402ac8:	b08b      	sub	sp, #44	; 0x2c
  402aca:	af00      	add	r7, sp, #0
  402acc:	6078      	str	r0, [r7, #4]
  402ace:	460b      	mov	r3, r1
  402ad0:	70fb      	strb	r3, [r7, #3]
  402ad2:	687b      	ldr	r3, [r7, #4]
  402ad4:	627b      	str	r3, [r7, #36]	; 0x24
  402ad6:	78fb      	ldrb	r3, [r7, #3]
  402ad8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  402adc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402ade:	61fb      	str	r3, [r7, #28]
  402ae0:	69fb      	ldr	r3, [r7, #28]
  402ae2:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  402ae4:	69bb      	ldr	r3, [r7, #24]
  402ae6:	095b      	lsrs	r3, r3, #5
  402ae8:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402aea:	697b      	ldr	r3, [r7, #20]
  402aec:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402af0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402af4:	025b      	lsls	r3, r3, #9
=======
  4029ea:	b480      	push	{r7}
  4029ec:	b08b      	sub	sp, #44	; 0x2c
  4029ee:	af00      	add	r7, sp, #0
  4029f0:	6078      	str	r0, [r7, #4]
  4029f2:	460b      	mov	r3, r1
  4029f4:	70fb      	strb	r3, [r7, #3]
  4029f6:	687b      	ldr	r3, [r7, #4]
  4029f8:	627b      	str	r3, [r7, #36]	; 0x24
  4029fa:	78fb      	ldrb	r3, [r7, #3]
  4029fc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  402a00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402a02:	61fb      	str	r3, [r7, #28]
  402a04:	69fb      	ldr	r3, [r7, #28]
  402a06:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  402a08:	69bb      	ldr	r3, [r7, #24]
  402a0a:	095b      	lsrs	r3, r3, #5
  402a0c:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402a0e:	697b      	ldr	r3, [r7, #20]
  402a10:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402a14:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402a18:	025b      	lsls	r3, r3, #9
>>>>>>> parent of 8583d8d... Updated write_image to file
}

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);
<<<<<<< HEAD
  402af6:	613b      	str	r3, [r7, #16]

	if (level) {
  402af8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  402afc:	2b00      	cmp	r3, #0
  402afe:	d009      	beq.n	402b14 <ioport_set_pin_level+0x4e>
  402b00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402b02:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  402b04:	68fb      	ldr	r3, [r7, #12]
  402b06:	f003 031f 	and.w	r3, r3, #31
  402b0a:	2201      	movs	r2, #1
  402b0c:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402b0e:	693b      	ldr	r3, [r7, #16]
  402b10:	631a      	str	r2, [r3, #48]	; 0x30
	arch_ioport_set_pin_level(pin, level);
}
  402b12:	e008      	b.n	402b26 <ioport_set_pin_level+0x60>
  402b14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402b16:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  402b18:	68bb      	ldr	r3, [r7, #8]
  402b1a:	f003 031f 	and.w	r3, r3, #31
  402b1e:	2201      	movs	r2, #1
  402b20:	409a      	lsls	r2, r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  402b22:	693b      	ldr	r3, [r7, #16]
  402b24:	635a      	str	r2, [r3, #52]	; 0x34
  402b26:	bf00      	nop
  402b28:	372c      	adds	r7, #44	; 0x2c
  402b2a:	46bd      	mov	sp, r7
  402b2c:	bc80      	pop	{r7}
  402b2e:	4770      	bx	lr

00402b30 <board_init>:
=======
  402a1a:	613b      	str	r3, [r7, #16]

	if (level) {
  402a1c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  402a20:	2b00      	cmp	r3, #0
  402a22:	d009      	beq.n	402a38 <ioport_set_pin_level+0x4e>
  402a24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402a26:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  402a28:	68fb      	ldr	r3, [r7, #12]
  402a2a:	f003 031f 	and.w	r3, r3, #31
  402a2e:	2201      	movs	r2, #1
  402a30:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402a32:	693b      	ldr	r3, [r7, #16]
  402a34:	631a      	str	r2, [r3, #48]	; 0x30
	arch_ioport_set_pin_level(pin, level);
}
  402a36:	e008      	b.n	402a4a <ioport_set_pin_level+0x60>
  402a38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402a3a:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  402a3c:	68bb      	ldr	r3, [r7, #8]
  402a3e:	f003 031f 	and.w	r3, r3, #31
  402a42:	2201      	movs	r2, #1
  402a44:	409a      	lsls	r2, r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  402a46:	693b      	ldr	r3, [r7, #16]
  402a48:	635a      	str	r2, [r3, #52]	; 0x34
  402a4a:	bf00      	nop
  402a4c:	372c      	adds	r7, #44	; 0x2c
  402a4e:	46bd      	mov	sp, r7
  402a50:	bc80      	pop	{r7}
  402a52:	4770      	bx	lr

00402a54 <board_init>:
>>>>>>> parent of 8583d8d... Updated write_image to file
#include <board.h>
#include <conf_board.h>
#include "wifi.h"

void board_init(void)
{
<<<<<<< HEAD
  402b30:	b580      	push	{r7, lr}
  402b32:	af00      	add	r7, sp, #0
	
	ioport_init();
  402b34:	4b0f      	ldr	r3, [pc, #60]	; (402b74 <board_init+0x44>)
  402b36:	4798      	blx	r3
	
	ioport_set_pin_dir(WIFI_RESET_PIN, IOPORT_DIR_OUTPUT);
  402b38:	2101      	movs	r1, #1
  402b3a:	2000      	movs	r0, #0
  402b3c:	4b0e      	ldr	r3, [pc, #56]	; (402b78 <board_init+0x48>)
  402b3e:	4798      	blx	r3
	ioport_set_pin_level(WIFI_RESET_PIN, true);
  402b40:	2101      	movs	r1, #1
  402b42:	2000      	movs	r0, #0
  402b44:	4b0d      	ldr	r3, [pc, #52]	; (402b7c <board_init+0x4c>)
  402b46:	4798      	blx	r3
	
	//ioport_set_pin_dir(PIN_LED, IOPORT_DIR_OUTPUT);
	//ioport_set_pin_level(PIN_LED, false);
	
	ioport_set_pin_dir(WIFI_CTS_PIN, IOPORT_DIR_OUTPUT);
  402b48:	2101      	movs	r1, #1
  402b4a:	2007      	movs	r0, #7
  402b4c:	4b0a      	ldr	r3, [pc, #40]	; (402b78 <board_init+0x48>)
  402b4e:	4798      	blx	r3
	ioport_set_pin_level(WIFI_CTS_PIN, false);
  402b50:	2100      	movs	r1, #0
  402b52:	2007      	movs	r0, #7
  402b54:	4b09      	ldr	r3, [pc, #36]	; (402b7c <board_init+0x4c>)
  402b56:	4798      	blx	r3
	
	ioport_set_pin_dir(CAM_RST, IOPORT_DIR_OUTPUT);
  402b58:	2101      	movs	r1, #1
  402b5a:	2014      	movs	r0, #20
  402b5c:	4b06      	ldr	r3, [pc, #24]	; (402b78 <board_init+0x48>)
  402b5e:	4798      	blx	r3
	ioport_set_pin_dir(CAM_RST, false);
  402b60:	2100      	movs	r1, #0
  402b62:	2014      	movs	r0, #20
  402b64:	4b04      	ldr	r3, [pc, #16]	; (402b78 <board_init+0x48>)
  402b66:	4798      	blx	r3
	
	ioport_set_pin_dir(WIFI_STATUS, IOPORT_DIR_INPUT);
  402b68:	2100      	movs	r1, #0
  402b6a:	200a      	movs	r0, #10
  402b6c:	4b02      	ldr	r3, [pc, #8]	; (402b78 <board_init+0x48>)
  402b6e:	4798      	blx	r3
=======
  402a54:	b580      	push	{r7, lr}
  402a56:	af00      	add	r7, sp, #0
	
	ioport_init();
  402a58:	4b13      	ldr	r3, [pc, #76]	; (402aa8 <board_init+0x54>)
  402a5a:	4798      	blx	r3
	
	ioport_set_pin_dir(WIFI_RESET_PIN, IOPORT_DIR_OUTPUT);
  402a5c:	2101      	movs	r1, #1
  402a5e:	2000      	movs	r0, #0
  402a60:	4b12      	ldr	r3, [pc, #72]	; (402aac <board_init+0x58>)
  402a62:	4798      	blx	r3
	ioport_set_pin_level(WIFI_RESET_PIN, true);
  402a64:	2101      	movs	r1, #1
  402a66:	2000      	movs	r0, #0
  402a68:	4b11      	ldr	r3, [pc, #68]	; (402ab0 <board_init+0x5c>)
  402a6a:	4798      	blx	r3
	
	ioport_set_pin_dir(PIN_LED, IOPORT_DIR_OUTPUT);
  402a6c:	2101      	movs	r1, #1
  402a6e:	2016      	movs	r0, #22
  402a70:	4b0e      	ldr	r3, [pc, #56]	; (402aac <board_init+0x58>)
  402a72:	4798      	blx	r3
	ioport_set_pin_level(PIN_LED, false);
  402a74:	2100      	movs	r1, #0
  402a76:	2016      	movs	r0, #22
  402a78:	4b0d      	ldr	r3, [pc, #52]	; (402ab0 <board_init+0x5c>)
  402a7a:	4798      	blx	r3
	
	ioport_set_pin_dir(WIFI_CTS_PIN, IOPORT_DIR_OUTPUT);
  402a7c:	2101      	movs	r1, #1
  402a7e:	2007      	movs	r0, #7
  402a80:	4b0a      	ldr	r3, [pc, #40]	; (402aac <board_init+0x58>)
  402a82:	4798      	blx	r3
	ioport_set_pin_level(WIFI_CTS_PIN, false);
  402a84:	2100      	movs	r1, #0
  402a86:	2007      	movs	r0, #7
  402a88:	4b09      	ldr	r3, [pc, #36]	; (402ab0 <board_init+0x5c>)
  402a8a:	4798      	blx	r3
	
	ioport_set_pin_dir(CAM_RST, IOPORT_DIR_OUTPUT);
  402a8c:	2101      	movs	r1, #1
  402a8e:	2014      	movs	r0, #20
  402a90:	4b06      	ldr	r3, [pc, #24]	; (402aac <board_init+0x58>)
  402a92:	4798      	blx	r3
	ioport_set_pin_dir(CAM_RST, false);
  402a94:	2100      	movs	r1, #0
  402a96:	2014      	movs	r0, #20
  402a98:	4b04      	ldr	r3, [pc, #16]	; (402aac <board_init+0x58>)
  402a9a:	4798      	blx	r3
	
	ioport_set_pin_dir(WIFI_STATUS, IOPORT_DIR_INPUT);
  402a9c:	2100      	movs	r1, #0
  402a9e:	200a      	movs	r0, #10
  402aa0:	4b02      	ldr	r3, [pc, #8]	; (402aac <board_init+0x58>)
  402aa2:	4798      	blx	r3
>>>>>>> parent of 8583d8d... Updated write_image to file
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
}
<<<<<<< HEAD
  402b70:	bf00      	nop
  402b72:	bd80      	pop	{r7, pc}
  402b74:	00402a29 	.word	0x00402a29
  402b78:	00402a41 	.word	0x00402a41
  402b7c:	00402ac7 	.word	0x00402ac7

00402b80 <Reset_Handler>:
=======
  402aa4:	bf00      	nop
  402aa6:	bd80      	pop	{r7, pc}
  402aa8:	0040294d 	.word	0x0040294d
  402aac:	00402965 	.word	0x00402965
  402ab0:	004029eb 	.word	0x004029eb

00402ab4 <Reset_Handler>:
>>>>>>> parent of 8583d8d... Updated write_image to file
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
<<<<<<< HEAD
  402b80:	b580      	push	{r7, lr}
  402b82:	b084      	sub	sp, #16
  402b84:	af00      	add	r7, sp, #0
=======
  402ab4:	b580      	push	{r7, lr}
  402ab6:	b084      	sub	sp, #16
  402ab8:	af00      	add	r7, sp, #0
>>>>>>> parent of 8583d8d... Updated write_image to file
	uint32_t *pSrc, *pDest;

	/* Initialize the relocate segment */
	pSrc = &_etext;
<<<<<<< HEAD
  402b86:	4b27      	ldr	r3, [pc, #156]	; (402c24 <Reset_Handler+0xa4>)
  402b88:	60fb      	str	r3, [r7, #12]
	pDest = &_srelocate;
  402b8a:	4b27      	ldr	r3, [pc, #156]	; (402c28 <Reset_Handler+0xa8>)
  402b8c:	60bb      	str	r3, [r7, #8]

	if (pSrc > pDest) {
  402b8e:	68fa      	ldr	r2, [r7, #12]
  402b90:	68bb      	ldr	r3, [r7, #8]
  402b92:	429a      	cmp	r2, r3
  402b94:	d90d      	bls.n	402bb2 <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  402b96:	e007      	b.n	402ba8 <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
  402b98:	68bb      	ldr	r3, [r7, #8]
  402b9a:	1d1a      	adds	r2, r3, #4
  402b9c:	60ba      	str	r2, [r7, #8]
  402b9e:	68fa      	ldr	r2, [r7, #12]
  402ba0:	1d11      	adds	r1, r2, #4
  402ba2:	60f9      	str	r1, [r7, #12]
  402ba4:	6812      	ldr	r2, [r2, #0]
  402ba6:	601a      	str	r2, [r3, #0]
		for (; pDest < &_erelocate;) {
  402ba8:	68bb      	ldr	r3, [r7, #8]
  402baa:	4a20      	ldr	r2, [pc, #128]	; (402c2c <Reset_Handler+0xac>)
  402bac:	4293      	cmp	r3, r2
  402bae:	d3f3      	bcc.n	402b98 <Reset_Handler+0x18>
  402bb0:	e020      	b.n	402bf4 <Reset_Handler+0x74>
		}
	} else if (pSrc < pDest) {
  402bb2:	68fa      	ldr	r2, [r7, #12]
  402bb4:	68bb      	ldr	r3, [r7, #8]
  402bb6:	429a      	cmp	r2, r3
  402bb8:	d21c      	bcs.n	402bf4 <Reset_Handler+0x74>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  402bba:	4a1c      	ldr	r2, [pc, #112]	; (402c2c <Reset_Handler+0xac>)
  402bbc:	4b1a      	ldr	r3, [pc, #104]	; (402c28 <Reset_Handler+0xa8>)
  402bbe:	1ad3      	subs	r3, r2, r3
  402bc0:	607b      	str	r3, [r7, #4]
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  402bc2:	68fa      	ldr	r2, [r7, #12]
  402bc4:	687b      	ldr	r3, [r7, #4]
  402bc6:	4413      	add	r3, r2
  402bc8:	3b04      	subs	r3, #4
  402bca:	60fb      	str	r3, [r7, #12]
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
  402bcc:	68ba      	ldr	r2, [r7, #8]
  402bce:	687b      	ldr	r3, [r7, #4]
  402bd0:	4413      	add	r3, r2
  402bd2:	3b04      	subs	r3, #4
  402bd4:	60bb      	str	r3, [r7, #8]
		for (;nb_bytes;nb_bytes -= 4) {
  402bd6:	e00a      	b.n	402bee <Reset_Handler+0x6e>
			*pDest-- = *pSrc--;
  402bd8:	68bb      	ldr	r3, [r7, #8]
  402bda:	1f1a      	subs	r2, r3, #4
  402bdc:	60ba      	str	r2, [r7, #8]
  402bde:	68fa      	ldr	r2, [r7, #12]
  402be0:	1f11      	subs	r1, r2, #4
  402be2:	60f9      	str	r1, [r7, #12]
  402be4:	6812      	ldr	r2, [r2, #0]
  402be6:	601a      	str	r2, [r3, #0]
		for (;nb_bytes;nb_bytes -= 4) {
  402be8:	687b      	ldr	r3, [r7, #4]
  402bea:	3b04      	subs	r3, #4
  402bec:	607b      	str	r3, [r7, #4]
  402bee:	687b      	ldr	r3, [r7, #4]
  402bf0:	2b00      	cmp	r3, #0
  402bf2:	d1f1      	bne.n	402bd8 <Reset_Handler+0x58>
		}
	}
	__NOP();
  402bf4:	bf00      	nop

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  402bf6:	4b0e      	ldr	r3, [pc, #56]	; (402c30 <Reset_Handler+0xb0>)
  402bf8:	60bb      	str	r3, [r7, #8]
  402bfa:	e004      	b.n	402c06 <Reset_Handler+0x86>
		*pDest++ = 0;
  402bfc:	68bb      	ldr	r3, [r7, #8]
  402bfe:	1d1a      	adds	r2, r3, #4
  402c00:	60ba      	str	r2, [r7, #8]
  402c02:	2200      	movs	r2, #0
  402c04:	601a      	str	r2, [r3, #0]
	for (pDest = &_szero; pDest < &_ezero;) {
  402c06:	68bb      	ldr	r3, [r7, #8]
  402c08:	4a0a      	ldr	r2, [pc, #40]	; (402c34 <Reset_Handler+0xb4>)
  402c0a:	4293      	cmp	r3, r2
  402c0c:	d3f6      	bcc.n	402bfc <Reset_Handler+0x7c>
=======
  402aba:	4b27      	ldr	r3, [pc, #156]	; (402b58 <Reset_Handler+0xa4>)
  402abc:	60fb      	str	r3, [r7, #12]
	pDest = &_srelocate;
  402abe:	4b27      	ldr	r3, [pc, #156]	; (402b5c <Reset_Handler+0xa8>)
  402ac0:	60bb      	str	r3, [r7, #8]

	if (pSrc > pDest) {
  402ac2:	68fa      	ldr	r2, [r7, #12]
  402ac4:	68bb      	ldr	r3, [r7, #8]
  402ac6:	429a      	cmp	r2, r3
  402ac8:	d90d      	bls.n	402ae6 <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  402aca:	e007      	b.n	402adc <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
  402acc:	68bb      	ldr	r3, [r7, #8]
  402ace:	1d1a      	adds	r2, r3, #4
  402ad0:	60ba      	str	r2, [r7, #8]
  402ad2:	68fa      	ldr	r2, [r7, #12]
  402ad4:	1d11      	adds	r1, r2, #4
  402ad6:	60f9      	str	r1, [r7, #12]
  402ad8:	6812      	ldr	r2, [r2, #0]
  402ada:	601a      	str	r2, [r3, #0]
		for (; pDest < &_erelocate;) {
  402adc:	68bb      	ldr	r3, [r7, #8]
  402ade:	4a20      	ldr	r2, [pc, #128]	; (402b60 <Reset_Handler+0xac>)
  402ae0:	4293      	cmp	r3, r2
  402ae2:	d3f3      	bcc.n	402acc <Reset_Handler+0x18>
  402ae4:	e020      	b.n	402b28 <Reset_Handler+0x74>
		}
	} else if (pSrc < pDest) {
  402ae6:	68fa      	ldr	r2, [r7, #12]
  402ae8:	68bb      	ldr	r3, [r7, #8]
  402aea:	429a      	cmp	r2, r3
  402aec:	d21c      	bcs.n	402b28 <Reset_Handler+0x74>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  402aee:	4a1c      	ldr	r2, [pc, #112]	; (402b60 <Reset_Handler+0xac>)
  402af0:	4b1a      	ldr	r3, [pc, #104]	; (402b5c <Reset_Handler+0xa8>)
  402af2:	1ad3      	subs	r3, r2, r3
  402af4:	607b      	str	r3, [r7, #4]
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  402af6:	68fa      	ldr	r2, [r7, #12]
  402af8:	687b      	ldr	r3, [r7, #4]
  402afa:	4413      	add	r3, r2
  402afc:	3b04      	subs	r3, #4
  402afe:	60fb      	str	r3, [r7, #12]
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
  402b00:	68ba      	ldr	r2, [r7, #8]
  402b02:	687b      	ldr	r3, [r7, #4]
  402b04:	4413      	add	r3, r2
  402b06:	3b04      	subs	r3, #4
  402b08:	60bb      	str	r3, [r7, #8]
		for (;nb_bytes;nb_bytes -= 4) {
  402b0a:	e00a      	b.n	402b22 <Reset_Handler+0x6e>
			*pDest-- = *pSrc--;
  402b0c:	68bb      	ldr	r3, [r7, #8]
  402b0e:	1f1a      	subs	r2, r3, #4
  402b10:	60ba      	str	r2, [r7, #8]
  402b12:	68fa      	ldr	r2, [r7, #12]
  402b14:	1f11      	subs	r1, r2, #4
  402b16:	60f9      	str	r1, [r7, #12]
  402b18:	6812      	ldr	r2, [r2, #0]
  402b1a:	601a      	str	r2, [r3, #0]
		for (;nb_bytes;nb_bytes -= 4) {
  402b1c:	687b      	ldr	r3, [r7, #4]
  402b1e:	3b04      	subs	r3, #4
  402b20:	607b      	str	r3, [r7, #4]
  402b22:	687b      	ldr	r3, [r7, #4]
  402b24:	2b00      	cmp	r3, #0
  402b26:	d1f1      	bne.n	402b0c <Reset_Handler+0x58>
		}
	}
	__NOP();
  402b28:	bf00      	nop

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  402b2a:	4b0e      	ldr	r3, [pc, #56]	; (402b64 <Reset_Handler+0xb0>)
  402b2c:	60bb      	str	r3, [r7, #8]
  402b2e:	e004      	b.n	402b3a <Reset_Handler+0x86>
		*pDest++ = 0;
  402b30:	68bb      	ldr	r3, [r7, #8]
  402b32:	1d1a      	adds	r2, r3, #4
  402b34:	60ba      	str	r2, [r7, #8]
  402b36:	2200      	movs	r2, #0
  402b38:	601a      	str	r2, [r3, #0]
	for (pDest = &_szero; pDest < &_ezero;) {
  402b3a:	68bb      	ldr	r3, [r7, #8]
  402b3c:	4a0a      	ldr	r2, [pc, #40]	; (402b68 <Reset_Handler+0xb4>)
  402b3e:	4293      	cmp	r3, r2
  402b40:	d3f6      	bcc.n	402b30 <Reset_Handler+0x7c>
>>>>>>> parent of 8583d8d... Updated write_image to file
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
<<<<<<< HEAD
  402c0e:	4b0a      	ldr	r3, [pc, #40]	; (402c38 <Reset_Handler+0xb8>)
  402c10:	60fb      	str	r3, [r7, #12]
	SCB->VTOR = ((uint32_t) pSrc);
  402c12:	4a0a      	ldr	r2, [pc, #40]	; (402c3c <Reset_Handler+0xbc>)
  402c14:	68fb      	ldr	r3, [r7, #12]
  402c16:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  402c18:	4b09      	ldr	r3, [pc, #36]	; (402c40 <Reset_Handler+0xc0>)
  402c1a:	4798      	blx	r3

	/* Branch to main function */
	main();
  402c1c:	4b09      	ldr	r3, [pc, #36]	; (402c44 <Reset_Handler+0xc4>)
  402c1e:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  402c20:	e7fe      	b.n	402c20 <Reset_Handler+0xa0>
  402c22:	bf00      	nop
  402c24:	0040953c 	.word	0x0040953c
  402c28:	20000000 	.word	0x20000000
  402c2c:	200009bc 	.word	0x200009bc
  402c30:	200009bc 	.word	0x200009bc
  402c34:	2000d200 	.word	0x2000d200
  402c38:	00400000 	.word	0x00400000
  402c3c:	e000ed00 	.word	0xe000ed00
  402c40:	0040392d 	.word	0x0040392d
  402c44:	00403031 	.word	0x00403031

00402c48 <Dummy_Handler>:
=======
  402b42:	4b0a      	ldr	r3, [pc, #40]	; (402b6c <Reset_Handler+0xb8>)
  402b44:	60fb      	str	r3, [r7, #12]
	SCB->VTOR = ((uint32_t) pSrc);
  402b46:	4a0a      	ldr	r2, [pc, #40]	; (402b70 <Reset_Handler+0xbc>)
  402b48:	68fb      	ldr	r3, [r7, #12]
  402b4a:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  402b4c:	4b09      	ldr	r3, [pc, #36]	; (402b74 <Reset_Handler+0xc0>)
  402b4e:	4798      	blx	r3

	/* Branch to main function */
	main();
  402b50:	4b09      	ldr	r3, [pc, #36]	; (402b78 <Reset_Handler+0xc4>)
  402b52:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  402b54:	e7fe      	b.n	402b54 <Reset_Handler+0xa0>
  402b56:	bf00      	nop
  402b58:	0040936c 	.word	0x0040936c
  402b5c:	20000000 	.word	0x20000000
  402b60:	200009c0 	.word	0x200009c0
  402b64:	200009c0 	.word	0x200009c0
  402b68:	2000d224 	.word	0x2000d224
  402b6c:	00400000 	.word	0x00400000
  402b70:	e000ed00 	.word	0xe000ed00
  402b74:	00403741 	.word	0x00403741
  402b78:	00402f65 	.word	0x00402f65

00402b7c <Dummy_Handler>:
>>>>>>> parent of 8583d8d... Updated write_image to file

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
<<<<<<< HEAD
  402c48:	b480      	push	{r7}
  402c4a:	af00      	add	r7, sp, #0
	while (1) {
  402c4c:	e7fe      	b.n	402c4c <Dummy_Handler+0x4>
	...

00402c50 <SystemCoreClockUpdate>:
=======
  402b7c:	b480      	push	{r7}
  402b7e:	af00      	add	r7, sp, #0
	while (1) {
  402b80:	e7fe      	b.n	402b80 <Dummy_Handler+0x4>
	...

00402b84 <SystemCoreClockUpdate>:
>>>>>>> parent of 8583d8d... Updated write_image to file

/**
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
<<<<<<< HEAD
  402c50:	b480      	push	{r7}
  402c52:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  402c54:	4b5d      	ldr	r3, [pc, #372]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402c56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402c58:	f003 0303 	and.w	r3, r3, #3
  402c5c:	2b03      	cmp	r3, #3
  402c5e:	f200 8096 	bhi.w	402d8e <SystemCoreClockUpdate+0x13e>
  402c62:	a201      	add	r2, pc, #4	; (adr r2, 402c68 <SystemCoreClockUpdate+0x18>)
  402c64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402c68:	00402c79 	.word	0x00402c79
  402c6c:	00402c99 	.word	0x00402c99
  402c70:	00402ce3 	.word	0x00402ce3
  402c74:	00402ce3 	.word	0x00402ce3
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402c78:	4b55      	ldr	r3, [pc, #340]	; (402dd0 <SystemCoreClockUpdate+0x180>)
  402c7a:	695b      	ldr	r3, [r3, #20]
  402c7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
  402c80:	2b00      	cmp	r3, #0
  402c82:	d004      	beq.n	402c8e <SystemCoreClockUpdate+0x3e>
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  402c84:	4b53      	ldr	r3, [pc, #332]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402c86:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  402c8a:	601a      	str	r2, [r3, #0]
=======
  402b84:	b480      	push	{r7}
  402b86:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  402b88:	4b5d      	ldr	r3, [pc, #372]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402b8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402b8c:	f003 0303 	and.w	r3, r3, #3
  402b90:	2b03      	cmp	r3, #3
  402b92:	f200 8096 	bhi.w	402cc2 <SystemCoreClockUpdate+0x13e>
  402b96:	a201      	add	r2, pc, #4	; (adr r2, 402b9c <SystemCoreClockUpdate+0x18>)
  402b98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402b9c:	00402bad 	.word	0x00402bad
  402ba0:	00402bcd 	.word	0x00402bcd
  402ba4:	00402c17 	.word	0x00402c17
  402ba8:	00402c17 	.word	0x00402c17
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402bac:	4b55      	ldr	r3, [pc, #340]	; (402d04 <SystemCoreClockUpdate+0x180>)
  402bae:	695b      	ldr	r3, [r3, #20]
  402bb0:	f003 0380 	and.w	r3, r3, #128	; 0x80
  402bb4:	2b00      	cmp	r3, #0
  402bb6:	d004      	beq.n	402bc2 <SystemCoreClockUpdate+0x3e>
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  402bb8:	4b53      	ldr	r3, [pc, #332]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402bba:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  402bbe:	601a      	str	r2, [r3, #0]
>>>>>>> parent of 8583d8d... Updated write_image to file
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
			}
		break;
<<<<<<< HEAD
  402c8c:	e080      	b.n	402d90 <SystemCoreClockUpdate+0x140>
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402c8e:	4b51      	ldr	r3, [pc, #324]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402c90:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
  402c94:	601a      	str	r2, [r3, #0]
		break;
  402c96:	e07b      	b.n	402d90 <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402c98:	4b4c      	ldr	r3, [pc, #304]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402c9a:	6a1b      	ldr	r3, [r3, #32]
  402c9c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  402ca0:	2b00      	cmp	r3, #0
  402ca2:	d003      	beq.n	402cac <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL;
  402ca4:	4b4b      	ldr	r3, [pc, #300]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402ca6:	4a4c      	ldr	r2, [pc, #304]	; (402dd8 <SystemCoreClockUpdate+0x188>)
  402ca8:	601a      	str	r2, [r3, #0]
=======
  402bc0:	e080      	b.n	402cc4 <SystemCoreClockUpdate+0x140>
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402bc2:	4b51      	ldr	r3, [pc, #324]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402bc4:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
  402bc8:	601a      	str	r2, [r3, #0]
		break;
  402bca:	e07b      	b.n	402cc4 <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402bcc:	4b4c      	ldr	r3, [pc, #304]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402bce:	6a1b      	ldr	r3, [r3, #32]
  402bd0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  402bd4:	2b00      	cmp	r3, #0
  402bd6:	d003      	beq.n	402be0 <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL;
  402bd8:	4b4b      	ldr	r3, [pc, #300]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402bda:	4a4c      	ldr	r2, [pc, #304]	; (402d0c <SystemCoreClockUpdate+0x188>)
  402bdc:	601a      	str	r2, [r3, #0]
>>>>>>> parent of 8583d8d... Updated write_image to file
			
			default:
			break;
			}
		}
		break;
<<<<<<< HEAD
  402caa:	e071      	b.n	402d90 <SystemCoreClockUpdate+0x140>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402cac:	4b49      	ldr	r3, [pc, #292]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402cae:	4a4b      	ldr	r2, [pc, #300]	; (402ddc <SystemCoreClockUpdate+0x18c>)
  402cb0:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402cb2:	4b46      	ldr	r3, [pc, #280]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402cb4:	6a1b      	ldr	r3, [r3, #32]
  402cb6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402cba:	2b10      	cmp	r3, #16
  402cbc:	d008      	beq.n	402cd0 <SystemCoreClockUpdate+0x80>
  402cbe:	2b20      	cmp	r3, #32
  402cc0:	d00a      	beq.n	402cd8 <SystemCoreClockUpdate+0x88>
  402cc2:	2b00      	cmp	r3, #0
  402cc4:	d000      	beq.n	402cc8 <SystemCoreClockUpdate+0x78>
			break;
  402cc6:	e00b      	b.n	402ce0 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402cc8:	4b42      	ldr	r3, [pc, #264]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402cca:	4a44      	ldr	r2, [pc, #272]	; (402ddc <SystemCoreClockUpdate+0x18c>)
  402ccc:	601a      	str	r2, [r3, #0]
			break;
  402cce:	e007      	b.n	402ce0 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402cd0:	4b40      	ldr	r3, [pc, #256]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402cd2:	4a43      	ldr	r2, [pc, #268]	; (402de0 <SystemCoreClockUpdate+0x190>)
  402cd4:	601a      	str	r2, [r3, #0]
			break;
  402cd6:	e003      	b.n	402ce0 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402cd8:	4b3e      	ldr	r3, [pc, #248]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402cda:	4a3f      	ldr	r2, [pc, #252]	; (402dd8 <SystemCoreClockUpdate+0x188>)
  402cdc:	601a      	str	r2, [r3, #0]
			break;
  402cde:	bf00      	nop
		break;
  402ce0:	e056      	b.n	402d90 <SystemCoreClockUpdate+0x140>
=======
  402bde:	e071      	b.n	402cc4 <SystemCoreClockUpdate+0x140>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402be0:	4b49      	ldr	r3, [pc, #292]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402be2:	4a4b      	ldr	r2, [pc, #300]	; (402d10 <SystemCoreClockUpdate+0x18c>)
  402be4:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402be6:	4b46      	ldr	r3, [pc, #280]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402be8:	6a1b      	ldr	r3, [r3, #32]
  402bea:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402bee:	2b10      	cmp	r3, #16
  402bf0:	d008      	beq.n	402c04 <SystemCoreClockUpdate+0x80>
  402bf2:	2b20      	cmp	r3, #32
  402bf4:	d00a      	beq.n	402c0c <SystemCoreClockUpdate+0x88>
  402bf6:	2b00      	cmp	r3, #0
  402bf8:	d000      	beq.n	402bfc <SystemCoreClockUpdate+0x78>
			break;
  402bfa:	e00b      	b.n	402c14 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402bfc:	4b42      	ldr	r3, [pc, #264]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402bfe:	4a44      	ldr	r2, [pc, #272]	; (402d10 <SystemCoreClockUpdate+0x18c>)
  402c00:	601a      	str	r2, [r3, #0]
			break;
  402c02:	e007      	b.n	402c14 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402c04:	4b40      	ldr	r3, [pc, #256]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c06:	4a43      	ldr	r2, [pc, #268]	; (402d14 <SystemCoreClockUpdate+0x190>)
  402c08:	601a      	str	r2, [r3, #0]
			break;
  402c0a:	e003      	b.n	402c14 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402c0c:	4b3e      	ldr	r3, [pc, #248]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c0e:	4a3f      	ldr	r2, [pc, #252]	; (402d0c <SystemCoreClockUpdate+0x188>)
  402c10:	601a      	str	r2, [r3, #0]
			break;
  402c12:	bf00      	nop
		break;
  402c14:	e056      	b.n	402cc4 <SystemCoreClockUpdate+0x140>
>>>>>>> parent of 8583d8d... Updated write_image to file
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
<<<<<<< HEAD
  402ce2:	4b3a      	ldr	r3, [pc, #232]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402ce4:	6a1b      	ldr	r3, [r3, #32]
  402ce6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  402cea:	2b00      	cmp	r3, #0
  402cec:	d003      	beq.n	402cf6 <SystemCoreClockUpdate+0xa6>
				SystemCoreClock = CHIP_FREQ_XTAL;
  402cee:	4b39      	ldr	r3, [pc, #228]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402cf0:	4a39      	ldr	r2, [pc, #228]	; (402dd8 <SystemCoreClockUpdate+0x188>)
  402cf2:	601a      	str	r2, [r3, #0]
  402cf4:	e019      	b.n	402d2a <SystemCoreClockUpdate+0xda>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402cf6:	4b37      	ldr	r3, [pc, #220]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402cf8:	4a38      	ldr	r2, [pc, #224]	; (402ddc <SystemCoreClockUpdate+0x18c>)
  402cfa:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402cfc:	4b33      	ldr	r3, [pc, #204]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402cfe:	6a1b      	ldr	r3, [r3, #32]
  402d00:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402d04:	2b10      	cmp	r3, #16
  402d06:	d008      	beq.n	402d1a <SystemCoreClockUpdate+0xca>
  402d08:	2b20      	cmp	r3, #32
  402d0a:	d00a      	beq.n	402d22 <SystemCoreClockUpdate+0xd2>
  402d0c:	2b00      	cmp	r3, #0
  402d0e:	d000      	beq.n	402d12 <SystemCoreClockUpdate+0xc2>
=======
  402c16:	4b3a      	ldr	r3, [pc, #232]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402c18:	6a1b      	ldr	r3, [r3, #32]
  402c1a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  402c1e:	2b00      	cmp	r3, #0
  402c20:	d003      	beq.n	402c2a <SystemCoreClockUpdate+0xa6>
				SystemCoreClock = CHIP_FREQ_XTAL;
  402c22:	4b39      	ldr	r3, [pc, #228]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c24:	4a39      	ldr	r2, [pc, #228]	; (402d0c <SystemCoreClockUpdate+0x188>)
  402c26:	601a      	str	r2, [r3, #0]
  402c28:	e019      	b.n	402c5e <SystemCoreClockUpdate+0xda>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402c2a:	4b37      	ldr	r3, [pc, #220]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c2c:	4a38      	ldr	r2, [pc, #224]	; (402d10 <SystemCoreClockUpdate+0x18c>)
  402c2e:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402c30:	4b33      	ldr	r3, [pc, #204]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402c32:	6a1b      	ldr	r3, [r3, #32]
  402c34:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402c38:	2b10      	cmp	r3, #16
  402c3a:	d008      	beq.n	402c4e <SystemCoreClockUpdate+0xca>
  402c3c:	2b20      	cmp	r3, #32
  402c3e:	d00a      	beq.n	402c56 <SystemCoreClockUpdate+0xd2>
  402c40:	2b00      	cmp	r3, #0
  402c42:	d000      	beq.n	402c46 <SystemCoreClockUpdate+0xc2>
>>>>>>> parent of 8583d8d... Updated write_image to file
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
					break;
				
				default:
					break;
<<<<<<< HEAD
  402d10:	e00b      	b.n	402d2a <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402d12:	4b30      	ldr	r3, [pc, #192]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d14:	4a31      	ldr	r2, [pc, #196]	; (402ddc <SystemCoreClockUpdate+0x18c>)
  402d16:	601a      	str	r2, [r3, #0]
					break;
  402d18:	e007      	b.n	402d2a <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402d1a:	4b2e      	ldr	r3, [pc, #184]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d1c:	4a30      	ldr	r2, [pc, #192]	; (402de0 <SystemCoreClockUpdate+0x190>)
  402d1e:	601a      	str	r2, [r3, #0]
					break;
  402d20:	e003      	b.n	402d2a <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402d22:	4b2c      	ldr	r3, [pc, #176]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d24:	4a2c      	ldr	r2, [pc, #176]	; (402dd8 <SystemCoreClockUpdate+0x188>)
  402d26:	601a      	str	r2, [r3, #0]
					break;
  402d28:	bf00      	nop
=======
  402c44:	e00b      	b.n	402c5e <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402c46:	4b30      	ldr	r3, [pc, #192]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c48:	4a31      	ldr	r2, [pc, #196]	; (402d10 <SystemCoreClockUpdate+0x18c>)
  402c4a:	601a      	str	r2, [r3, #0]
					break;
  402c4c:	e007      	b.n	402c5e <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402c4e:	4b2e      	ldr	r3, [pc, #184]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c50:	4a30      	ldr	r2, [pc, #192]	; (402d14 <SystemCoreClockUpdate+0x190>)
  402c52:	601a      	str	r2, [r3, #0]
					break;
  402c54:	e003      	b.n	402c5e <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402c56:	4b2c      	ldr	r3, [pc, #176]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c58:	4a2c      	ldr	r2, [pc, #176]	; (402d0c <SystemCoreClockUpdate+0x188>)
  402c5a:	601a      	str	r2, [r3, #0]
					break;
  402c5c:	bf00      	nop
>>>>>>> parent of 8583d8d... Updated write_image to file
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
<<<<<<< HEAD
  402d2a:	4b28      	ldr	r3, [pc, #160]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402d2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402d2e:	f003 0303 	and.w	r3, r3, #3
  402d32:	2b02      	cmp	r3, #2
  402d34:	d115      	bne.n	402d62 <SystemCoreClockUpdate+0x112>
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402d36:	4b25      	ldr	r3, [pc, #148]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
  402d3a:	0c1b      	lsrs	r3, r3, #16
  402d3c:	f3c3 030a 	ubfx	r3, r3, #0, #11
  402d40:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402d42:	4a24      	ldr	r2, [pc, #144]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d44:	6812      	ldr	r2, [r2, #0]
  402d46:	fb02 f303 	mul.w	r3, r2, r3
  402d4a:	4a22      	ldr	r2, [pc, #136]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d4c:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402d4e:	4b1f      	ldr	r3, [pc, #124]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402d50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
  402d52:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402d54:	4a1f      	ldr	r2, [pc, #124]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d56:	6812      	ldr	r2, [r2, #0]
  402d58:	fbb2 f3f3 	udiv	r3, r2, r3
  402d5c:	4a1d      	ldr	r2, [pc, #116]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d5e:	6013      	str	r3, [r2, #0]
=======
  402c5e:	4b28      	ldr	r3, [pc, #160]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402c60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402c62:	f003 0303 	and.w	r3, r3, #3
  402c66:	2b02      	cmp	r3, #2
  402c68:	d115      	bne.n	402c96 <SystemCoreClockUpdate+0x112>
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402c6a:	4b25      	ldr	r3, [pc, #148]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402c6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
  402c6e:	0c1b      	lsrs	r3, r3, #16
  402c70:	f3c3 030a 	ubfx	r3, r3, #0, #11
  402c74:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402c76:	4a24      	ldr	r2, [pc, #144]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c78:	6812      	ldr	r2, [r2, #0]
  402c7a:	fb02 f303 	mul.w	r3, r2, r3
  402c7e:	4a22      	ldr	r2, [pc, #136]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c80:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402c82:	4b1f      	ldr	r3, [pc, #124]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402c84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
  402c86:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402c88:	4a1f      	ldr	r2, [pc, #124]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c8a:	6812      	ldr	r2, [r2, #0]
  402c8c:	fbb2 f3f3 	udiv	r3, r2, r3
  402c90:	4a1d      	ldr	r2, [pc, #116]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402c92:	6013      	str	r3, [r2, #0]
>>>>>>> parent of 8583d8d... Updated write_image to file
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
			}
		break;
<<<<<<< HEAD
  402d60:	e016      	b.n	402d90 <SystemCoreClockUpdate+0x140>
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402d62:	4b1a      	ldr	r3, [pc, #104]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402d64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  402d66:	0c1b      	lsrs	r3, r3, #16
  402d68:	f3c3 030a 	ubfx	r3, r3, #0, #11
  402d6c:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402d6e:	4a19      	ldr	r2, [pc, #100]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d70:	6812      	ldr	r2, [r2, #0]
  402d72:	fb02 f303 	mul.w	r3, r2, r3
  402d76:	4a17      	ldr	r2, [pc, #92]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d78:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402d7a:	4b14      	ldr	r3, [pc, #80]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402d7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_DIVB_Pos));
  402d7e:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402d80:	4a14      	ldr	r2, [pc, #80]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d82:	6812      	ldr	r2, [r2, #0]
  402d84:	fbb2 f3f3 	udiv	r3, r2, r3
  402d88:	4a12      	ldr	r2, [pc, #72]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d8a:	6013      	str	r3, [r2, #0]
		break;
  402d8c:	e000      	b.n	402d90 <SystemCoreClockUpdate+0x140>
		
	default:
		break;
  402d8e:	bf00      	nop
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  402d90:	4b0e      	ldr	r3, [pc, #56]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402d92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402d94:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402d98:	2b70      	cmp	r3, #112	; 0x70
  402d9a:	d108      	bne.n	402dae <SystemCoreClockUpdate+0x15e>
		SystemCoreClock /= 3U;
  402d9c:	4b0d      	ldr	r3, [pc, #52]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402d9e:	681b      	ldr	r3, [r3, #0]
  402da0:	4a10      	ldr	r2, [pc, #64]	; (402de4 <SystemCoreClockUpdate+0x194>)
  402da2:	fba2 2303 	umull	r2, r3, r2, r3
  402da6:	085b      	lsrs	r3, r3, #1
  402da8:	4a0a      	ldr	r2, [pc, #40]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402daa:	6013      	str	r3, [r2, #0]
=======
  402c94:	e016      	b.n	402cc4 <SystemCoreClockUpdate+0x140>
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402c96:	4b1a      	ldr	r3, [pc, #104]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402c98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  402c9a:	0c1b      	lsrs	r3, r3, #16
  402c9c:	f3c3 030a 	ubfx	r3, r3, #0, #11
  402ca0:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402ca2:	4a19      	ldr	r2, [pc, #100]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402ca4:	6812      	ldr	r2, [r2, #0]
  402ca6:	fb02 f303 	mul.w	r3, r2, r3
  402caa:	4a17      	ldr	r2, [pc, #92]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cac:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402cae:	4b14      	ldr	r3, [pc, #80]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402cb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_DIVB_Pos));
  402cb2:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402cb4:	4a14      	ldr	r2, [pc, #80]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cb6:	6812      	ldr	r2, [r2, #0]
  402cb8:	fbb2 f3f3 	udiv	r3, r2, r3
  402cbc:	4a12      	ldr	r2, [pc, #72]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cbe:	6013      	str	r3, [r2, #0]
		break;
  402cc0:	e000      	b.n	402cc4 <SystemCoreClockUpdate+0x140>
		
	default:
		break;
  402cc2:	bf00      	nop
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  402cc4:	4b0e      	ldr	r3, [pc, #56]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402cc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402cc8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402ccc:	2b70      	cmp	r3, #112	; 0x70
  402cce:	d108      	bne.n	402ce2 <SystemCoreClockUpdate+0x15e>
		SystemCoreClock /= 3U;
  402cd0:	4b0d      	ldr	r3, [pc, #52]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cd2:	681b      	ldr	r3, [r3, #0]
  402cd4:	4a10      	ldr	r2, [pc, #64]	; (402d18 <SystemCoreClockUpdate+0x194>)
  402cd6:	fba2 2303 	umull	r2, r3, r2, r3
  402cda:	085b      	lsrs	r3, r3, #1
  402cdc:	4a0a      	ldr	r2, [pc, #40]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cde:	6013      	str	r3, [r2, #0]
>>>>>>> parent of 8583d8d... Updated write_image to file
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
	}
}
<<<<<<< HEAD
  402dac:	e00a      	b.n	402dc4 <SystemCoreClockUpdate+0x174>
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402dae:	4b07      	ldr	r3, [pc, #28]	; (402dcc <SystemCoreClockUpdate+0x17c>)
  402db0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402db2:	091b      	lsrs	r3, r3, #4
  402db4:	f003 0307 	and.w	r3, r3, #7
		SystemCoreClock >>=
  402db8:	4a06      	ldr	r2, [pc, #24]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402dba:	6812      	ldr	r2, [r2, #0]
  402dbc:	fa22 f303 	lsr.w	r3, r2, r3
  402dc0:	4a04      	ldr	r2, [pc, #16]	; (402dd4 <SystemCoreClockUpdate+0x184>)
  402dc2:	6013      	str	r3, [r2, #0]
}
  402dc4:	bf00      	nop
  402dc6:	46bd      	mov	sp, r7
  402dc8:	bc80      	pop	{r7}
  402dca:	4770      	bx	lr
  402dcc:	400e0400 	.word	0x400e0400
  402dd0:	400e1410 	.word	0x400e1410
  402dd4:	2000000c 	.word	0x2000000c
  402dd8:	00b71b00 	.word	0x00b71b00
  402ddc:	003d0900 	.word	0x003d0900
  402de0:	007a1200 	.word	0x007a1200
  402de4:	aaaaaaab 	.word	0xaaaaaaab

00402de8 <system_init_flash>:
=======
  402ce0:	e00a      	b.n	402cf8 <SystemCoreClockUpdate+0x174>
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402ce2:	4b07      	ldr	r3, [pc, #28]	; (402d00 <SystemCoreClockUpdate+0x17c>)
  402ce4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402ce6:	091b      	lsrs	r3, r3, #4
  402ce8:	f003 0307 	and.w	r3, r3, #7
		SystemCoreClock >>=
  402cec:	4a06      	ldr	r2, [pc, #24]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cee:	6812      	ldr	r2, [r2, #0]
  402cf0:	fa22 f303 	lsr.w	r3, r2, r3
  402cf4:	4a04      	ldr	r2, [pc, #16]	; (402d08 <SystemCoreClockUpdate+0x184>)
  402cf6:	6013      	str	r3, [r2, #0]
}
  402cf8:	bf00      	nop
  402cfa:	46bd      	mov	sp, r7
  402cfc:	bc80      	pop	{r7}
  402cfe:	4770      	bx	lr
  402d00:	400e0400 	.word	0x400e0400
  402d04:	400e1410 	.word	0x400e1410
  402d08:	2000000c 	.word	0x2000000c
  402d0c:	00b71b00 	.word	0x00b71b00
  402d10:	003d0900 	.word	0x003d0900
  402d14:	007a1200 	.word	0x007a1200
  402d18:	aaaaaaab 	.word	0xaaaaaaab

00402d1c <system_init_flash>:
>>>>>>> parent of 8583d8d... Updated write_image to file
 * \brief Initialize flash wait state according to operating frequency.
 *
 * \param ul_clk System clock frequency.
 */
void system_init_flash( uint32_t ul_clk )
{
<<<<<<< HEAD
  402de8:	b480      	push	{r7}
  402dea:	b083      	sub	sp, #12
  402dec:	af00      	add	r7, sp, #0
  402dee:	6078      	str	r0, [r7, #4]
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  402df0:	687b      	ldr	r3, [r7, #4]
  402df2:	4a18      	ldr	r2, [pc, #96]	; (402e54 <system_init_flash+0x6c>)
  402df4:	4293      	cmp	r3, r2
  402df6:	d804      	bhi.n	402e02 <system_init_flash+0x1a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402df8:	4b17      	ldr	r3, [pc, #92]	; (402e58 <system_init_flash+0x70>)
  402dfa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402dfe:	601a      	str	r2, [r3, #0]
=======
  402d1c:	b480      	push	{r7}
  402d1e:	b083      	sub	sp, #12
  402d20:	af00      	add	r7, sp, #0
  402d22:	6078      	str	r0, [r7, #4]
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  402d24:	687b      	ldr	r3, [r7, #4]
  402d26:	4a18      	ldr	r2, [pc, #96]	; (402d88 <system_init_flash+0x6c>)
  402d28:	4293      	cmp	r3, r2
  402d2a:	d804      	bhi.n	402d36 <system_init_flash+0x1a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402d2c:	4b17      	ldr	r3, [pc, #92]	; (402d8c <system_init_flash+0x70>)
  402d2e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402d32:	601a      	str	r2, [r3, #0]
>>>>>>> parent of 8583d8d... Updated write_image to file
				}
			}
		}
	}
#endif
}
<<<<<<< HEAD
  402e00:	e023      	b.n	402e4a <system_init_flash+0x62>
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  402e02:	687b      	ldr	r3, [r7, #4]
  402e04:	4a15      	ldr	r2, [pc, #84]	; (402e5c <system_init_flash+0x74>)
  402e06:	4293      	cmp	r3, r2
  402e08:	d803      	bhi.n	402e12 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402e0a:	4b13      	ldr	r3, [pc, #76]	; (402e58 <system_init_flash+0x70>)
  402e0c:	4a14      	ldr	r2, [pc, #80]	; (402e60 <system_init_flash+0x78>)
  402e0e:	601a      	str	r2, [r3, #0]
}
  402e10:	e01b      	b.n	402e4a <system_init_flash+0x62>
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  402e12:	687b      	ldr	r3, [r7, #4]
  402e14:	4a13      	ldr	r2, [pc, #76]	; (402e64 <system_init_flash+0x7c>)
  402e16:	4293      	cmp	r3, r2
  402e18:	d803      	bhi.n	402e22 <system_init_flash+0x3a>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402e1a:	4b0f      	ldr	r3, [pc, #60]	; (402e58 <system_init_flash+0x70>)
  402e1c:	4a12      	ldr	r2, [pc, #72]	; (402e68 <system_init_flash+0x80>)
  402e1e:	601a      	str	r2, [r3, #0]
}
  402e20:	e013      	b.n	402e4a <system_init_flash+0x62>
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  402e22:	687b      	ldr	r3, [r7, #4]
  402e24:	4a11      	ldr	r2, [pc, #68]	; (402e6c <system_init_flash+0x84>)
  402e26:	4293      	cmp	r3, r2
  402e28:	d803      	bhi.n	402e32 <system_init_flash+0x4a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402e2a:	4b0b      	ldr	r3, [pc, #44]	; (402e58 <system_init_flash+0x70>)
  402e2c:	4a10      	ldr	r2, [pc, #64]	; (402e70 <system_init_flash+0x88>)
  402e2e:	601a      	str	r2, [r3, #0]
}
  402e30:	e00b      	b.n	402e4a <system_init_flash+0x62>
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  402e32:	687b      	ldr	r3, [r7, #4]
  402e34:	4a0f      	ldr	r2, [pc, #60]	; (402e74 <system_init_flash+0x8c>)
  402e36:	4293      	cmp	r3, r2
  402e38:	d804      	bhi.n	402e44 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402e3a:	4b07      	ldr	r3, [pc, #28]	; (402e58 <system_init_flash+0x70>)
  402e3c:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  402e40:	601a      	str	r2, [r3, #0]
}
  402e42:	e002      	b.n	402e4a <system_init_flash+0x62>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  402e44:	4b04      	ldr	r3, [pc, #16]	; (402e58 <system_init_flash+0x70>)
  402e46:	4a0c      	ldr	r2, [pc, #48]	; (402e78 <system_init_flash+0x90>)
  402e48:	601a      	str	r2, [r3, #0]
}
  402e4a:	bf00      	nop
  402e4c:	370c      	adds	r7, #12
  402e4e:	46bd      	mov	sp, r7
  402e50:	bc80      	pop	{r7}
  402e52:	4770      	bx	lr
  402e54:	01312cff 	.word	0x01312cff
  402e58:	400e0a00 	.word	0x400e0a00
  402e5c:	026259ff 	.word	0x026259ff
  402e60:	04000100 	.word	0x04000100
  402e64:	039386ff 	.word	0x039386ff
  402e68:	04000200 	.word	0x04000200
  402e6c:	04c4b3ff 	.word	0x04c4b3ff
  402e70:	04000300 	.word	0x04000300
  402e74:	05f5e0ff 	.word	0x05f5e0ff
  402e78:	04000500 	.word	0x04000500

00402e7c <_sbrk>:
=======
  402d34:	e023      	b.n	402d7e <system_init_flash+0x62>
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  402d36:	687b      	ldr	r3, [r7, #4]
  402d38:	4a15      	ldr	r2, [pc, #84]	; (402d90 <system_init_flash+0x74>)
  402d3a:	4293      	cmp	r3, r2
  402d3c:	d803      	bhi.n	402d46 <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402d3e:	4b13      	ldr	r3, [pc, #76]	; (402d8c <system_init_flash+0x70>)
  402d40:	4a14      	ldr	r2, [pc, #80]	; (402d94 <system_init_flash+0x78>)
  402d42:	601a      	str	r2, [r3, #0]
}
  402d44:	e01b      	b.n	402d7e <system_init_flash+0x62>
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  402d46:	687b      	ldr	r3, [r7, #4]
  402d48:	4a13      	ldr	r2, [pc, #76]	; (402d98 <system_init_flash+0x7c>)
  402d4a:	4293      	cmp	r3, r2
  402d4c:	d803      	bhi.n	402d56 <system_init_flash+0x3a>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402d4e:	4b0f      	ldr	r3, [pc, #60]	; (402d8c <system_init_flash+0x70>)
  402d50:	4a12      	ldr	r2, [pc, #72]	; (402d9c <system_init_flash+0x80>)
  402d52:	601a      	str	r2, [r3, #0]
}
  402d54:	e013      	b.n	402d7e <system_init_flash+0x62>
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  402d56:	687b      	ldr	r3, [r7, #4]
  402d58:	4a11      	ldr	r2, [pc, #68]	; (402da0 <system_init_flash+0x84>)
  402d5a:	4293      	cmp	r3, r2
  402d5c:	d803      	bhi.n	402d66 <system_init_flash+0x4a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402d5e:	4b0b      	ldr	r3, [pc, #44]	; (402d8c <system_init_flash+0x70>)
  402d60:	4a10      	ldr	r2, [pc, #64]	; (402da4 <system_init_flash+0x88>)
  402d62:	601a      	str	r2, [r3, #0]
}
  402d64:	e00b      	b.n	402d7e <system_init_flash+0x62>
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  402d66:	687b      	ldr	r3, [r7, #4]
  402d68:	4a0f      	ldr	r2, [pc, #60]	; (402da8 <system_init_flash+0x8c>)
  402d6a:	4293      	cmp	r3, r2
  402d6c:	d804      	bhi.n	402d78 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402d6e:	4b07      	ldr	r3, [pc, #28]	; (402d8c <system_init_flash+0x70>)
  402d70:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  402d74:	601a      	str	r2, [r3, #0]
}
  402d76:	e002      	b.n	402d7e <system_init_flash+0x62>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  402d78:	4b04      	ldr	r3, [pc, #16]	; (402d8c <system_init_flash+0x70>)
  402d7a:	4a0c      	ldr	r2, [pc, #48]	; (402dac <system_init_flash+0x90>)
  402d7c:	601a      	str	r2, [r3, #0]
}
  402d7e:	bf00      	nop
  402d80:	370c      	adds	r7, #12
  402d82:	46bd      	mov	sp, r7
  402d84:	bc80      	pop	{r7}
  402d86:	4770      	bx	lr
  402d88:	01312cff 	.word	0x01312cff
  402d8c:	400e0a00 	.word	0x400e0a00
  402d90:	026259ff 	.word	0x026259ff
  402d94:	04000100 	.word	0x04000100
  402d98:	039386ff 	.word	0x039386ff
  402d9c:	04000200 	.word	0x04000200
  402da0:	04c4b3ff 	.word	0x04c4b3ff
  402da4:	04000300 	.word	0x04000300
  402da8:	05f5e0ff 	.word	0x05f5e0ff
  402dac:	04000500 	.word	0x04000500

00402db0 <_sbrk>:
>>>>>>> parent of 8583d8d... Updated write_image to file
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
<<<<<<< HEAD
  402e7c:	b480      	push	{r7}
  402e7e:	b085      	sub	sp, #20
  402e80:	af00      	add	r7, sp, #0
  402e82:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
  402e84:	4b10      	ldr	r3, [pc, #64]	; (402ec8 <_sbrk+0x4c>)
  402e86:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
  402e88:	4b10      	ldr	r3, [pc, #64]	; (402ecc <_sbrk+0x50>)
  402e8a:	681b      	ldr	r3, [r3, #0]
  402e8c:	2b00      	cmp	r3, #0
  402e8e:	d102      	bne.n	402e96 <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
  402e90:	4b0e      	ldr	r3, [pc, #56]	; (402ecc <_sbrk+0x50>)
  402e92:	4a0f      	ldr	r2, [pc, #60]	; (402ed0 <_sbrk+0x54>)
  402e94:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  402e96:	4b0d      	ldr	r3, [pc, #52]	; (402ecc <_sbrk+0x50>)
  402e98:	681b      	ldr	r3, [r3, #0]
  402e9a:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
  402e9c:	68ba      	ldr	r2, [r7, #8]
  402e9e:	687b      	ldr	r3, [r7, #4]
  402ea0:	441a      	add	r2, r3
  402ea2:	68fb      	ldr	r3, [r7, #12]
  402ea4:	429a      	cmp	r2, r3
  402ea6:	dd02      	ble.n	402eae <_sbrk+0x32>
		return (caddr_t) -1;	
  402ea8:	f04f 33ff 	mov.w	r3, #4294967295
  402eac:	e006      	b.n	402ebc <_sbrk+0x40>
	}

	heap += incr;
  402eae:	4b07      	ldr	r3, [pc, #28]	; (402ecc <_sbrk+0x50>)
  402eb0:	681a      	ldr	r2, [r3, #0]
  402eb2:	687b      	ldr	r3, [r7, #4]
  402eb4:	4413      	add	r3, r2
  402eb6:	4a05      	ldr	r2, [pc, #20]	; (402ecc <_sbrk+0x50>)
  402eb8:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
  402eba:	68bb      	ldr	r3, [r7, #8]
}
  402ebc:	4618      	mov	r0, r3
  402ebe:	3714      	adds	r7, #20
  402ec0:	46bd      	mov	sp, r7
  402ec2:	bc80      	pop	{r7}
  402ec4:	4770      	bx	lr
  402ec6:	bf00      	nop
  402ec8:	2001fffc 	.word	0x2001fffc
  402ecc:	20000a7c 	.word	0x20000a7c
  402ed0:	20010200 	.word	0x20010200

00402ed4 <osc_get_rate>:
{
  402ed4:	b480      	push	{r7}
  402ed6:	b083      	sub	sp, #12
  402ed8:	af00      	add	r7, sp, #0
  402eda:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  402edc:	687b      	ldr	r3, [r7, #4]
  402ede:	2b07      	cmp	r3, #7
  402ee0:	d825      	bhi.n	402f2e <osc_get_rate+0x5a>
  402ee2:	a201      	add	r2, pc, #4	; (adr r2, 402ee8 <osc_get_rate+0x14>)
  402ee4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402ee8:	00402f09 	.word	0x00402f09
  402eec:	00402f0f 	.word	0x00402f0f
  402ef0:	00402f15 	.word	0x00402f15
  402ef4:	00402f1b 	.word	0x00402f1b
  402ef8:	00402f1f 	.word	0x00402f1f
  402efc:	00402f23 	.word	0x00402f23
  402f00:	00402f27 	.word	0x00402f27
  402f04:	00402f2b 	.word	0x00402f2b
		return OSC_SLCK_32K_RC_HZ;
  402f08:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  402f0c:	e010      	b.n	402f30 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  402f0e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402f12:	e00d      	b.n	402f30 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  402f14:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402f18:	e00a      	b.n	402f30 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  402f1a:	4b08      	ldr	r3, [pc, #32]	; (402f3c <osc_get_rate+0x68>)
  402f1c:	e008      	b.n	402f30 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  402f1e:	4b08      	ldr	r3, [pc, #32]	; (402f40 <osc_get_rate+0x6c>)
  402f20:	e006      	b.n	402f30 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  402f22:	4b08      	ldr	r3, [pc, #32]	; (402f44 <osc_get_rate+0x70>)
  402f24:	e004      	b.n	402f30 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  402f26:	4b07      	ldr	r3, [pc, #28]	; (402f44 <osc_get_rate+0x70>)
  402f28:	e002      	b.n	402f30 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  402f2a:	4b06      	ldr	r3, [pc, #24]	; (402f44 <osc_get_rate+0x70>)
  402f2c:	e000      	b.n	402f30 <osc_get_rate+0x5c>
	return 0;
  402f2e:	2300      	movs	r3, #0
}
  402f30:	4618      	mov	r0, r3
  402f32:	370c      	adds	r7, #12
  402f34:	46bd      	mov	sp, r7
  402f36:	bc80      	pop	{r7}
  402f38:	4770      	bx	lr
  402f3a:	bf00      	nop
  402f3c:	003d0900 	.word	0x003d0900
  402f40:	007a1200 	.word	0x007a1200
  402f44:	00b71b00 	.word	0x00b71b00

00402f48 <sysclk_get_main_hz>:
{
  402f48:	b580      	push	{r7, lr}
  402f4a:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  402f4c:	2006      	movs	r0, #6
  402f4e:	4b04      	ldr	r3, [pc, #16]	; (402f60 <sysclk_get_main_hz+0x18>)
  402f50:	4798      	blx	r3
  402f52:	4602      	mov	r2, r0
  402f54:	4613      	mov	r3, r2
  402f56:	009b      	lsls	r3, r3, #2
  402f58:	4413      	add	r3, r2
  402f5a:	009b      	lsls	r3, r3, #2
}
  402f5c:	4618      	mov	r0, r3
  402f5e:	bd80      	pop	{r7, pc}
  402f60:	00402ed5 	.word	0x00402ed5

00402f64 <sysclk_get_cpu_hz>:
{
  402f64:	b580      	push	{r7, lr}
  402f66:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  402f68:	4b02      	ldr	r3, [pc, #8]	; (402f74 <sysclk_get_cpu_hz+0x10>)
  402f6a:	4798      	blx	r3
  402f6c:	4603      	mov	r3, r0
  402f6e:	085b      	lsrs	r3, r3, #1
}
  402f70:	4618      	mov	r0, r3
  402f72:	bd80      	pop	{r7, pc}
  402f74:	00402f49 	.word	0x00402f49

00402f78 <ioport_set_pin_level>:
{
  402f78:	b480      	push	{r7}
  402f7a:	b08b      	sub	sp, #44	; 0x2c
  402f7c:	af00      	add	r7, sp, #0
  402f7e:	6078      	str	r0, [r7, #4]
  402f80:	460b      	mov	r3, r1
  402f82:	70fb      	strb	r3, [r7, #3]
  402f84:	687b      	ldr	r3, [r7, #4]
  402f86:	627b      	str	r3, [r7, #36]	; 0x24
  402f88:	78fb      	ldrb	r3, [r7, #3]
  402f8a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  402f8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402f90:	61fb      	str	r3, [r7, #28]
  402f92:	69fb      	ldr	r3, [r7, #28]
  402f94:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  402f96:	69bb      	ldr	r3, [r7, #24]
  402f98:	095b      	lsrs	r3, r3, #5
  402f9a:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402f9c:	697b      	ldr	r3, [r7, #20]
  402f9e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402fa2:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402fa6:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
  402fa8:	613b      	str	r3, [r7, #16]
	if (level) {
  402faa:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  402fae:	2b00      	cmp	r3, #0
  402fb0:	d009      	beq.n	402fc6 <ioport_set_pin_level+0x4e>
  402fb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402fb4:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  402fb6:	68fb      	ldr	r3, [r7, #12]
  402fb8:	f003 031f 	and.w	r3, r3, #31
  402fbc:	2201      	movs	r2, #1
  402fbe:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402fc0:	693b      	ldr	r3, [r7, #16]
  402fc2:	631a      	str	r2, [r3, #48]	; 0x30
}
  402fc4:	e008      	b.n	402fd8 <ioport_set_pin_level+0x60>
  402fc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402fc8:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  402fca:	68bb      	ldr	r3, [r7, #8]
  402fcc:	f003 031f 	and.w	r3, r3, #31
  402fd0:	2201      	movs	r2, #1
  402fd2:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  402fd4:	693b      	ldr	r3, [r7, #16]
  402fd6:	635a      	str	r2, [r3, #52]	; 0x34
  402fd8:	bf00      	nop
  402fda:	372c      	adds	r7, #44	; 0x2c
  402fdc:	46bd      	mov	sp, r7
  402fde:	bc80      	pop	{r7}
  402fe0:	4770      	bx	lr

00402fe2 <ioport_get_pin_level>:
=======
  402db0:	b480      	push	{r7}
  402db2:	b085      	sub	sp, #20
  402db4:	af00      	add	r7, sp, #0
  402db6:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
  402db8:	4b10      	ldr	r3, [pc, #64]	; (402dfc <_sbrk+0x4c>)
  402dba:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
  402dbc:	4b10      	ldr	r3, [pc, #64]	; (402e00 <_sbrk+0x50>)
  402dbe:	681b      	ldr	r3, [r3, #0]
  402dc0:	2b00      	cmp	r3, #0
  402dc2:	d102      	bne.n	402dca <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
  402dc4:	4b0e      	ldr	r3, [pc, #56]	; (402e00 <_sbrk+0x50>)
  402dc6:	4a0f      	ldr	r2, [pc, #60]	; (402e04 <_sbrk+0x54>)
  402dc8:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  402dca:	4b0d      	ldr	r3, [pc, #52]	; (402e00 <_sbrk+0x50>)
  402dcc:	681b      	ldr	r3, [r3, #0]
  402dce:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
  402dd0:	68ba      	ldr	r2, [r7, #8]
  402dd2:	687b      	ldr	r3, [r7, #4]
  402dd4:	441a      	add	r2, r3
  402dd6:	68fb      	ldr	r3, [r7, #12]
  402dd8:	429a      	cmp	r2, r3
  402dda:	dd02      	ble.n	402de2 <_sbrk+0x32>
		return (caddr_t) -1;	
  402ddc:	f04f 33ff 	mov.w	r3, #4294967295
  402de0:	e006      	b.n	402df0 <_sbrk+0x40>
	}

	heap += incr;
  402de2:	4b07      	ldr	r3, [pc, #28]	; (402e00 <_sbrk+0x50>)
  402de4:	681a      	ldr	r2, [r3, #0]
  402de6:	687b      	ldr	r3, [r7, #4]
  402de8:	4413      	add	r3, r2
  402dea:	4a05      	ldr	r2, [pc, #20]	; (402e00 <_sbrk+0x50>)
  402dec:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
  402dee:	68bb      	ldr	r3, [r7, #8]
}
  402df0:	4618      	mov	r0, r3
  402df2:	3714      	adds	r7, #20
  402df4:	46bd      	mov	sp, r7
  402df6:	bc80      	pop	{r7}
  402df8:	4770      	bx	lr
  402dfa:	bf00      	nop
  402dfc:	2001fffc 	.word	0x2001fffc
  402e00:	20000a7c 	.word	0x20000a7c
  402e04:	20010228 	.word	0x20010228

00402e08 <osc_get_rate>:
{
  402e08:	b480      	push	{r7}
  402e0a:	b083      	sub	sp, #12
  402e0c:	af00      	add	r7, sp, #0
  402e0e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  402e10:	687b      	ldr	r3, [r7, #4]
  402e12:	2b07      	cmp	r3, #7
  402e14:	d825      	bhi.n	402e62 <osc_get_rate+0x5a>
  402e16:	a201      	add	r2, pc, #4	; (adr r2, 402e1c <osc_get_rate+0x14>)
  402e18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402e1c:	00402e3d 	.word	0x00402e3d
  402e20:	00402e43 	.word	0x00402e43
  402e24:	00402e49 	.word	0x00402e49
  402e28:	00402e4f 	.word	0x00402e4f
  402e2c:	00402e53 	.word	0x00402e53
  402e30:	00402e57 	.word	0x00402e57
  402e34:	00402e5b 	.word	0x00402e5b
  402e38:	00402e5f 	.word	0x00402e5f
		return OSC_SLCK_32K_RC_HZ;
  402e3c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  402e40:	e010      	b.n	402e64 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  402e42:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402e46:	e00d      	b.n	402e64 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  402e48:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402e4c:	e00a      	b.n	402e64 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  402e4e:	4b08      	ldr	r3, [pc, #32]	; (402e70 <osc_get_rate+0x68>)
  402e50:	e008      	b.n	402e64 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  402e52:	4b08      	ldr	r3, [pc, #32]	; (402e74 <osc_get_rate+0x6c>)
  402e54:	e006      	b.n	402e64 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  402e56:	4b08      	ldr	r3, [pc, #32]	; (402e78 <osc_get_rate+0x70>)
  402e58:	e004      	b.n	402e64 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  402e5a:	4b07      	ldr	r3, [pc, #28]	; (402e78 <osc_get_rate+0x70>)
  402e5c:	e002      	b.n	402e64 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  402e5e:	4b06      	ldr	r3, [pc, #24]	; (402e78 <osc_get_rate+0x70>)
  402e60:	e000      	b.n	402e64 <osc_get_rate+0x5c>
	return 0;
  402e62:	2300      	movs	r3, #0
}
  402e64:	4618      	mov	r0, r3
  402e66:	370c      	adds	r7, #12
  402e68:	46bd      	mov	sp, r7
  402e6a:	bc80      	pop	{r7}
  402e6c:	4770      	bx	lr
  402e6e:	bf00      	nop
  402e70:	003d0900 	.word	0x003d0900
  402e74:	007a1200 	.word	0x007a1200
  402e78:	00b71b00 	.word	0x00b71b00

00402e7c <sysclk_get_main_hz>:
{
  402e7c:	b580      	push	{r7, lr}
  402e7e:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  402e80:	2006      	movs	r0, #6
  402e82:	4b04      	ldr	r3, [pc, #16]	; (402e94 <sysclk_get_main_hz+0x18>)
  402e84:	4798      	blx	r3
  402e86:	4602      	mov	r2, r0
  402e88:	4613      	mov	r3, r2
  402e8a:	009b      	lsls	r3, r3, #2
  402e8c:	4413      	add	r3, r2
  402e8e:	009b      	lsls	r3, r3, #2
}
  402e90:	4618      	mov	r0, r3
  402e92:	bd80      	pop	{r7, pc}
  402e94:	00402e09 	.word	0x00402e09

00402e98 <sysclk_get_cpu_hz>:
{
  402e98:	b580      	push	{r7, lr}
  402e9a:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  402e9c:	4b02      	ldr	r3, [pc, #8]	; (402ea8 <sysclk_get_cpu_hz+0x10>)
  402e9e:	4798      	blx	r3
  402ea0:	4603      	mov	r3, r0
  402ea2:	085b      	lsrs	r3, r3, #1
}
  402ea4:	4618      	mov	r0, r3
  402ea6:	bd80      	pop	{r7, pc}
  402ea8:	00402e7d 	.word	0x00402e7d

00402eac <ioport_set_pin_level>:
{
  402eac:	b480      	push	{r7}
  402eae:	b08b      	sub	sp, #44	; 0x2c
  402eb0:	af00      	add	r7, sp, #0
  402eb2:	6078      	str	r0, [r7, #4]
  402eb4:	460b      	mov	r3, r1
  402eb6:	70fb      	strb	r3, [r7, #3]
  402eb8:	687b      	ldr	r3, [r7, #4]
  402eba:	627b      	str	r3, [r7, #36]	; 0x24
  402ebc:	78fb      	ldrb	r3, [r7, #3]
  402ebe:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  402ec2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402ec4:	61fb      	str	r3, [r7, #28]
  402ec6:	69fb      	ldr	r3, [r7, #28]
  402ec8:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  402eca:	69bb      	ldr	r3, [r7, #24]
  402ecc:	095b      	lsrs	r3, r3, #5
  402ece:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402ed0:	697b      	ldr	r3, [r7, #20]
  402ed2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402ed6:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402eda:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
  402edc:	613b      	str	r3, [r7, #16]
	if (level) {
  402ede:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  402ee2:	2b00      	cmp	r3, #0
  402ee4:	d009      	beq.n	402efa <ioport_set_pin_level+0x4e>
  402ee6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402ee8:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  402eea:	68fb      	ldr	r3, [r7, #12]
  402eec:	f003 031f 	and.w	r3, r3, #31
  402ef0:	2201      	movs	r2, #1
  402ef2:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402ef4:	693b      	ldr	r3, [r7, #16]
  402ef6:	631a      	str	r2, [r3, #48]	; 0x30
}
  402ef8:	e008      	b.n	402f0c <ioport_set_pin_level+0x60>
  402efa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  402efc:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  402efe:	68bb      	ldr	r3, [r7, #8]
  402f00:	f003 031f 	and.w	r3, r3, #31
  402f04:	2201      	movs	r2, #1
  402f06:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  402f08:	693b      	ldr	r3, [r7, #16]
  402f0a:	635a      	str	r2, [r3, #52]	; 0x34
  402f0c:	bf00      	nop
  402f0e:	372c      	adds	r7, #44	; 0x2c
  402f10:	46bd      	mov	sp, r7
  402f12:	bc80      	pop	{r7}
  402f14:	4770      	bx	lr

00402f16 <ioport_get_pin_level>:
>>>>>>> parent of 8583d8d... Updated write_image to file
 *
 * \param pin IOPORT pin to read
 * \return Current logical value of the specified pin
 */
static inline bool ioport_get_pin_level(ioport_pin_t pin)
{
<<<<<<< HEAD
  402fe2:	b480      	push	{r7}
  402fe4:	b089      	sub	sp, #36	; 0x24
  402fe6:	af00      	add	r7, sp, #0
  402fe8:	6078      	str	r0, [r7, #4]
  402fea:	687b      	ldr	r3, [r7, #4]
  402fec:	61fb      	str	r3, [r7, #28]
  402fee:	69fb      	ldr	r3, [r7, #28]
  402ff0:	61bb      	str	r3, [r7, #24]
  402ff2:	69bb      	ldr	r3, [r7, #24]
  402ff4:	617b      	str	r3, [r7, #20]
	return pin >> 5;
  402ff6:	697b      	ldr	r3, [r7, #20]
  402ff8:	095b      	lsrs	r3, r3, #5
  402ffa:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402ffc:	693b      	ldr	r3, [r7, #16]
  402ffe:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  403002:	f203 7307 	addw	r3, r3, #1799	; 0x707
  403006:	025b      	lsls	r3, r3, #9
=======
  402f16:	b480      	push	{r7}
  402f18:	b089      	sub	sp, #36	; 0x24
  402f1a:	af00      	add	r7, sp, #0
  402f1c:	6078      	str	r0, [r7, #4]
  402f1e:	687b      	ldr	r3, [r7, #4]
  402f20:	61fb      	str	r3, [r7, #28]
  402f22:	69fb      	ldr	r3, [r7, #28]
  402f24:	61bb      	str	r3, [r7, #24]
  402f26:	69bb      	ldr	r3, [r7, #24]
  402f28:	617b      	str	r3, [r7, #20]
	return pin >> 5;
  402f2a:	697b      	ldr	r3, [r7, #20]
  402f2c:	095b      	lsrs	r3, r3, #5
  402f2e:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  402f30:	693b      	ldr	r3, [r7, #16]
  402f32:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402f36:	f203 7307 	addw	r3, r3, #1799	; 0x707
  402f3a:	025b      	lsls	r3, r3, #9
>>>>>>> parent of 8583d8d... Updated write_image to file
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
<<<<<<< HEAD
  403008:	6bda      	ldr	r2, [r3, #60]	; 0x3c
  40300a:	69fb      	ldr	r3, [r7, #28]
  40300c:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  40300e:	68fb      	ldr	r3, [r7, #12]
  403010:	f003 031f 	and.w	r3, r3, #31
  403014:	2101      	movs	r1, #1
  403016:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  40301a:	4013      	ands	r3, r2
  40301c:	2b00      	cmp	r3, #0
  40301e:	bf14      	ite	ne
  403020:	2301      	movne	r3, #1
  403022:	2300      	moveq	r3, #0
  403024:	b2db      	uxtb	r3, r3
	return arch_ioport_get_pin_level(pin);
}
  403026:	4618      	mov	r0, r3
  403028:	3724      	adds	r7, #36	; 0x24
  40302a:	46bd      	mov	sp, r7
  40302c:	bc80      	pop	{r7}
  40302e:	4770      	bx	lr

00403030 <main>:
=======
  402f3c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
  402f3e:	69fb      	ldr	r3, [r7, #28]
  402f40:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  402f42:	68fb      	ldr	r3, [r7, #12]
  402f44:	f003 031f 	and.w	r3, r3, #31
  402f48:	2101      	movs	r1, #1
  402f4a:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  402f4e:	4013      	ands	r3, r2
  402f50:	2b00      	cmp	r3, #0
  402f52:	bf14      	ite	ne
  402f54:	2301      	movne	r3, #1
  402f56:	2300      	moveq	r3, #0
  402f58:	b2db      	uxtb	r3, r3
	return arch_ioport_get_pin_level(pin);
}
  402f5a:	4618      	mov	r0, r3
  402f5c:	3724      	adds	r7, #36	; 0x24
  402f5e:	46bd      	mov	sp, r7
  402f60:	bc80      	pop	{r7}
  402f62:	4770      	bx	lr

00402f64 <main>:
>>>>>>> parent of 8583d8d... Updated write_image to file
#include "conf_board.h"
#include "conf_clock.h"
#include "timer_interface.h"

int main (void)
{
<<<<<<< HEAD
  403030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403034:	b095      	sub	sp, #84	; 0x54
  403036:	af00      	add	r7, sp, #0
	//Initialize clock and board definitions
	sysclk_init();
  403038:	4b58      	ldr	r3, [pc, #352]	; (40319c <main+0x16c>)
  40303a:	4798      	blx	r3
	wdt_disable(WDT);
  40303c:	4858      	ldr	r0, [pc, #352]	; (4031a0 <main+0x170>)
  40303e:	4b59      	ldr	r3, [pc, #356]	; (4031a4 <main+0x174>)
  403040:	4798      	blx	r3
	board_init();
  403042:	4b59      	ldr	r3, [pc, #356]	; (4031a8 <main+0x178>)
  403044:	4798      	blx	r3

	//Configure and start the Timer
	configure_tc();
  403046:	4b59      	ldr	r3, [pc, #356]	; (4031ac <main+0x17c>)
  403048:	4798      	blx	r3
	
	//Configure the WiFi USART, Command pin, and Web Setup pin
	configure_usart_wifi();
  40304a:	4b59      	ldr	r3, [pc, #356]	; (4031b0 <main+0x180>)
  40304c:	4798      	blx	r3
	configure_wifi_command_pin();
  40304e:	4b59      	ldr	r3, [pc, #356]	; (4031b4 <main+0x184>)
  403050:	4798      	blx	r3
	configure_wifi_web_setup_pin();
  403052:	4b59      	ldr	r3, [pc, #356]	; (4031b8 <main+0x188>)
  403054:	4798      	blx	r3
	
	//Reset wiFi module
	ioport_set_pin_level(WIFI_RESET_PIN, 0);
  403056:	2100      	movs	r1, #0
  403058:	2000      	movs	r0, #0
  40305a:	4b58      	ldr	r3, [pc, #352]	; (4031bc <main+0x18c>)
  40305c:	4798      	blx	r3
	delay_ms(100);
  40305e:	4b58      	ldr	r3, [pc, #352]	; (4031c0 <main+0x190>)
  403060:	4798      	blx	r3
  403062:	4603      	mov	r3, r0
  403064:	4619      	mov	r1, r3
  403066:	f04f 0200 	mov.w	r2, #0
  40306a:	460b      	mov	r3, r1
  40306c:	4614      	mov	r4, r2
  40306e:	18db      	adds	r3, r3, r3
  403070:	eb44 0404 	adc.w	r4, r4, r4
  403074:	185b      	adds	r3, r3, r1
  403076:	eb44 0402 	adc.w	r4, r4, r2
  40307a:	0166      	lsls	r6, r4, #5
  40307c:	ea46 66d3 	orr.w	r6, r6, r3, lsr #27
  403080:	015d      	lsls	r5, r3, #5
  403082:	195b      	adds	r3, r3, r5
  403084:	eb44 0406 	adc.w	r4, r4, r6
  403088:	185b      	adds	r3, r3, r1
  40308a:	eb44 0402 	adc.w	r4, r4, r2
  40308e:	f243 61af 	movw	r1, #13999	; 0x36af
  403092:	f04f 0200 	mov.w	r2, #0
  403096:	185d      	adds	r5, r3, r1
  403098:	eb44 0602 	adc.w	r6, r4, r2
  40309c:	4628      	mov	r0, r5
  40309e:	4631      	mov	r1, r6
  4030a0:	4c48      	ldr	r4, [pc, #288]	; (4031c4 <main+0x194>)
  4030a2:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4030a6:	f04f 0300 	mov.w	r3, #0
  4030aa:	47a0      	blx	r4
  4030ac:	4603      	mov	r3, r0
  4030ae:	460c      	mov	r4, r1
  4030b0:	4618      	mov	r0, r3
  4030b2:	4b45      	ldr	r3, [pc, #276]	; (4031c8 <main+0x198>)
  4030b4:	4798      	blx	r3
	ioport_set_pin_level(WIFI_RESET_PIN, 1);
  4030b6:	2101      	movs	r1, #1
  4030b8:	2000      	movs	r0, #0
  4030ba:	4b40      	ldr	r3, [pc, #256]	; (4031bc <main+0x18c>)
  4030bc:	4798      	blx	r3
	
	//Initialize and configure the camera
	init_camera();
  4030be:	4b43      	ldr	r3, [pc, #268]	; (4031cc <main+0x19c>)
  4030c0:	4798      	blx	r3
	configure_camera();
  4030c2:	4b43      	ldr	r3, [pc, #268]	; (4031d0 <main+0x1a0>)
  4030c4:	4798      	blx	r3
	
	write_wifi_command("set uart.flow 0 on \r\n", 2);
  4030c6:	2102      	movs	r1, #2
  4030c8:	4842      	ldr	r0, [pc, #264]	; (4031d4 <main+0x1a4>)
  4030ca:	4b43      	ldr	r3, [pc, #268]	; (4031d8 <main+0x1a8>)
  4030cc:	4798      	blx	r3
	write_wifi_command("set bus.command.rx_bufsize 5000\r\n", 2);
  4030ce:	2102      	movs	r1, #2
  4030d0:	4842      	ldr	r0, [pc, #264]	; (4031dc <main+0x1ac>)
  4030d2:	4b41      	ldr	r3, [pc, #260]	; (4031d8 <main+0x1a8>)
  4030d4:	4798      	blx	r3
	write_wifi_command("set sy i g wlan 20\r\n", 2);
  4030d6:	2102      	movs	r1, #2
  4030d8:	4841      	ldr	r0, [pc, #260]	; (4031e0 <main+0x1b0>)
  4030da:	4b3f      	ldr	r3, [pc, #252]	; (4031d8 <main+0x1a8>)
  4030dc:	4798      	blx	r3
	write_wifi_command("set sy i g network 19\r\n", 2);
  4030de:	2102      	movs	r1, #2
  4030e0:	4840      	ldr	r0, [pc, #256]	; (4031e4 <main+0x1b4>)
  4030e2:	4b3d      	ldr	r3, [pc, #244]	; (4031d8 <main+0x1a8>)
  4030e4:	4798      	blx	r3
	write_wifi_command("set sy i g softap 21\r\n" ,2);
  4030e6:	2102      	movs	r1, #2
  4030e8:	483f      	ldr	r0, [pc, #252]	; (4031e8 <main+0x1b8>)
  4030ea:	4b3b      	ldr	r3, [pc, #236]	; (4031d8 <main+0x1a8>)
  4030ec:	4798      	blx	r3
	write_wifi_command("set system.cmd.gpio 13\r\n", 2);
  4030ee:	2102      	movs	r1, #2
  4030f0:	483e      	ldr	r0, [pc, #248]	; (4031ec <main+0x1bc>)
  4030f2:	4b39      	ldr	r3, [pc, #228]	; (4031d8 <main+0x1a8>)
  4030f4:	4798      	blx	r3
	write_wifi_command("set wl n o 14\r\n", 2);
  4030f6:	2102      	movs	r1, #2
  4030f8:	483d      	ldr	r0, [pc, #244]	; (4031f0 <main+0x1c0>)
  4030fa:	4b37      	ldr	r3, [pc, #220]	; (4031d8 <main+0x1a8>)
  4030fc:	4798      	blx	r3
	write_wifi_command("set sy c p off\r\n", 2);
  4030fe:	2102      	movs	r1, #2
  403100:	483c      	ldr	r0, [pc, #240]	; (4031f4 <main+0x1c4>)
  403102:	4b35      	ldr	r3, [pc, #212]	; (4031d8 <main+0x1a8>)
  403104:	4798      	blx	r3
	write_wifi_command("set sy c e off\r\n", 2);
  403106:	2102      	movs	r1, #2
  403108:	483b      	ldr	r0, [pc, #236]	; (4031f8 <main+0x1c8>)
  40310a:	4b33      	ldr	r3, [pc, #204]	; (4031d8 <main+0x1a8>)
  40310c:	4798      	blx	r3
	write_wifi_command("save\r\n", 2);
  40310e:	2102      	movs	r1, #2
  403110:	483a      	ldr	r0, [pc, #232]	; (4031fc <main+0x1cc>)
  403112:	4b31      	ldr	r3, [pc, #196]	; (4031d8 <main+0x1a8>)
  403114:	4798      	blx	r3
	//write_wifi_command("reboot\r\n", 2);
	
	ioport_set_pin_level(WIFI_RESET_PIN, 0);
  403116:	2100      	movs	r1, #0
  403118:	2000      	movs	r0, #0
  40311a:	4b28      	ldr	r3, [pc, #160]	; (4031bc <main+0x18c>)
  40311c:	4798      	blx	r3
	delay_ms(100);
  40311e:	4b28      	ldr	r3, [pc, #160]	; (4031c0 <main+0x190>)
  403120:	4798      	blx	r3
  403122:	4603      	mov	r3, r0
  403124:	4619      	mov	r1, r3
  403126:	f04f 0200 	mov.w	r2, #0
  40312a:	460b      	mov	r3, r1
  40312c:	4614      	mov	r4, r2
  40312e:	18db      	adds	r3, r3, r3
  403130:	eb44 0404 	adc.w	r4, r4, r4
  403134:	185b      	adds	r3, r3, r1
  403136:	eb44 0402 	adc.w	r4, r4, r2
  40313a:	ea4f 1944 	mov.w	r9, r4, lsl #5
  40313e:	ea49 69d3 	orr.w	r9, r9, r3, lsr #27
  403142:	ea4f 1843 	mov.w	r8, r3, lsl #5
  403146:	eb13 0308 	adds.w	r3, r3, r8
  40314a:	eb44 0409 	adc.w	r4, r4, r9
  40314e:	185b      	adds	r3, r3, r1
  403150:	eb44 0402 	adc.w	r4, r4, r2
  403154:	f243 61af 	movw	r1, #13999	; 0x36af
  403158:	f04f 0200 	mov.w	r2, #0
  40315c:	185d      	adds	r5, r3, r1
  40315e:	eb44 0602 	adc.w	r6, r4, r2
  403162:	4628      	mov	r0, r5
  403164:	4631      	mov	r1, r6
  403166:	4c17      	ldr	r4, [pc, #92]	; (4031c4 <main+0x194>)
  403168:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40316c:	f04f 0300 	mov.w	r3, #0
  403170:	47a0      	blx	r4
  403172:	4603      	mov	r3, r0
  403174:	460c      	mov	r4, r1
  403176:	4618      	mov	r0, r3
  403178:	4b13      	ldr	r3, [pc, #76]	; (4031c8 <main+0x198>)
  40317a:	4798      	blx	r3
	ioport_set_pin_level(WIFI_RESET_PIN, 1);
  40317c:	2101      	movs	r1, #1
  40317e:	2000      	movs	r0, #0
  403180:	4b0e      	ldr	r3, [pc, #56]	; (4031bc <main+0x18c>)
  403182:	4798      	blx	r3
		
	wifi_setup_button_flag=false;
  403184:	4a1e      	ldr	r2, [pc, #120]	; (403200 <main+0x1d0>)
  403186:	2300      	movs	r3, #0
  403188:	6013      	str	r3, [r2, #0]

	write_wifi_command("set sy c p off\r\n", 2);
  40318a:	2102      	movs	r1, #2
  40318c:	4819      	ldr	r0, [pc, #100]	; (4031f4 <main+0x1c4>)
  40318e:	4b12      	ldr	r3, [pc, #72]	; (4031d8 <main+0x1a8>)
  403190:	4798      	blx	r3
	write_wifi_command("set sy c e on\r\n", 2);
  403192:	2102      	movs	r1, #2
  403194:	481b      	ldr	r0, [pc, #108]	; (403204 <main+0x1d4>)
  403196:	4b10      	ldr	r3, [pc, #64]	; (4031d8 <main+0x1a8>)
  403198:	4798      	blx	r3

	
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  40319a:	e078      	b.n	40328e <main+0x25e>
  40319c:	00400421 	.word	0x00400421
  4031a0:	400e1450 	.word	0x400e1450
  4031a4:	00401739 	.word	0x00401739
  4031a8:	00402b31 	.word	0x00402b31
  4031ac:	004023d1 	.word	0x004023d1
  4031b0:	00402621 	.word	0x00402621
  4031b4:	004026d1 	.word	0x004026d1
  4031b8:	00402731 	.word	0x00402731
  4031bc:	00402f79 	.word	0x00402f79
  4031c0:	00402f65 	.word	0x00402f65
  4031c4:	0040361d 	.word	0x0040361d
  4031c8:	20000001 	.word	0x20000001
  4031cc:	00401acd 	.word	0x00401acd
  4031d0:	00401b91 	.word	0x00401b91
  4031d4:	00409170 	.word	0x00409170
  4031d8:	00402791 	.word	0x00402791
  4031dc:	00409188 	.word	0x00409188
  4031e0:	004091ac 	.word	0x004091ac
  4031e4:	004091c4 	.word	0x004091c4
  4031e8:	004091dc 	.word	0x004091dc
  4031ec:	004091f4 	.word	0x004091f4
  4031f0:	00409210 	.word	0x00409210
  4031f4:	00409220 	.word	0x00409220
  4031f8:	00409234 	.word	0x00409234
  4031fc:	00409248 	.word	0x00409248
  403200:	20000a60 	.word	0x20000a60
  403204:	00409250 	.word	0x00409250
		if (wifi_setup_button_flag){
  403208:	4b7b      	ldr	r3, [pc, #492]	; (4033f8 <main+0x3c8>)
  40320a:	681b      	ldr	r3, [r3, #0]
  40320c:	2b00      	cmp	r3, #0
  40320e:	d03e      	beq.n	40328e <main+0x25e>
			write_wifi_command("setup web\r\n", 1);
  403210:	2101      	movs	r1, #1
  403212:	487a      	ldr	r0, [pc, #488]	; (4033fc <main+0x3cc>)
  403214:	4b7a      	ldr	r3, [pc, #488]	; (403400 <main+0x3d0>)
  403216:	4798      	blx	r3
			write_wifi_command("setup web\r\n", 1);
  403218:	2101      	movs	r1, #1
  40321a:	4878      	ldr	r0, [pc, #480]	; (4033fc <main+0x3cc>)
  40321c:	4b78      	ldr	r3, [pc, #480]	; (403400 <main+0x3d0>)
  40321e:	4798      	blx	r3
			delay_ms(100);
  403220:	4b78      	ldr	r3, [pc, #480]	; (403404 <main+0x3d4>)
  403222:	4798      	blx	r3
  403224:	4603      	mov	r3, r0
  403226:	4619      	mov	r1, r3
  403228:	f04f 0200 	mov.w	r2, #0
  40322c:	460b      	mov	r3, r1
  40322e:	4614      	mov	r4, r2
  403230:	18db      	adds	r3, r3, r3
  403232:	eb44 0404 	adc.w	r4, r4, r4
  403236:	185b      	adds	r3, r3, r1
  403238:	eb44 0402 	adc.w	r4, r4, r2
  40323c:	0160      	lsls	r0, r4, #5
  40323e:	6478      	str	r0, [r7, #68]	; 0x44
  403240:	6c78      	ldr	r0, [r7, #68]	; 0x44
  403242:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  403246:	6478      	str	r0, [r7, #68]	; 0x44
  403248:	0158      	lsls	r0, r3, #5
  40324a:	6438      	str	r0, [r7, #64]	; 0x40
  40324c:	e9d7 5610 	ldrd	r5, r6, [r7, #64]	; 0x40
  403250:	18ed      	adds	r5, r5, r3
  403252:	eb46 0604 	adc.w	r6, r6, r4
  403256:	462b      	mov	r3, r5
  403258:	4634      	mov	r4, r6
  40325a:	185b      	adds	r3, r3, r1
  40325c:	eb44 0402 	adc.w	r4, r4, r2
  403260:	f243 61af 	movw	r1, #13999	; 0x36af
  403264:	f04f 0200 	mov.w	r2, #0
  403268:	185d      	adds	r5, r3, r1
  40326a:	eb44 0602 	adc.w	r6, r4, r2
  40326e:	4628      	mov	r0, r5
  403270:	4631      	mov	r1, r6
  403272:	4c65      	ldr	r4, [pc, #404]	; (403408 <main+0x3d8>)
  403274:	f243 62b0 	movw	r2, #14000	; 0x36b0
  403278:	f04f 0300 	mov.w	r3, #0
  40327c:	47a0      	blx	r4
  40327e:	4603      	mov	r3, r0
  403280:	460c      	mov	r4, r1
  403282:	4618      	mov	r0, r3
  403284:	4b61      	ldr	r3, [pc, #388]	; (40340c <main+0x3dc>)
  403286:	4798      	blx	r3
			wifi_setup_button_flag = 0;
  403288:	4a5b      	ldr	r2, [pc, #364]	; (4033f8 <main+0x3c8>)
  40328a:	2300      	movs	r3, #0
  40328c:	6013      	str	r3, [r2, #0]
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  40328e:	200a      	movs	r0, #10
  403290:	4b5f      	ldr	r3, [pc, #380]	; (403410 <main+0x3e0>)
  403292:	4798      	blx	r3
  403294:	4603      	mov	r3, r0
  403296:	f083 0301 	eor.w	r3, r3, #1
  40329a:	b2db      	uxtb	r3, r3
  40329c:	2b00      	cmp	r3, #0
  40329e:	d1b3      	bne.n	403208 <main+0x1d8>
=======
  402f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f68:	b093      	sub	sp, #76	; 0x4c
  402f6a:	af00      	add	r7, sp, #0
	//Initialize clock and board definitions
	sysclk_init();
  402f6c:	4b9b      	ldr	r3, [pc, #620]	; (4031dc <main+0x278>)
  402f6e:	4798      	blx	r3
	wdt_disable(WDT);
  402f70:	489b      	ldr	r0, [pc, #620]	; (4031e0 <main+0x27c>)
  402f72:	4b9c      	ldr	r3, [pc, #624]	; (4031e4 <main+0x280>)
  402f74:	4798      	blx	r3
	board_init();
  402f76:	4b9c      	ldr	r3, [pc, #624]	; (4031e8 <main+0x284>)
  402f78:	4798      	blx	r3

	//Configure and start the Timer
	configure_tc();
  402f7a:	4b9c      	ldr	r3, [pc, #624]	; (4031ec <main+0x288>)
  402f7c:	4798      	blx	r3
	
	//Configure the WiFi USART, Command pin, and Web Setup pin
	configure_usart_wifi();
  402f7e:	4b9c      	ldr	r3, [pc, #624]	; (4031f0 <main+0x28c>)
  402f80:	4798      	blx	r3
	configure_wifi_command_pin();
  402f82:	4b9c      	ldr	r3, [pc, #624]	; (4031f4 <main+0x290>)
  402f84:	4798      	blx	r3
	configure_wifi_web_setup_pin();
  402f86:	4b9c      	ldr	r3, [pc, #624]	; (4031f8 <main+0x294>)
  402f88:	4798      	blx	r3
	
	//Reset wiFi module
	ioport_set_pin_level(WIFI_RESET_PIN, 0);
  402f8a:	2100      	movs	r1, #0
  402f8c:	2000      	movs	r0, #0
  402f8e:	4b9b      	ldr	r3, [pc, #620]	; (4031fc <main+0x298>)
  402f90:	4798      	blx	r3
	delay_ms(100);
  402f92:	4b9b      	ldr	r3, [pc, #620]	; (403200 <main+0x29c>)
  402f94:	4798      	blx	r3
  402f96:	4603      	mov	r3, r0
  402f98:	4619      	mov	r1, r3
  402f9a:	f04f 0200 	mov.w	r2, #0
  402f9e:	460b      	mov	r3, r1
  402fa0:	4614      	mov	r4, r2
  402fa2:	18db      	adds	r3, r3, r3
  402fa4:	eb44 0404 	adc.w	r4, r4, r4
  402fa8:	185b      	adds	r3, r3, r1
  402faa:	eb44 0402 	adc.w	r4, r4, r2
  402fae:	0166      	lsls	r6, r4, #5
  402fb0:	ea46 66d3 	orr.w	r6, r6, r3, lsr #27
  402fb4:	015d      	lsls	r5, r3, #5
  402fb6:	195b      	adds	r3, r3, r5
  402fb8:	eb44 0406 	adc.w	r4, r4, r6
  402fbc:	185b      	adds	r3, r3, r1
  402fbe:	eb44 0402 	adc.w	r4, r4, r2
  402fc2:	f243 61af 	movw	r1, #13999	; 0x36af
  402fc6:	f04f 0200 	mov.w	r2, #0
  402fca:	185d      	adds	r5, r3, r1
  402fcc:	eb44 0602 	adc.w	r6, r4, r2
  402fd0:	4628      	mov	r0, r5
  402fd2:	4631      	mov	r1, r6
  402fd4:	4c8b      	ldr	r4, [pc, #556]	; (403204 <main+0x2a0>)
  402fd6:	f243 62b0 	movw	r2, #14000	; 0x36b0
  402fda:	f04f 0300 	mov.w	r3, #0
  402fde:	47a0      	blx	r4
  402fe0:	4603      	mov	r3, r0
  402fe2:	460c      	mov	r4, r1
  402fe4:	4618      	mov	r0, r3
  402fe6:	4b88      	ldr	r3, [pc, #544]	; (403208 <main+0x2a4>)
  402fe8:	4798      	blx	r3
	ioport_set_pin_level(WIFI_RESET_PIN, 1);
  402fea:	2101      	movs	r1, #1
  402fec:	2000      	movs	r0, #0
  402fee:	4b83      	ldr	r3, [pc, #524]	; (4031fc <main+0x298>)
  402ff0:	4798      	blx	r3
	
	//Initialize and configure the camera
	init_camera();
  402ff2:	4b86      	ldr	r3, [pc, #536]	; (40320c <main+0x2a8>)
  402ff4:	4798      	blx	r3
	configure_camera();
  402ff6:	4b86      	ldr	r3, [pc, #536]	; (403210 <main+0x2ac>)
  402ff8:	4798      	blx	r3
	
	write_wifi_command("set sy c p off\r\n", 2);
  402ffa:	2102      	movs	r1, #2
  402ffc:	4885      	ldr	r0, [pc, #532]	; (403214 <main+0x2b0>)
  402ffe:	4b86      	ldr	r3, [pc, #536]	; (403218 <main+0x2b4>)
  403000:	4798      	blx	r3
	
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  403002:	e039      	b.n	403078 <main+0x114>
		if (wifi_setup_button_flag){
  403004:	4b85      	ldr	r3, [pc, #532]	; (40321c <main+0x2b8>)
  403006:	681b      	ldr	r3, [r3, #0]
  403008:	2b00      	cmp	r3, #0
  40300a:	d035      	beq.n	403078 <main+0x114>
			write_wifi_command("setup web\r\n", 20);
  40300c:	2114      	movs	r1, #20
  40300e:	4884      	ldr	r0, [pc, #528]	; (403220 <main+0x2bc>)
  403010:	4b81      	ldr	r3, [pc, #516]	; (403218 <main+0x2b4>)
  403012:	4798      	blx	r3
			delay_ms(100);
  403014:	4b7a      	ldr	r3, [pc, #488]	; (403200 <main+0x29c>)
  403016:	4798      	blx	r3
  403018:	4603      	mov	r3, r0
  40301a:	4619      	mov	r1, r3
  40301c:	f04f 0200 	mov.w	r2, #0
  403020:	460b      	mov	r3, r1
  403022:	4614      	mov	r4, r2
  403024:	18db      	adds	r3, r3, r3
  403026:	eb44 0404 	adc.w	r4, r4, r4
  40302a:	185b      	adds	r3, r3, r1
  40302c:	eb44 0402 	adc.w	r4, r4, r2
  403030:	ea4f 1944 	mov.w	r9, r4, lsl #5
  403034:	ea49 69d3 	orr.w	r9, r9, r3, lsr #27
  403038:	ea4f 1843 	mov.w	r8, r3, lsl #5
  40303c:	eb13 0308 	adds.w	r3, r3, r8
  403040:	eb44 0409 	adc.w	r4, r4, r9
  403044:	185b      	adds	r3, r3, r1
  403046:	eb44 0402 	adc.w	r4, r4, r2
  40304a:	f243 61af 	movw	r1, #13999	; 0x36af
  40304e:	f04f 0200 	mov.w	r2, #0
  403052:	185d      	adds	r5, r3, r1
  403054:	eb44 0602 	adc.w	r6, r4, r2
  403058:	4628      	mov	r0, r5
  40305a:	4631      	mov	r1, r6
  40305c:	4c69      	ldr	r4, [pc, #420]	; (403204 <main+0x2a0>)
  40305e:	f243 62b0 	movw	r2, #14000	; 0x36b0
  403062:	f04f 0300 	mov.w	r3, #0
  403066:	47a0      	blx	r4
  403068:	4603      	mov	r3, r0
  40306a:	460c      	mov	r4, r1
  40306c:	4618      	mov	r0, r3
  40306e:	4b66      	ldr	r3, [pc, #408]	; (403208 <main+0x2a4>)
  403070:	4798      	blx	r3
			wifi_setup_button_flag = 0;
  403072:	4a6a      	ldr	r2, [pc, #424]	; (40321c <main+0x2b8>)
  403074:	2300      	movs	r3, #0
  403076:	6013      	str	r3, [r2, #0]
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  403078:	200a      	movs	r0, #10
  40307a:	4b6a      	ldr	r3, [pc, #424]	; (403224 <main+0x2c0>)
  40307c:	4798      	blx	r3
  40307e:	4603      	mov	r3, r0
  403080:	f083 0301 	eor.w	r3, r3, #1
  403084:	b2db      	uxtb	r3, r3
  403086:	2b00      	cmp	r3, #0
  403088:	d1bc      	bne.n	403004 <main+0xa0>
>>>>>>> parent of 8583d8d... Updated write_image to file
		}
		
	}


	write_wifi_command("set uart.flow 0 on \r\n", 2);
<<<<<<< HEAD
  4032a0:	2102      	movs	r1, #2
  4032a2:	485c      	ldr	r0, [pc, #368]	; (403414 <main+0x3e4>)
  4032a4:	4b56      	ldr	r3, [pc, #344]	; (403400 <main+0x3d0>)
  4032a6:	4798      	blx	r3
	write_wifi_command("set bus.command.rx_bufsize 5000\r\n", 2);
  4032a8:	2102      	movs	r1, #2
  4032aa:	485b      	ldr	r0, [pc, #364]	; (403418 <main+0x3e8>)
  4032ac:	4b54      	ldr	r3, [pc, #336]	; (403400 <main+0x3d0>)
  4032ae:	4798      	blx	r3
	write_wifi_command("set sy i g wlan 20\r\n", 2);
  4032b0:	2102      	movs	r1, #2
  4032b2:	485a      	ldr	r0, [pc, #360]	; (40341c <main+0x3ec>)
  4032b4:	4b52      	ldr	r3, [pc, #328]	; (403400 <main+0x3d0>)
  4032b6:	4798      	blx	r3
	write_wifi_command("set sy i g network 19\r\n", 2);
  4032b8:	2102      	movs	r1, #2
  4032ba:	4859      	ldr	r0, [pc, #356]	; (403420 <main+0x3f0>)
  4032bc:	4b50      	ldr	r3, [pc, #320]	; (403400 <main+0x3d0>)
  4032be:	4798      	blx	r3
	write_wifi_command("set sy i g softap 21\r\n" ,2);
  4032c0:	2102      	movs	r1, #2
  4032c2:	4858      	ldr	r0, [pc, #352]	; (403424 <main+0x3f4>)
  4032c4:	4b4e      	ldr	r3, [pc, #312]	; (403400 <main+0x3d0>)
  4032c6:	4798      	blx	r3
	write_wifi_command("set system.cmd.gpio 13\r\n", 2);
  4032c8:	2102      	movs	r1, #2
  4032ca:	4857      	ldr	r0, [pc, #348]	; (403428 <main+0x3f8>)
  4032cc:	4b4c      	ldr	r3, [pc, #304]	; (403400 <main+0x3d0>)
  4032ce:	4798      	blx	r3
	write_wifi_command("set wl n o 14\r\n", 2);
  4032d0:	2102      	movs	r1, #2
  4032d2:	4856      	ldr	r0, [pc, #344]	; (40342c <main+0x3fc>)
  4032d4:	4b4a      	ldr	r3, [pc, #296]	; (403400 <main+0x3d0>)
  4032d6:	4798      	blx	r3
	write_wifi_command("save\r\n", 2);
  4032d8:	2102      	movs	r1, #2
  4032da:	4855      	ldr	r0, [pc, #340]	; (403430 <main+0x400>)
  4032dc:	4b48      	ldr	r3, [pc, #288]	; (403400 <main+0x3d0>)
  4032de:	4798      	blx	r3
	write_wifi_command("reboot\r\n", 2);
  4032e0:	2102      	movs	r1, #2
  4032e2:	4854      	ldr	r0, [pc, #336]	; (403434 <main+0x404>)
  4032e4:	4b46      	ldr	r3, [pc, #280]	; (403400 <main+0x3d0>)
  4032e6:	4798      	blx	r3

	// tell wifi to turn off command prompt and echo
=======
  40308a:	2102      	movs	r1, #2
  40308c:	4866      	ldr	r0, [pc, #408]	; (403228 <main+0x2c4>)
  40308e:	4b62      	ldr	r3, [pc, #392]	; (403218 <main+0x2b4>)
  403090:	4798      	blx	r3
	write_wifi_command("set bus.command.rx_bufsize 5000\r\n", 2);
  403092:	2102      	movs	r1, #2
  403094:	4865      	ldr	r0, [pc, #404]	; (40322c <main+0x2c8>)
  403096:	4b60      	ldr	r3, [pc, #384]	; (403218 <main+0x2b4>)
  403098:	4798      	blx	r3
	write_wifi_command("set sy i g wlan 20\r\n", 2);
  40309a:	2102      	movs	r1, #2
  40309c:	4864      	ldr	r0, [pc, #400]	; (403230 <main+0x2cc>)
  40309e:	4b5e      	ldr	r3, [pc, #376]	; (403218 <main+0x2b4>)
  4030a0:	4798      	blx	r3
	write_wifi_command("set sy i g network 19\r\n", 2);
  4030a2:	2102      	movs	r1, #2
  4030a4:	4863      	ldr	r0, [pc, #396]	; (403234 <main+0x2d0>)
  4030a6:	4b5c      	ldr	r3, [pc, #368]	; (403218 <main+0x2b4>)
  4030a8:	4798      	blx	r3
	write_wifi_command("set sy i g softap 21\r\n" ,2);
  4030aa:	2102      	movs	r1, #2
  4030ac:	4862      	ldr	r0, [pc, #392]	; (403238 <main+0x2d4>)
  4030ae:	4b5a      	ldr	r3, [pc, #360]	; (403218 <main+0x2b4>)
  4030b0:	4798      	blx	r3
	write_wifi_command("set system.cmd.gpio 13\r\n", 2);
  4030b2:	2102      	movs	r1, #2
  4030b4:	4861      	ldr	r0, [pc, #388]	; (40323c <main+0x2d8>)
  4030b6:	4b58      	ldr	r3, [pc, #352]	; (403218 <main+0x2b4>)
  4030b8:	4798      	blx	r3
	write_wifi_command("set wl n o 14\r\n", 2);
  4030ba:	2102      	movs	r1, #2
  4030bc:	4860      	ldr	r0, [pc, #384]	; (403240 <main+0x2dc>)
  4030be:	4b56      	ldr	r3, [pc, #344]	; (403218 <main+0x2b4>)
  4030c0:	4798      	blx	r3
	write_wifi_command("save\r\n", 2);
  4030c2:	2102      	movs	r1, #2
  4030c4:	485f      	ldr	r0, [pc, #380]	; (403244 <main+0x2e0>)
  4030c6:	4b54      	ldr	r3, [pc, #336]	; (403218 <main+0x2b4>)
  4030c8:	4798      	blx	r3
	write_wifi_command("reboot\r\n", 2);
  4030ca:	2102      	movs	r1, #2
  4030cc:	485e      	ldr	r0, [pc, #376]	; (403248 <main+0x2e4>)
  4030ce:	4b52      	ldr	r3, [pc, #328]	; (403218 <main+0x2b4>)
  4030d0:	4798      	blx	r3
	
	
	// tell Wifi to turn off command prompt and echo
>>>>>>> parent of 8583d8d... Updated write_image to file



	wifi_setup_button_flag=false;
  4032e8:	4a43      	ldr	r2, [pc, #268]	; (4033f8 <main+0x3c8>)
  4032ea:	2300      	movs	r3, #0
  4032ec:	6013      	str	r3, [r2, #0]
	
	while(1) {
		if(wifi_setup_button_flag){
<<<<<<< HEAD
  4032ee:	4b42      	ldr	r3, [pc, #264]	; (4033f8 <main+0x3c8>)
  4032f0:	681b      	ldr	r3, [r3, #0]
  4032f2:	2b00      	cmp	r3, #0
  4032f4:	f000 811e 	beq.w	403534 <main+0x504>
			write_wifi_command("setup web\r\n", 1);
  4032f8:	2101      	movs	r1, #1
  4032fa:	4840      	ldr	r0, [pc, #256]	; (4033fc <main+0x3cc>)
  4032fc:	4b40      	ldr	r3, [pc, #256]	; (403400 <main+0x3d0>)
  4032fe:	4798      	blx	r3
			delay_ms(100);
  403300:	4b40      	ldr	r3, [pc, #256]	; (403404 <main+0x3d4>)
  403302:	4798      	blx	r3
  403304:	4603      	mov	r3, r0
  403306:	4619      	mov	r1, r3
  403308:	f04f 0200 	mov.w	r2, #0
  40330c:	460b      	mov	r3, r1
  40330e:	4614      	mov	r4, r2
  403310:	18db      	adds	r3, r3, r3
  403312:	eb44 0404 	adc.w	r4, r4, r4
  403316:	185b      	adds	r3, r3, r1
  403318:	eb44 0402 	adc.w	r4, r4, r2
  40331c:	ea4f 1b44 	mov.w	fp, r4, lsl #5
  403320:	ea4b 6bd3 	orr.w	fp, fp, r3, lsr #27
  403324:	ea4f 1a43 	mov.w	sl, r3, lsl #5
  403328:	eb13 030a 	adds.w	r3, r3, sl
  40332c:	eb44 040b 	adc.w	r4, r4, fp
  403330:	185b      	adds	r3, r3, r1
  403332:	eb44 0402 	adc.w	r4, r4, r2
  403336:	f243 61af 	movw	r1, #13999	; 0x36af
  40333a:	f04f 0200 	mov.w	r2, #0
  40333e:	185d      	adds	r5, r3, r1
  403340:	eb44 0602 	adc.w	r6, r4, r2
  403344:	4628      	mov	r0, r5
  403346:	4631      	mov	r1, r6
  403348:	4c2f      	ldr	r4, [pc, #188]	; (403408 <main+0x3d8>)
  40334a:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40334e:	f04f 0300 	mov.w	r3, #0
  403352:	47a0      	blx	r4
  403354:	4603      	mov	r3, r0
  403356:	460c      	mov	r4, r1
  403358:	4618      	mov	r0, r3
  40335a:	4b2c      	ldr	r3, [pc, #176]	; (40340c <main+0x3dc>)
  40335c:	4798      	blx	r3
			wifi_setup_button_flag=0;
  40335e:	4a26      	ldr	r2, [pc, #152]	; (4033f8 <main+0x3c8>)
  403360:	2300      	movs	r3, #0
  403362:	6013      	str	r3, [r2, #0]
			while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  403364:	e03e      	b.n	4033e4 <main+0x3b4>
				if (wifi_setup_button_flag){
  403366:	4b24      	ldr	r3, [pc, #144]	; (4033f8 <main+0x3c8>)
  403368:	681b      	ldr	r3, [r3, #0]
  40336a:	2b00      	cmp	r3, #0
  40336c:	d03a      	beq.n	4033e4 <main+0x3b4>
					write_wifi_command("setup web\r\n", 1);
  40336e:	2101      	movs	r1, #1
  403370:	4822      	ldr	r0, [pc, #136]	; (4033fc <main+0x3cc>)
  403372:	4b23      	ldr	r3, [pc, #140]	; (403400 <main+0x3d0>)
  403374:	4798      	blx	r3
					delay_ms(100);
  403376:	4b23      	ldr	r3, [pc, #140]	; (403404 <main+0x3d4>)
  403378:	4798      	blx	r3
  40337a:	4603      	mov	r3, r0
  40337c:	4619      	mov	r1, r3
  40337e:	f04f 0200 	mov.w	r2, #0
  403382:	460b      	mov	r3, r1
  403384:	4614      	mov	r4, r2
  403386:	18db      	adds	r3, r3, r3
  403388:	eb44 0404 	adc.w	r4, r4, r4
  40338c:	185b      	adds	r3, r3, r1
  40338e:	eb44 0402 	adc.w	r4, r4, r2
  403392:	0160      	lsls	r0, r4, #5
  403394:	63f8      	str	r0, [r7, #60]	; 0x3c
  403396:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
  403398:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  40339c:	63f8      	str	r0, [r7, #60]	; 0x3c
  40339e:	0158      	lsls	r0, r3, #5
  4033a0:	63b8      	str	r0, [r7, #56]	; 0x38
  4033a2:	e9d7 560e 	ldrd	r5, r6, [r7, #56]	; 0x38
  4033a6:	18ed      	adds	r5, r5, r3
  4033a8:	eb46 0604 	adc.w	r6, r6, r4
  4033ac:	462b      	mov	r3, r5
  4033ae:	4634      	mov	r4, r6
  4033b0:	185b      	adds	r3, r3, r1
  4033b2:	eb44 0402 	adc.w	r4, r4, r2
  4033b6:	f243 61af 	movw	r1, #13999	; 0x36af
  4033ba:	f04f 0200 	mov.w	r2, #0
  4033be:	185d      	adds	r5, r3, r1
  4033c0:	eb44 0602 	adc.w	r6, r4, r2
  4033c4:	4628      	mov	r0, r5
  4033c6:	4631      	mov	r1, r6
  4033c8:	4c0f      	ldr	r4, [pc, #60]	; (403408 <main+0x3d8>)
  4033ca:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4033ce:	f04f 0300 	mov.w	r3, #0
  4033d2:	47a0      	blx	r4
  4033d4:	4603      	mov	r3, r0
  4033d6:	460c      	mov	r4, r1
  4033d8:	4618      	mov	r0, r3
  4033da:	4b0c      	ldr	r3, [pc, #48]	; (40340c <main+0x3dc>)
  4033dc:	4798      	blx	r3
					wifi_setup_button_flag = 0;
  4033de:	4a06      	ldr	r2, [pc, #24]	; (4033f8 <main+0x3c8>)
  4033e0:	2300      	movs	r3, #0
  4033e2:	6013      	str	r3, [r2, #0]
			while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  4033e4:	200a      	movs	r0, #10
  4033e6:	4b0a      	ldr	r3, [pc, #40]	; (403410 <main+0x3e0>)
  4033e8:	4798      	blx	r3
  4033ea:	4603      	mov	r3, r0
  4033ec:	f083 0301 	eor.w	r3, r3, #1
  4033f0:	b2db      	uxtb	r3, r3
  4033f2:	2b00      	cmp	r3, #0
  4033f4:	d1b7      	bne.n	403366 <main+0x336>
=======
  4030d2:	4b52      	ldr	r3, [pc, #328]	; (40321c <main+0x2b8>)
  4030d4:	681b      	ldr	r3, [r3, #0]
  4030d6:	2b00      	cmp	r3, #0
  4030d8:	f000 8136 	beq.w	403348 <main+0x3e4>
			write_wifi_command("setup web\r\n", 5);
  4030dc:	2105      	movs	r1, #5
  4030de:	4850      	ldr	r0, [pc, #320]	; (403220 <main+0x2bc>)
  4030e0:	4b4d      	ldr	r3, [pc, #308]	; (403218 <main+0x2b4>)
  4030e2:	4798      	blx	r3
			delay_ms(100);
  4030e4:	4b46      	ldr	r3, [pc, #280]	; (403200 <main+0x29c>)
  4030e6:	4798      	blx	r3
  4030e8:	4603      	mov	r3, r0
  4030ea:	4619      	mov	r1, r3
  4030ec:	f04f 0200 	mov.w	r2, #0
  4030f0:	460b      	mov	r3, r1
  4030f2:	4614      	mov	r4, r2
  4030f4:	18db      	adds	r3, r3, r3
  4030f6:	eb44 0404 	adc.w	r4, r4, r4
  4030fa:	185b      	adds	r3, r3, r1
  4030fc:	eb44 0402 	adc.w	r4, r4, r2
  403100:	0160      	lsls	r0, r4, #5
  403102:	63f8      	str	r0, [r7, #60]	; 0x3c
  403104:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
  403106:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  40310a:	63f8      	str	r0, [r7, #60]	; 0x3c
  40310c:	0158      	lsls	r0, r3, #5
  40310e:	63b8      	str	r0, [r7, #56]	; 0x38
  403110:	e9d7 560e 	ldrd	r5, r6, [r7, #56]	; 0x38
  403114:	18ed      	adds	r5, r5, r3
  403116:	eb46 0604 	adc.w	r6, r6, r4
  40311a:	462b      	mov	r3, r5
  40311c:	4634      	mov	r4, r6
  40311e:	185b      	adds	r3, r3, r1
  403120:	eb44 0402 	adc.w	r4, r4, r2
  403124:	f243 61af 	movw	r1, #13999	; 0x36af
  403128:	f04f 0200 	mov.w	r2, #0
  40312c:	185d      	adds	r5, r3, r1
  40312e:	eb44 0602 	adc.w	r6, r4, r2
  403132:	4628      	mov	r0, r5
  403134:	4631      	mov	r1, r6
  403136:	4c33      	ldr	r4, [pc, #204]	; (403204 <main+0x2a0>)
  403138:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40313c:	f04f 0300 	mov.w	r3, #0
  403140:	47a0      	blx	r4
  403142:	4603      	mov	r3, r0
  403144:	460c      	mov	r4, r1
  403146:	4618      	mov	r0, r3
  403148:	4b2f      	ldr	r3, [pc, #188]	; (403208 <main+0x2a4>)
  40314a:	4798      	blx	r3
			wifi_setup_button_flag=0;
  40314c:	4a33      	ldr	r2, [pc, #204]	; (40321c <main+0x2b8>)
  40314e:	2300      	movs	r3, #0
  403150:	6013      	str	r3, [r2, #0]
			while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  403152:	e039      	b.n	4031c8 <main+0x264>
				if (wifi_setup_button_flag){
  403154:	4b31      	ldr	r3, [pc, #196]	; (40321c <main+0x2b8>)
  403156:	681b      	ldr	r3, [r3, #0]
  403158:	2b00      	cmp	r3, #0
  40315a:	d035      	beq.n	4031c8 <main+0x264>
					write_wifi_command("setup web\r\n", 5);
  40315c:	2105      	movs	r1, #5
  40315e:	4830      	ldr	r0, [pc, #192]	; (403220 <main+0x2bc>)
  403160:	4b2d      	ldr	r3, [pc, #180]	; (403218 <main+0x2b4>)
  403162:	4798      	blx	r3
					delay_ms(100);
  403164:	4b26      	ldr	r3, [pc, #152]	; (403200 <main+0x29c>)
  403166:	4798      	blx	r3
  403168:	4603      	mov	r3, r0
  40316a:	4619      	mov	r1, r3
  40316c:	f04f 0200 	mov.w	r2, #0
  403170:	460b      	mov	r3, r1
  403172:	4614      	mov	r4, r2
  403174:	18db      	adds	r3, r3, r3
  403176:	eb44 0404 	adc.w	r4, r4, r4
  40317a:	185b      	adds	r3, r3, r1
  40317c:	eb44 0402 	adc.w	r4, r4, r2
  403180:	ea4f 1b44 	mov.w	fp, r4, lsl #5
  403184:	ea4b 6bd3 	orr.w	fp, fp, r3, lsr #27
  403188:	ea4f 1a43 	mov.w	sl, r3, lsl #5
  40318c:	eb13 030a 	adds.w	r3, r3, sl
  403190:	eb44 040b 	adc.w	r4, r4, fp
  403194:	185b      	adds	r3, r3, r1
  403196:	eb44 0402 	adc.w	r4, r4, r2
  40319a:	f243 61af 	movw	r1, #13999	; 0x36af
  40319e:	f04f 0200 	mov.w	r2, #0
  4031a2:	185d      	adds	r5, r3, r1
  4031a4:	eb44 0602 	adc.w	r6, r4, r2
  4031a8:	4628      	mov	r0, r5
  4031aa:	4631      	mov	r1, r6
  4031ac:	4c15      	ldr	r4, [pc, #84]	; (403204 <main+0x2a0>)
  4031ae:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4031b2:	f04f 0300 	mov.w	r3, #0
  4031b6:	47a0      	blx	r4
  4031b8:	4603      	mov	r3, r0
  4031ba:	460c      	mov	r4, r1
  4031bc:	4618      	mov	r0, r3
  4031be:	4b12      	ldr	r3, [pc, #72]	; (403208 <main+0x2a4>)
  4031c0:	4798      	blx	r3
					wifi_setup_button_flag = 0;
  4031c2:	4a16      	ldr	r2, [pc, #88]	; (40321c <main+0x2b8>)
  4031c4:	2300      	movs	r3, #0
  4031c6:	6013      	str	r3, [r2, #0]
			while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  4031c8:	200a      	movs	r0, #10
  4031ca:	4b16      	ldr	r3, [pc, #88]	; (403224 <main+0x2c0>)
  4031cc:	4798      	blx	r3
  4031ce:	4603      	mov	r3, r0
  4031d0:	f083 0301 	eor.w	r3, r3, #1
  4031d4:	b2db      	uxtb	r3, r3
  4031d6:	2b00      	cmp	r3, #0
  4031d8:	d1bc      	bne.n	403154 <main+0x1f0>
>>>>>>> parent of 8583d8d... Updated write_image to file
				}
				
			}
		}
		while(ioport_get_pin_level(WIFI_STATUS)==0){
<<<<<<< HEAD
  4033f6:	e09d      	b.n	403534 <main+0x504>
  4033f8:	20000a60 	.word	0x20000a60
  4033fc:	00409260 	.word	0x00409260
  403400:	00402791 	.word	0x00402791
  403404:	00402f65 	.word	0x00402f65
  403408:	0040361d 	.word	0x0040361d
  40340c:	20000001 	.word	0x20000001
  403410:	00402fe3 	.word	0x00402fe3
  403414:	00409170 	.word	0x00409170
  403418:	00409188 	.word	0x00409188
  40341c:	004091ac 	.word	0x004091ac
  403420:	004091c4 	.word	0x004091c4
  403424:	004091dc 	.word	0x004091dc
  403428:	004091f4 	.word	0x004091f4
  40342c:	00409210 	.word	0x00409210
  403430:	00409248 	.word	0x00409248
  403434:	0040926c 	.word	0x0040926c
			ioport_set_pin_level(WIFI_RESET_PIN, 0);
  403438:	2100      	movs	r1, #0
  40343a:	2000      	movs	r0, #0
  40343c:	4b6d      	ldr	r3, [pc, #436]	; (4035f4 <main+0x5c4>)
  40343e:	4798      	blx	r3
			delay_ms(100);
  403440:	4b6d      	ldr	r3, [pc, #436]	; (4035f8 <main+0x5c8>)
  403442:	4798      	blx	r3
  403444:	4603      	mov	r3, r0
  403446:	4619      	mov	r1, r3
  403448:	f04f 0200 	mov.w	r2, #0
  40344c:	460b      	mov	r3, r1
  40344e:	4614      	mov	r4, r2
  403450:	18db      	adds	r3, r3, r3
  403452:	eb44 0404 	adc.w	r4, r4, r4
  403456:	185b      	adds	r3, r3, r1
  403458:	eb44 0402 	adc.w	r4, r4, r2
  40345c:	0160      	lsls	r0, r4, #5
  40345e:	6378      	str	r0, [r7, #52]	; 0x34
  403460:	6b78      	ldr	r0, [r7, #52]	; 0x34
  403462:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  403466:	6378      	str	r0, [r7, #52]	; 0x34
  403468:	0158      	lsls	r0, r3, #5
  40346a:	6338      	str	r0, [r7, #48]	; 0x30
  40346c:	e9d7 560c 	ldrd	r5, r6, [r7, #48]	; 0x30
  403470:	18ed      	adds	r5, r5, r3
  403472:	eb46 0604 	adc.w	r6, r6, r4
  403476:	462b      	mov	r3, r5
  403478:	4634      	mov	r4, r6
  40347a:	185b      	adds	r3, r3, r1
  40347c:	eb44 0402 	adc.w	r4, r4, r2
  403480:	f243 61af 	movw	r1, #13999	; 0x36af
  403484:	f04f 0200 	mov.w	r2, #0
  403488:	185d      	adds	r5, r3, r1
  40348a:	eb44 0602 	adc.w	r6, r4, r2
  40348e:	4628      	mov	r0, r5
  403490:	4631      	mov	r1, r6
  403492:	4c5a      	ldr	r4, [pc, #360]	; (4035fc <main+0x5cc>)
  403494:	f243 62b0 	movw	r2, #14000	; 0x36b0
  403498:	f04f 0300 	mov.w	r3, #0
  40349c:	47a0      	blx	r4
  40349e:	4603      	mov	r3, r0
  4034a0:	460c      	mov	r4, r1
  4034a2:	4618      	mov	r0, r3
  4034a4:	4b56      	ldr	r3, [pc, #344]	; (403600 <main+0x5d0>)
  4034a6:	4798      	blx	r3
			ioport_set_pin_level(WIFI_RESET_PIN, 1);
  4034a8:	2101      	movs	r1, #1
  4034aa:	2000      	movs	r0, #0
  4034ac:	4b51      	ldr	r3, [pc, #324]	; (4035f4 <main+0x5c4>)
  4034ae:	4798      	blx	r3
			delay_ms(500);
  4034b0:	4b51      	ldr	r3, [pc, #324]	; (4035f8 <main+0x5c8>)
  4034b2:	4798      	blx	r3
  4034b4:	4603      	mov	r3, r0
  4034b6:	4619      	mov	r1, r3
  4034b8:	f04f 0200 	mov.w	r2, #0
  4034bc:	460b      	mov	r3, r1
  4034be:	4614      	mov	r4, r2
  4034c0:	0160      	lsls	r0, r4, #5
  4034c2:	62f8      	str	r0, [r7, #44]	; 0x2c
  4034c4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
  4034c6:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  4034ca:	62f8      	str	r0, [r7, #44]	; 0x2c
  4034cc:	015b      	lsls	r3, r3, #5
  4034ce:	62bb      	str	r3, [r7, #40]	; 0x28
  4034d0:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
  4034d4:	1a5b      	subs	r3, r3, r1
  4034d6:	eb64 0402 	sbc.w	r4, r4, r2
  4034da:	00a0      	lsls	r0, r4, #2
  4034dc:	6278      	str	r0, [r7, #36]	; 0x24
  4034de:	6a78      	ldr	r0, [r7, #36]	; 0x24
  4034e0:	ea40 7093 	orr.w	r0, r0, r3, lsr #30
  4034e4:	6278      	str	r0, [r7, #36]	; 0x24
  4034e6:	009b      	lsls	r3, r3, #2
  4034e8:	623b      	str	r3, [r7, #32]
  4034ea:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
  4034ee:	185b      	adds	r3, r3, r1
  4034f0:	eb44 0402 	adc.w	r4, r4, r2
  4034f4:	00a2      	lsls	r2, r4, #2
  4034f6:	61fa      	str	r2, [r7, #28]
  4034f8:	69fa      	ldr	r2, [r7, #28]
  4034fa:	ea42 7293 	orr.w	r2, r2, r3, lsr #30
  4034fe:	61fa      	str	r2, [r7, #28]
  403500:	009b      	lsls	r3, r3, #2
  403502:	61bb      	str	r3, [r7, #24]
  403504:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
  403508:	4619      	mov	r1, r3
  40350a:	4622      	mov	r2, r4
  40350c:	f243 63af 	movw	r3, #13999	; 0x36af
  403510:	f04f 0400 	mov.w	r4, #0
  403514:	18cd      	adds	r5, r1, r3
  403516:	eb42 0604 	adc.w	r6, r2, r4
  40351a:	4628      	mov	r0, r5
  40351c:	4631      	mov	r1, r6
  40351e:	4c37      	ldr	r4, [pc, #220]	; (4035fc <main+0x5cc>)
  403520:	f243 62b0 	movw	r2, #14000	; 0x36b0
  403524:	f04f 0300 	mov.w	r3, #0
  403528:	47a0      	blx	r4
  40352a:	4603      	mov	r3, r0
  40352c:	460c      	mov	r4, r1
  40352e:	4618      	mov	r0, r3
  403530:	4b33      	ldr	r3, [pc, #204]	; (403600 <main+0x5d0>)
  403532:	4798      	blx	r3
		while(ioport_get_pin_level(WIFI_STATUS)==0){
  403534:	200a      	movs	r0, #10
  403536:	4b33      	ldr	r3, [pc, #204]	; (403604 <main+0x5d4>)
  403538:	4798      	blx	r3
  40353a:	4603      	mov	r3, r0
  40353c:	f083 0301 	eor.w	r3, r3, #1
  403540:	b2db      	uxtb	r3, r3
  403542:	2b00      	cmp	r3, #0
  403544:	f47f af78 	bne.w	403438 <main+0x408>
		}

		write_wifi_command("poll all\r\n", 1);
  403548:	2101      	movs	r1, #1
  40354a:	482f      	ldr	r0, [pc, #188]	; (403608 <main+0x5d8>)
  40354c:	4b2f      	ldr	r3, [pc, #188]	; (40360c <main+0x5dc>)
  40354e:	4798      	blx	r3
		
		while(1) {
			if(wait_flag){
  403550:	4b2f      	ldr	r3, [pc, #188]	; (403610 <main+0x5e0>)
  403552:	681b      	ldr	r3, [r3, #0]
  403554:	2b00      	cmp	r3, #0
  403556:	d045      	beq.n	4035e4 <main+0x5b4>
				delay_ms(1000);
  403558:	4b27      	ldr	r3, [pc, #156]	; (4035f8 <main+0x5c8>)
  40355a:	4798      	blx	r3
  40355c:	4603      	mov	r3, r0
  40355e:	4619      	mov	r1, r3
  403560:	f04f 0200 	mov.w	r2, #0
  403564:	460b      	mov	r3, r1
  403566:	4614      	mov	r4, r2
  403568:	0160      	lsls	r0, r4, #5
  40356a:	6178      	str	r0, [r7, #20]
  40356c:	6978      	ldr	r0, [r7, #20]
  40356e:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  403572:	6178      	str	r0, [r7, #20]
  403574:	015b      	lsls	r3, r3, #5
  403576:	613b      	str	r3, [r7, #16]
  403578:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
  40357c:	1a5b      	subs	r3, r3, r1
  40357e:	eb64 0402 	sbc.w	r4, r4, r2
  403582:	00a0      	lsls	r0, r4, #2
  403584:	60f8      	str	r0, [r7, #12]
  403586:	68f8      	ldr	r0, [r7, #12]
  403588:	ea40 7093 	orr.w	r0, r0, r3, lsr #30
  40358c:	60f8      	str	r0, [r7, #12]
  40358e:	009b      	lsls	r3, r3, #2
  403590:	60bb      	str	r3, [r7, #8]
  403592:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
  403596:	185b      	adds	r3, r3, r1
  403598:	eb44 0402 	adc.w	r4, r4, r2
  40359c:	00e2      	lsls	r2, r4, #3
  40359e:	607a      	str	r2, [r7, #4]
  4035a0:	687a      	ldr	r2, [r7, #4]
  4035a2:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
  4035a6:	607a      	str	r2, [r7, #4]
  4035a8:	00db      	lsls	r3, r3, #3
  4035aa:	603b      	str	r3, [r7, #0]
  4035ac:	e9d7 3400 	ldrd	r3, r4, [r7]
  4035b0:	4619      	mov	r1, r3
  4035b2:	4622      	mov	r2, r4
  4035b4:	f243 63af 	movw	r3, #13999	; 0x36af
  4035b8:	f04f 0400 	mov.w	r4, #0
  4035bc:	18cd      	adds	r5, r1, r3
  4035be:	eb42 0604 	adc.w	r6, r2, r4
  4035c2:	4628      	mov	r0, r5
  4035c4:	4631      	mov	r1, r6
  4035c6:	4c0d      	ldr	r4, [pc, #52]	; (4035fc <main+0x5cc>)
  4035c8:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4035cc:	f04f 0300 	mov.w	r3, #0
  4035d0:	47a0      	blx	r4
  4035d2:	4603      	mov	r3, r0
  4035d4:	460c      	mov	r4, r1
  4035d6:	4618      	mov	r0, r3
  4035d8:	4b09      	ldr	r3, [pc, #36]	; (403600 <main+0x5d0>)
  4035da:	4798      	blx	r3
				wait_flag=0;
  4035dc:	4b0c      	ldr	r3, [pc, #48]	; (403610 <main+0x5e0>)
  4035de:	2200      	movs	r2, #0
  4035e0:	601a      	str	r2, [r3, #0]
  4035e2:	e7b5      	b.n	403550 <main+0x520>
				} else{
					uint8_t get_image = start_capture();
  4035e4:	4b0b      	ldr	r3, [pc, #44]	; (403614 <main+0x5e4>)
  4035e6:	4798      	blx	r3
  4035e8:	4603      	mov	r3, r0
  4035ea:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
					write_image_to_file();
  4035ee:	4b0a      	ldr	r3, [pc, #40]	; (403618 <main+0x5e8>)
  4035f0:	4798      	blx	r3
			if(wait_flag){
  4035f2:	e7ad      	b.n	403550 <main+0x520>
  4035f4:	00402f79 	.word	0x00402f79
  4035f8:	00402f65 	.word	0x00402f65
  4035fc:	0040361d 	.word	0x0040361d
  403600:	20000001 	.word	0x20000001
  403604:	00402fe3 	.word	0x00402fe3
  403608:	00409278 	.word	0x00409278
  40360c:	00402791 	.word	0x00402791
  403610:	20000a70 	.word	0x20000a70
  403614:	00401c65 	.word	0x00401c65
  403618:	004027e9 	.word	0x004027e9

0040361c <__aeabi_uldivmod>:
  40361c:	b953      	cbnz	r3, 403634 <__aeabi_uldivmod+0x18>
  40361e:	b94a      	cbnz	r2, 403634 <__aeabi_uldivmod+0x18>
  403620:	2900      	cmp	r1, #0
  403622:	bf08      	it	eq
  403624:	2800      	cmpeq	r0, #0
  403626:	bf1c      	itt	ne
  403628:	f04f 31ff 	movne.w	r1, #4294967295
  40362c:	f04f 30ff 	movne.w	r0, #4294967295
  403630:	f000 b97a 	b.w	403928 <__aeabi_idiv0>
  403634:	f1ad 0c08 	sub.w	ip, sp, #8
  403638:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40363c:	f000 f806 	bl	40364c <__udivmoddi4>
  403640:	f8dd e004 	ldr.w	lr, [sp, #4]
  403644:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403648:	b004      	add	sp, #16
  40364a:	4770      	bx	lr

0040364c <__udivmoddi4>:
  40364c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403650:	468c      	mov	ip, r1
  403652:	460d      	mov	r5, r1
  403654:	4604      	mov	r4, r0
  403656:	9e08      	ldr	r6, [sp, #32]
  403658:	2b00      	cmp	r3, #0
  40365a:	d151      	bne.n	403700 <__udivmoddi4+0xb4>
  40365c:	428a      	cmp	r2, r1
  40365e:	4617      	mov	r7, r2
  403660:	d96d      	bls.n	40373e <__udivmoddi4+0xf2>
  403662:	fab2 fe82 	clz	lr, r2
  403666:	f1be 0f00 	cmp.w	lr, #0
  40366a:	d00b      	beq.n	403684 <__udivmoddi4+0x38>
  40366c:	f1ce 0c20 	rsb	ip, lr, #32
  403670:	fa01 f50e 	lsl.w	r5, r1, lr
  403674:	fa20 fc0c 	lsr.w	ip, r0, ip
  403678:	fa02 f70e 	lsl.w	r7, r2, lr
  40367c:	ea4c 0c05 	orr.w	ip, ip, r5
  403680:	fa00 f40e 	lsl.w	r4, r0, lr
  403684:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  403688:	0c25      	lsrs	r5, r4, #16
  40368a:	fbbc f8fa 	udiv	r8, ip, sl
  40368e:	fa1f f987 	uxth.w	r9, r7
  403692:	fb0a cc18 	mls	ip, sl, r8, ip
  403696:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40369a:	fb08 f309 	mul.w	r3, r8, r9
  40369e:	42ab      	cmp	r3, r5
  4036a0:	d90a      	bls.n	4036b8 <__udivmoddi4+0x6c>
  4036a2:	19ed      	adds	r5, r5, r7
  4036a4:	f108 32ff 	add.w	r2, r8, #4294967295
  4036a8:	f080 8123 	bcs.w	4038f2 <__udivmoddi4+0x2a6>
  4036ac:	42ab      	cmp	r3, r5
  4036ae:	f240 8120 	bls.w	4038f2 <__udivmoddi4+0x2a6>
  4036b2:	f1a8 0802 	sub.w	r8, r8, #2
  4036b6:	443d      	add	r5, r7
  4036b8:	1aed      	subs	r5, r5, r3
  4036ba:	b2a4      	uxth	r4, r4
  4036bc:	fbb5 f0fa 	udiv	r0, r5, sl
  4036c0:	fb0a 5510 	mls	r5, sl, r0, r5
  4036c4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4036c8:	fb00 f909 	mul.w	r9, r0, r9
  4036cc:	45a1      	cmp	r9, r4
  4036ce:	d909      	bls.n	4036e4 <__udivmoddi4+0x98>
  4036d0:	19e4      	adds	r4, r4, r7
  4036d2:	f100 33ff 	add.w	r3, r0, #4294967295
  4036d6:	f080 810a 	bcs.w	4038ee <__udivmoddi4+0x2a2>
  4036da:	45a1      	cmp	r9, r4
  4036dc:	f240 8107 	bls.w	4038ee <__udivmoddi4+0x2a2>
  4036e0:	3802      	subs	r0, #2
  4036e2:	443c      	add	r4, r7
  4036e4:	eba4 0409 	sub.w	r4, r4, r9
  4036e8:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4036ec:	2100      	movs	r1, #0
  4036ee:	2e00      	cmp	r6, #0
  4036f0:	d061      	beq.n	4037b6 <__udivmoddi4+0x16a>
  4036f2:	fa24 f40e 	lsr.w	r4, r4, lr
  4036f6:	2300      	movs	r3, #0
  4036f8:	6034      	str	r4, [r6, #0]
  4036fa:	6073      	str	r3, [r6, #4]
  4036fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403700:	428b      	cmp	r3, r1
  403702:	d907      	bls.n	403714 <__udivmoddi4+0xc8>
  403704:	2e00      	cmp	r6, #0
  403706:	d054      	beq.n	4037b2 <__udivmoddi4+0x166>
  403708:	2100      	movs	r1, #0
  40370a:	e886 0021 	stmia.w	r6, {r0, r5}
  40370e:	4608      	mov	r0, r1
  403710:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403714:	fab3 f183 	clz	r1, r3
  403718:	2900      	cmp	r1, #0
  40371a:	f040 808e 	bne.w	40383a <__udivmoddi4+0x1ee>
  40371e:	42ab      	cmp	r3, r5
  403720:	d302      	bcc.n	403728 <__udivmoddi4+0xdc>
  403722:	4282      	cmp	r2, r0
  403724:	f200 80fa 	bhi.w	40391c <__udivmoddi4+0x2d0>
  403728:	1a84      	subs	r4, r0, r2
  40372a:	eb65 0503 	sbc.w	r5, r5, r3
  40372e:	2001      	movs	r0, #1
  403730:	46ac      	mov	ip, r5
  403732:	2e00      	cmp	r6, #0
  403734:	d03f      	beq.n	4037b6 <__udivmoddi4+0x16a>
  403736:	e886 1010 	stmia.w	r6, {r4, ip}
  40373a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40373e:	b912      	cbnz	r2, 403746 <__udivmoddi4+0xfa>
  403740:	2701      	movs	r7, #1
  403742:	fbb7 f7f2 	udiv	r7, r7, r2
  403746:	fab7 fe87 	clz	lr, r7
  40374a:	f1be 0f00 	cmp.w	lr, #0
  40374e:	d134      	bne.n	4037ba <__udivmoddi4+0x16e>
  403750:	1beb      	subs	r3, r5, r7
  403752:	0c3a      	lsrs	r2, r7, #16
  403754:	fa1f fc87 	uxth.w	ip, r7
  403758:	2101      	movs	r1, #1
  40375a:	fbb3 f8f2 	udiv	r8, r3, r2
  40375e:	0c25      	lsrs	r5, r4, #16
  403760:	fb02 3318 	mls	r3, r2, r8, r3
  403764:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  403768:	fb0c f308 	mul.w	r3, ip, r8
  40376c:	42ab      	cmp	r3, r5
  40376e:	d907      	bls.n	403780 <__udivmoddi4+0x134>
  403770:	19ed      	adds	r5, r5, r7
  403772:	f108 30ff 	add.w	r0, r8, #4294967295
  403776:	d202      	bcs.n	40377e <__udivmoddi4+0x132>
  403778:	42ab      	cmp	r3, r5
  40377a:	f200 80d1 	bhi.w	403920 <__udivmoddi4+0x2d4>
  40377e:	4680      	mov	r8, r0
  403780:	1aed      	subs	r5, r5, r3
  403782:	b2a3      	uxth	r3, r4
  403784:	fbb5 f0f2 	udiv	r0, r5, r2
  403788:	fb02 5510 	mls	r5, r2, r0, r5
  40378c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  403790:	fb0c fc00 	mul.w	ip, ip, r0
  403794:	45a4      	cmp	ip, r4
  403796:	d907      	bls.n	4037a8 <__udivmoddi4+0x15c>
  403798:	19e4      	adds	r4, r4, r7
  40379a:	f100 33ff 	add.w	r3, r0, #4294967295
  40379e:	d202      	bcs.n	4037a6 <__udivmoddi4+0x15a>
  4037a0:	45a4      	cmp	ip, r4
  4037a2:	f200 80b8 	bhi.w	403916 <__udivmoddi4+0x2ca>
  4037a6:	4618      	mov	r0, r3
  4037a8:	eba4 040c 	sub.w	r4, r4, ip
  4037ac:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4037b0:	e79d      	b.n	4036ee <__udivmoddi4+0xa2>
  4037b2:	4631      	mov	r1, r6
  4037b4:	4630      	mov	r0, r6
  4037b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4037ba:	f1ce 0420 	rsb	r4, lr, #32
  4037be:	fa05 f30e 	lsl.w	r3, r5, lr
  4037c2:	fa07 f70e 	lsl.w	r7, r7, lr
  4037c6:	fa20 f804 	lsr.w	r8, r0, r4
  4037ca:	0c3a      	lsrs	r2, r7, #16
  4037cc:	fa25 f404 	lsr.w	r4, r5, r4
  4037d0:	ea48 0803 	orr.w	r8, r8, r3
  4037d4:	fbb4 f1f2 	udiv	r1, r4, r2
  4037d8:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4037dc:	fb02 4411 	mls	r4, r2, r1, r4
  4037e0:	fa1f fc87 	uxth.w	ip, r7
  4037e4:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4037e8:	fb01 f30c 	mul.w	r3, r1, ip
  4037ec:	42ab      	cmp	r3, r5
  4037ee:	fa00 f40e 	lsl.w	r4, r0, lr
  4037f2:	d909      	bls.n	403808 <__udivmoddi4+0x1bc>
  4037f4:	19ed      	adds	r5, r5, r7
  4037f6:	f101 30ff 	add.w	r0, r1, #4294967295
  4037fa:	f080 808a 	bcs.w	403912 <__udivmoddi4+0x2c6>
  4037fe:	42ab      	cmp	r3, r5
  403800:	f240 8087 	bls.w	403912 <__udivmoddi4+0x2c6>
  403804:	3902      	subs	r1, #2
  403806:	443d      	add	r5, r7
  403808:	1aeb      	subs	r3, r5, r3
  40380a:	fa1f f588 	uxth.w	r5, r8
  40380e:	fbb3 f0f2 	udiv	r0, r3, r2
  403812:	fb02 3310 	mls	r3, r2, r0, r3
  403816:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40381a:	fb00 f30c 	mul.w	r3, r0, ip
  40381e:	42ab      	cmp	r3, r5
  403820:	d907      	bls.n	403832 <__udivmoddi4+0x1e6>
  403822:	19ed      	adds	r5, r5, r7
  403824:	f100 38ff 	add.w	r8, r0, #4294967295
  403828:	d26f      	bcs.n	40390a <__udivmoddi4+0x2be>
  40382a:	42ab      	cmp	r3, r5
  40382c:	d96d      	bls.n	40390a <__udivmoddi4+0x2be>
  40382e:	3802      	subs	r0, #2
  403830:	443d      	add	r5, r7
  403832:	1aeb      	subs	r3, r5, r3
  403834:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  403838:	e78f      	b.n	40375a <__udivmoddi4+0x10e>
  40383a:	f1c1 0720 	rsb	r7, r1, #32
  40383e:	fa22 f807 	lsr.w	r8, r2, r7
  403842:	408b      	lsls	r3, r1
  403844:	fa05 f401 	lsl.w	r4, r5, r1
  403848:	ea48 0303 	orr.w	r3, r8, r3
  40384c:	fa20 fe07 	lsr.w	lr, r0, r7
  403850:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  403854:	40fd      	lsrs	r5, r7
  403856:	ea4e 0e04 	orr.w	lr, lr, r4
  40385a:	fbb5 f9fc 	udiv	r9, r5, ip
  40385e:	ea4f 441e 	mov.w	r4, lr, lsr #16
  403862:	fb0c 5519 	mls	r5, ip, r9, r5
  403866:	fa1f f883 	uxth.w	r8, r3
  40386a:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40386e:	fb09 f408 	mul.w	r4, r9, r8
  403872:	42ac      	cmp	r4, r5
  403874:	fa02 f201 	lsl.w	r2, r2, r1
  403878:	fa00 fa01 	lsl.w	sl, r0, r1
  40387c:	d908      	bls.n	403890 <__udivmoddi4+0x244>
  40387e:	18ed      	adds	r5, r5, r3
  403880:	f109 30ff 	add.w	r0, r9, #4294967295
  403884:	d243      	bcs.n	40390e <__udivmoddi4+0x2c2>
  403886:	42ac      	cmp	r4, r5
  403888:	d941      	bls.n	40390e <__udivmoddi4+0x2c2>
  40388a:	f1a9 0902 	sub.w	r9, r9, #2
  40388e:	441d      	add	r5, r3
  403890:	1b2d      	subs	r5, r5, r4
  403892:	fa1f fe8e 	uxth.w	lr, lr
  403896:	fbb5 f0fc 	udiv	r0, r5, ip
  40389a:	fb0c 5510 	mls	r5, ip, r0, r5
  40389e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4038a2:	fb00 f808 	mul.w	r8, r0, r8
  4038a6:	45a0      	cmp	r8, r4
  4038a8:	d907      	bls.n	4038ba <__udivmoddi4+0x26e>
  4038aa:	18e4      	adds	r4, r4, r3
  4038ac:	f100 35ff 	add.w	r5, r0, #4294967295
  4038b0:	d229      	bcs.n	403906 <__udivmoddi4+0x2ba>
  4038b2:	45a0      	cmp	r8, r4
  4038b4:	d927      	bls.n	403906 <__udivmoddi4+0x2ba>
  4038b6:	3802      	subs	r0, #2
  4038b8:	441c      	add	r4, r3
  4038ba:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4038be:	eba4 0408 	sub.w	r4, r4, r8
  4038c2:	fba0 8902 	umull	r8, r9, r0, r2
  4038c6:	454c      	cmp	r4, r9
  4038c8:	46c6      	mov	lr, r8
  4038ca:	464d      	mov	r5, r9
  4038cc:	d315      	bcc.n	4038fa <__udivmoddi4+0x2ae>
  4038ce:	d012      	beq.n	4038f6 <__udivmoddi4+0x2aa>
  4038d0:	b156      	cbz	r6, 4038e8 <__udivmoddi4+0x29c>
  4038d2:	ebba 030e 	subs.w	r3, sl, lr
  4038d6:	eb64 0405 	sbc.w	r4, r4, r5
  4038da:	fa04 f707 	lsl.w	r7, r4, r7
  4038de:	40cb      	lsrs	r3, r1
  4038e0:	431f      	orrs	r7, r3
  4038e2:	40cc      	lsrs	r4, r1
  4038e4:	6037      	str	r7, [r6, #0]
  4038e6:	6074      	str	r4, [r6, #4]
  4038e8:	2100      	movs	r1, #0
  4038ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4038ee:	4618      	mov	r0, r3
  4038f0:	e6f8      	b.n	4036e4 <__udivmoddi4+0x98>
  4038f2:	4690      	mov	r8, r2
  4038f4:	e6e0      	b.n	4036b8 <__udivmoddi4+0x6c>
  4038f6:	45c2      	cmp	sl, r8
  4038f8:	d2ea      	bcs.n	4038d0 <__udivmoddi4+0x284>
  4038fa:	ebb8 0e02 	subs.w	lr, r8, r2
  4038fe:	eb69 0503 	sbc.w	r5, r9, r3
  403902:	3801      	subs	r0, #1
  403904:	e7e4      	b.n	4038d0 <__udivmoddi4+0x284>
  403906:	4628      	mov	r0, r5
  403908:	e7d7      	b.n	4038ba <__udivmoddi4+0x26e>
  40390a:	4640      	mov	r0, r8
  40390c:	e791      	b.n	403832 <__udivmoddi4+0x1e6>
  40390e:	4681      	mov	r9, r0
  403910:	e7be      	b.n	403890 <__udivmoddi4+0x244>
  403912:	4601      	mov	r1, r0
  403914:	e778      	b.n	403808 <__udivmoddi4+0x1bc>
  403916:	3802      	subs	r0, #2
  403918:	443c      	add	r4, r7
  40391a:	e745      	b.n	4037a8 <__udivmoddi4+0x15c>
  40391c:	4608      	mov	r0, r1
  40391e:	e708      	b.n	403732 <__udivmoddi4+0xe6>
  403920:	f1a8 0802 	sub.w	r8, r8, #2
  403924:	443d      	add	r5, r7
  403926:	e72b      	b.n	403780 <__udivmoddi4+0x134>

00403928 <__aeabi_idiv0>:
  403928:	4770      	bx	lr
  40392a:	bf00      	nop

0040392c <__libc_init_array>:
  40392c:	b570      	push	{r4, r5, r6, lr}
  40392e:	4e0f      	ldr	r6, [pc, #60]	; (40396c <__libc_init_array+0x40>)
  403930:	4d0f      	ldr	r5, [pc, #60]	; (403970 <__libc_init_array+0x44>)
  403932:	1b76      	subs	r6, r6, r5
  403934:	10b6      	asrs	r6, r6, #2
  403936:	bf18      	it	ne
  403938:	2400      	movne	r4, #0
  40393a:	d005      	beq.n	403948 <__libc_init_array+0x1c>
  40393c:	3401      	adds	r4, #1
  40393e:	f855 3b04 	ldr.w	r3, [r5], #4
  403942:	4798      	blx	r3
  403944:	42a6      	cmp	r6, r4
  403946:	d1f9      	bne.n	40393c <__libc_init_array+0x10>
  403948:	4e0a      	ldr	r6, [pc, #40]	; (403974 <__libc_init_array+0x48>)
  40394a:	4d0b      	ldr	r5, [pc, #44]	; (403978 <__libc_init_array+0x4c>)
  40394c:	1b76      	subs	r6, r6, r5
  40394e:	f005 fddf 	bl	409510 <_init>
  403952:	10b6      	asrs	r6, r6, #2
  403954:	bf18      	it	ne
  403956:	2400      	movne	r4, #0
  403958:	d006      	beq.n	403968 <__libc_init_array+0x3c>
  40395a:	3401      	adds	r4, #1
  40395c:	f855 3b04 	ldr.w	r3, [r5], #4
  403960:	4798      	blx	r3
  403962:	42a6      	cmp	r6, r4
  403964:	d1f9      	bne.n	40395a <__libc_init_array+0x2e>
  403966:	bd70      	pop	{r4, r5, r6, pc}
  403968:	bd70      	pop	{r4, r5, r6, pc}
  40396a:	bf00      	nop
  40396c:	0040951c 	.word	0x0040951c
  403970:	0040951c 	.word	0x0040951c
  403974:	00409524 	.word	0x00409524
  403978:	0040951c 	.word	0x0040951c

0040397c <memset>:
  40397c:	b470      	push	{r4, r5, r6}
  40397e:	0786      	lsls	r6, r0, #30
  403980:	d046      	beq.n	403a10 <memset+0x94>
  403982:	1e54      	subs	r4, r2, #1
  403984:	2a00      	cmp	r2, #0
  403986:	d041      	beq.n	403a0c <memset+0x90>
  403988:	b2ca      	uxtb	r2, r1
  40398a:	4603      	mov	r3, r0
  40398c:	e002      	b.n	403994 <memset+0x18>
  40398e:	f114 34ff 	adds.w	r4, r4, #4294967295
  403992:	d33b      	bcc.n	403a0c <memset+0x90>
  403994:	f803 2b01 	strb.w	r2, [r3], #1
  403998:	079d      	lsls	r5, r3, #30
  40399a:	d1f8      	bne.n	40398e <memset+0x12>
  40399c:	2c03      	cmp	r4, #3
  40399e:	d92e      	bls.n	4039fe <memset+0x82>
  4039a0:	b2cd      	uxtb	r5, r1
  4039a2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4039a6:	2c0f      	cmp	r4, #15
  4039a8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4039ac:	d919      	bls.n	4039e2 <memset+0x66>
  4039ae:	f103 0210 	add.w	r2, r3, #16
  4039b2:	4626      	mov	r6, r4
  4039b4:	3e10      	subs	r6, #16
  4039b6:	2e0f      	cmp	r6, #15
  4039b8:	f842 5c10 	str.w	r5, [r2, #-16]
  4039bc:	f842 5c0c 	str.w	r5, [r2, #-12]
  4039c0:	f842 5c08 	str.w	r5, [r2, #-8]
  4039c4:	f842 5c04 	str.w	r5, [r2, #-4]
  4039c8:	f102 0210 	add.w	r2, r2, #16
  4039cc:	d8f2      	bhi.n	4039b4 <memset+0x38>
  4039ce:	f1a4 0210 	sub.w	r2, r4, #16
  4039d2:	f022 020f 	bic.w	r2, r2, #15
  4039d6:	f004 040f 	and.w	r4, r4, #15
  4039da:	3210      	adds	r2, #16
  4039dc:	2c03      	cmp	r4, #3
  4039de:	4413      	add	r3, r2
  4039e0:	d90d      	bls.n	4039fe <memset+0x82>
  4039e2:	461e      	mov	r6, r3
  4039e4:	4622      	mov	r2, r4
  4039e6:	3a04      	subs	r2, #4
  4039e8:	2a03      	cmp	r2, #3
  4039ea:	f846 5b04 	str.w	r5, [r6], #4
  4039ee:	d8fa      	bhi.n	4039e6 <memset+0x6a>
  4039f0:	1f22      	subs	r2, r4, #4
  4039f2:	f022 0203 	bic.w	r2, r2, #3
  4039f6:	3204      	adds	r2, #4
  4039f8:	4413      	add	r3, r2
  4039fa:	f004 0403 	and.w	r4, r4, #3
  4039fe:	b12c      	cbz	r4, 403a0c <memset+0x90>
  403a00:	b2c9      	uxtb	r1, r1
  403a02:	441c      	add	r4, r3
  403a04:	f803 1b01 	strb.w	r1, [r3], #1
  403a08:	429c      	cmp	r4, r3
  403a0a:	d1fb      	bne.n	403a04 <memset+0x88>
  403a0c:	bc70      	pop	{r4, r5, r6}
  403a0e:	4770      	bx	lr
  403a10:	4614      	mov	r4, r2
  403a12:	4603      	mov	r3, r0
  403a14:	e7c2      	b.n	40399c <memset+0x20>
  403a16:	bf00      	nop

00403a18 <sprintf>:
  403a18:	b40e      	push	{r1, r2, r3}
  403a1a:	b5f0      	push	{r4, r5, r6, r7, lr}
  403a1c:	b09c      	sub	sp, #112	; 0x70
  403a1e:	ab21      	add	r3, sp, #132	; 0x84
  403a20:	490f      	ldr	r1, [pc, #60]	; (403a60 <sprintf+0x48>)
  403a22:	f853 2b04 	ldr.w	r2, [r3], #4
  403a26:	9301      	str	r3, [sp, #4]
  403a28:	4605      	mov	r5, r0
  403a2a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  403a2e:	6808      	ldr	r0, [r1, #0]
  403a30:	9502      	str	r5, [sp, #8]
  403a32:	f44f 7702 	mov.w	r7, #520	; 0x208
  403a36:	f64f 76ff 	movw	r6, #65535	; 0xffff
  403a3a:	a902      	add	r1, sp, #8
  403a3c:	9506      	str	r5, [sp, #24]
  403a3e:	f8ad 7014 	strh.w	r7, [sp, #20]
  403a42:	9404      	str	r4, [sp, #16]
  403a44:	9407      	str	r4, [sp, #28]
  403a46:	f8ad 6016 	strh.w	r6, [sp, #22]
  403a4a:	f000 fa6f 	bl	403f2c <_svfprintf_r>
  403a4e:	9b02      	ldr	r3, [sp, #8]
  403a50:	2200      	movs	r2, #0
  403a52:	701a      	strb	r2, [r3, #0]
  403a54:	b01c      	add	sp, #112	; 0x70
  403a56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  403a5a:	b003      	add	sp, #12
  403a5c:	4770      	bx	lr
  403a5e:	bf00      	nop
  403a60:	20000010 	.word	0x20000010

00403a64 <critical_factorization>:
  403a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403a68:	f04f 0e01 	mov.w	lr, #1
  403a6c:	4674      	mov	r4, lr
  403a6e:	2500      	movs	r5, #0
  403a70:	f04f 36ff 	mov.w	r6, #4294967295
  403a74:	192b      	adds	r3, r5, r4
  403a76:	428b      	cmp	r3, r1
  403a78:	eb00 0706 	add.w	r7, r0, r6
  403a7c:	d20d      	bcs.n	403a9a <critical_factorization+0x36>
  403a7e:	5d3f      	ldrb	r7, [r7, r4]
  403a80:	f810 c003 	ldrb.w	ip, [r0, r3]
  403a84:	45bc      	cmp	ip, r7
  403a86:	d22d      	bcs.n	403ae4 <critical_factorization+0x80>
  403a88:	461d      	mov	r5, r3
  403a8a:	2401      	movs	r4, #1
  403a8c:	eba3 0e06 	sub.w	lr, r3, r6
  403a90:	192b      	adds	r3, r5, r4
  403a92:	428b      	cmp	r3, r1
  403a94:	eb00 0706 	add.w	r7, r0, r6
  403a98:	d3f1      	bcc.n	403a7e <critical_factorization+0x1a>
  403a9a:	f04f 0801 	mov.w	r8, #1
  403a9e:	f8c2 e000 	str.w	lr, [r2]
  403aa2:	4644      	mov	r4, r8
  403aa4:	2500      	movs	r5, #0
  403aa6:	f04f 37ff 	mov.w	r7, #4294967295
  403aaa:	192b      	adds	r3, r5, r4
  403aac:	4299      	cmp	r1, r3
  403aae:	eb00 0e07 	add.w	lr, r0, r7
  403ab2:	d90e      	bls.n	403ad2 <critical_factorization+0x6e>
  403ab4:	f81e e004 	ldrb.w	lr, [lr, r4]
  403ab8:	f810 c003 	ldrb.w	ip, [r0, r3]
  403abc:	45f4      	cmp	ip, lr
  403abe:	d918      	bls.n	403af2 <critical_factorization+0x8e>
  403ac0:	461d      	mov	r5, r3
  403ac2:	2401      	movs	r4, #1
  403ac4:	eba3 0807 	sub.w	r8, r3, r7
  403ac8:	192b      	adds	r3, r5, r4
  403aca:	4299      	cmp	r1, r3
  403acc:	eb00 0e07 	add.w	lr, r0, r7
  403ad0:	d8f0      	bhi.n	403ab4 <critical_factorization+0x50>
  403ad2:	3701      	adds	r7, #1
  403ad4:	1c70      	adds	r0, r6, #1
  403ad6:	4287      	cmp	r7, r0
  403ad8:	bf24      	itt	cs
  403ada:	f8c2 8000 	strcs.w	r8, [r2]
  403ade:	4638      	movcs	r0, r7
  403ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403ae4:	d00c      	beq.n	403b00 <critical_factorization+0x9c>
  403ae6:	f04f 0e01 	mov.w	lr, #1
  403aea:	462e      	mov	r6, r5
  403aec:	4674      	mov	r4, lr
  403aee:	4475      	add	r5, lr
  403af0:	e7c0      	b.n	403a74 <critical_factorization+0x10>
  403af2:	d00b      	beq.n	403b0c <critical_factorization+0xa8>
  403af4:	f04f 0801 	mov.w	r8, #1
  403af8:	462f      	mov	r7, r5
  403afa:	4644      	mov	r4, r8
  403afc:	4445      	add	r5, r8
  403afe:	e7d4      	b.n	403aaa <critical_factorization+0x46>
  403b00:	4574      	cmp	r4, lr
  403b02:	bf12      	itee	ne
  403b04:	3401      	addne	r4, #1
  403b06:	461d      	moveq	r5, r3
  403b08:	2401      	moveq	r4, #1
  403b0a:	e7b3      	b.n	403a74 <critical_factorization+0x10>
  403b0c:	4544      	cmp	r4, r8
  403b0e:	bf12      	itee	ne
  403b10:	3401      	addne	r4, #1
  403b12:	461d      	moveq	r5, r3
  403b14:	2401      	moveq	r4, #1
  403b16:	e7c8      	b.n	403aaa <critical_factorization+0x46>

00403b18 <two_way_long_needle>:
  403b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403b1c:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  403b20:	4616      	mov	r6, r2
  403b22:	4605      	mov	r5, r0
  403b24:	468b      	mov	fp, r1
  403b26:	4610      	mov	r0, r2
  403b28:	4619      	mov	r1, r3
  403b2a:	aa03      	add	r2, sp, #12
  403b2c:	461c      	mov	r4, r3
  403b2e:	f7ff ff99 	bl	403a64 <critical_factorization>
  403b32:	ab03      	add	r3, sp, #12
  403b34:	4681      	mov	r9, r0
  403b36:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  403b3a:	f843 4f04 	str.w	r4, [r3, #4]!
  403b3e:	4293      	cmp	r3, r2
  403b40:	d1fb      	bne.n	403b3a <two_way_long_needle+0x22>
  403b42:	b14c      	cbz	r4, 403b58 <two_way_long_needle+0x40>
  403b44:	1e63      	subs	r3, r4, #1
  403b46:	1e72      	subs	r2, r6, #1
  403b48:	a804      	add	r0, sp, #16
  403b4a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  403b4e:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  403b52:	f113 33ff 	adds.w	r3, r3, #4294967295
  403b56:	d2f8      	bcs.n	403b4a <two_way_long_needle+0x32>
  403b58:	9903      	ldr	r1, [sp, #12]
  403b5a:	464a      	mov	r2, r9
  403b5c:	4431      	add	r1, r6
  403b5e:	4630      	mov	r0, r6
  403b60:	f002 ff06 	bl	406970 <memcmp>
  403b64:	2800      	cmp	r0, #0
  403b66:	d16f      	bne.n	403c48 <two_way_long_needle+0x130>
  403b68:	f109 33ff 	add.w	r3, r9, #4294967295
  403b6c:	9300      	str	r3, [sp, #0]
  403b6e:	18f3      	adds	r3, r6, r3
  403b70:	4682      	mov	sl, r0
  403b72:	9301      	str	r3, [sp, #4]
  403b74:	4623      	mov	r3, r4
  403b76:	4680      	mov	r8, r0
  403b78:	4654      	mov	r4, sl
  403b7a:	4658      	mov	r0, fp
  403b7c:	469a      	mov	sl, r3
  403b7e:	eb08 070a 	add.w	r7, r8, sl
  403b82:	1a3a      	subs	r2, r7, r0
  403b84:	2100      	movs	r1, #0
  403b86:	4428      	add	r0, r5
  403b88:	f002 fea2 	bl	4068d0 <memchr>
  403b8c:	2800      	cmp	r0, #0
  403b8e:	d156      	bne.n	403c3e <two_way_long_needle+0x126>
  403b90:	2f00      	cmp	r7, #0
  403b92:	d054      	beq.n	403c3e <two_way_long_needle+0x126>
  403b94:	19eb      	adds	r3, r5, r7
  403b96:	aa04      	add	r2, sp, #16
  403b98:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  403b9c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  403ba0:	b14b      	cbz	r3, 403bb6 <two_way_long_needle+0x9e>
  403ba2:	b124      	cbz	r4, 403bae <two_way_long_needle+0x96>
  403ba4:	9a03      	ldr	r2, [sp, #12]
  403ba6:	4293      	cmp	r3, r2
  403ba8:	d201      	bcs.n	403bae <two_way_long_needle+0x96>
  403baa:	ebaa 0302 	sub.w	r3, sl, r2
  403bae:	4498      	add	r8, r3
  403bb0:	2400      	movs	r4, #0
  403bb2:	4638      	mov	r0, r7
  403bb4:	e7e3      	b.n	403b7e <two_way_long_needle+0x66>
  403bb6:	454c      	cmp	r4, r9
  403bb8:	4623      	mov	r3, r4
  403bba:	f10a 3eff 	add.w	lr, sl, #4294967295
  403bbe:	bf38      	it	cc
  403bc0:	464b      	movcc	r3, r9
  403bc2:	4573      	cmp	r3, lr
  403bc4:	d213      	bcs.n	403bee <two_way_long_needle+0xd6>
  403bc6:	eb08 0203 	add.w	r2, r8, r3
  403bca:	f816 c003 	ldrb.w	ip, [r6, r3]
  403bce:	5ca8      	ldrb	r0, [r5, r2]
  403bd0:	4584      	cmp	ip, r0
  403bd2:	442a      	add	r2, r5
  403bd4:	eb06 0103 	add.w	r1, r6, r3
  403bd8:	d006      	beq.n	403be8 <two_way_long_needle+0xd0>
  403bda:	e02c      	b.n	403c36 <two_way_long_needle+0x11e>
  403bdc:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  403be0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  403be4:	4584      	cmp	ip, r0
  403be6:	d126      	bne.n	403c36 <two_way_long_needle+0x11e>
  403be8:	3301      	adds	r3, #1
  403bea:	4573      	cmp	r3, lr
  403bec:	d3f6      	bcc.n	403bdc <two_way_long_needle+0xc4>
  403bee:	454c      	cmp	r4, r9
  403bf0:	9900      	ldr	r1, [sp, #0]
  403bf2:	f080 8089 	bcs.w	403d08 <two_way_long_needle+0x1f0>
  403bf6:	9b00      	ldr	r3, [sp, #0]
  403bf8:	eb08 0203 	add.w	r2, r8, r3
  403bfc:	9b01      	ldr	r3, [sp, #4]
  403bfe:	5ca8      	ldrb	r0, [r5, r2]
  403c00:	781b      	ldrb	r3, [r3, #0]
  403c02:	4298      	cmp	r0, r3
  403c04:	442a      	add	r2, r5
  403c06:	d17f      	bne.n	403d08 <two_way_long_needle+0x1f0>
  403c08:	9801      	ldr	r0, [sp, #4]
  403c0a:	f104 3bff 	add.w	fp, r4, #4294967295
  403c0e:	e006      	b.n	403c1e <two_way_long_needle+0x106>
  403c10:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  403c14:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  403c18:	45f4      	cmp	ip, lr
  403c1a:	d103      	bne.n	403c24 <two_way_long_needle+0x10c>
  403c1c:	4619      	mov	r1, r3
  403c1e:	1e4b      	subs	r3, r1, #1
  403c20:	459b      	cmp	fp, r3
  403c22:	d1f5      	bne.n	403c10 <two_way_long_needle+0xf8>
  403c24:	3401      	adds	r4, #1
  403c26:	428c      	cmp	r4, r1
  403c28:	d870      	bhi.n	403d0c <two_way_long_needle+0x1f4>
  403c2a:	9c03      	ldr	r4, [sp, #12]
  403c2c:	4638      	mov	r0, r7
  403c2e:	44a0      	add	r8, r4
  403c30:	ebaa 0404 	sub.w	r4, sl, r4
  403c34:	e7a3      	b.n	403b7e <two_way_long_needle+0x66>
  403c36:	f1c9 0201 	rsb	r2, r9, #1
  403c3a:	4490      	add	r8, r2
  403c3c:	e7b7      	b.n	403bae <two_way_long_needle+0x96>
  403c3e:	2000      	movs	r0, #0
  403c40:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  403c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403c48:	eba4 0309 	sub.w	r3, r4, r9
  403c4c:	454b      	cmp	r3, r9
  403c4e:	bf38      	it	cc
  403c50:	464b      	movcc	r3, r9
  403c52:	3301      	adds	r3, #1
  403c54:	f109 38ff 	add.w	r8, r9, #4294967295
  403c58:	9303      	str	r3, [sp, #12]
  403c5a:	eb06 0308 	add.w	r3, r6, r8
  403c5e:	4658      	mov	r0, fp
  403c60:	f04f 0a00 	mov.w	sl, #0
  403c64:	46cb      	mov	fp, r9
  403c66:	4699      	mov	r9, r3
  403c68:	eb0a 0704 	add.w	r7, sl, r4
  403c6c:	1a3a      	subs	r2, r7, r0
  403c6e:	2100      	movs	r1, #0
  403c70:	4428      	add	r0, r5
  403c72:	f002 fe2d 	bl	4068d0 <memchr>
  403c76:	2800      	cmp	r0, #0
  403c78:	d1e1      	bne.n	403c3e <two_way_long_needle+0x126>
  403c7a:	2f00      	cmp	r7, #0
  403c7c:	d0df      	beq.n	403c3e <two_way_long_needle+0x126>
  403c7e:	19eb      	adds	r3, r5, r7
  403c80:	aa04      	add	r2, sp, #16
  403c82:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  403c86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  403c8a:	bba3      	cbnz	r3, 403cf6 <two_way_long_needle+0x1de>
  403c8c:	1e61      	subs	r1, r4, #1
  403c8e:	458b      	cmp	fp, r1
  403c90:	d215      	bcs.n	403cbe <two_way_long_needle+0x1a6>
  403c92:	eb0a 020b 	add.w	r2, sl, fp
  403c96:	f816 300b 	ldrb.w	r3, [r6, fp]
  403c9a:	f815 e002 	ldrb.w	lr, [r5, r2]
  403c9e:	459e      	cmp	lr, r3
  403ca0:	442a      	add	r2, r5
  403ca2:	eb06 000b 	add.w	r0, r6, fp
  403ca6:	465b      	mov	r3, fp
  403ca8:	d006      	beq.n	403cb8 <two_way_long_needle+0x1a0>
  403caa:	e027      	b.n	403cfc <two_way_long_needle+0x1e4>
  403cac:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  403cb0:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  403cb4:	45f4      	cmp	ip, lr
  403cb6:	d121      	bne.n	403cfc <two_way_long_needle+0x1e4>
  403cb8:	3301      	adds	r3, #1
  403cba:	428b      	cmp	r3, r1
  403cbc:	d3f6      	bcc.n	403cac <two_way_long_needle+0x194>
  403cbe:	f1b8 3fff 	cmp.w	r8, #4294967295
  403cc2:	d011      	beq.n	403ce8 <two_way_long_needle+0x1d0>
  403cc4:	eb0a 0208 	add.w	r2, sl, r8
  403cc8:	f899 1000 	ldrb.w	r1, [r9]
  403ccc:	5cab      	ldrb	r3, [r5, r2]
  403cce:	4299      	cmp	r1, r3
  403cd0:	442a      	add	r2, r5
  403cd2:	d10f      	bne.n	403cf4 <two_way_long_needle+0x1dc>
  403cd4:	464b      	mov	r3, r9
  403cd6:	e005      	b.n	403ce4 <two_way_long_needle+0x1cc>
  403cd8:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  403cdc:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  403ce0:	4288      	cmp	r0, r1
  403ce2:	d107      	bne.n	403cf4 <two_way_long_needle+0x1dc>
  403ce4:	42b3      	cmp	r3, r6
  403ce6:	d1f7      	bne.n	403cd8 <two_way_long_needle+0x1c0>
  403ce8:	eb05 000a 	add.w	r0, r5, sl
  403cec:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  403cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cf4:	9b03      	ldr	r3, [sp, #12]
  403cf6:	449a      	add	sl, r3
  403cf8:	4638      	mov	r0, r7
  403cfa:	e7b5      	b.n	403c68 <two_way_long_needle+0x150>
  403cfc:	f1cb 0201 	rsb	r2, fp, #1
  403d00:	4492      	add	sl, r2
  403d02:	449a      	add	sl, r3
  403d04:	4638      	mov	r0, r7
  403d06:	e7af      	b.n	403c68 <two_way_long_needle+0x150>
  403d08:	4649      	mov	r1, r9
  403d0a:	e78b      	b.n	403c24 <two_way_long_needle+0x10c>
  403d0c:	eb05 0008 	add.w	r0, r5, r8
  403d10:	e796      	b.n	403c40 <two_way_long_needle+0x128>
  403d12:	bf00      	nop

00403d14 <strstr>:
  403d14:	7802      	ldrb	r2, [r0, #0]
  403d16:	2a00      	cmp	r2, #0
  403d18:	f000 8101 	beq.w	403f1e <strstr+0x20a>
  403d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403d20:	f891 8000 	ldrb.w	r8, [r1]
  403d24:	b085      	sub	sp, #20
  403d26:	4644      	mov	r4, r8
  403d28:	f1b8 0f00 	cmp.w	r8, #0
  403d2c:	d016      	beq.n	403d5c <strstr+0x48>
  403d2e:	4686      	mov	lr, r0
  403d30:	f101 0c01 	add.w	ip, r1, #1
  403d34:	2701      	movs	r7, #1
  403d36:	e003      	b.n	403d40 <strstr+0x2c>
  403d38:	f813 4b01 	ldrb.w	r4, [r3], #1
  403d3c:	b16c      	cbz	r4, 403d5a <strstr+0x46>
  403d3e:	469c      	mov	ip, r3
  403d40:	42a2      	cmp	r2, r4
  403d42:	bf14      	ite	ne
  403d44:	2700      	movne	r7, #0
  403d46:	f007 0701 	andeq.w	r7, r7, #1
  403d4a:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  403d4e:	4663      	mov	r3, ip
  403d50:	2a00      	cmp	r2, #0
  403d52:	d1f1      	bne.n	403d38 <strstr+0x24>
  403d54:	f89c 3000 	ldrb.w	r3, [ip]
  403d58:	b9fb      	cbnz	r3, 403d9a <strstr+0x86>
  403d5a:	b117      	cbz	r7, 403d62 <strstr+0x4e>
  403d5c:	b005      	add	sp, #20
  403d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d62:	460e      	mov	r6, r1
  403d64:	4605      	mov	r5, r0
  403d66:	4641      	mov	r1, r8
  403d68:	3001      	adds	r0, #1
  403d6a:	ebac 0406 	sub.w	r4, ip, r6
  403d6e:	f003 f9d9 	bl	407124 <strchr>
  403d72:	4607      	mov	r7, r0
  403d74:	b188      	cbz	r0, 403d9a <strstr+0x86>
  403d76:	2c01      	cmp	r4, #1
  403d78:	d0f0      	beq.n	403d5c <strstr+0x48>
  403d7a:	1928      	adds	r0, r5, r4
  403d7c:	4287      	cmp	r7, r0
  403d7e:	bf94      	ite	ls
  403d80:	1bc1      	subls	r1, r0, r7
  403d82:	2101      	movhi	r1, #1
  403d84:	2c1f      	cmp	r4, #31
  403d86:	468b      	mov	fp, r1
  403d88:	d90b      	bls.n	403da2 <strstr+0x8e>
  403d8a:	4623      	mov	r3, r4
  403d8c:	4632      	mov	r2, r6
  403d8e:	4638      	mov	r0, r7
  403d90:	f7ff fec2 	bl	403b18 <two_way_long_needle>
  403d94:	b005      	add	sp, #20
  403d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d9a:	2000      	movs	r0, #0
  403d9c:	b005      	add	sp, #20
  403d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403da2:	aa03      	add	r2, sp, #12
  403da4:	4621      	mov	r1, r4
  403da6:	4630      	mov	r0, r6
  403da8:	f7ff fe5c 	bl	403a64 <critical_factorization>
  403dac:	9903      	ldr	r1, [sp, #12]
  403dae:	4680      	mov	r8, r0
  403db0:	4602      	mov	r2, r0
  403db2:	4431      	add	r1, r6
  403db4:	4630      	mov	r0, r6
  403db6:	f002 fddb 	bl	406970 <memcmp>
  403dba:	2800      	cmp	r0, #0
  403dbc:	d157      	bne.n	403e6e <strstr+0x15a>
  403dbe:	f108 33ff 	add.w	r3, r8, #4294967295
  403dc2:	9300      	str	r3, [sp, #0]
  403dc4:	18f3      	adds	r3, r6, r3
  403dc6:	4681      	mov	r9, r0
  403dc8:	4605      	mov	r5, r0
  403dca:	9301      	str	r3, [sp, #4]
  403dcc:	4658      	mov	r0, fp
  403dce:	46b2      	mov	sl, r6
  403dd0:	1966      	adds	r6, r4, r5
  403dd2:	1a32      	subs	r2, r6, r0
  403dd4:	2100      	movs	r1, #0
  403dd6:	4438      	add	r0, r7
  403dd8:	f002 fd7a 	bl	4068d0 <memchr>
  403ddc:	2800      	cmp	r0, #0
  403dde:	d1dc      	bne.n	403d9a <strstr+0x86>
  403de0:	2e00      	cmp	r6, #0
  403de2:	d0da      	beq.n	403d9a <strstr+0x86>
  403de4:	45c8      	cmp	r8, r9
  403de6:	4643      	mov	r3, r8
  403de8:	bf38      	it	cc
  403dea:	464b      	movcc	r3, r9
  403dec:	429c      	cmp	r4, r3
  403dee:	d912      	bls.n	403e16 <strstr+0x102>
  403df0:	195a      	adds	r2, r3, r5
  403df2:	f81a 1003 	ldrb.w	r1, [sl, r3]
  403df6:	5cb8      	ldrb	r0, [r7, r2]
  403df8:	4281      	cmp	r1, r0
  403dfa:	443a      	add	r2, r7
  403dfc:	eb0a 0e03 	add.w	lr, sl, r3
  403e00:	d006      	beq.n	403e10 <strstr+0xfc>
  403e02:	e02c      	b.n	403e5e <strstr+0x14a>
  403e04:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  403e08:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  403e0c:	4288      	cmp	r0, r1
  403e0e:	d126      	bne.n	403e5e <strstr+0x14a>
  403e10:	3301      	adds	r3, #1
  403e12:	429c      	cmp	r4, r3
  403e14:	d1f6      	bne.n	403e04 <strstr+0xf0>
  403e16:	45c8      	cmp	r8, r9
  403e18:	9900      	ldr	r1, [sp, #0]
  403e1a:	f240 8083 	bls.w	403f24 <strstr+0x210>
  403e1e:	9b00      	ldr	r3, [sp, #0]
  403e20:	18ea      	adds	r2, r5, r3
  403e22:	9b01      	ldr	r3, [sp, #4]
  403e24:	5cb8      	ldrb	r0, [r7, r2]
  403e26:	781b      	ldrb	r3, [r3, #0]
  403e28:	4298      	cmp	r0, r3
  403e2a:	443a      	add	r2, r7
  403e2c:	d17a      	bne.n	403f24 <strstr+0x210>
  403e2e:	9801      	ldr	r0, [sp, #4]
  403e30:	f109 3bff 	add.w	fp, r9, #4294967295
  403e34:	e006      	b.n	403e44 <strstr+0x130>
  403e36:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  403e3a:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  403e3e:	45f4      	cmp	ip, lr
  403e40:	d103      	bne.n	403e4a <strstr+0x136>
  403e42:	4619      	mov	r1, r3
  403e44:	1e4b      	subs	r3, r1, #1
  403e46:	455b      	cmp	r3, fp
  403e48:	d1f5      	bne.n	403e36 <strstr+0x122>
  403e4a:	f109 0901 	add.w	r9, r9, #1
  403e4e:	4589      	cmp	r9, r1
  403e50:	d857      	bhi.n	403f02 <strstr+0x1ee>
  403e52:	9b03      	ldr	r3, [sp, #12]
  403e54:	4630      	mov	r0, r6
  403e56:	441d      	add	r5, r3
  403e58:	eba4 0903 	sub.w	r9, r4, r3
  403e5c:	e7b8      	b.n	403dd0 <strstr+0xbc>
  403e5e:	f1c8 0201 	rsb	r2, r8, #1
  403e62:	4415      	add	r5, r2
  403e64:	441d      	add	r5, r3
  403e66:	f04f 0900 	mov.w	r9, #0
  403e6a:	4630      	mov	r0, r6
  403e6c:	e7b0      	b.n	403dd0 <strstr+0xbc>
  403e6e:	eba4 0308 	sub.w	r3, r4, r8
  403e72:	4543      	cmp	r3, r8
  403e74:	bf38      	it	cc
  403e76:	4643      	movcc	r3, r8
  403e78:	3301      	adds	r3, #1
  403e7a:	f108 39ff 	add.w	r9, r8, #4294967295
  403e7e:	9303      	str	r3, [sp, #12]
  403e80:	eb06 0309 	add.w	r3, r6, r9
  403e84:	4658      	mov	r0, fp
  403e86:	2500      	movs	r5, #0
  403e88:	46bb      	mov	fp, r7
  403e8a:	469a      	mov	sl, r3
  403e8c:	1967      	adds	r7, r4, r5
  403e8e:	1a3a      	subs	r2, r7, r0
  403e90:	2100      	movs	r1, #0
  403e92:	4458      	add	r0, fp
  403e94:	f002 fd1c 	bl	4068d0 <memchr>
  403e98:	2800      	cmp	r0, #0
  403e9a:	f47f af7e 	bne.w	403d9a <strstr+0x86>
  403e9e:	2f00      	cmp	r7, #0
  403ea0:	f43f af7b 	beq.w	403d9a <strstr+0x86>
  403ea4:	4544      	cmp	r4, r8
  403ea6:	d915      	bls.n	403ed4 <strstr+0x1c0>
  403ea8:	eb08 0205 	add.w	r2, r8, r5
  403eac:	f816 3008 	ldrb.w	r3, [r6, r8]
  403eb0:	f81b 0002 	ldrb.w	r0, [fp, r2]
  403eb4:	4298      	cmp	r0, r3
  403eb6:	445a      	add	r2, fp
  403eb8:	eb06 0108 	add.w	r1, r6, r8
  403ebc:	4643      	mov	r3, r8
  403ebe:	d006      	beq.n	403ece <strstr+0x1ba>
  403ec0:	e023      	b.n	403f0a <strstr+0x1f6>
  403ec2:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  403ec6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  403eca:	4586      	cmp	lr, r0
  403ecc:	d11d      	bne.n	403f0a <strstr+0x1f6>
  403ece:	3301      	adds	r3, #1
  403ed0:	429c      	cmp	r4, r3
  403ed2:	d1f6      	bne.n	403ec2 <strstr+0x1ae>
  403ed4:	f1b9 3fff 	cmp.w	r9, #4294967295
  403ed8:	d012      	beq.n	403f00 <strstr+0x1ec>
  403eda:	eb05 0209 	add.w	r2, r5, r9
  403ede:	f89a 3000 	ldrb.w	r3, [sl]
  403ee2:	f81b 1002 	ldrb.w	r1, [fp, r2]
  403ee6:	4299      	cmp	r1, r3
  403ee8:	445a      	add	r2, fp
  403eea:	d114      	bne.n	403f16 <strstr+0x202>
  403eec:	4653      	mov	r3, sl
  403eee:	e005      	b.n	403efc <strstr+0x1e8>
  403ef0:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  403ef4:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  403ef8:	4288      	cmp	r0, r1
  403efa:	d10c      	bne.n	403f16 <strstr+0x202>
  403efc:	42b3      	cmp	r3, r6
  403efe:	d1f7      	bne.n	403ef0 <strstr+0x1dc>
  403f00:	465f      	mov	r7, fp
  403f02:	1978      	adds	r0, r7, r5
  403f04:	b005      	add	sp, #20
  403f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f0a:	f1c8 0201 	rsb	r2, r8, #1
  403f0e:	4415      	add	r5, r2
  403f10:	441d      	add	r5, r3
  403f12:	4638      	mov	r0, r7
  403f14:	e7ba      	b.n	403e8c <strstr+0x178>
  403f16:	9b03      	ldr	r3, [sp, #12]
  403f18:	4638      	mov	r0, r7
  403f1a:	441d      	add	r5, r3
  403f1c:	e7b6      	b.n	403e8c <strstr+0x178>
  403f1e:	780b      	ldrb	r3, [r1, #0]
  403f20:	b913      	cbnz	r3, 403f28 <strstr+0x214>
  403f22:	4770      	bx	lr
  403f24:	4641      	mov	r1, r8
  403f26:	e790      	b.n	403e4a <strstr+0x136>
  403f28:	2000      	movs	r0, #0
  403f2a:	4770      	bx	lr

00403f2c <_svfprintf_r>:
  403f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403f30:	b0c3      	sub	sp, #268	; 0x10c
  403f32:	460c      	mov	r4, r1
  403f34:	910b      	str	r1, [sp, #44]	; 0x2c
  403f36:	4692      	mov	sl, r2
  403f38:	930f      	str	r3, [sp, #60]	; 0x3c
  403f3a:	900c      	str	r0, [sp, #48]	; 0x30
  403f3c:	f002 fa04 	bl	406348 <_localeconv_r>
  403f40:	6803      	ldr	r3, [r0, #0]
  403f42:	931a      	str	r3, [sp, #104]	; 0x68
  403f44:	4618      	mov	r0, r3
  403f46:	f003 f97b 	bl	407240 <strlen>
  403f4a:	89a3      	ldrh	r3, [r4, #12]
  403f4c:	9019      	str	r0, [sp, #100]	; 0x64
  403f4e:	0619      	lsls	r1, r3, #24
  403f50:	d503      	bpl.n	403f5a <_svfprintf_r+0x2e>
  403f52:	6923      	ldr	r3, [r4, #16]
  403f54:	2b00      	cmp	r3, #0
  403f56:	f001 8001 	beq.w	404f5c <_svfprintf_r+0x1030>
  403f5a:	2300      	movs	r3, #0
  403f5c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  403f60:	9313      	str	r3, [sp, #76]	; 0x4c
  403f62:	9314      	str	r3, [sp, #80]	; 0x50
  403f64:	9315      	str	r3, [sp, #84]	; 0x54
  403f66:	9327      	str	r3, [sp, #156]	; 0x9c
  403f68:	9326      	str	r3, [sp, #152]	; 0x98
  403f6a:	9318      	str	r3, [sp, #96]	; 0x60
  403f6c:	931b      	str	r3, [sp, #108]	; 0x6c
  403f6e:	9309      	str	r3, [sp, #36]	; 0x24
  403f70:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  403f74:	46c8      	mov	r8, r9
  403f76:	9316      	str	r3, [sp, #88]	; 0x58
  403f78:	9317      	str	r3, [sp, #92]	; 0x5c
  403f7a:	f89a 3000 	ldrb.w	r3, [sl]
  403f7e:	4654      	mov	r4, sl
  403f80:	b1e3      	cbz	r3, 403fbc <_svfprintf_r+0x90>
  403f82:	2b25      	cmp	r3, #37	; 0x25
  403f84:	d102      	bne.n	403f8c <_svfprintf_r+0x60>
  403f86:	e019      	b.n	403fbc <_svfprintf_r+0x90>
  403f88:	2b25      	cmp	r3, #37	; 0x25
  403f8a:	d003      	beq.n	403f94 <_svfprintf_r+0x68>
  403f8c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  403f90:	2b00      	cmp	r3, #0
  403f92:	d1f9      	bne.n	403f88 <_svfprintf_r+0x5c>
  403f94:	eba4 050a 	sub.w	r5, r4, sl
  403f98:	b185      	cbz	r5, 403fbc <_svfprintf_r+0x90>
  403f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403f9c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403f9e:	f8c8 a000 	str.w	sl, [r8]
  403fa2:	3301      	adds	r3, #1
  403fa4:	442a      	add	r2, r5
  403fa6:	2b07      	cmp	r3, #7
  403fa8:	f8c8 5004 	str.w	r5, [r8, #4]
  403fac:	9227      	str	r2, [sp, #156]	; 0x9c
  403fae:	9326      	str	r3, [sp, #152]	; 0x98
  403fb0:	dc7f      	bgt.n	4040b2 <_svfprintf_r+0x186>
  403fb2:	f108 0808 	add.w	r8, r8, #8
  403fb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403fb8:	442b      	add	r3, r5
  403fba:	9309      	str	r3, [sp, #36]	; 0x24
  403fbc:	7823      	ldrb	r3, [r4, #0]
  403fbe:	2b00      	cmp	r3, #0
  403fc0:	d07f      	beq.n	4040c2 <_svfprintf_r+0x196>
  403fc2:	2300      	movs	r3, #0
  403fc4:	461a      	mov	r2, r3
  403fc6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  403fca:	4619      	mov	r1, r3
  403fcc:	930d      	str	r3, [sp, #52]	; 0x34
  403fce:	469b      	mov	fp, r3
  403fd0:	f04f 30ff 	mov.w	r0, #4294967295
  403fd4:	7863      	ldrb	r3, [r4, #1]
  403fd6:	900a      	str	r0, [sp, #40]	; 0x28
  403fd8:	f104 0a01 	add.w	sl, r4, #1
  403fdc:	f10a 0a01 	add.w	sl, sl, #1
  403fe0:	f1a3 0020 	sub.w	r0, r3, #32
  403fe4:	2858      	cmp	r0, #88	; 0x58
  403fe6:	f200 83c0 	bhi.w	40476a <_svfprintf_r+0x83e>
  403fea:	e8df f010 	tbh	[pc, r0, lsl #1]
  403fee:	0238      	.short	0x0238
  403ff0:	03be03be 	.word	0x03be03be
  403ff4:	03be0240 	.word	0x03be0240
  403ff8:	03be03be 	.word	0x03be03be
  403ffc:	03be03be 	.word	0x03be03be
  404000:	024503be 	.word	0x024503be
  404004:	03be0203 	.word	0x03be0203
  404008:	026b005d 	.word	0x026b005d
  40400c:	028603be 	.word	0x028603be
  404010:	039c039c 	.word	0x039c039c
  404014:	039c039c 	.word	0x039c039c
  404018:	039c039c 	.word	0x039c039c
  40401c:	039c039c 	.word	0x039c039c
  404020:	03be039c 	.word	0x03be039c
  404024:	03be03be 	.word	0x03be03be
  404028:	03be03be 	.word	0x03be03be
  40402c:	03be03be 	.word	0x03be03be
  404030:	03be03be 	.word	0x03be03be
  404034:	033703be 	.word	0x033703be
  404038:	03be0357 	.word	0x03be0357
  40403c:	03be0357 	.word	0x03be0357
  404040:	03be03be 	.word	0x03be03be
  404044:	039703be 	.word	0x039703be
  404048:	03be03be 	.word	0x03be03be
  40404c:	03be03ac 	.word	0x03be03ac
  404050:	03be03be 	.word	0x03be03be
  404054:	03be03be 	.word	0x03be03be
  404058:	03be0259 	.word	0x03be0259
  40405c:	031e03be 	.word	0x031e03be
  404060:	03be03be 	.word	0x03be03be
  404064:	03be03be 	.word	0x03be03be
  404068:	03be03be 	.word	0x03be03be
  40406c:	03be03be 	.word	0x03be03be
  404070:	03be03be 	.word	0x03be03be
  404074:	02db02c6 	.word	0x02db02c6
  404078:	03570357 	.word	0x03570357
  40407c:	028b0357 	.word	0x028b0357
  404080:	03be02db 	.word	0x03be02db
  404084:	029003be 	.word	0x029003be
  404088:	029d03be 	.word	0x029d03be
  40408c:	02b401cc 	.word	0x02b401cc
  404090:	03be0208 	.word	0x03be0208
  404094:	03be01e1 	.word	0x03be01e1
  404098:	03be007e 	.word	0x03be007e
  40409c:	020d03be 	.word	0x020d03be
  4040a0:	980d      	ldr	r0, [sp, #52]	; 0x34
  4040a2:	930f      	str	r3, [sp, #60]	; 0x3c
  4040a4:	4240      	negs	r0, r0
  4040a6:	900d      	str	r0, [sp, #52]	; 0x34
  4040a8:	f04b 0b04 	orr.w	fp, fp, #4
  4040ac:	f89a 3000 	ldrb.w	r3, [sl]
  4040b0:	e794      	b.n	403fdc <_svfprintf_r+0xb0>
  4040b2:	aa25      	add	r2, sp, #148	; 0x94
  4040b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4040b8:	f003 f930 	bl	40731c <__ssprint_r>
  4040bc:	b940      	cbnz	r0, 4040d0 <_svfprintf_r+0x1a4>
  4040be:	46c8      	mov	r8, r9
  4040c0:	e779      	b.n	403fb6 <_svfprintf_r+0x8a>
  4040c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4040c4:	b123      	cbz	r3, 4040d0 <_svfprintf_r+0x1a4>
  4040c6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4040c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040ca:	aa25      	add	r2, sp, #148	; 0x94
  4040cc:	f003 f926 	bl	40731c <__ssprint_r>
  4040d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4040d2:	899b      	ldrh	r3, [r3, #12]
  4040d4:	f013 0f40 	tst.w	r3, #64	; 0x40
  4040d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4040da:	bf18      	it	ne
  4040dc:	f04f 33ff 	movne.w	r3, #4294967295
  4040e0:	9309      	str	r3, [sp, #36]	; 0x24
  4040e2:	9809      	ldr	r0, [sp, #36]	; 0x24
  4040e4:	b043      	add	sp, #268	; 0x10c
  4040e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040ea:	f01b 0f20 	tst.w	fp, #32
  4040ee:	9311      	str	r3, [sp, #68]	; 0x44
  4040f0:	f040 81dd 	bne.w	4044ae <_svfprintf_r+0x582>
  4040f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4040f6:	f01b 0f10 	tst.w	fp, #16
  4040fa:	4613      	mov	r3, r2
  4040fc:	f040 856c 	bne.w	404bd8 <_svfprintf_r+0xcac>
  404100:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404104:	f000 8568 	beq.w	404bd8 <_svfprintf_r+0xcac>
  404108:	8814      	ldrh	r4, [r2, #0]
  40410a:	3204      	adds	r2, #4
  40410c:	2500      	movs	r5, #0
  40410e:	2301      	movs	r3, #1
  404110:	920f      	str	r2, [sp, #60]	; 0x3c
  404112:	2700      	movs	r7, #0
  404114:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404118:	990a      	ldr	r1, [sp, #40]	; 0x28
  40411a:	1c4a      	adds	r2, r1, #1
  40411c:	f000 8265 	beq.w	4045ea <_svfprintf_r+0x6be>
  404120:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  404124:	9207      	str	r2, [sp, #28]
  404126:	ea54 0205 	orrs.w	r2, r4, r5
  40412a:	f040 8264 	bne.w	4045f6 <_svfprintf_r+0x6ca>
  40412e:	2900      	cmp	r1, #0
  404130:	f040 8439 	bne.w	4049a6 <_svfprintf_r+0xa7a>
  404134:	2b00      	cmp	r3, #0
  404136:	f040 84d4 	bne.w	404ae2 <_svfprintf_r+0xbb6>
  40413a:	f01b 0301 	ands.w	r3, fp, #1
  40413e:	930e      	str	r3, [sp, #56]	; 0x38
  404140:	f000 8602 	beq.w	404d48 <_svfprintf_r+0xe1c>
  404144:	ae42      	add	r6, sp, #264	; 0x108
  404146:	2330      	movs	r3, #48	; 0x30
  404148:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40414c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40414e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404150:	4293      	cmp	r3, r2
  404152:	bfb8      	it	lt
  404154:	4613      	movlt	r3, r2
  404156:	9308      	str	r3, [sp, #32]
  404158:	2300      	movs	r3, #0
  40415a:	9312      	str	r3, [sp, #72]	; 0x48
  40415c:	b117      	cbz	r7, 404164 <_svfprintf_r+0x238>
  40415e:	9b08      	ldr	r3, [sp, #32]
  404160:	3301      	adds	r3, #1
  404162:	9308      	str	r3, [sp, #32]
  404164:	9b07      	ldr	r3, [sp, #28]
  404166:	f013 0302 	ands.w	r3, r3, #2
  40416a:	9310      	str	r3, [sp, #64]	; 0x40
  40416c:	d002      	beq.n	404174 <_svfprintf_r+0x248>
  40416e:	9b08      	ldr	r3, [sp, #32]
  404170:	3302      	adds	r3, #2
  404172:	9308      	str	r3, [sp, #32]
  404174:	9b07      	ldr	r3, [sp, #28]
  404176:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40417a:	f040 830d 	bne.w	404798 <_svfprintf_r+0x86c>
  40417e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404180:	9a08      	ldr	r2, [sp, #32]
  404182:	eba3 0b02 	sub.w	fp, r3, r2
  404186:	f1bb 0f00 	cmp.w	fp, #0
  40418a:	f340 8305 	ble.w	404798 <_svfprintf_r+0x86c>
  40418e:	f1bb 0f10 	cmp.w	fp, #16
  404192:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404194:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404196:	dd29      	ble.n	4041ec <_svfprintf_r+0x2c0>
  404198:	4643      	mov	r3, r8
  40419a:	4621      	mov	r1, r4
  40419c:	46a8      	mov	r8, r5
  40419e:	2710      	movs	r7, #16
  4041a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4041a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4041a4:	e006      	b.n	4041b4 <_svfprintf_r+0x288>
  4041a6:	f1ab 0b10 	sub.w	fp, fp, #16
  4041aa:	f1bb 0f10 	cmp.w	fp, #16
  4041ae:	f103 0308 	add.w	r3, r3, #8
  4041b2:	dd18      	ble.n	4041e6 <_svfprintf_r+0x2ba>
  4041b4:	3201      	adds	r2, #1
  4041b6:	48b7      	ldr	r0, [pc, #732]	; (404494 <_svfprintf_r+0x568>)
  4041b8:	9226      	str	r2, [sp, #152]	; 0x98
  4041ba:	3110      	adds	r1, #16
  4041bc:	2a07      	cmp	r2, #7
  4041be:	9127      	str	r1, [sp, #156]	; 0x9c
  4041c0:	e883 0081 	stmia.w	r3, {r0, r7}
  4041c4:	ddef      	ble.n	4041a6 <_svfprintf_r+0x27a>
  4041c6:	aa25      	add	r2, sp, #148	; 0x94
  4041c8:	4629      	mov	r1, r5
  4041ca:	4620      	mov	r0, r4
  4041cc:	f003 f8a6 	bl	40731c <__ssprint_r>
  4041d0:	2800      	cmp	r0, #0
  4041d2:	f47f af7d 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4041d6:	f1ab 0b10 	sub.w	fp, fp, #16
  4041da:	f1bb 0f10 	cmp.w	fp, #16
  4041de:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4041e0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4041e2:	464b      	mov	r3, r9
  4041e4:	dce6      	bgt.n	4041b4 <_svfprintf_r+0x288>
  4041e6:	4645      	mov	r5, r8
  4041e8:	460c      	mov	r4, r1
  4041ea:	4698      	mov	r8, r3
  4041ec:	3201      	adds	r2, #1
  4041ee:	4ba9      	ldr	r3, [pc, #676]	; (404494 <_svfprintf_r+0x568>)
  4041f0:	9226      	str	r2, [sp, #152]	; 0x98
  4041f2:	445c      	add	r4, fp
  4041f4:	2a07      	cmp	r2, #7
  4041f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4041f8:	e888 0808 	stmia.w	r8, {r3, fp}
  4041fc:	f300 8495 	bgt.w	404b2a <_svfprintf_r+0xbfe>
  404200:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404204:	f108 0808 	add.w	r8, r8, #8
  404208:	b177      	cbz	r7, 404228 <_svfprintf_r+0x2fc>
  40420a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40420c:	3301      	adds	r3, #1
  40420e:	3401      	adds	r4, #1
  404210:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  404214:	2201      	movs	r2, #1
  404216:	2b07      	cmp	r3, #7
  404218:	9427      	str	r4, [sp, #156]	; 0x9c
  40421a:	9326      	str	r3, [sp, #152]	; 0x98
  40421c:	e888 0006 	stmia.w	r8, {r1, r2}
  404220:	f300 83d8 	bgt.w	4049d4 <_svfprintf_r+0xaa8>
  404224:	f108 0808 	add.w	r8, r8, #8
  404228:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40422a:	b16b      	cbz	r3, 404248 <_svfprintf_r+0x31c>
  40422c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40422e:	3301      	adds	r3, #1
  404230:	3402      	adds	r4, #2
  404232:	a91e      	add	r1, sp, #120	; 0x78
  404234:	2202      	movs	r2, #2
  404236:	2b07      	cmp	r3, #7
  404238:	9427      	str	r4, [sp, #156]	; 0x9c
  40423a:	9326      	str	r3, [sp, #152]	; 0x98
  40423c:	e888 0006 	stmia.w	r8, {r1, r2}
  404240:	f300 83d3 	bgt.w	4049ea <_svfprintf_r+0xabe>
  404244:	f108 0808 	add.w	r8, r8, #8
  404248:	2d80      	cmp	r5, #128	; 0x80
  40424a:	f000 8313 	beq.w	404874 <_svfprintf_r+0x948>
  40424e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404250:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404252:	1a9f      	subs	r7, r3, r2
  404254:	2f00      	cmp	r7, #0
  404256:	dd36      	ble.n	4042c6 <_svfprintf_r+0x39a>
  404258:	2f10      	cmp	r7, #16
  40425a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40425c:	4d8e      	ldr	r5, [pc, #568]	; (404498 <_svfprintf_r+0x56c>)
  40425e:	dd27      	ble.n	4042b0 <_svfprintf_r+0x384>
  404260:	4642      	mov	r2, r8
  404262:	4621      	mov	r1, r4
  404264:	46b0      	mov	r8, r6
  404266:	f04f 0b10 	mov.w	fp, #16
  40426a:	462e      	mov	r6, r5
  40426c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40426e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404270:	e004      	b.n	40427c <_svfprintf_r+0x350>
  404272:	3f10      	subs	r7, #16
  404274:	2f10      	cmp	r7, #16
  404276:	f102 0208 	add.w	r2, r2, #8
  40427a:	dd15      	ble.n	4042a8 <_svfprintf_r+0x37c>
  40427c:	3301      	adds	r3, #1
  40427e:	3110      	adds	r1, #16
  404280:	2b07      	cmp	r3, #7
  404282:	9127      	str	r1, [sp, #156]	; 0x9c
  404284:	9326      	str	r3, [sp, #152]	; 0x98
  404286:	e882 0840 	stmia.w	r2, {r6, fp}
  40428a:	ddf2      	ble.n	404272 <_svfprintf_r+0x346>
  40428c:	aa25      	add	r2, sp, #148	; 0x94
  40428e:	4629      	mov	r1, r5
  404290:	4620      	mov	r0, r4
  404292:	f003 f843 	bl	40731c <__ssprint_r>
  404296:	2800      	cmp	r0, #0
  404298:	f47f af1a 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  40429c:	3f10      	subs	r7, #16
  40429e:	2f10      	cmp	r7, #16
  4042a0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4042a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4042a4:	464a      	mov	r2, r9
  4042a6:	dce9      	bgt.n	40427c <_svfprintf_r+0x350>
  4042a8:	4635      	mov	r5, r6
  4042aa:	460c      	mov	r4, r1
  4042ac:	4646      	mov	r6, r8
  4042ae:	4690      	mov	r8, r2
  4042b0:	3301      	adds	r3, #1
  4042b2:	443c      	add	r4, r7
  4042b4:	2b07      	cmp	r3, #7
  4042b6:	9427      	str	r4, [sp, #156]	; 0x9c
  4042b8:	9326      	str	r3, [sp, #152]	; 0x98
  4042ba:	e888 00a0 	stmia.w	r8, {r5, r7}
  4042be:	f300 837e 	bgt.w	4049be <_svfprintf_r+0xa92>
  4042c2:	f108 0808 	add.w	r8, r8, #8
  4042c6:	9b07      	ldr	r3, [sp, #28]
  4042c8:	05df      	lsls	r7, r3, #23
  4042ca:	f100 8267 	bmi.w	40479c <_svfprintf_r+0x870>
  4042ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4042d0:	990e      	ldr	r1, [sp, #56]	; 0x38
  4042d2:	f8c8 6000 	str.w	r6, [r8]
  4042d6:	3301      	adds	r3, #1
  4042d8:	440c      	add	r4, r1
  4042da:	2b07      	cmp	r3, #7
  4042dc:	9427      	str	r4, [sp, #156]	; 0x9c
  4042de:	f8c8 1004 	str.w	r1, [r8, #4]
  4042e2:	9326      	str	r3, [sp, #152]	; 0x98
  4042e4:	f300 834a 	bgt.w	40497c <_svfprintf_r+0xa50>
  4042e8:	f108 0808 	add.w	r8, r8, #8
  4042ec:	9b07      	ldr	r3, [sp, #28]
  4042ee:	075b      	lsls	r3, r3, #29
  4042f0:	d53a      	bpl.n	404368 <_svfprintf_r+0x43c>
  4042f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4042f4:	9a08      	ldr	r2, [sp, #32]
  4042f6:	1a9d      	subs	r5, r3, r2
  4042f8:	2d00      	cmp	r5, #0
  4042fa:	dd35      	ble.n	404368 <_svfprintf_r+0x43c>
  4042fc:	2d10      	cmp	r5, #16
  4042fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404300:	dd20      	ble.n	404344 <_svfprintf_r+0x418>
  404302:	2610      	movs	r6, #16
  404304:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404306:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40430a:	e004      	b.n	404316 <_svfprintf_r+0x3ea>
  40430c:	3d10      	subs	r5, #16
  40430e:	2d10      	cmp	r5, #16
  404310:	f108 0808 	add.w	r8, r8, #8
  404314:	dd16      	ble.n	404344 <_svfprintf_r+0x418>
  404316:	3301      	adds	r3, #1
  404318:	4a5e      	ldr	r2, [pc, #376]	; (404494 <_svfprintf_r+0x568>)
  40431a:	9326      	str	r3, [sp, #152]	; 0x98
  40431c:	3410      	adds	r4, #16
  40431e:	2b07      	cmp	r3, #7
  404320:	9427      	str	r4, [sp, #156]	; 0x9c
  404322:	e888 0044 	stmia.w	r8, {r2, r6}
  404326:	ddf1      	ble.n	40430c <_svfprintf_r+0x3e0>
  404328:	aa25      	add	r2, sp, #148	; 0x94
  40432a:	4659      	mov	r1, fp
  40432c:	4638      	mov	r0, r7
  40432e:	f002 fff5 	bl	40731c <__ssprint_r>
  404332:	2800      	cmp	r0, #0
  404334:	f47f aecc 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404338:	3d10      	subs	r5, #16
  40433a:	2d10      	cmp	r5, #16
  40433c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40433e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404340:	46c8      	mov	r8, r9
  404342:	dce8      	bgt.n	404316 <_svfprintf_r+0x3ea>
  404344:	3301      	adds	r3, #1
  404346:	4a53      	ldr	r2, [pc, #332]	; (404494 <_svfprintf_r+0x568>)
  404348:	9326      	str	r3, [sp, #152]	; 0x98
  40434a:	442c      	add	r4, r5
  40434c:	2b07      	cmp	r3, #7
  40434e:	9427      	str	r4, [sp, #156]	; 0x9c
  404350:	e888 0024 	stmia.w	r8, {r2, r5}
  404354:	dd08      	ble.n	404368 <_svfprintf_r+0x43c>
  404356:	aa25      	add	r2, sp, #148	; 0x94
  404358:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40435a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40435c:	f002 ffde 	bl	40731c <__ssprint_r>
  404360:	2800      	cmp	r0, #0
  404362:	f47f aeb5 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404366:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404368:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40436a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40436c:	9908      	ldr	r1, [sp, #32]
  40436e:	428a      	cmp	r2, r1
  404370:	bfac      	ite	ge
  404372:	189b      	addge	r3, r3, r2
  404374:	185b      	addlt	r3, r3, r1
  404376:	9309      	str	r3, [sp, #36]	; 0x24
  404378:	2c00      	cmp	r4, #0
  40437a:	f040 830a 	bne.w	404992 <_svfprintf_r+0xa66>
  40437e:	2300      	movs	r3, #0
  404380:	9326      	str	r3, [sp, #152]	; 0x98
  404382:	46c8      	mov	r8, r9
  404384:	e5f9      	b.n	403f7a <_svfprintf_r+0x4e>
  404386:	9311      	str	r3, [sp, #68]	; 0x44
  404388:	f01b 0320 	ands.w	r3, fp, #32
  40438c:	f040 81e2 	bne.w	404754 <_svfprintf_r+0x828>
  404390:	f01b 0210 	ands.w	r2, fp, #16
  404394:	f040 842c 	bne.w	404bf0 <_svfprintf_r+0xcc4>
  404398:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40439c:	f000 8428 	beq.w	404bf0 <_svfprintf_r+0xcc4>
  4043a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4043a2:	4613      	mov	r3, r2
  4043a4:	460a      	mov	r2, r1
  4043a6:	3204      	adds	r2, #4
  4043a8:	880c      	ldrh	r4, [r1, #0]
  4043aa:	920f      	str	r2, [sp, #60]	; 0x3c
  4043ac:	2500      	movs	r5, #0
  4043ae:	e6b0      	b.n	404112 <_svfprintf_r+0x1e6>
  4043b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4043b2:	9311      	str	r3, [sp, #68]	; 0x44
  4043b4:	6816      	ldr	r6, [r2, #0]
  4043b6:	2400      	movs	r4, #0
  4043b8:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4043bc:	1d15      	adds	r5, r2, #4
  4043be:	2e00      	cmp	r6, #0
  4043c0:	f000 86a5 	beq.w	40510e <_svfprintf_r+0x11e2>
  4043c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4043c6:	1c53      	adds	r3, r2, #1
  4043c8:	f000 8607 	beq.w	404fda <_svfprintf_r+0x10ae>
  4043cc:	4621      	mov	r1, r4
  4043ce:	4630      	mov	r0, r6
  4043d0:	f002 fa7e 	bl	4068d0 <memchr>
  4043d4:	2800      	cmp	r0, #0
  4043d6:	f000 86df 	beq.w	405198 <_svfprintf_r+0x126c>
  4043da:	1b83      	subs	r3, r0, r6
  4043dc:	930e      	str	r3, [sp, #56]	; 0x38
  4043de:	940a      	str	r4, [sp, #40]	; 0x28
  4043e0:	950f      	str	r5, [sp, #60]	; 0x3c
  4043e2:	f8cd b01c 	str.w	fp, [sp, #28]
  4043e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4043ea:	9308      	str	r3, [sp, #32]
  4043ec:	9412      	str	r4, [sp, #72]	; 0x48
  4043ee:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4043f2:	e6b3      	b.n	40415c <_svfprintf_r+0x230>
  4043f4:	f89a 3000 	ldrb.w	r3, [sl]
  4043f8:	2201      	movs	r2, #1
  4043fa:	212b      	movs	r1, #43	; 0x2b
  4043fc:	e5ee      	b.n	403fdc <_svfprintf_r+0xb0>
  4043fe:	f04b 0b20 	orr.w	fp, fp, #32
  404402:	f89a 3000 	ldrb.w	r3, [sl]
  404406:	e5e9      	b.n	403fdc <_svfprintf_r+0xb0>
  404408:	9311      	str	r3, [sp, #68]	; 0x44
  40440a:	2a00      	cmp	r2, #0
  40440c:	f040 878d 	bne.w	40532a <_svfprintf_r+0x13fe>
  404410:	4b22      	ldr	r3, [pc, #136]	; (40449c <_svfprintf_r+0x570>)
  404412:	9318      	str	r3, [sp, #96]	; 0x60
  404414:	f01b 0f20 	tst.w	fp, #32
  404418:	f040 8111 	bne.w	40463e <_svfprintf_r+0x712>
  40441c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40441e:	f01b 0f10 	tst.w	fp, #16
  404422:	4613      	mov	r3, r2
  404424:	f040 83df 	bne.w	404be6 <_svfprintf_r+0xcba>
  404428:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40442c:	f000 83db 	beq.w	404be6 <_svfprintf_r+0xcba>
  404430:	3304      	adds	r3, #4
  404432:	8814      	ldrh	r4, [r2, #0]
  404434:	930f      	str	r3, [sp, #60]	; 0x3c
  404436:	2500      	movs	r5, #0
  404438:	f01b 0f01 	tst.w	fp, #1
  40443c:	f000 810c 	beq.w	404658 <_svfprintf_r+0x72c>
  404440:	ea54 0305 	orrs.w	r3, r4, r5
  404444:	f000 8108 	beq.w	404658 <_svfprintf_r+0x72c>
  404448:	2330      	movs	r3, #48	; 0x30
  40444a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40444e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  404452:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  404456:	f04b 0b02 	orr.w	fp, fp, #2
  40445a:	2302      	movs	r3, #2
  40445c:	e659      	b.n	404112 <_svfprintf_r+0x1e6>
  40445e:	f89a 3000 	ldrb.w	r3, [sl]
  404462:	2900      	cmp	r1, #0
  404464:	f47f adba 	bne.w	403fdc <_svfprintf_r+0xb0>
  404468:	2201      	movs	r2, #1
  40446a:	2120      	movs	r1, #32
  40446c:	e5b6      	b.n	403fdc <_svfprintf_r+0xb0>
  40446e:	f04b 0b01 	orr.w	fp, fp, #1
  404472:	f89a 3000 	ldrb.w	r3, [sl]
  404476:	e5b1      	b.n	403fdc <_svfprintf_r+0xb0>
  404478:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40447a:	6823      	ldr	r3, [r4, #0]
  40447c:	930d      	str	r3, [sp, #52]	; 0x34
  40447e:	4618      	mov	r0, r3
  404480:	2800      	cmp	r0, #0
  404482:	4623      	mov	r3, r4
  404484:	f103 0304 	add.w	r3, r3, #4
  404488:	f6ff ae0a 	blt.w	4040a0 <_svfprintf_r+0x174>
  40448c:	930f      	str	r3, [sp, #60]	; 0x3c
  40448e:	f89a 3000 	ldrb.w	r3, [sl]
  404492:	e5a3      	b.n	403fdc <_svfprintf_r+0xb0>
  404494:	004092cc 	.word	0x004092cc
  404498:	004092dc 	.word	0x004092dc
  40449c:	004092ac 	.word	0x004092ac
  4044a0:	f04b 0b10 	orr.w	fp, fp, #16
  4044a4:	f01b 0f20 	tst.w	fp, #32
  4044a8:	9311      	str	r3, [sp, #68]	; 0x44
  4044aa:	f43f ae23 	beq.w	4040f4 <_svfprintf_r+0x1c8>
  4044ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4044b0:	3507      	adds	r5, #7
  4044b2:	f025 0307 	bic.w	r3, r5, #7
  4044b6:	f103 0208 	add.w	r2, r3, #8
  4044ba:	e9d3 4500 	ldrd	r4, r5, [r3]
  4044be:	920f      	str	r2, [sp, #60]	; 0x3c
  4044c0:	2301      	movs	r3, #1
  4044c2:	e626      	b.n	404112 <_svfprintf_r+0x1e6>
  4044c4:	f89a 3000 	ldrb.w	r3, [sl]
  4044c8:	2b2a      	cmp	r3, #42	; 0x2a
  4044ca:	f10a 0401 	add.w	r4, sl, #1
  4044ce:	f000 871f 	beq.w	405310 <_svfprintf_r+0x13e4>
  4044d2:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4044d6:	2809      	cmp	r0, #9
  4044d8:	46a2      	mov	sl, r4
  4044da:	f200 86ab 	bhi.w	405234 <_svfprintf_r+0x1308>
  4044de:	2300      	movs	r3, #0
  4044e0:	461c      	mov	r4, r3
  4044e2:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4044e6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4044ea:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4044ee:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4044f2:	2809      	cmp	r0, #9
  4044f4:	d9f5      	bls.n	4044e2 <_svfprintf_r+0x5b6>
  4044f6:	940a      	str	r4, [sp, #40]	; 0x28
  4044f8:	e572      	b.n	403fe0 <_svfprintf_r+0xb4>
  4044fa:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4044fe:	f89a 3000 	ldrb.w	r3, [sl]
  404502:	e56b      	b.n	403fdc <_svfprintf_r+0xb0>
  404504:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  404508:	f89a 3000 	ldrb.w	r3, [sl]
  40450c:	e566      	b.n	403fdc <_svfprintf_r+0xb0>
  40450e:	f89a 3000 	ldrb.w	r3, [sl]
  404512:	2b6c      	cmp	r3, #108	; 0x6c
  404514:	bf03      	ittte	eq
  404516:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40451a:	f04b 0b20 	orreq.w	fp, fp, #32
  40451e:	f10a 0a01 	addeq.w	sl, sl, #1
  404522:	f04b 0b10 	orrne.w	fp, fp, #16
  404526:	e559      	b.n	403fdc <_svfprintf_r+0xb0>
  404528:	2a00      	cmp	r2, #0
  40452a:	f040 8709 	bne.w	405340 <_svfprintf_r+0x1414>
  40452e:	f01b 0f20 	tst.w	fp, #32
  404532:	f040 84f7 	bne.w	404f24 <_svfprintf_r+0xff8>
  404536:	f01b 0f10 	tst.w	fp, #16
  40453a:	f040 84aa 	bne.w	404e92 <_svfprintf_r+0xf66>
  40453e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404542:	f000 84a6 	beq.w	404e92 <_svfprintf_r+0xf66>
  404546:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404548:	6813      	ldr	r3, [r2, #0]
  40454a:	3204      	adds	r2, #4
  40454c:	920f      	str	r2, [sp, #60]	; 0x3c
  40454e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  404552:	801a      	strh	r2, [r3, #0]
  404554:	e511      	b.n	403f7a <_svfprintf_r+0x4e>
  404556:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404558:	4bb2      	ldr	r3, [pc, #712]	; (404824 <_svfprintf_r+0x8f8>)
  40455a:	680c      	ldr	r4, [r1, #0]
  40455c:	9318      	str	r3, [sp, #96]	; 0x60
  40455e:	2230      	movs	r2, #48	; 0x30
  404560:	2378      	movs	r3, #120	; 0x78
  404562:	3104      	adds	r1, #4
  404564:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  404568:	9311      	str	r3, [sp, #68]	; 0x44
  40456a:	f04b 0b02 	orr.w	fp, fp, #2
  40456e:	910f      	str	r1, [sp, #60]	; 0x3c
  404570:	2500      	movs	r5, #0
  404572:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  404576:	2302      	movs	r3, #2
  404578:	e5cb      	b.n	404112 <_svfprintf_r+0x1e6>
  40457a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40457c:	9311      	str	r3, [sp, #68]	; 0x44
  40457e:	680a      	ldr	r2, [r1, #0]
  404580:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  404584:	2300      	movs	r3, #0
  404586:	460a      	mov	r2, r1
  404588:	461f      	mov	r7, r3
  40458a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40458e:	3204      	adds	r2, #4
  404590:	2301      	movs	r3, #1
  404592:	9308      	str	r3, [sp, #32]
  404594:	f8cd b01c 	str.w	fp, [sp, #28]
  404598:	970a      	str	r7, [sp, #40]	; 0x28
  40459a:	9712      	str	r7, [sp, #72]	; 0x48
  40459c:	920f      	str	r2, [sp, #60]	; 0x3c
  40459e:	930e      	str	r3, [sp, #56]	; 0x38
  4045a0:	ae28      	add	r6, sp, #160	; 0xa0
  4045a2:	e5df      	b.n	404164 <_svfprintf_r+0x238>
  4045a4:	9311      	str	r3, [sp, #68]	; 0x44
  4045a6:	2a00      	cmp	r2, #0
  4045a8:	f040 86e2 	bne.w	405370 <_svfprintf_r+0x1444>
  4045ac:	f01b 0f20 	tst.w	fp, #32
  4045b0:	d15d      	bne.n	40466e <_svfprintf_r+0x742>
  4045b2:	f01b 0f10 	tst.w	fp, #16
  4045b6:	f040 8306 	bne.w	404bc6 <_svfprintf_r+0xc9a>
  4045ba:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4045be:	f000 8302 	beq.w	404bc6 <_svfprintf_r+0xc9a>
  4045c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4045c4:	f9b1 4000 	ldrsh.w	r4, [r1]
  4045c8:	3104      	adds	r1, #4
  4045ca:	17e5      	asrs	r5, r4, #31
  4045cc:	4622      	mov	r2, r4
  4045ce:	462b      	mov	r3, r5
  4045d0:	910f      	str	r1, [sp, #60]	; 0x3c
  4045d2:	2a00      	cmp	r2, #0
  4045d4:	f173 0300 	sbcs.w	r3, r3, #0
  4045d8:	db58      	blt.n	40468c <_svfprintf_r+0x760>
  4045da:	990a      	ldr	r1, [sp, #40]	; 0x28
  4045dc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4045e0:	1c4a      	adds	r2, r1, #1
  4045e2:	f04f 0301 	mov.w	r3, #1
  4045e6:	f47f ad9b 	bne.w	404120 <_svfprintf_r+0x1f4>
  4045ea:	ea54 0205 	orrs.w	r2, r4, r5
  4045ee:	f000 81dc 	beq.w	4049aa <_svfprintf_r+0xa7e>
  4045f2:	f8cd b01c 	str.w	fp, [sp, #28]
  4045f6:	2b01      	cmp	r3, #1
  4045f8:	f000 8278 	beq.w	404aec <_svfprintf_r+0xbc0>
  4045fc:	2b02      	cmp	r3, #2
  4045fe:	f040 8203 	bne.w	404a08 <_svfprintf_r+0xadc>
  404602:	9818      	ldr	r0, [sp, #96]	; 0x60
  404604:	464e      	mov	r6, r9
  404606:	0923      	lsrs	r3, r4, #4
  404608:	f004 010f 	and.w	r1, r4, #15
  40460c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  404610:	092a      	lsrs	r2, r5, #4
  404612:	461c      	mov	r4, r3
  404614:	4615      	mov	r5, r2
  404616:	5c43      	ldrb	r3, [r0, r1]
  404618:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40461c:	ea54 0305 	orrs.w	r3, r4, r5
  404620:	d1f1      	bne.n	404606 <_svfprintf_r+0x6da>
  404622:	eba9 0306 	sub.w	r3, r9, r6
  404626:	930e      	str	r3, [sp, #56]	; 0x38
  404628:	e590      	b.n	40414c <_svfprintf_r+0x220>
  40462a:	9311      	str	r3, [sp, #68]	; 0x44
  40462c:	2a00      	cmp	r2, #0
  40462e:	f040 869b 	bne.w	405368 <_svfprintf_r+0x143c>
  404632:	4b7d      	ldr	r3, [pc, #500]	; (404828 <_svfprintf_r+0x8fc>)
  404634:	9318      	str	r3, [sp, #96]	; 0x60
  404636:	f01b 0f20 	tst.w	fp, #32
  40463a:	f43f aeef 	beq.w	40441c <_svfprintf_r+0x4f0>
  40463e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404640:	3507      	adds	r5, #7
  404642:	f025 0307 	bic.w	r3, r5, #7
  404646:	f103 0208 	add.w	r2, r3, #8
  40464a:	f01b 0f01 	tst.w	fp, #1
  40464e:	920f      	str	r2, [sp, #60]	; 0x3c
  404650:	e9d3 4500 	ldrd	r4, r5, [r3]
  404654:	f47f aef4 	bne.w	404440 <_svfprintf_r+0x514>
  404658:	2302      	movs	r3, #2
  40465a:	e55a      	b.n	404112 <_svfprintf_r+0x1e6>
  40465c:	9311      	str	r3, [sp, #68]	; 0x44
  40465e:	2a00      	cmp	r2, #0
  404660:	f040 867e 	bne.w	405360 <_svfprintf_r+0x1434>
  404664:	f04b 0b10 	orr.w	fp, fp, #16
  404668:	f01b 0f20 	tst.w	fp, #32
  40466c:	d0a1      	beq.n	4045b2 <_svfprintf_r+0x686>
  40466e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404670:	3507      	adds	r5, #7
  404672:	f025 0507 	bic.w	r5, r5, #7
  404676:	e9d5 2300 	ldrd	r2, r3, [r5]
  40467a:	2a00      	cmp	r2, #0
  40467c:	f105 0108 	add.w	r1, r5, #8
  404680:	461d      	mov	r5, r3
  404682:	f173 0300 	sbcs.w	r3, r3, #0
  404686:	910f      	str	r1, [sp, #60]	; 0x3c
  404688:	4614      	mov	r4, r2
  40468a:	daa6      	bge.n	4045da <_svfprintf_r+0x6ae>
  40468c:	272d      	movs	r7, #45	; 0x2d
  40468e:	4264      	negs	r4, r4
  404690:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  404694:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404698:	2301      	movs	r3, #1
  40469a:	e53d      	b.n	404118 <_svfprintf_r+0x1ec>
  40469c:	9311      	str	r3, [sp, #68]	; 0x44
  40469e:	2a00      	cmp	r2, #0
  4046a0:	f040 865a 	bne.w	405358 <_svfprintf_r+0x142c>
  4046a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4046a6:	3507      	adds	r5, #7
  4046a8:	f025 0307 	bic.w	r3, r5, #7
  4046ac:	f103 0208 	add.w	r2, r3, #8
  4046b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4046b2:	681a      	ldr	r2, [r3, #0]
  4046b4:	9214      	str	r2, [sp, #80]	; 0x50
  4046b6:	685b      	ldr	r3, [r3, #4]
  4046b8:	9315      	str	r3, [sp, #84]	; 0x54
  4046ba:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4046bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
  4046be:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4046c2:	4628      	mov	r0, r5
  4046c4:	4621      	mov	r1, r4
  4046c6:	f04f 32ff 	mov.w	r2, #4294967295
  4046ca:	4b58      	ldr	r3, [pc, #352]	; (40482c <_svfprintf_r+0x900>)
  4046cc:	f003 fedc 	bl	408488 <__aeabi_dcmpun>
  4046d0:	2800      	cmp	r0, #0
  4046d2:	f040 8348 	bne.w	404d66 <_svfprintf_r+0xe3a>
  4046d6:	4628      	mov	r0, r5
  4046d8:	4621      	mov	r1, r4
  4046da:	f04f 32ff 	mov.w	r2, #4294967295
  4046de:	4b53      	ldr	r3, [pc, #332]	; (40482c <_svfprintf_r+0x900>)
  4046e0:	f003 feb4 	bl	40844c <__aeabi_dcmple>
  4046e4:	2800      	cmp	r0, #0
  4046e6:	f040 833e 	bne.w	404d66 <_svfprintf_r+0xe3a>
  4046ea:	a814      	add	r0, sp, #80	; 0x50
  4046ec:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4046ee:	f003 fea3 	bl	408438 <__aeabi_dcmplt>
  4046f2:	2800      	cmp	r0, #0
  4046f4:	f040 852f 	bne.w	405156 <_svfprintf_r+0x122a>
  4046f8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4046fc:	4e4c      	ldr	r6, [pc, #304]	; (404830 <_svfprintf_r+0x904>)
  4046fe:	4b4d      	ldr	r3, [pc, #308]	; (404834 <_svfprintf_r+0x908>)
  404700:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  404704:	9007      	str	r0, [sp, #28]
  404706:	9811      	ldr	r0, [sp, #68]	; 0x44
  404708:	2203      	movs	r2, #3
  40470a:	2100      	movs	r1, #0
  40470c:	9208      	str	r2, [sp, #32]
  40470e:	910a      	str	r1, [sp, #40]	; 0x28
  404710:	2847      	cmp	r0, #71	; 0x47
  404712:	bfd8      	it	le
  404714:	461e      	movle	r6, r3
  404716:	920e      	str	r2, [sp, #56]	; 0x38
  404718:	9112      	str	r1, [sp, #72]	; 0x48
  40471a:	e51f      	b.n	40415c <_svfprintf_r+0x230>
  40471c:	f04b 0b08 	orr.w	fp, fp, #8
  404720:	f89a 3000 	ldrb.w	r3, [sl]
  404724:	e45a      	b.n	403fdc <_svfprintf_r+0xb0>
  404726:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40472a:	2300      	movs	r3, #0
  40472c:	461c      	mov	r4, r3
  40472e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  404732:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  404736:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40473a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40473e:	2809      	cmp	r0, #9
  404740:	d9f5      	bls.n	40472e <_svfprintf_r+0x802>
  404742:	940d      	str	r4, [sp, #52]	; 0x34
  404744:	e44c      	b.n	403fe0 <_svfprintf_r+0xb4>
  404746:	f04b 0b10 	orr.w	fp, fp, #16
  40474a:	9311      	str	r3, [sp, #68]	; 0x44
  40474c:	f01b 0320 	ands.w	r3, fp, #32
  404750:	f43f ae1e 	beq.w	404390 <_svfprintf_r+0x464>
  404754:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404756:	3507      	adds	r5, #7
  404758:	f025 0307 	bic.w	r3, r5, #7
  40475c:	f103 0208 	add.w	r2, r3, #8
  404760:	e9d3 4500 	ldrd	r4, r5, [r3]
  404764:	920f      	str	r2, [sp, #60]	; 0x3c
  404766:	2300      	movs	r3, #0
  404768:	e4d3      	b.n	404112 <_svfprintf_r+0x1e6>
  40476a:	9311      	str	r3, [sp, #68]	; 0x44
  40476c:	2a00      	cmp	r2, #0
  40476e:	f040 85e0 	bne.w	405332 <_svfprintf_r+0x1406>
  404772:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404774:	2a00      	cmp	r2, #0
  404776:	f43f aca4 	beq.w	4040c2 <_svfprintf_r+0x196>
  40477a:	2300      	movs	r3, #0
  40477c:	2101      	movs	r1, #1
  40477e:	461f      	mov	r7, r3
  404780:	9108      	str	r1, [sp, #32]
  404782:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  404786:	f8cd b01c 	str.w	fp, [sp, #28]
  40478a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40478e:	930a      	str	r3, [sp, #40]	; 0x28
  404790:	9312      	str	r3, [sp, #72]	; 0x48
  404792:	910e      	str	r1, [sp, #56]	; 0x38
  404794:	ae28      	add	r6, sp, #160	; 0xa0
  404796:	e4e5      	b.n	404164 <_svfprintf_r+0x238>
  404798:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40479a:	e535      	b.n	404208 <_svfprintf_r+0x2dc>
  40479c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40479e:	2b65      	cmp	r3, #101	; 0x65
  4047a0:	f340 80a6 	ble.w	4048f0 <_svfprintf_r+0x9c4>
  4047a4:	a814      	add	r0, sp, #80	; 0x50
  4047a6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4047a8:	f003 fe3c 	bl	408424 <__aeabi_dcmpeq>
  4047ac:	2800      	cmp	r0, #0
  4047ae:	f000 814f 	beq.w	404a50 <_svfprintf_r+0xb24>
  4047b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4047b4:	4a20      	ldr	r2, [pc, #128]	; (404838 <_svfprintf_r+0x90c>)
  4047b6:	f8c8 2000 	str.w	r2, [r8]
  4047ba:	3301      	adds	r3, #1
  4047bc:	3401      	adds	r4, #1
  4047be:	2201      	movs	r2, #1
  4047c0:	2b07      	cmp	r3, #7
  4047c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4047c4:	9326      	str	r3, [sp, #152]	; 0x98
  4047c6:	f8c8 2004 	str.w	r2, [r8, #4]
  4047ca:	f300 836a 	bgt.w	404ea2 <_svfprintf_r+0xf76>
  4047ce:	f108 0808 	add.w	r8, r8, #8
  4047d2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4047d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4047d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4047d8:	4293      	cmp	r3, r2
  4047da:	db03      	blt.n	4047e4 <_svfprintf_r+0x8b8>
  4047dc:	9b07      	ldr	r3, [sp, #28]
  4047de:	07dd      	lsls	r5, r3, #31
  4047e0:	f57f ad84 	bpl.w	4042ec <_svfprintf_r+0x3c0>
  4047e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4047e6:	9919      	ldr	r1, [sp, #100]	; 0x64
  4047e8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4047ea:	f8c8 2000 	str.w	r2, [r8]
  4047ee:	3301      	adds	r3, #1
  4047f0:	440c      	add	r4, r1
  4047f2:	2b07      	cmp	r3, #7
  4047f4:	f8c8 1004 	str.w	r1, [r8, #4]
  4047f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4047fa:	9326      	str	r3, [sp, #152]	; 0x98
  4047fc:	f300 839e 	bgt.w	404f3c <_svfprintf_r+0x1010>
  404800:	f108 0808 	add.w	r8, r8, #8
  404804:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404806:	1e5e      	subs	r6, r3, #1
  404808:	2e00      	cmp	r6, #0
  40480a:	f77f ad6f 	ble.w	4042ec <_svfprintf_r+0x3c0>
  40480e:	2e10      	cmp	r6, #16
  404810:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404812:	4d0a      	ldr	r5, [pc, #40]	; (40483c <_svfprintf_r+0x910>)
  404814:	f340 81f5 	ble.w	404c02 <_svfprintf_r+0xcd6>
  404818:	4622      	mov	r2, r4
  40481a:	2710      	movs	r7, #16
  40481c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404820:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  404822:	e013      	b.n	40484c <_svfprintf_r+0x920>
  404824:	004092ac 	.word	0x004092ac
  404828:	00409298 	.word	0x00409298
  40482c:	7fefffff 	.word	0x7fefffff
  404830:	0040928c 	.word	0x0040928c
  404834:	00409288 	.word	0x00409288
  404838:	004092c8 	.word	0x004092c8
  40483c:	004092dc 	.word	0x004092dc
  404840:	f108 0808 	add.w	r8, r8, #8
  404844:	3e10      	subs	r6, #16
  404846:	2e10      	cmp	r6, #16
  404848:	f340 81da 	ble.w	404c00 <_svfprintf_r+0xcd4>
  40484c:	3301      	adds	r3, #1
  40484e:	3210      	adds	r2, #16
  404850:	2b07      	cmp	r3, #7
  404852:	9227      	str	r2, [sp, #156]	; 0x9c
  404854:	9326      	str	r3, [sp, #152]	; 0x98
  404856:	e888 00a0 	stmia.w	r8, {r5, r7}
  40485a:	ddf1      	ble.n	404840 <_svfprintf_r+0x914>
  40485c:	aa25      	add	r2, sp, #148	; 0x94
  40485e:	4621      	mov	r1, r4
  404860:	4658      	mov	r0, fp
  404862:	f002 fd5b 	bl	40731c <__ssprint_r>
  404866:	2800      	cmp	r0, #0
  404868:	f47f ac32 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  40486c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40486e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404870:	46c8      	mov	r8, r9
  404872:	e7e7      	b.n	404844 <_svfprintf_r+0x918>
  404874:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404876:	9a08      	ldr	r2, [sp, #32]
  404878:	1a9f      	subs	r7, r3, r2
  40487a:	2f00      	cmp	r7, #0
  40487c:	f77f ace7 	ble.w	40424e <_svfprintf_r+0x322>
  404880:	2f10      	cmp	r7, #16
  404882:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404884:	4db6      	ldr	r5, [pc, #728]	; (404b60 <_svfprintf_r+0xc34>)
  404886:	dd27      	ble.n	4048d8 <_svfprintf_r+0x9ac>
  404888:	4642      	mov	r2, r8
  40488a:	4621      	mov	r1, r4
  40488c:	46b0      	mov	r8, r6
  40488e:	f04f 0b10 	mov.w	fp, #16
  404892:	462e      	mov	r6, r5
  404894:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404896:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404898:	e004      	b.n	4048a4 <_svfprintf_r+0x978>
  40489a:	3f10      	subs	r7, #16
  40489c:	2f10      	cmp	r7, #16
  40489e:	f102 0208 	add.w	r2, r2, #8
  4048a2:	dd15      	ble.n	4048d0 <_svfprintf_r+0x9a4>
  4048a4:	3301      	adds	r3, #1
  4048a6:	3110      	adds	r1, #16
  4048a8:	2b07      	cmp	r3, #7
  4048aa:	9127      	str	r1, [sp, #156]	; 0x9c
  4048ac:	9326      	str	r3, [sp, #152]	; 0x98
  4048ae:	e882 0840 	stmia.w	r2, {r6, fp}
  4048b2:	ddf2      	ble.n	40489a <_svfprintf_r+0x96e>
  4048b4:	aa25      	add	r2, sp, #148	; 0x94
  4048b6:	4629      	mov	r1, r5
  4048b8:	4620      	mov	r0, r4
  4048ba:	f002 fd2f 	bl	40731c <__ssprint_r>
  4048be:	2800      	cmp	r0, #0
  4048c0:	f47f ac06 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4048c4:	3f10      	subs	r7, #16
  4048c6:	2f10      	cmp	r7, #16
  4048c8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4048ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4048cc:	464a      	mov	r2, r9
  4048ce:	dce9      	bgt.n	4048a4 <_svfprintf_r+0x978>
  4048d0:	4635      	mov	r5, r6
  4048d2:	460c      	mov	r4, r1
  4048d4:	4646      	mov	r6, r8
  4048d6:	4690      	mov	r8, r2
  4048d8:	3301      	adds	r3, #1
  4048da:	443c      	add	r4, r7
  4048dc:	2b07      	cmp	r3, #7
  4048de:	9427      	str	r4, [sp, #156]	; 0x9c
  4048e0:	9326      	str	r3, [sp, #152]	; 0x98
  4048e2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4048e6:	f300 8232 	bgt.w	404d4e <_svfprintf_r+0xe22>
  4048ea:	f108 0808 	add.w	r8, r8, #8
  4048ee:	e4ae      	b.n	40424e <_svfprintf_r+0x322>
  4048f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4048f2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4048f4:	2b01      	cmp	r3, #1
  4048f6:	f340 81fe 	ble.w	404cf6 <_svfprintf_r+0xdca>
  4048fa:	3701      	adds	r7, #1
  4048fc:	3401      	adds	r4, #1
  4048fe:	2301      	movs	r3, #1
  404900:	2f07      	cmp	r7, #7
  404902:	9427      	str	r4, [sp, #156]	; 0x9c
  404904:	9726      	str	r7, [sp, #152]	; 0x98
  404906:	f8c8 6000 	str.w	r6, [r8]
  40490a:	f8c8 3004 	str.w	r3, [r8, #4]
  40490e:	f300 8203 	bgt.w	404d18 <_svfprintf_r+0xdec>
  404912:	f108 0808 	add.w	r8, r8, #8
  404916:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404918:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40491a:	f8c8 3000 	str.w	r3, [r8]
  40491e:	3701      	adds	r7, #1
  404920:	4414      	add	r4, r2
  404922:	2f07      	cmp	r7, #7
  404924:	9427      	str	r4, [sp, #156]	; 0x9c
  404926:	9726      	str	r7, [sp, #152]	; 0x98
  404928:	f8c8 2004 	str.w	r2, [r8, #4]
  40492c:	f300 8200 	bgt.w	404d30 <_svfprintf_r+0xe04>
  404930:	f108 0808 	add.w	r8, r8, #8
  404934:	a814      	add	r0, sp, #80	; 0x50
  404936:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  404938:	f003 fd74 	bl	408424 <__aeabi_dcmpeq>
  40493c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40493e:	2800      	cmp	r0, #0
  404940:	f040 8101 	bne.w	404b46 <_svfprintf_r+0xc1a>
  404944:	3b01      	subs	r3, #1
  404946:	3701      	adds	r7, #1
  404948:	3601      	adds	r6, #1
  40494a:	441c      	add	r4, r3
  40494c:	2f07      	cmp	r7, #7
  40494e:	9726      	str	r7, [sp, #152]	; 0x98
  404950:	9427      	str	r4, [sp, #156]	; 0x9c
  404952:	f8c8 6000 	str.w	r6, [r8]
  404956:	f8c8 3004 	str.w	r3, [r8, #4]
  40495a:	f300 8128 	bgt.w	404bae <_svfprintf_r+0xc82>
  40495e:	f108 0808 	add.w	r8, r8, #8
  404962:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  404964:	f8c8 2004 	str.w	r2, [r8, #4]
  404968:	3701      	adds	r7, #1
  40496a:	4414      	add	r4, r2
  40496c:	ab21      	add	r3, sp, #132	; 0x84
  40496e:	2f07      	cmp	r7, #7
  404970:	9427      	str	r4, [sp, #156]	; 0x9c
  404972:	9726      	str	r7, [sp, #152]	; 0x98
  404974:	f8c8 3000 	str.w	r3, [r8]
  404978:	f77f acb6 	ble.w	4042e8 <_svfprintf_r+0x3bc>
  40497c:	aa25      	add	r2, sp, #148	; 0x94
  40497e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404980:	980c      	ldr	r0, [sp, #48]	; 0x30
  404982:	f002 fccb 	bl	40731c <__ssprint_r>
  404986:	2800      	cmp	r0, #0
  404988:	f47f aba2 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  40498c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40498e:	46c8      	mov	r8, r9
  404990:	e4ac      	b.n	4042ec <_svfprintf_r+0x3c0>
  404992:	aa25      	add	r2, sp, #148	; 0x94
  404994:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404996:	980c      	ldr	r0, [sp, #48]	; 0x30
  404998:	f002 fcc0 	bl	40731c <__ssprint_r>
  40499c:	2800      	cmp	r0, #0
  40499e:	f43f acee 	beq.w	40437e <_svfprintf_r+0x452>
  4049a2:	f7ff bb95 	b.w	4040d0 <_svfprintf_r+0x1a4>
  4049a6:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4049aa:	2b01      	cmp	r3, #1
  4049ac:	f000 8135 	beq.w	404c1a <_svfprintf_r+0xcee>
  4049b0:	2b02      	cmp	r3, #2
  4049b2:	d125      	bne.n	404a00 <_svfprintf_r+0xad4>
  4049b4:	f8cd b01c 	str.w	fp, [sp, #28]
  4049b8:	2400      	movs	r4, #0
  4049ba:	2500      	movs	r5, #0
  4049bc:	e621      	b.n	404602 <_svfprintf_r+0x6d6>
  4049be:	aa25      	add	r2, sp, #148	; 0x94
  4049c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049c4:	f002 fcaa 	bl	40731c <__ssprint_r>
  4049c8:	2800      	cmp	r0, #0
  4049ca:	f47f ab81 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4049ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4049d0:	46c8      	mov	r8, r9
  4049d2:	e478      	b.n	4042c6 <_svfprintf_r+0x39a>
  4049d4:	aa25      	add	r2, sp, #148	; 0x94
  4049d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049d8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049da:	f002 fc9f 	bl	40731c <__ssprint_r>
  4049de:	2800      	cmp	r0, #0
  4049e0:	f47f ab76 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4049e4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4049e6:	46c8      	mov	r8, r9
  4049e8:	e41e      	b.n	404228 <_svfprintf_r+0x2fc>
  4049ea:	aa25      	add	r2, sp, #148	; 0x94
  4049ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049ee:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049f0:	f002 fc94 	bl	40731c <__ssprint_r>
  4049f4:	2800      	cmp	r0, #0
  4049f6:	f47f ab6b 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4049fa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4049fc:	46c8      	mov	r8, r9
  4049fe:	e423      	b.n	404248 <_svfprintf_r+0x31c>
  404a00:	f8cd b01c 	str.w	fp, [sp, #28]
  404a04:	2400      	movs	r4, #0
  404a06:	2500      	movs	r5, #0
  404a08:	4649      	mov	r1, r9
  404a0a:	e000      	b.n	404a0e <_svfprintf_r+0xae2>
  404a0c:	4631      	mov	r1, r6
  404a0e:	08e2      	lsrs	r2, r4, #3
  404a10:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  404a14:	08e8      	lsrs	r0, r5, #3
  404a16:	f004 0307 	and.w	r3, r4, #7
  404a1a:	4605      	mov	r5, r0
  404a1c:	4614      	mov	r4, r2
  404a1e:	3330      	adds	r3, #48	; 0x30
  404a20:	ea54 0205 	orrs.w	r2, r4, r5
  404a24:	f801 3c01 	strb.w	r3, [r1, #-1]
  404a28:	f101 36ff 	add.w	r6, r1, #4294967295
  404a2c:	d1ee      	bne.n	404a0c <_svfprintf_r+0xae0>
  404a2e:	9a07      	ldr	r2, [sp, #28]
  404a30:	07d2      	lsls	r2, r2, #31
  404a32:	f57f adf6 	bpl.w	404622 <_svfprintf_r+0x6f6>
  404a36:	2b30      	cmp	r3, #48	; 0x30
  404a38:	f43f adf3 	beq.w	404622 <_svfprintf_r+0x6f6>
  404a3c:	3902      	subs	r1, #2
  404a3e:	2330      	movs	r3, #48	; 0x30
  404a40:	f806 3c01 	strb.w	r3, [r6, #-1]
  404a44:	eba9 0301 	sub.w	r3, r9, r1
  404a48:	930e      	str	r3, [sp, #56]	; 0x38
  404a4a:	460e      	mov	r6, r1
  404a4c:	f7ff bb7e 	b.w	40414c <_svfprintf_r+0x220>
  404a50:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404a52:	2900      	cmp	r1, #0
  404a54:	f340 822f 	ble.w	404eb6 <_svfprintf_r+0xf8a>
  404a58:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404a5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  404a5c:	4293      	cmp	r3, r2
  404a5e:	bfa8      	it	ge
  404a60:	4613      	movge	r3, r2
  404a62:	2b00      	cmp	r3, #0
  404a64:	461f      	mov	r7, r3
  404a66:	dd0d      	ble.n	404a84 <_svfprintf_r+0xb58>
  404a68:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404a6a:	f8c8 6000 	str.w	r6, [r8]
  404a6e:	3301      	adds	r3, #1
  404a70:	443c      	add	r4, r7
  404a72:	2b07      	cmp	r3, #7
  404a74:	9427      	str	r4, [sp, #156]	; 0x9c
  404a76:	f8c8 7004 	str.w	r7, [r8, #4]
  404a7a:	9326      	str	r3, [sp, #152]	; 0x98
  404a7c:	f300 8320 	bgt.w	4050c0 <_svfprintf_r+0x1194>
  404a80:	f108 0808 	add.w	r8, r8, #8
  404a84:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404a86:	2f00      	cmp	r7, #0
  404a88:	bfa8      	it	ge
  404a8a:	1bdb      	subge	r3, r3, r7
  404a8c:	2b00      	cmp	r3, #0
  404a8e:	461f      	mov	r7, r3
  404a90:	f340 80d7 	ble.w	404c42 <_svfprintf_r+0xd16>
  404a94:	2f10      	cmp	r7, #16
  404a96:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404a98:	4d31      	ldr	r5, [pc, #196]	; (404b60 <_svfprintf_r+0xc34>)
  404a9a:	f340 81ee 	ble.w	404e7a <_svfprintf_r+0xf4e>
  404a9e:	4642      	mov	r2, r8
  404aa0:	4621      	mov	r1, r4
  404aa2:	46b0      	mov	r8, r6
  404aa4:	f04f 0b10 	mov.w	fp, #16
  404aa8:	462e      	mov	r6, r5
  404aaa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404aac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404aae:	e004      	b.n	404aba <_svfprintf_r+0xb8e>
  404ab0:	3208      	adds	r2, #8
  404ab2:	3f10      	subs	r7, #16
  404ab4:	2f10      	cmp	r7, #16
  404ab6:	f340 81dc 	ble.w	404e72 <_svfprintf_r+0xf46>
  404aba:	3301      	adds	r3, #1
  404abc:	3110      	adds	r1, #16
  404abe:	2b07      	cmp	r3, #7
  404ac0:	9127      	str	r1, [sp, #156]	; 0x9c
  404ac2:	9326      	str	r3, [sp, #152]	; 0x98
  404ac4:	e882 0840 	stmia.w	r2, {r6, fp}
  404ac8:	ddf2      	ble.n	404ab0 <_svfprintf_r+0xb84>
  404aca:	aa25      	add	r2, sp, #148	; 0x94
  404acc:	4629      	mov	r1, r5
  404ace:	4620      	mov	r0, r4
  404ad0:	f002 fc24 	bl	40731c <__ssprint_r>
  404ad4:	2800      	cmp	r0, #0
  404ad6:	f47f aafb 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404ada:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404adc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ade:	464a      	mov	r2, r9
  404ae0:	e7e7      	b.n	404ab2 <_svfprintf_r+0xb86>
  404ae2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404ae4:	930e      	str	r3, [sp, #56]	; 0x38
  404ae6:	464e      	mov	r6, r9
  404ae8:	f7ff bb30 	b.w	40414c <_svfprintf_r+0x220>
  404aec:	2d00      	cmp	r5, #0
  404aee:	bf08      	it	eq
  404af0:	2c0a      	cmpeq	r4, #10
  404af2:	f0c0 8090 	bcc.w	404c16 <_svfprintf_r+0xcea>
  404af6:	464e      	mov	r6, r9
  404af8:	4620      	mov	r0, r4
  404afa:	4629      	mov	r1, r5
  404afc:	220a      	movs	r2, #10
  404afe:	2300      	movs	r3, #0
  404b00:	f7fe fd8c 	bl	40361c <__aeabi_uldivmod>
  404b04:	3230      	adds	r2, #48	; 0x30
  404b06:	f806 2d01 	strb.w	r2, [r6, #-1]!
  404b0a:	4620      	mov	r0, r4
  404b0c:	4629      	mov	r1, r5
  404b0e:	2300      	movs	r3, #0
  404b10:	220a      	movs	r2, #10
  404b12:	f7fe fd83 	bl	40361c <__aeabi_uldivmod>
  404b16:	4604      	mov	r4, r0
  404b18:	460d      	mov	r5, r1
  404b1a:	ea54 0305 	orrs.w	r3, r4, r5
  404b1e:	d1eb      	bne.n	404af8 <_svfprintf_r+0xbcc>
  404b20:	eba9 0306 	sub.w	r3, r9, r6
  404b24:	930e      	str	r3, [sp, #56]	; 0x38
  404b26:	f7ff bb11 	b.w	40414c <_svfprintf_r+0x220>
  404b2a:	aa25      	add	r2, sp, #148	; 0x94
  404b2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b30:	f002 fbf4 	bl	40731c <__ssprint_r>
  404b34:	2800      	cmp	r0, #0
  404b36:	f47f aacb 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404b3a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404b3e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b40:	46c8      	mov	r8, r9
  404b42:	f7ff bb61 	b.w	404208 <_svfprintf_r+0x2dc>
  404b46:	1e5e      	subs	r6, r3, #1
  404b48:	2e00      	cmp	r6, #0
  404b4a:	f77f af0a 	ble.w	404962 <_svfprintf_r+0xa36>
  404b4e:	2e10      	cmp	r6, #16
  404b50:	4d03      	ldr	r5, [pc, #12]	; (404b60 <_svfprintf_r+0xc34>)
  404b52:	dd23      	ble.n	404b9c <_svfprintf_r+0xc70>
  404b54:	4622      	mov	r2, r4
  404b56:	f04f 0b10 	mov.w	fp, #16
  404b5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404b5c:	e007      	b.n	404b6e <_svfprintf_r+0xc42>
  404b5e:	bf00      	nop
  404b60:	004092dc 	.word	0x004092dc
  404b64:	3e10      	subs	r6, #16
  404b66:	2e10      	cmp	r6, #16
  404b68:	f108 0808 	add.w	r8, r8, #8
  404b6c:	dd15      	ble.n	404b9a <_svfprintf_r+0xc6e>
  404b6e:	3701      	adds	r7, #1
  404b70:	3210      	adds	r2, #16
  404b72:	2f07      	cmp	r7, #7
  404b74:	9227      	str	r2, [sp, #156]	; 0x9c
  404b76:	9726      	str	r7, [sp, #152]	; 0x98
  404b78:	e888 0820 	stmia.w	r8, {r5, fp}
  404b7c:	ddf2      	ble.n	404b64 <_svfprintf_r+0xc38>
  404b7e:	aa25      	add	r2, sp, #148	; 0x94
  404b80:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b82:	4620      	mov	r0, r4
  404b84:	f002 fbca 	bl	40731c <__ssprint_r>
  404b88:	2800      	cmp	r0, #0
  404b8a:	f47f aaa1 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404b8e:	3e10      	subs	r6, #16
  404b90:	2e10      	cmp	r6, #16
  404b92:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404b94:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404b96:	46c8      	mov	r8, r9
  404b98:	dce9      	bgt.n	404b6e <_svfprintf_r+0xc42>
  404b9a:	4614      	mov	r4, r2
  404b9c:	3701      	adds	r7, #1
  404b9e:	4434      	add	r4, r6
  404ba0:	2f07      	cmp	r7, #7
  404ba2:	9427      	str	r4, [sp, #156]	; 0x9c
  404ba4:	9726      	str	r7, [sp, #152]	; 0x98
  404ba6:	e888 0060 	stmia.w	r8, {r5, r6}
  404baa:	f77f aed8 	ble.w	40495e <_svfprintf_r+0xa32>
  404bae:	aa25      	add	r2, sp, #148	; 0x94
  404bb0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404bb2:	980c      	ldr	r0, [sp, #48]	; 0x30
  404bb4:	f002 fbb2 	bl	40731c <__ssprint_r>
  404bb8:	2800      	cmp	r0, #0
  404bba:	f47f aa89 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404bbe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404bc0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404bc2:	46c8      	mov	r8, r9
  404bc4:	e6cd      	b.n	404962 <_svfprintf_r+0xa36>
  404bc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404bc8:	6814      	ldr	r4, [r2, #0]
  404bca:	4613      	mov	r3, r2
  404bcc:	3304      	adds	r3, #4
  404bce:	17e5      	asrs	r5, r4, #31
  404bd0:	930f      	str	r3, [sp, #60]	; 0x3c
  404bd2:	4622      	mov	r2, r4
  404bd4:	462b      	mov	r3, r5
  404bd6:	e4fc      	b.n	4045d2 <_svfprintf_r+0x6a6>
  404bd8:	3204      	adds	r2, #4
  404bda:	681c      	ldr	r4, [r3, #0]
  404bdc:	920f      	str	r2, [sp, #60]	; 0x3c
  404bde:	2301      	movs	r3, #1
  404be0:	2500      	movs	r5, #0
  404be2:	f7ff ba96 	b.w	404112 <_svfprintf_r+0x1e6>
  404be6:	681c      	ldr	r4, [r3, #0]
  404be8:	3304      	adds	r3, #4
  404bea:	930f      	str	r3, [sp, #60]	; 0x3c
  404bec:	2500      	movs	r5, #0
  404bee:	e423      	b.n	404438 <_svfprintf_r+0x50c>
  404bf0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404bf2:	460a      	mov	r2, r1
  404bf4:	3204      	adds	r2, #4
  404bf6:	680c      	ldr	r4, [r1, #0]
  404bf8:	920f      	str	r2, [sp, #60]	; 0x3c
  404bfa:	2500      	movs	r5, #0
  404bfc:	f7ff ba89 	b.w	404112 <_svfprintf_r+0x1e6>
  404c00:	4614      	mov	r4, r2
  404c02:	3301      	adds	r3, #1
  404c04:	4434      	add	r4, r6
  404c06:	2b07      	cmp	r3, #7
  404c08:	9427      	str	r4, [sp, #156]	; 0x9c
  404c0a:	9326      	str	r3, [sp, #152]	; 0x98
  404c0c:	e888 0060 	stmia.w	r8, {r5, r6}
  404c10:	f77f ab6a 	ble.w	4042e8 <_svfprintf_r+0x3bc>
  404c14:	e6b2      	b.n	40497c <_svfprintf_r+0xa50>
  404c16:	f8dd b01c 	ldr.w	fp, [sp, #28]
  404c1a:	f8cd b01c 	str.w	fp, [sp, #28]
  404c1e:	ae42      	add	r6, sp, #264	; 0x108
  404c20:	3430      	adds	r4, #48	; 0x30
  404c22:	2301      	movs	r3, #1
  404c24:	f806 4d41 	strb.w	r4, [r6, #-65]!
  404c28:	930e      	str	r3, [sp, #56]	; 0x38
  404c2a:	f7ff ba8f 	b.w	40414c <_svfprintf_r+0x220>
  404c2e:	aa25      	add	r2, sp, #148	; 0x94
  404c30:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404c32:	980c      	ldr	r0, [sp, #48]	; 0x30
  404c34:	f002 fb72 	bl	40731c <__ssprint_r>
  404c38:	2800      	cmp	r0, #0
  404c3a:	f47f aa49 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404c3e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404c40:	46c8      	mov	r8, r9
  404c42:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404c44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404c46:	429a      	cmp	r2, r3
  404c48:	db44      	blt.n	404cd4 <_svfprintf_r+0xda8>
  404c4a:	9b07      	ldr	r3, [sp, #28]
  404c4c:	07d9      	lsls	r1, r3, #31
  404c4e:	d441      	bmi.n	404cd4 <_svfprintf_r+0xda8>
  404c50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404c52:	9812      	ldr	r0, [sp, #72]	; 0x48
  404c54:	1a9a      	subs	r2, r3, r2
  404c56:	1a1d      	subs	r5, r3, r0
  404c58:	4295      	cmp	r5, r2
  404c5a:	bfa8      	it	ge
  404c5c:	4615      	movge	r5, r2
  404c5e:	2d00      	cmp	r5, #0
  404c60:	dd0e      	ble.n	404c80 <_svfprintf_r+0xd54>
  404c62:	9926      	ldr	r1, [sp, #152]	; 0x98
  404c64:	f8c8 5004 	str.w	r5, [r8, #4]
  404c68:	3101      	adds	r1, #1
  404c6a:	4406      	add	r6, r0
  404c6c:	442c      	add	r4, r5
  404c6e:	2907      	cmp	r1, #7
  404c70:	f8c8 6000 	str.w	r6, [r8]
  404c74:	9427      	str	r4, [sp, #156]	; 0x9c
  404c76:	9126      	str	r1, [sp, #152]	; 0x98
  404c78:	f300 823b 	bgt.w	4050f2 <_svfprintf_r+0x11c6>
  404c7c:	f108 0808 	add.w	r8, r8, #8
  404c80:	2d00      	cmp	r5, #0
  404c82:	bfac      	ite	ge
  404c84:	1b56      	subge	r6, r2, r5
  404c86:	4616      	movlt	r6, r2
  404c88:	2e00      	cmp	r6, #0
  404c8a:	f77f ab2f 	ble.w	4042ec <_svfprintf_r+0x3c0>
  404c8e:	2e10      	cmp	r6, #16
  404c90:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404c92:	4db0      	ldr	r5, [pc, #704]	; (404f54 <_svfprintf_r+0x1028>)
  404c94:	ddb5      	ble.n	404c02 <_svfprintf_r+0xcd6>
  404c96:	4622      	mov	r2, r4
  404c98:	2710      	movs	r7, #16
  404c9a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404c9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  404ca0:	e004      	b.n	404cac <_svfprintf_r+0xd80>
  404ca2:	f108 0808 	add.w	r8, r8, #8
  404ca6:	3e10      	subs	r6, #16
  404ca8:	2e10      	cmp	r6, #16
  404caa:	dda9      	ble.n	404c00 <_svfprintf_r+0xcd4>
  404cac:	3301      	adds	r3, #1
  404cae:	3210      	adds	r2, #16
  404cb0:	2b07      	cmp	r3, #7
  404cb2:	9227      	str	r2, [sp, #156]	; 0x9c
  404cb4:	9326      	str	r3, [sp, #152]	; 0x98
  404cb6:	e888 00a0 	stmia.w	r8, {r5, r7}
  404cba:	ddf2      	ble.n	404ca2 <_svfprintf_r+0xd76>
  404cbc:	aa25      	add	r2, sp, #148	; 0x94
  404cbe:	4621      	mov	r1, r4
  404cc0:	4658      	mov	r0, fp
  404cc2:	f002 fb2b 	bl	40731c <__ssprint_r>
  404cc6:	2800      	cmp	r0, #0
  404cc8:	f47f aa02 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404ccc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404cce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cd0:	46c8      	mov	r8, r9
  404cd2:	e7e8      	b.n	404ca6 <_svfprintf_r+0xd7a>
  404cd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cd6:	9819      	ldr	r0, [sp, #100]	; 0x64
  404cd8:	991a      	ldr	r1, [sp, #104]	; 0x68
  404cda:	f8c8 1000 	str.w	r1, [r8]
  404cde:	3301      	adds	r3, #1
  404ce0:	4404      	add	r4, r0
  404ce2:	2b07      	cmp	r3, #7
  404ce4:	9427      	str	r4, [sp, #156]	; 0x9c
  404ce6:	f8c8 0004 	str.w	r0, [r8, #4]
  404cea:	9326      	str	r3, [sp, #152]	; 0x98
  404cec:	f300 81f5 	bgt.w	4050da <_svfprintf_r+0x11ae>
  404cf0:	f108 0808 	add.w	r8, r8, #8
  404cf4:	e7ac      	b.n	404c50 <_svfprintf_r+0xd24>
  404cf6:	9b07      	ldr	r3, [sp, #28]
  404cf8:	07da      	lsls	r2, r3, #31
  404cfa:	f53f adfe 	bmi.w	4048fa <_svfprintf_r+0x9ce>
  404cfe:	3701      	adds	r7, #1
  404d00:	3401      	adds	r4, #1
  404d02:	2301      	movs	r3, #1
  404d04:	2f07      	cmp	r7, #7
  404d06:	9427      	str	r4, [sp, #156]	; 0x9c
  404d08:	9726      	str	r7, [sp, #152]	; 0x98
  404d0a:	f8c8 6000 	str.w	r6, [r8]
  404d0e:	f8c8 3004 	str.w	r3, [r8, #4]
  404d12:	f77f ae24 	ble.w	40495e <_svfprintf_r+0xa32>
  404d16:	e74a      	b.n	404bae <_svfprintf_r+0xc82>
  404d18:	aa25      	add	r2, sp, #148	; 0x94
  404d1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d1c:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d1e:	f002 fafd 	bl	40731c <__ssprint_r>
  404d22:	2800      	cmp	r0, #0
  404d24:	f47f a9d4 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404d28:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d2a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404d2c:	46c8      	mov	r8, r9
  404d2e:	e5f2      	b.n	404916 <_svfprintf_r+0x9ea>
  404d30:	aa25      	add	r2, sp, #148	; 0x94
  404d32:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d34:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d36:	f002 faf1 	bl	40731c <__ssprint_r>
  404d3a:	2800      	cmp	r0, #0
  404d3c:	f47f a9c8 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404d40:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d42:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404d44:	46c8      	mov	r8, r9
  404d46:	e5f5      	b.n	404934 <_svfprintf_r+0xa08>
  404d48:	464e      	mov	r6, r9
  404d4a:	f7ff b9ff 	b.w	40414c <_svfprintf_r+0x220>
  404d4e:	aa25      	add	r2, sp, #148	; 0x94
  404d50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d52:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d54:	f002 fae2 	bl	40731c <__ssprint_r>
  404d58:	2800      	cmp	r0, #0
  404d5a:	f47f a9b9 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404d5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d60:	46c8      	mov	r8, r9
  404d62:	f7ff ba74 	b.w	40424e <_svfprintf_r+0x322>
  404d66:	9c14      	ldr	r4, [sp, #80]	; 0x50
  404d68:	4622      	mov	r2, r4
  404d6a:	4620      	mov	r0, r4
  404d6c:	9c15      	ldr	r4, [sp, #84]	; 0x54
  404d6e:	4623      	mov	r3, r4
  404d70:	4621      	mov	r1, r4
  404d72:	f003 fb89 	bl	408488 <__aeabi_dcmpun>
  404d76:	2800      	cmp	r0, #0
  404d78:	f040 8286 	bne.w	405288 <_svfprintf_r+0x135c>
  404d7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404d7e:	3301      	adds	r3, #1
  404d80:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404d82:	f023 0320 	bic.w	r3, r3, #32
  404d86:	930e      	str	r3, [sp, #56]	; 0x38
  404d88:	f000 81e2 	beq.w	405150 <_svfprintf_r+0x1224>
  404d8c:	2b47      	cmp	r3, #71	; 0x47
  404d8e:	f000 811e 	beq.w	404fce <_svfprintf_r+0x10a2>
  404d92:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  404d96:	9307      	str	r3, [sp, #28]
  404d98:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404d9a:	1e1f      	subs	r7, r3, #0
  404d9c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404d9e:	9308      	str	r3, [sp, #32]
  404da0:	bfbb      	ittet	lt
  404da2:	463b      	movlt	r3, r7
  404da4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  404da8:	2300      	movge	r3, #0
  404daa:	232d      	movlt	r3, #45	; 0x2d
  404dac:	9310      	str	r3, [sp, #64]	; 0x40
  404dae:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404db0:	2b66      	cmp	r3, #102	; 0x66
  404db2:	f000 81bb 	beq.w	40512c <_svfprintf_r+0x1200>
  404db6:	2b46      	cmp	r3, #70	; 0x46
  404db8:	f000 80df 	beq.w	404f7a <_svfprintf_r+0x104e>
  404dbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404dbe:	9a08      	ldr	r2, [sp, #32]
  404dc0:	2b45      	cmp	r3, #69	; 0x45
  404dc2:	bf0c      	ite	eq
  404dc4:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  404dc6:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  404dc8:	a823      	add	r0, sp, #140	; 0x8c
  404dca:	a920      	add	r1, sp, #128	; 0x80
  404dcc:	bf08      	it	eq
  404dce:	1c5d      	addeq	r5, r3, #1
  404dd0:	9004      	str	r0, [sp, #16]
  404dd2:	9103      	str	r1, [sp, #12]
  404dd4:	a81f      	add	r0, sp, #124	; 0x7c
  404dd6:	2102      	movs	r1, #2
  404dd8:	463b      	mov	r3, r7
  404dda:	9002      	str	r0, [sp, #8]
  404ddc:	9501      	str	r5, [sp, #4]
  404dde:	9100      	str	r1, [sp, #0]
  404de0:	980c      	ldr	r0, [sp, #48]	; 0x30
  404de2:	f000 fb6d 	bl	4054c0 <_dtoa_r>
  404de6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404de8:	2b67      	cmp	r3, #103	; 0x67
  404dea:	4606      	mov	r6, r0
  404dec:	f040 81e0 	bne.w	4051b0 <_svfprintf_r+0x1284>
  404df0:	f01b 0f01 	tst.w	fp, #1
  404df4:	f000 8246 	beq.w	405284 <_svfprintf_r+0x1358>
  404df8:	1974      	adds	r4, r6, r5
  404dfa:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404dfc:	9808      	ldr	r0, [sp, #32]
  404dfe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404e00:	4639      	mov	r1, r7
  404e02:	f003 fb0f 	bl	408424 <__aeabi_dcmpeq>
  404e06:	2800      	cmp	r0, #0
  404e08:	f040 8165 	bne.w	4050d6 <_svfprintf_r+0x11aa>
  404e0c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404e0e:	42a3      	cmp	r3, r4
  404e10:	d206      	bcs.n	404e20 <_svfprintf_r+0xef4>
  404e12:	2130      	movs	r1, #48	; 0x30
  404e14:	1c5a      	adds	r2, r3, #1
  404e16:	9223      	str	r2, [sp, #140]	; 0x8c
  404e18:	7019      	strb	r1, [r3, #0]
  404e1a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404e1c:	429c      	cmp	r4, r3
  404e1e:	d8f9      	bhi.n	404e14 <_svfprintf_r+0xee8>
  404e20:	1b9b      	subs	r3, r3, r6
  404e22:	9313      	str	r3, [sp, #76]	; 0x4c
  404e24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404e26:	2b47      	cmp	r3, #71	; 0x47
  404e28:	f000 80e9 	beq.w	404ffe <_svfprintf_r+0x10d2>
  404e2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e2e:	2b65      	cmp	r3, #101	; 0x65
  404e30:	f340 81cd 	ble.w	4051ce <_svfprintf_r+0x12a2>
  404e34:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e36:	2b66      	cmp	r3, #102	; 0x66
  404e38:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404e3a:	9312      	str	r3, [sp, #72]	; 0x48
  404e3c:	f000 819e 	beq.w	40517c <_svfprintf_r+0x1250>
  404e40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404e42:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404e44:	4619      	mov	r1, r3
  404e46:	4291      	cmp	r1, r2
  404e48:	f300 818a 	bgt.w	405160 <_svfprintf_r+0x1234>
  404e4c:	f01b 0f01 	tst.w	fp, #1
  404e50:	f040 8213 	bne.w	40527a <_svfprintf_r+0x134e>
  404e54:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404e58:	9308      	str	r3, [sp, #32]
  404e5a:	2367      	movs	r3, #103	; 0x67
  404e5c:	920e      	str	r2, [sp, #56]	; 0x38
  404e5e:	9311      	str	r3, [sp, #68]	; 0x44
  404e60:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404e62:	2b00      	cmp	r3, #0
  404e64:	f040 80c4 	bne.w	404ff0 <_svfprintf_r+0x10c4>
  404e68:	930a      	str	r3, [sp, #40]	; 0x28
  404e6a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404e6e:	f7ff b975 	b.w	40415c <_svfprintf_r+0x230>
  404e72:	4635      	mov	r5, r6
  404e74:	460c      	mov	r4, r1
  404e76:	4646      	mov	r6, r8
  404e78:	4690      	mov	r8, r2
  404e7a:	3301      	adds	r3, #1
  404e7c:	443c      	add	r4, r7
  404e7e:	2b07      	cmp	r3, #7
  404e80:	9427      	str	r4, [sp, #156]	; 0x9c
  404e82:	9326      	str	r3, [sp, #152]	; 0x98
  404e84:	e888 00a0 	stmia.w	r8, {r5, r7}
  404e88:	f73f aed1 	bgt.w	404c2e <_svfprintf_r+0xd02>
  404e8c:	f108 0808 	add.w	r8, r8, #8
  404e90:	e6d7      	b.n	404c42 <_svfprintf_r+0xd16>
  404e92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404e94:	6813      	ldr	r3, [r2, #0]
  404e96:	3204      	adds	r2, #4
  404e98:	920f      	str	r2, [sp, #60]	; 0x3c
  404e9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404e9c:	601a      	str	r2, [r3, #0]
  404e9e:	f7ff b86c 	b.w	403f7a <_svfprintf_r+0x4e>
  404ea2:	aa25      	add	r2, sp, #148	; 0x94
  404ea4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404ea6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ea8:	f002 fa38 	bl	40731c <__ssprint_r>
  404eac:	2800      	cmp	r0, #0
  404eae:	f47f a90f 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404eb2:	46c8      	mov	r8, r9
  404eb4:	e48d      	b.n	4047d2 <_svfprintf_r+0x8a6>
  404eb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404eb8:	4a27      	ldr	r2, [pc, #156]	; (404f58 <_svfprintf_r+0x102c>)
  404eba:	f8c8 2000 	str.w	r2, [r8]
  404ebe:	3301      	adds	r3, #1
  404ec0:	3401      	adds	r4, #1
  404ec2:	2201      	movs	r2, #1
  404ec4:	2b07      	cmp	r3, #7
  404ec6:	9427      	str	r4, [sp, #156]	; 0x9c
  404ec8:	9326      	str	r3, [sp, #152]	; 0x98
  404eca:	f8c8 2004 	str.w	r2, [r8, #4]
  404ece:	dc72      	bgt.n	404fb6 <_svfprintf_r+0x108a>
  404ed0:	f108 0808 	add.w	r8, r8, #8
  404ed4:	b929      	cbnz	r1, 404ee2 <_svfprintf_r+0xfb6>
  404ed6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404ed8:	b91b      	cbnz	r3, 404ee2 <_svfprintf_r+0xfb6>
  404eda:	9b07      	ldr	r3, [sp, #28]
  404edc:	07d8      	lsls	r0, r3, #31
  404ede:	f57f aa05 	bpl.w	4042ec <_svfprintf_r+0x3c0>
  404ee2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ee4:	9819      	ldr	r0, [sp, #100]	; 0x64
  404ee6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  404ee8:	f8c8 2000 	str.w	r2, [r8]
  404eec:	3301      	adds	r3, #1
  404eee:	4602      	mov	r2, r0
  404ef0:	4422      	add	r2, r4
  404ef2:	2b07      	cmp	r3, #7
  404ef4:	9227      	str	r2, [sp, #156]	; 0x9c
  404ef6:	f8c8 0004 	str.w	r0, [r8, #4]
  404efa:	9326      	str	r3, [sp, #152]	; 0x98
  404efc:	f300 818d 	bgt.w	40521a <_svfprintf_r+0x12ee>
  404f00:	f108 0808 	add.w	r8, r8, #8
  404f04:	2900      	cmp	r1, #0
  404f06:	f2c0 8165 	blt.w	4051d4 <_svfprintf_r+0x12a8>
  404f0a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  404f0c:	f8c8 6000 	str.w	r6, [r8]
  404f10:	3301      	adds	r3, #1
  404f12:	188c      	adds	r4, r1, r2
  404f14:	2b07      	cmp	r3, #7
  404f16:	9427      	str	r4, [sp, #156]	; 0x9c
  404f18:	9326      	str	r3, [sp, #152]	; 0x98
  404f1a:	f8c8 1004 	str.w	r1, [r8, #4]
  404f1e:	f77f a9e3 	ble.w	4042e8 <_svfprintf_r+0x3bc>
  404f22:	e52b      	b.n	40497c <_svfprintf_r+0xa50>
  404f24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404f26:	9909      	ldr	r1, [sp, #36]	; 0x24
  404f28:	6813      	ldr	r3, [r2, #0]
  404f2a:	17cd      	asrs	r5, r1, #31
  404f2c:	4608      	mov	r0, r1
  404f2e:	3204      	adds	r2, #4
  404f30:	4629      	mov	r1, r5
  404f32:	920f      	str	r2, [sp, #60]	; 0x3c
  404f34:	e9c3 0100 	strd	r0, r1, [r3]
  404f38:	f7ff b81f 	b.w	403f7a <_svfprintf_r+0x4e>
  404f3c:	aa25      	add	r2, sp, #148	; 0x94
  404f3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404f40:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f42:	f002 f9eb 	bl	40731c <__ssprint_r>
  404f46:	2800      	cmp	r0, #0
  404f48:	f47f a8c2 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404f4c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404f4e:	46c8      	mov	r8, r9
  404f50:	e458      	b.n	404804 <_svfprintf_r+0x8d8>
  404f52:	bf00      	nop
  404f54:	004092dc 	.word	0x004092dc
  404f58:	004092c8 	.word	0x004092c8
  404f5c:	2140      	movs	r1, #64	; 0x40
  404f5e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f60:	f001 fa00 	bl	406364 <_malloc_r>
  404f64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404f66:	6010      	str	r0, [r2, #0]
  404f68:	6110      	str	r0, [r2, #16]
  404f6a:	2800      	cmp	r0, #0
  404f6c:	f000 81ec 	beq.w	405348 <_svfprintf_r+0x141c>
  404f70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404f72:	2340      	movs	r3, #64	; 0x40
  404f74:	6153      	str	r3, [r2, #20]
  404f76:	f7fe bff0 	b.w	403f5a <_svfprintf_r+0x2e>
  404f7a:	a823      	add	r0, sp, #140	; 0x8c
  404f7c:	a920      	add	r1, sp, #128	; 0x80
  404f7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  404f80:	9004      	str	r0, [sp, #16]
  404f82:	9103      	str	r1, [sp, #12]
  404f84:	a81f      	add	r0, sp, #124	; 0x7c
  404f86:	2103      	movs	r1, #3
  404f88:	9002      	str	r0, [sp, #8]
  404f8a:	9a08      	ldr	r2, [sp, #32]
  404f8c:	9401      	str	r4, [sp, #4]
  404f8e:	463b      	mov	r3, r7
  404f90:	9100      	str	r1, [sp, #0]
  404f92:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f94:	f000 fa94 	bl	4054c0 <_dtoa_r>
  404f98:	4625      	mov	r5, r4
  404f9a:	4606      	mov	r6, r0
  404f9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404f9e:	2b46      	cmp	r3, #70	; 0x46
  404fa0:	eb06 0405 	add.w	r4, r6, r5
  404fa4:	f47f af29 	bne.w	404dfa <_svfprintf_r+0xece>
  404fa8:	7833      	ldrb	r3, [r6, #0]
  404faa:	2b30      	cmp	r3, #48	; 0x30
  404fac:	f000 8172 	beq.w	405294 <_svfprintf_r+0x1368>
  404fb0:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  404fb2:	442c      	add	r4, r5
  404fb4:	e721      	b.n	404dfa <_svfprintf_r+0xece>
  404fb6:	aa25      	add	r2, sp, #148	; 0x94
  404fb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404fba:	980c      	ldr	r0, [sp, #48]	; 0x30
  404fbc:	f002 f9ae 	bl	40731c <__ssprint_r>
  404fc0:	2800      	cmp	r0, #0
  404fc2:	f47f a885 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  404fc6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404fc8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404fca:	46c8      	mov	r8, r9
  404fcc:	e782      	b.n	404ed4 <_svfprintf_r+0xfa8>
  404fce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404fd0:	2b00      	cmp	r3, #0
  404fd2:	bf08      	it	eq
  404fd4:	2301      	moveq	r3, #1
  404fd6:	930a      	str	r3, [sp, #40]	; 0x28
  404fd8:	e6db      	b.n	404d92 <_svfprintf_r+0xe66>
  404fda:	4630      	mov	r0, r6
  404fdc:	940a      	str	r4, [sp, #40]	; 0x28
  404fde:	f002 f92f 	bl	407240 <strlen>
  404fe2:	950f      	str	r5, [sp, #60]	; 0x3c
  404fe4:	900e      	str	r0, [sp, #56]	; 0x38
  404fe6:	f8cd b01c 	str.w	fp, [sp, #28]
  404fea:	4603      	mov	r3, r0
  404fec:	f7ff b9fb 	b.w	4043e6 <_svfprintf_r+0x4ba>
  404ff0:	272d      	movs	r7, #45	; 0x2d
  404ff2:	2300      	movs	r3, #0
  404ff4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404ff8:	930a      	str	r3, [sp, #40]	; 0x28
  404ffa:	f7ff b8b0 	b.w	40415e <_svfprintf_r+0x232>
  404ffe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405000:	9312      	str	r3, [sp, #72]	; 0x48
  405002:	461a      	mov	r2, r3
  405004:	3303      	adds	r3, #3
  405006:	db04      	blt.n	405012 <_svfprintf_r+0x10e6>
  405008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40500a:	4619      	mov	r1, r3
  40500c:	4291      	cmp	r1, r2
  40500e:	f6bf af17 	bge.w	404e40 <_svfprintf_r+0xf14>
  405012:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405014:	3b02      	subs	r3, #2
  405016:	9311      	str	r3, [sp, #68]	; 0x44
  405018:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  40501c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  405020:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405022:	3b01      	subs	r3, #1
  405024:	2b00      	cmp	r3, #0
  405026:	931f      	str	r3, [sp, #124]	; 0x7c
  405028:	bfbd      	ittte	lt
  40502a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  40502c:	f1c3 0301 	rsblt	r3, r3, #1
  405030:	222d      	movlt	r2, #45	; 0x2d
  405032:	222b      	movge	r2, #43	; 0x2b
  405034:	2b09      	cmp	r3, #9
  405036:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40503a:	f340 8116 	ble.w	40526a <_svfprintf_r+0x133e>
  40503e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  405042:	4620      	mov	r0, r4
  405044:	4dad      	ldr	r5, [pc, #692]	; (4052fc <_svfprintf_r+0x13d0>)
  405046:	e000      	b.n	40504a <_svfprintf_r+0x111e>
  405048:	4610      	mov	r0, r2
  40504a:	fb85 1203 	smull	r1, r2, r5, r3
  40504e:	17d9      	asrs	r1, r3, #31
  405050:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  405054:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  405058:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  40505c:	3230      	adds	r2, #48	; 0x30
  40505e:	2909      	cmp	r1, #9
  405060:	f800 2c01 	strb.w	r2, [r0, #-1]
  405064:	460b      	mov	r3, r1
  405066:	f100 32ff 	add.w	r2, r0, #4294967295
  40506a:	dced      	bgt.n	405048 <_svfprintf_r+0x111c>
  40506c:	3330      	adds	r3, #48	; 0x30
  40506e:	3802      	subs	r0, #2
  405070:	b2d9      	uxtb	r1, r3
  405072:	4284      	cmp	r4, r0
  405074:	f802 1c01 	strb.w	r1, [r2, #-1]
  405078:	f240 815f 	bls.w	40533a <_svfprintf_r+0x140e>
  40507c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  405080:	4613      	mov	r3, r2
  405082:	e001      	b.n	405088 <_svfprintf_r+0x115c>
  405084:	f813 1b01 	ldrb.w	r1, [r3], #1
  405088:	f800 1b01 	strb.w	r1, [r0], #1
  40508c:	42a3      	cmp	r3, r4
  40508e:	d1f9      	bne.n	405084 <_svfprintf_r+0x1158>
  405090:	3301      	adds	r3, #1
  405092:	1a9b      	subs	r3, r3, r2
  405094:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  405098:	4413      	add	r3, r2
  40509a:	aa21      	add	r2, sp, #132	; 0x84
  40509c:	1a9b      	subs	r3, r3, r2
  40509e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4050a0:	931b      	str	r3, [sp, #108]	; 0x6c
  4050a2:	2a01      	cmp	r2, #1
  4050a4:	4413      	add	r3, r2
  4050a6:	930e      	str	r3, [sp, #56]	; 0x38
  4050a8:	f340 8113 	ble.w	4052d2 <_svfprintf_r+0x13a6>
  4050ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4050ae:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4050b0:	4413      	add	r3, r2
  4050b2:	930e      	str	r3, [sp, #56]	; 0x38
  4050b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4050b8:	9308      	str	r3, [sp, #32]
  4050ba:	2300      	movs	r3, #0
  4050bc:	9312      	str	r3, [sp, #72]	; 0x48
  4050be:	e6cf      	b.n	404e60 <_svfprintf_r+0xf34>
  4050c0:	aa25      	add	r2, sp, #148	; 0x94
  4050c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4050c4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4050c6:	f002 f929 	bl	40731c <__ssprint_r>
  4050ca:	2800      	cmp	r0, #0
  4050cc:	f47f a800 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4050d0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4050d2:	46c8      	mov	r8, r9
  4050d4:	e4d6      	b.n	404a84 <_svfprintf_r+0xb58>
  4050d6:	4623      	mov	r3, r4
  4050d8:	e6a2      	b.n	404e20 <_svfprintf_r+0xef4>
  4050da:	aa25      	add	r2, sp, #148	; 0x94
  4050dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4050de:	980c      	ldr	r0, [sp, #48]	; 0x30
  4050e0:	f002 f91c 	bl	40731c <__ssprint_r>
  4050e4:	2800      	cmp	r0, #0
  4050e6:	f47e aff3 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  4050ea:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4050ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4050ee:	46c8      	mov	r8, r9
  4050f0:	e5ae      	b.n	404c50 <_svfprintf_r+0xd24>
  4050f2:	aa25      	add	r2, sp, #148	; 0x94
  4050f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4050f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4050f8:	f002 f910 	bl	40731c <__ssprint_r>
  4050fc:	2800      	cmp	r0, #0
  4050fe:	f47e afe7 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  405102:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405104:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405106:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405108:	1a9a      	subs	r2, r3, r2
  40510a:	46c8      	mov	r8, r9
  40510c:	e5b8      	b.n	404c80 <_svfprintf_r+0xd54>
  40510e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405110:	9612      	str	r6, [sp, #72]	; 0x48
  405112:	2b06      	cmp	r3, #6
  405114:	bf28      	it	cs
  405116:	2306      	movcs	r3, #6
  405118:	960a      	str	r6, [sp, #40]	; 0x28
  40511a:	4637      	mov	r7, r6
  40511c:	9308      	str	r3, [sp, #32]
  40511e:	950f      	str	r5, [sp, #60]	; 0x3c
  405120:	f8cd b01c 	str.w	fp, [sp, #28]
  405124:	930e      	str	r3, [sp, #56]	; 0x38
  405126:	4e76      	ldr	r6, [pc, #472]	; (405300 <_svfprintf_r+0x13d4>)
  405128:	f7ff b818 	b.w	40415c <_svfprintf_r+0x230>
  40512c:	a823      	add	r0, sp, #140	; 0x8c
  40512e:	a920      	add	r1, sp, #128	; 0x80
  405130:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405132:	9004      	str	r0, [sp, #16]
  405134:	9103      	str	r1, [sp, #12]
  405136:	a81f      	add	r0, sp, #124	; 0x7c
  405138:	2103      	movs	r1, #3
  40513a:	9002      	str	r0, [sp, #8]
  40513c:	9a08      	ldr	r2, [sp, #32]
  40513e:	9501      	str	r5, [sp, #4]
  405140:	463b      	mov	r3, r7
  405142:	9100      	str	r1, [sp, #0]
  405144:	980c      	ldr	r0, [sp, #48]	; 0x30
  405146:	f000 f9bb 	bl	4054c0 <_dtoa_r>
  40514a:	4606      	mov	r6, r0
  40514c:	1944      	adds	r4, r0, r5
  40514e:	e72b      	b.n	404fa8 <_svfprintf_r+0x107c>
  405150:	2306      	movs	r3, #6
  405152:	930a      	str	r3, [sp, #40]	; 0x28
  405154:	e61d      	b.n	404d92 <_svfprintf_r+0xe66>
  405156:	272d      	movs	r7, #45	; 0x2d
  405158:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40515c:	f7ff bace 	b.w	4046fc <_svfprintf_r+0x7d0>
  405160:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405162:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405164:	4413      	add	r3, r2
  405166:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405168:	930e      	str	r3, [sp, #56]	; 0x38
  40516a:	2a00      	cmp	r2, #0
  40516c:	f340 80aa 	ble.w	4052c4 <_svfprintf_r+0x1398>
  405170:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405174:	9308      	str	r3, [sp, #32]
  405176:	2367      	movs	r3, #103	; 0x67
  405178:	9311      	str	r3, [sp, #68]	; 0x44
  40517a:	e671      	b.n	404e60 <_svfprintf_r+0xf34>
  40517c:	2b00      	cmp	r3, #0
  40517e:	f340 80b2 	ble.w	4052e6 <_svfprintf_r+0x13ba>
  405182:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405184:	2a00      	cmp	r2, #0
  405186:	f040 8093 	bne.w	4052b0 <_svfprintf_r+0x1384>
  40518a:	f01b 0f01 	tst.w	fp, #1
  40518e:	f040 808f 	bne.w	4052b0 <_svfprintf_r+0x1384>
  405192:	9308      	str	r3, [sp, #32]
  405194:	930e      	str	r3, [sp, #56]	; 0x38
  405196:	e663      	b.n	404e60 <_svfprintf_r+0xf34>
  405198:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40519a:	9308      	str	r3, [sp, #32]
  40519c:	930e      	str	r3, [sp, #56]	; 0x38
  40519e:	900a      	str	r0, [sp, #40]	; 0x28
  4051a0:	950f      	str	r5, [sp, #60]	; 0x3c
  4051a2:	f8cd b01c 	str.w	fp, [sp, #28]
  4051a6:	9012      	str	r0, [sp, #72]	; 0x48
  4051a8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4051ac:	f7fe bfd6 	b.w	40415c <_svfprintf_r+0x230>
  4051b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4051b2:	2b47      	cmp	r3, #71	; 0x47
  4051b4:	f47f ae20 	bne.w	404df8 <_svfprintf_r+0xecc>
  4051b8:	f01b 0f01 	tst.w	fp, #1
  4051bc:	f47f aeee 	bne.w	404f9c <_svfprintf_r+0x1070>
  4051c0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4051c2:	1b9b      	subs	r3, r3, r6
  4051c4:	9313      	str	r3, [sp, #76]	; 0x4c
  4051c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4051c8:	2b47      	cmp	r3, #71	; 0x47
  4051ca:	f43f af18 	beq.w	404ffe <_svfprintf_r+0x10d2>
  4051ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4051d0:	9312      	str	r3, [sp, #72]	; 0x48
  4051d2:	e721      	b.n	405018 <_svfprintf_r+0x10ec>
  4051d4:	424f      	negs	r7, r1
  4051d6:	3110      	adds	r1, #16
  4051d8:	4d4a      	ldr	r5, [pc, #296]	; (405304 <_svfprintf_r+0x13d8>)
  4051da:	da2f      	bge.n	40523c <_svfprintf_r+0x1310>
  4051dc:	2410      	movs	r4, #16
  4051de:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4051e2:	e004      	b.n	4051ee <_svfprintf_r+0x12c2>
  4051e4:	f108 0808 	add.w	r8, r8, #8
  4051e8:	3f10      	subs	r7, #16
  4051ea:	2f10      	cmp	r7, #16
  4051ec:	dd26      	ble.n	40523c <_svfprintf_r+0x1310>
  4051ee:	3301      	adds	r3, #1
  4051f0:	3210      	adds	r2, #16
  4051f2:	2b07      	cmp	r3, #7
  4051f4:	9227      	str	r2, [sp, #156]	; 0x9c
  4051f6:	9326      	str	r3, [sp, #152]	; 0x98
  4051f8:	f8c8 5000 	str.w	r5, [r8]
  4051fc:	f8c8 4004 	str.w	r4, [r8, #4]
  405200:	ddf0      	ble.n	4051e4 <_svfprintf_r+0x12b8>
  405202:	aa25      	add	r2, sp, #148	; 0x94
  405204:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405206:	4658      	mov	r0, fp
  405208:	f002 f888 	bl	40731c <__ssprint_r>
  40520c:	2800      	cmp	r0, #0
  40520e:	f47e af5f 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  405212:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405214:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405216:	46c8      	mov	r8, r9
  405218:	e7e6      	b.n	4051e8 <_svfprintf_r+0x12bc>
  40521a:	aa25      	add	r2, sp, #148	; 0x94
  40521c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40521e:	980c      	ldr	r0, [sp, #48]	; 0x30
  405220:	f002 f87c 	bl	40731c <__ssprint_r>
  405224:	2800      	cmp	r0, #0
  405226:	f47e af53 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  40522a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40522c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40522e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405230:	46c8      	mov	r8, r9
  405232:	e667      	b.n	404f04 <_svfprintf_r+0xfd8>
  405234:	2000      	movs	r0, #0
  405236:	900a      	str	r0, [sp, #40]	; 0x28
  405238:	f7fe bed2 	b.w	403fe0 <_svfprintf_r+0xb4>
  40523c:	3301      	adds	r3, #1
  40523e:	443a      	add	r2, r7
  405240:	2b07      	cmp	r3, #7
  405242:	e888 00a0 	stmia.w	r8, {r5, r7}
  405246:	9227      	str	r2, [sp, #156]	; 0x9c
  405248:	9326      	str	r3, [sp, #152]	; 0x98
  40524a:	f108 0808 	add.w	r8, r8, #8
  40524e:	f77f ae5c 	ble.w	404f0a <_svfprintf_r+0xfde>
  405252:	aa25      	add	r2, sp, #148	; 0x94
  405254:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405256:	980c      	ldr	r0, [sp, #48]	; 0x30
  405258:	f002 f860 	bl	40731c <__ssprint_r>
  40525c:	2800      	cmp	r0, #0
  40525e:	f47e af37 	bne.w	4040d0 <_svfprintf_r+0x1a4>
  405262:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405264:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405266:	46c8      	mov	r8, r9
  405268:	e64f      	b.n	404f0a <_svfprintf_r+0xfde>
  40526a:	3330      	adds	r3, #48	; 0x30
  40526c:	2230      	movs	r2, #48	; 0x30
  40526e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  405272:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  405276:	ab22      	add	r3, sp, #136	; 0x88
  405278:	e70f      	b.n	40509a <_svfprintf_r+0x116e>
  40527a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40527c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40527e:	4413      	add	r3, r2
  405280:	930e      	str	r3, [sp, #56]	; 0x38
  405282:	e775      	b.n	405170 <_svfprintf_r+0x1244>
  405284:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405286:	e5cb      	b.n	404e20 <_svfprintf_r+0xef4>
  405288:	4e1f      	ldr	r6, [pc, #124]	; (405308 <_svfprintf_r+0x13dc>)
  40528a:	4b20      	ldr	r3, [pc, #128]	; (40530c <_svfprintf_r+0x13e0>)
  40528c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405290:	f7ff ba36 	b.w	404700 <_svfprintf_r+0x7d4>
  405294:	9a16      	ldr	r2, [sp, #88]	; 0x58
  405296:	9808      	ldr	r0, [sp, #32]
  405298:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40529a:	4639      	mov	r1, r7
  40529c:	f003 f8c2 	bl	408424 <__aeabi_dcmpeq>
  4052a0:	2800      	cmp	r0, #0
  4052a2:	f47f ae85 	bne.w	404fb0 <_svfprintf_r+0x1084>
  4052a6:	f1c5 0501 	rsb	r5, r5, #1
  4052aa:	951f      	str	r5, [sp, #124]	; 0x7c
  4052ac:	442c      	add	r4, r5
  4052ae:	e5a4      	b.n	404dfa <_svfprintf_r+0xece>
  4052b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4052b2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4052b4:	4413      	add	r3, r2
  4052b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4052b8:	441a      	add	r2, r3
  4052ba:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4052be:	920e      	str	r2, [sp, #56]	; 0x38
  4052c0:	9308      	str	r3, [sp, #32]
  4052c2:	e5cd      	b.n	404e60 <_svfprintf_r+0xf34>
  4052c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4052c6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4052c8:	f1c3 0301 	rsb	r3, r3, #1
  4052cc:	441a      	add	r2, r3
  4052ce:	4613      	mov	r3, r2
  4052d0:	e7d6      	b.n	405280 <_svfprintf_r+0x1354>
  4052d2:	f01b 0301 	ands.w	r3, fp, #1
  4052d6:	9312      	str	r3, [sp, #72]	; 0x48
  4052d8:	f47f aee8 	bne.w	4050ac <_svfprintf_r+0x1180>
  4052dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4052de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4052e2:	9308      	str	r3, [sp, #32]
  4052e4:	e5bc      	b.n	404e60 <_svfprintf_r+0xf34>
  4052e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4052e8:	b913      	cbnz	r3, 4052f0 <_svfprintf_r+0x13c4>
  4052ea:	f01b 0f01 	tst.w	fp, #1
  4052ee:	d002      	beq.n	4052f6 <_svfprintf_r+0x13ca>
  4052f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4052f2:	3301      	adds	r3, #1
  4052f4:	e7df      	b.n	4052b6 <_svfprintf_r+0x138a>
  4052f6:	2301      	movs	r3, #1
  4052f8:	e74b      	b.n	405192 <_svfprintf_r+0x1266>
  4052fa:	bf00      	nop
  4052fc:	66666667 	.word	0x66666667
  405300:	004092c0 	.word	0x004092c0
  405304:	004092dc 	.word	0x004092dc
  405308:	00409294 	.word	0x00409294
  40530c:	00409290 	.word	0x00409290
  405310:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405312:	f89a 3001 	ldrb.w	r3, [sl, #1]
  405316:	6828      	ldr	r0, [r5, #0]
  405318:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40531c:	900a      	str	r0, [sp, #40]	; 0x28
  40531e:	4628      	mov	r0, r5
  405320:	3004      	adds	r0, #4
  405322:	46a2      	mov	sl, r4
  405324:	900f      	str	r0, [sp, #60]	; 0x3c
  405326:	f7fe be59 	b.w	403fdc <_svfprintf_r+0xb0>
  40532a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40532e:	f7ff b86f 	b.w	404410 <_svfprintf_r+0x4e4>
  405332:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405336:	f7ff ba1c 	b.w	404772 <_svfprintf_r+0x846>
  40533a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40533e:	e6ac      	b.n	40509a <_svfprintf_r+0x116e>
  405340:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405344:	f7ff b8f3 	b.w	40452e <_svfprintf_r+0x602>
  405348:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40534a:	230c      	movs	r3, #12
  40534c:	6013      	str	r3, [r2, #0]
  40534e:	f04f 33ff 	mov.w	r3, #4294967295
  405352:	9309      	str	r3, [sp, #36]	; 0x24
  405354:	f7fe bec5 	b.w	4040e2 <_svfprintf_r+0x1b6>
  405358:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40535c:	f7ff b9a2 	b.w	4046a4 <_svfprintf_r+0x778>
  405360:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405364:	f7ff b97e 	b.w	404664 <_svfprintf_r+0x738>
  405368:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40536c:	f7ff b961 	b.w	404632 <_svfprintf_r+0x706>
  405370:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405374:	f7ff b91a 	b.w	4045ac <_svfprintf_r+0x680>

00405378 <register_fini>:
  405378:	4b02      	ldr	r3, [pc, #8]	; (405384 <register_fini+0xc>)
  40537a:	b113      	cbz	r3, 405382 <register_fini+0xa>
  40537c:	4802      	ldr	r0, [pc, #8]	; (405388 <register_fini+0x10>)
  40537e:	f000 b805 	b.w	40538c <atexit>
  405382:	4770      	bx	lr
  405384:	00000000 	.word	0x00000000
  405388:	00406315 	.word	0x00406315

0040538c <atexit>:
  40538c:	2300      	movs	r3, #0
  40538e:	4601      	mov	r1, r0
  405390:	461a      	mov	r2, r3
  405392:	4618      	mov	r0, r3
  405394:	f002 b840 	b.w	407418 <__register_exitproc>

00405398 <quorem>:
  405398:	6902      	ldr	r2, [r0, #16]
  40539a:	690b      	ldr	r3, [r1, #16]
  40539c:	4293      	cmp	r3, r2
  40539e:	f300 808d 	bgt.w	4054bc <quorem+0x124>
  4053a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053a6:	f103 38ff 	add.w	r8, r3, #4294967295
  4053aa:	f101 0714 	add.w	r7, r1, #20
  4053ae:	f100 0b14 	add.w	fp, r0, #20
  4053b2:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4053b6:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4053ba:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4053be:	b083      	sub	sp, #12
  4053c0:	3201      	adds	r2, #1
  4053c2:	fbb3 f9f2 	udiv	r9, r3, r2
  4053c6:	eb0b 0304 	add.w	r3, fp, r4
  4053ca:	9400      	str	r4, [sp, #0]
  4053cc:	eb07 0a04 	add.w	sl, r7, r4
  4053d0:	9301      	str	r3, [sp, #4]
  4053d2:	f1b9 0f00 	cmp.w	r9, #0
  4053d6:	d039      	beq.n	40544c <quorem+0xb4>
  4053d8:	2500      	movs	r5, #0
  4053da:	462e      	mov	r6, r5
  4053dc:	46bc      	mov	ip, r7
  4053de:	46de      	mov	lr, fp
  4053e0:	f85c 4b04 	ldr.w	r4, [ip], #4
  4053e4:	f8de 3000 	ldr.w	r3, [lr]
  4053e8:	b2a2      	uxth	r2, r4
  4053ea:	fb09 5502 	mla	r5, r9, r2, r5
  4053ee:	0c22      	lsrs	r2, r4, #16
  4053f0:	0c2c      	lsrs	r4, r5, #16
  4053f2:	fb09 4202 	mla	r2, r9, r2, r4
  4053f6:	b2ad      	uxth	r5, r5
  4053f8:	1b75      	subs	r5, r6, r5
  4053fa:	b296      	uxth	r6, r2
  4053fc:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  405400:	fa15 f383 	uxtah	r3, r5, r3
  405404:	eb06 4623 	add.w	r6, r6, r3, asr #16
  405408:	b29b      	uxth	r3, r3
  40540a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40540e:	45e2      	cmp	sl, ip
  405410:	ea4f 4512 	mov.w	r5, r2, lsr #16
  405414:	f84e 3b04 	str.w	r3, [lr], #4
  405418:	ea4f 4626 	mov.w	r6, r6, asr #16
  40541c:	d2e0      	bcs.n	4053e0 <quorem+0x48>
  40541e:	9b00      	ldr	r3, [sp, #0]
  405420:	f85b 3003 	ldr.w	r3, [fp, r3]
  405424:	b993      	cbnz	r3, 40544c <quorem+0xb4>
  405426:	9c01      	ldr	r4, [sp, #4]
  405428:	1f23      	subs	r3, r4, #4
  40542a:	459b      	cmp	fp, r3
  40542c:	d20c      	bcs.n	405448 <quorem+0xb0>
  40542e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405432:	b94b      	cbnz	r3, 405448 <quorem+0xb0>
  405434:	f1a4 0308 	sub.w	r3, r4, #8
  405438:	e002      	b.n	405440 <quorem+0xa8>
  40543a:	681a      	ldr	r2, [r3, #0]
  40543c:	3b04      	subs	r3, #4
  40543e:	b91a      	cbnz	r2, 405448 <quorem+0xb0>
  405440:	459b      	cmp	fp, r3
  405442:	f108 38ff 	add.w	r8, r8, #4294967295
  405446:	d3f8      	bcc.n	40543a <quorem+0xa2>
  405448:	f8c0 8010 	str.w	r8, [r0, #16]
  40544c:	4604      	mov	r4, r0
  40544e:	f001 fd5b 	bl	406f08 <__mcmp>
  405452:	2800      	cmp	r0, #0
  405454:	db2e      	blt.n	4054b4 <quorem+0x11c>
  405456:	f109 0901 	add.w	r9, r9, #1
  40545a:	465d      	mov	r5, fp
  40545c:	2300      	movs	r3, #0
  40545e:	f857 1b04 	ldr.w	r1, [r7], #4
  405462:	6828      	ldr	r0, [r5, #0]
  405464:	b28a      	uxth	r2, r1
  405466:	1a9a      	subs	r2, r3, r2
  405468:	0c0b      	lsrs	r3, r1, #16
  40546a:	fa12 f280 	uxtah	r2, r2, r0
  40546e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  405472:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405476:	b292      	uxth	r2, r2
  405478:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40547c:	45ba      	cmp	sl, r7
  40547e:	f845 2b04 	str.w	r2, [r5], #4
  405482:	ea4f 4323 	mov.w	r3, r3, asr #16
  405486:	d2ea      	bcs.n	40545e <quorem+0xc6>
  405488:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40548c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  405490:	b982      	cbnz	r2, 4054b4 <quorem+0x11c>
  405492:	1f1a      	subs	r2, r3, #4
  405494:	4593      	cmp	fp, r2
  405496:	d20b      	bcs.n	4054b0 <quorem+0x118>
  405498:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40549c:	b942      	cbnz	r2, 4054b0 <quorem+0x118>
  40549e:	3b08      	subs	r3, #8
  4054a0:	e002      	b.n	4054a8 <quorem+0x110>
  4054a2:	681a      	ldr	r2, [r3, #0]
  4054a4:	3b04      	subs	r3, #4
  4054a6:	b91a      	cbnz	r2, 4054b0 <quorem+0x118>
  4054a8:	459b      	cmp	fp, r3
  4054aa:	f108 38ff 	add.w	r8, r8, #4294967295
  4054ae:	d3f8      	bcc.n	4054a2 <quorem+0x10a>
  4054b0:	f8c4 8010 	str.w	r8, [r4, #16]
  4054b4:	4648      	mov	r0, r9
  4054b6:	b003      	add	sp, #12
  4054b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054bc:	2000      	movs	r0, #0
  4054be:	4770      	bx	lr

004054c0 <_dtoa_r>:
  4054c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4054c4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4054c6:	b09b      	sub	sp, #108	; 0x6c
  4054c8:	4604      	mov	r4, r0
  4054ca:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4054cc:	4692      	mov	sl, r2
  4054ce:	469b      	mov	fp, r3
  4054d0:	b141      	cbz	r1, 4054e4 <_dtoa_r+0x24>
  4054d2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4054d4:	604a      	str	r2, [r1, #4]
  4054d6:	2301      	movs	r3, #1
  4054d8:	4093      	lsls	r3, r2
  4054da:	608b      	str	r3, [r1, #8]
  4054dc:	f001 fb3c 	bl	406b58 <_Bfree>
  4054e0:	2300      	movs	r3, #0
  4054e2:	6423      	str	r3, [r4, #64]	; 0x40
  4054e4:	f1bb 0f00 	cmp.w	fp, #0
  4054e8:	465d      	mov	r5, fp
  4054ea:	db35      	blt.n	405558 <_dtoa_r+0x98>
  4054ec:	2300      	movs	r3, #0
  4054ee:	6033      	str	r3, [r6, #0]
  4054f0:	4b9d      	ldr	r3, [pc, #628]	; (405768 <_dtoa_r+0x2a8>)
  4054f2:	43ab      	bics	r3, r5
  4054f4:	d015      	beq.n	405522 <_dtoa_r+0x62>
  4054f6:	4650      	mov	r0, sl
  4054f8:	4659      	mov	r1, fp
  4054fa:	2200      	movs	r2, #0
  4054fc:	2300      	movs	r3, #0
  4054fe:	f002 ff91 	bl	408424 <__aeabi_dcmpeq>
  405502:	4680      	mov	r8, r0
  405504:	2800      	cmp	r0, #0
  405506:	d02d      	beq.n	405564 <_dtoa_r+0xa4>
  405508:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40550a:	2301      	movs	r3, #1
  40550c:	6013      	str	r3, [r2, #0]
  40550e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405510:	2b00      	cmp	r3, #0
  405512:	f000 80bd 	beq.w	405690 <_dtoa_r+0x1d0>
  405516:	4895      	ldr	r0, [pc, #596]	; (40576c <_dtoa_r+0x2ac>)
  405518:	6018      	str	r0, [r3, #0]
  40551a:	3801      	subs	r0, #1
  40551c:	b01b      	add	sp, #108	; 0x6c
  40551e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405522:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405524:	f242 730f 	movw	r3, #9999	; 0x270f
  405528:	6013      	str	r3, [r2, #0]
  40552a:	f1ba 0f00 	cmp.w	sl, #0
  40552e:	d10d      	bne.n	40554c <_dtoa_r+0x8c>
  405530:	f3c5 0513 	ubfx	r5, r5, #0, #20
  405534:	b955      	cbnz	r5, 40554c <_dtoa_r+0x8c>
  405536:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405538:	488d      	ldr	r0, [pc, #564]	; (405770 <_dtoa_r+0x2b0>)
  40553a:	2b00      	cmp	r3, #0
  40553c:	d0ee      	beq.n	40551c <_dtoa_r+0x5c>
  40553e:	f100 0308 	add.w	r3, r0, #8
  405542:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  405544:	6013      	str	r3, [r2, #0]
  405546:	b01b      	add	sp, #108	; 0x6c
  405548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40554c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40554e:	4889      	ldr	r0, [pc, #548]	; (405774 <_dtoa_r+0x2b4>)
  405550:	2b00      	cmp	r3, #0
  405552:	d0e3      	beq.n	40551c <_dtoa_r+0x5c>
  405554:	1cc3      	adds	r3, r0, #3
  405556:	e7f4      	b.n	405542 <_dtoa_r+0x82>
  405558:	2301      	movs	r3, #1
  40555a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40555e:	6033      	str	r3, [r6, #0]
  405560:	46ab      	mov	fp, r5
  405562:	e7c5      	b.n	4054f0 <_dtoa_r+0x30>
  405564:	aa18      	add	r2, sp, #96	; 0x60
  405566:	ab19      	add	r3, sp, #100	; 0x64
  405568:	9201      	str	r2, [sp, #4]
  40556a:	9300      	str	r3, [sp, #0]
  40556c:	4652      	mov	r2, sl
  40556e:	465b      	mov	r3, fp
  405570:	4620      	mov	r0, r4
  405572:	f001 fd69 	bl	407048 <__d2b>
  405576:	0d2b      	lsrs	r3, r5, #20
  405578:	4681      	mov	r9, r0
  40557a:	d071      	beq.n	405660 <_dtoa_r+0x1a0>
  40557c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  405580:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  405584:	9f18      	ldr	r7, [sp, #96]	; 0x60
  405586:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40558a:	4650      	mov	r0, sl
  40558c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  405590:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  405594:	2200      	movs	r2, #0
  405596:	4b78      	ldr	r3, [pc, #480]	; (405778 <_dtoa_r+0x2b8>)
  405598:	f002 fb28 	bl	407bec <__aeabi_dsub>
  40559c:	a36c      	add	r3, pc, #432	; (adr r3, 405750 <_dtoa_r+0x290>)
  40559e:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055a2:	f002 fcd7 	bl	407f54 <__aeabi_dmul>
  4055a6:	a36c      	add	r3, pc, #432	; (adr r3, 405758 <_dtoa_r+0x298>)
  4055a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055ac:	f002 fb20 	bl	407bf0 <__adddf3>
  4055b0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4055b4:	4630      	mov	r0, r6
  4055b6:	f002 fc67 	bl	407e88 <__aeabi_i2d>
  4055ba:	a369      	add	r3, pc, #420	; (adr r3, 405760 <_dtoa_r+0x2a0>)
  4055bc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055c0:	f002 fcc8 	bl	407f54 <__aeabi_dmul>
  4055c4:	4602      	mov	r2, r0
  4055c6:	460b      	mov	r3, r1
  4055c8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4055cc:	f002 fb10 	bl	407bf0 <__adddf3>
  4055d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4055d4:	f002 ff6e 	bl	4084b4 <__aeabi_d2iz>
  4055d8:	2200      	movs	r2, #0
  4055da:	9002      	str	r0, [sp, #8]
  4055dc:	2300      	movs	r3, #0
  4055de:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4055e2:	f002 ff29 	bl	408438 <__aeabi_dcmplt>
  4055e6:	2800      	cmp	r0, #0
  4055e8:	f040 8173 	bne.w	4058d2 <_dtoa_r+0x412>
  4055ec:	9d02      	ldr	r5, [sp, #8]
  4055ee:	2d16      	cmp	r5, #22
  4055f0:	f200 815d 	bhi.w	4058ae <_dtoa_r+0x3ee>
  4055f4:	4b61      	ldr	r3, [pc, #388]	; (40577c <_dtoa_r+0x2bc>)
  4055f6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4055fa:	e9d3 0100 	ldrd	r0, r1, [r3]
  4055fe:	4652      	mov	r2, sl
  405600:	465b      	mov	r3, fp
  405602:	f002 ff37 	bl	408474 <__aeabi_dcmpgt>
  405606:	2800      	cmp	r0, #0
  405608:	f000 81c5 	beq.w	405996 <_dtoa_r+0x4d6>
  40560c:	1e6b      	subs	r3, r5, #1
  40560e:	9302      	str	r3, [sp, #8]
  405610:	2300      	movs	r3, #0
  405612:	930e      	str	r3, [sp, #56]	; 0x38
  405614:	1bbf      	subs	r7, r7, r6
  405616:	1e7b      	subs	r3, r7, #1
  405618:	9306      	str	r3, [sp, #24]
  40561a:	f100 8154 	bmi.w	4058c6 <_dtoa_r+0x406>
  40561e:	2300      	movs	r3, #0
  405620:	9308      	str	r3, [sp, #32]
  405622:	9b02      	ldr	r3, [sp, #8]
  405624:	2b00      	cmp	r3, #0
  405626:	f2c0 8145 	blt.w	4058b4 <_dtoa_r+0x3f4>
  40562a:	9a06      	ldr	r2, [sp, #24]
  40562c:	930d      	str	r3, [sp, #52]	; 0x34
  40562e:	4611      	mov	r1, r2
  405630:	4419      	add	r1, r3
  405632:	2300      	movs	r3, #0
  405634:	9106      	str	r1, [sp, #24]
  405636:	930c      	str	r3, [sp, #48]	; 0x30
  405638:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40563a:	2b09      	cmp	r3, #9
  40563c:	d82a      	bhi.n	405694 <_dtoa_r+0x1d4>
  40563e:	2b05      	cmp	r3, #5
  405640:	f340 865b 	ble.w	4062fa <_dtoa_r+0xe3a>
  405644:	3b04      	subs	r3, #4
  405646:	9324      	str	r3, [sp, #144]	; 0x90
  405648:	2500      	movs	r5, #0
  40564a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40564c:	3b02      	subs	r3, #2
  40564e:	2b03      	cmp	r3, #3
  405650:	f200 8642 	bhi.w	4062d8 <_dtoa_r+0xe18>
  405654:	e8df f013 	tbh	[pc, r3, lsl #1]
  405658:	02c903d4 	.word	0x02c903d4
  40565c:	046103df 	.word	0x046103df
  405660:	9f18      	ldr	r7, [sp, #96]	; 0x60
  405662:	9e19      	ldr	r6, [sp, #100]	; 0x64
  405664:	443e      	add	r6, r7
  405666:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40566a:	2b20      	cmp	r3, #32
  40566c:	f340 818e 	ble.w	40598c <_dtoa_r+0x4cc>
  405670:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  405674:	f206 4012 	addw	r0, r6, #1042	; 0x412
  405678:	409d      	lsls	r5, r3
  40567a:	fa2a f000 	lsr.w	r0, sl, r0
  40567e:	4328      	orrs	r0, r5
  405680:	f002 fbf2 	bl	407e68 <__aeabi_ui2d>
  405684:	2301      	movs	r3, #1
  405686:	3e01      	subs	r6, #1
  405688:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40568c:	9314      	str	r3, [sp, #80]	; 0x50
  40568e:	e781      	b.n	405594 <_dtoa_r+0xd4>
  405690:	483b      	ldr	r0, [pc, #236]	; (405780 <_dtoa_r+0x2c0>)
  405692:	e743      	b.n	40551c <_dtoa_r+0x5c>
  405694:	2100      	movs	r1, #0
  405696:	6461      	str	r1, [r4, #68]	; 0x44
  405698:	4620      	mov	r0, r4
  40569a:	9125      	str	r1, [sp, #148]	; 0x94
  40569c:	f001 fa36 	bl	406b0c <_Balloc>
  4056a0:	f04f 33ff 	mov.w	r3, #4294967295
  4056a4:	930a      	str	r3, [sp, #40]	; 0x28
  4056a6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4056a8:	930f      	str	r3, [sp, #60]	; 0x3c
  4056aa:	2301      	movs	r3, #1
  4056ac:	9004      	str	r0, [sp, #16]
  4056ae:	6420      	str	r0, [r4, #64]	; 0x40
  4056b0:	9224      	str	r2, [sp, #144]	; 0x90
  4056b2:	930b      	str	r3, [sp, #44]	; 0x2c
  4056b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4056b6:	2b00      	cmp	r3, #0
  4056b8:	f2c0 80d9 	blt.w	40586e <_dtoa_r+0x3ae>
  4056bc:	9a02      	ldr	r2, [sp, #8]
  4056be:	2a0e      	cmp	r2, #14
  4056c0:	f300 80d5 	bgt.w	40586e <_dtoa_r+0x3ae>
  4056c4:	4b2d      	ldr	r3, [pc, #180]	; (40577c <_dtoa_r+0x2bc>)
  4056c6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4056ca:	e9d3 2300 	ldrd	r2, r3, [r3]
  4056ce:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4056d2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4056d4:	2b00      	cmp	r3, #0
  4056d6:	f2c0 83ba 	blt.w	405e4e <_dtoa_r+0x98e>
  4056da:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4056de:	4650      	mov	r0, sl
  4056e0:	462a      	mov	r2, r5
  4056e2:	4633      	mov	r3, r6
  4056e4:	4659      	mov	r1, fp
  4056e6:	f002 fd5f 	bl	4081a8 <__aeabi_ddiv>
  4056ea:	f002 fee3 	bl	4084b4 <__aeabi_d2iz>
  4056ee:	4680      	mov	r8, r0
  4056f0:	f002 fbca 	bl	407e88 <__aeabi_i2d>
  4056f4:	462a      	mov	r2, r5
  4056f6:	4633      	mov	r3, r6
  4056f8:	f002 fc2c 	bl	407f54 <__aeabi_dmul>
  4056fc:	460b      	mov	r3, r1
  4056fe:	4602      	mov	r2, r0
  405700:	4659      	mov	r1, fp
  405702:	4650      	mov	r0, sl
  405704:	f002 fa72 	bl	407bec <__aeabi_dsub>
  405708:	9d04      	ldr	r5, [sp, #16]
  40570a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40570e:	702b      	strb	r3, [r5, #0]
  405710:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405712:	2b01      	cmp	r3, #1
  405714:	4606      	mov	r6, r0
  405716:	460f      	mov	r7, r1
  405718:	f105 0501 	add.w	r5, r5, #1
  40571c:	d068      	beq.n	4057f0 <_dtoa_r+0x330>
  40571e:	2200      	movs	r2, #0
  405720:	4b18      	ldr	r3, [pc, #96]	; (405784 <_dtoa_r+0x2c4>)
  405722:	f002 fc17 	bl	407f54 <__aeabi_dmul>
  405726:	2200      	movs	r2, #0
  405728:	2300      	movs	r3, #0
  40572a:	4606      	mov	r6, r0
  40572c:	460f      	mov	r7, r1
  40572e:	f002 fe79 	bl	408424 <__aeabi_dcmpeq>
  405732:	2800      	cmp	r0, #0
  405734:	f040 8088 	bne.w	405848 <_dtoa_r+0x388>
  405738:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40573c:	f04f 0a00 	mov.w	sl, #0
  405740:	f8df b040 	ldr.w	fp, [pc, #64]	; 405784 <_dtoa_r+0x2c4>
  405744:	940c      	str	r4, [sp, #48]	; 0x30
  405746:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40574a:	e028      	b.n	40579e <_dtoa_r+0x2de>
  40574c:	f3af 8000 	nop.w
  405750:	636f4361 	.word	0x636f4361
  405754:	3fd287a7 	.word	0x3fd287a7
  405758:	8b60c8b3 	.word	0x8b60c8b3
  40575c:	3fc68a28 	.word	0x3fc68a28
  405760:	509f79fb 	.word	0x509f79fb
  405764:	3fd34413 	.word	0x3fd34413
  405768:	7ff00000 	.word	0x7ff00000
  40576c:	004092c9 	.word	0x004092c9
  405770:	004092ec 	.word	0x004092ec
  405774:	004092f8 	.word	0x004092f8
  405778:	3ff80000 	.word	0x3ff80000
  40577c:	00409328 	.word	0x00409328
  405780:	004092c8 	.word	0x004092c8
  405784:	40240000 	.word	0x40240000
  405788:	f002 fbe4 	bl	407f54 <__aeabi_dmul>
  40578c:	2200      	movs	r2, #0
  40578e:	2300      	movs	r3, #0
  405790:	4606      	mov	r6, r0
  405792:	460f      	mov	r7, r1
  405794:	f002 fe46 	bl	408424 <__aeabi_dcmpeq>
  405798:	2800      	cmp	r0, #0
  40579a:	f040 83c1 	bne.w	405f20 <_dtoa_r+0xa60>
  40579e:	4642      	mov	r2, r8
  4057a0:	464b      	mov	r3, r9
  4057a2:	4630      	mov	r0, r6
  4057a4:	4639      	mov	r1, r7
  4057a6:	f002 fcff 	bl	4081a8 <__aeabi_ddiv>
  4057aa:	f002 fe83 	bl	4084b4 <__aeabi_d2iz>
  4057ae:	4604      	mov	r4, r0
  4057b0:	f002 fb6a 	bl	407e88 <__aeabi_i2d>
  4057b4:	4642      	mov	r2, r8
  4057b6:	464b      	mov	r3, r9
  4057b8:	f002 fbcc 	bl	407f54 <__aeabi_dmul>
  4057bc:	4602      	mov	r2, r0
  4057be:	460b      	mov	r3, r1
  4057c0:	4630      	mov	r0, r6
  4057c2:	4639      	mov	r1, r7
  4057c4:	f002 fa12 	bl	407bec <__aeabi_dsub>
  4057c8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4057cc:	9e04      	ldr	r6, [sp, #16]
  4057ce:	f805 eb01 	strb.w	lr, [r5], #1
  4057d2:	eba5 0e06 	sub.w	lr, r5, r6
  4057d6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4057d8:	45b6      	cmp	lr, r6
  4057da:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4057de:	4652      	mov	r2, sl
  4057e0:	465b      	mov	r3, fp
  4057e2:	d1d1      	bne.n	405788 <_dtoa_r+0x2c8>
  4057e4:	46a0      	mov	r8, r4
  4057e6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4057ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4057ec:	4606      	mov	r6, r0
  4057ee:	460f      	mov	r7, r1
  4057f0:	4632      	mov	r2, r6
  4057f2:	463b      	mov	r3, r7
  4057f4:	4630      	mov	r0, r6
  4057f6:	4639      	mov	r1, r7
  4057f8:	f002 f9fa 	bl	407bf0 <__adddf3>
  4057fc:	4606      	mov	r6, r0
  4057fe:	460f      	mov	r7, r1
  405800:	4602      	mov	r2, r0
  405802:	460b      	mov	r3, r1
  405804:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405808:	f002 fe16 	bl	408438 <__aeabi_dcmplt>
  40580c:	b948      	cbnz	r0, 405822 <_dtoa_r+0x362>
  40580e:	4632      	mov	r2, r6
  405810:	463b      	mov	r3, r7
  405812:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405816:	f002 fe05 	bl	408424 <__aeabi_dcmpeq>
  40581a:	b1a8      	cbz	r0, 405848 <_dtoa_r+0x388>
  40581c:	f018 0f01 	tst.w	r8, #1
  405820:	d012      	beq.n	405848 <_dtoa_r+0x388>
  405822:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405826:	9a04      	ldr	r2, [sp, #16]
  405828:	1e6b      	subs	r3, r5, #1
  40582a:	e004      	b.n	405836 <_dtoa_r+0x376>
  40582c:	429a      	cmp	r2, r3
  40582e:	f000 8401 	beq.w	406034 <_dtoa_r+0xb74>
  405832:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  405836:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40583a:	f103 0501 	add.w	r5, r3, #1
  40583e:	d0f5      	beq.n	40582c <_dtoa_r+0x36c>
  405840:	f108 0801 	add.w	r8, r8, #1
  405844:	f883 8000 	strb.w	r8, [r3]
  405848:	4649      	mov	r1, r9
  40584a:	4620      	mov	r0, r4
  40584c:	f001 f984 	bl	406b58 <_Bfree>
  405850:	2200      	movs	r2, #0
  405852:	9b02      	ldr	r3, [sp, #8]
  405854:	702a      	strb	r2, [r5, #0]
  405856:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405858:	3301      	adds	r3, #1
  40585a:	6013      	str	r3, [r2, #0]
  40585c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40585e:	2b00      	cmp	r3, #0
  405860:	f000 839e 	beq.w	405fa0 <_dtoa_r+0xae0>
  405864:	9804      	ldr	r0, [sp, #16]
  405866:	601d      	str	r5, [r3, #0]
  405868:	b01b      	add	sp, #108	; 0x6c
  40586a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40586e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405870:	2a00      	cmp	r2, #0
  405872:	d03e      	beq.n	4058f2 <_dtoa_r+0x432>
  405874:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405876:	2a01      	cmp	r2, #1
  405878:	f340 8311 	ble.w	405e9e <_dtoa_r+0x9de>
  40587c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40587e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405880:	1e5f      	subs	r7, r3, #1
  405882:	42ba      	cmp	r2, r7
  405884:	f2c0 838f 	blt.w	405fa6 <_dtoa_r+0xae6>
  405888:	1bd7      	subs	r7, r2, r7
  40588a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40588c:	2b00      	cmp	r3, #0
  40588e:	f2c0 848b 	blt.w	4061a8 <_dtoa_r+0xce8>
  405892:	9d08      	ldr	r5, [sp, #32]
  405894:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405896:	9a08      	ldr	r2, [sp, #32]
  405898:	441a      	add	r2, r3
  40589a:	9208      	str	r2, [sp, #32]
  40589c:	9a06      	ldr	r2, [sp, #24]
  40589e:	2101      	movs	r1, #1
  4058a0:	441a      	add	r2, r3
  4058a2:	4620      	mov	r0, r4
  4058a4:	9206      	str	r2, [sp, #24]
  4058a6:	f001 f9f1 	bl	406c8c <__i2b>
  4058aa:	4606      	mov	r6, r0
  4058ac:	e024      	b.n	4058f8 <_dtoa_r+0x438>
  4058ae:	2301      	movs	r3, #1
  4058b0:	930e      	str	r3, [sp, #56]	; 0x38
  4058b2:	e6af      	b.n	405614 <_dtoa_r+0x154>
  4058b4:	9a08      	ldr	r2, [sp, #32]
  4058b6:	9b02      	ldr	r3, [sp, #8]
  4058b8:	1ad2      	subs	r2, r2, r3
  4058ba:	425b      	negs	r3, r3
  4058bc:	930c      	str	r3, [sp, #48]	; 0x30
  4058be:	2300      	movs	r3, #0
  4058c0:	9208      	str	r2, [sp, #32]
  4058c2:	930d      	str	r3, [sp, #52]	; 0x34
  4058c4:	e6b8      	b.n	405638 <_dtoa_r+0x178>
  4058c6:	f1c7 0301 	rsb	r3, r7, #1
  4058ca:	9308      	str	r3, [sp, #32]
  4058cc:	2300      	movs	r3, #0
  4058ce:	9306      	str	r3, [sp, #24]
  4058d0:	e6a7      	b.n	405622 <_dtoa_r+0x162>
  4058d2:	9d02      	ldr	r5, [sp, #8]
  4058d4:	4628      	mov	r0, r5
  4058d6:	f002 fad7 	bl	407e88 <__aeabi_i2d>
  4058da:	4602      	mov	r2, r0
  4058dc:	460b      	mov	r3, r1
  4058de:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4058e2:	f002 fd9f 	bl	408424 <__aeabi_dcmpeq>
  4058e6:	2800      	cmp	r0, #0
  4058e8:	f47f ae80 	bne.w	4055ec <_dtoa_r+0x12c>
  4058ec:	1e6b      	subs	r3, r5, #1
  4058ee:	9302      	str	r3, [sp, #8]
  4058f0:	e67c      	b.n	4055ec <_dtoa_r+0x12c>
  4058f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4058f4:	9d08      	ldr	r5, [sp, #32]
  4058f6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4058f8:	2d00      	cmp	r5, #0
  4058fa:	dd0c      	ble.n	405916 <_dtoa_r+0x456>
  4058fc:	9906      	ldr	r1, [sp, #24]
  4058fe:	2900      	cmp	r1, #0
  405900:	460b      	mov	r3, r1
  405902:	dd08      	ble.n	405916 <_dtoa_r+0x456>
  405904:	42a9      	cmp	r1, r5
  405906:	9a08      	ldr	r2, [sp, #32]
  405908:	bfa8      	it	ge
  40590a:	462b      	movge	r3, r5
  40590c:	1ad2      	subs	r2, r2, r3
  40590e:	1aed      	subs	r5, r5, r3
  405910:	1acb      	subs	r3, r1, r3
  405912:	9208      	str	r2, [sp, #32]
  405914:	9306      	str	r3, [sp, #24]
  405916:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405918:	b1d3      	cbz	r3, 405950 <_dtoa_r+0x490>
  40591a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40591c:	2b00      	cmp	r3, #0
  40591e:	f000 82b7 	beq.w	405e90 <_dtoa_r+0x9d0>
  405922:	2f00      	cmp	r7, #0
  405924:	dd10      	ble.n	405948 <_dtoa_r+0x488>
  405926:	4631      	mov	r1, r6
  405928:	463a      	mov	r2, r7
  40592a:	4620      	mov	r0, r4
  40592c:	f001 fa4a 	bl	406dc4 <__pow5mult>
  405930:	464a      	mov	r2, r9
  405932:	4601      	mov	r1, r0
  405934:	4606      	mov	r6, r0
  405936:	4620      	mov	r0, r4
  405938:	f001 f9b2 	bl	406ca0 <__multiply>
  40593c:	4649      	mov	r1, r9
  40593e:	4680      	mov	r8, r0
  405940:	4620      	mov	r0, r4
  405942:	f001 f909 	bl	406b58 <_Bfree>
  405946:	46c1      	mov	r9, r8
  405948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40594a:	1bda      	subs	r2, r3, r7
  40594c:	f040 82a1 	bne.w	405e92 <_dtoa_r+0x9d2>
  405950:	2101      	movs	r1, #1
  405952:	4620      	mov	r0, r4
  405954:	f001 f99a 	bl	406c8c <__i2b>
  405958:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40595a:	2b00      	cmp	r3, #0
  40595c:	4680      	mov	r8, r0
  40595e:	dd1c      	ble.n	40599a <_dtoa_r+0x4da>
  405960:	4601      	mov	r1, r0
  405962:	461a      	mov	r2, r3
  405964:	4620      	mov	r0, r4
  405966:	f001 fa2d 	bl	406dc4 <__pow5mult>
  40596a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40596c:	2b01      	cmp	r3, #1
  40596e:	4680      	mov	r8, r0
  405970:	f340 8254 	ble.w	405e1c <_dtoa_r+0x95c>
  405974:	2300      	movs	r3, #0
  405976:	930c      	str	r3, [sp, #48]	; 0x30
  405978:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40597c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  405980:	6918      	ldr	r0, [r3, #16]
  405982:	f001 f933 	bl	406bec <__hi0bits>
  405986:	f1c0 0020 	rsb	r0, r0, #32
  40598a:	e010      	b.n	4059ae <_dtoa_r+0x4ee>
  40598c:	f1c3 0520 	rsb	r5, r3, #32
  405990:	fa0a f005 	lsl.w	r0, sl, r5
  405994:	e674      	b.n	405680 <_dtoa_r+0x1c0>
  405996:	900e      	str	r0, [sp, #56]	; 0x38
  405998:	e63c      	b.n	405614 <_dtoa_r+0x154>
  40599a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40599c:	2b01      	cmp	r3, #1
  40599e:	f340 8287 	ble.w	405eb0 <_dtoa_r+0x9f0>
  4059a2:	2300      	movs	r3, #0
  4059a4:	930c      	str	r3, [sp, #48]	; 0x30
  4059a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4059a8:	2001      	movs	r0, #1
  4059aa:	2b00      	cmp	r3, #0
  4059ac:	d1e4      	bne.n	405978 <_dtoa_r+0x4b8>
  4059ae:	9a06      	ldr	r2, [sp, #24]
  4059b0:	4410      	add	r0, r2
  4059b2:	f010 001f 	ands.w	r0, r0, #31
  4059b6:	f000 80a1 	beq.w	405afc <_dtoa_r+0x63c>
  4059ba:	f1c0 0320 	rsb	r3, r0, #32
  4059be:	2b04      	cmp	r3, #4
  4059c0:	f340 849e 	ble.w	406300 <_dtoa_r+0xe40>
  4059c4:	9b08      	ldr	r3, [sp, #32]
  4059c6:	f1c0 001c 	rsb	r0, r0, #28
  4059ca:	4403      	add	r3, r0
  4059cc:	9308      	str	r3, [sp, #32]
  4059ce:	4613      	mov	r3, r2
  4059d0:	4403      	add	r3, r0
  4059d2:	4405      	add	r5, r0
  4059d4:	9306      	str	r3, [sp, #24]
  4059d6:	9b08      	ldr	r3, [sp, #32]
  4059d8:	2b00      	cmp	r3, #0
  4059da:	dd05      	ble.n	4059e8 <_dtoa_r+0x528>
  4059dc:	4649      	mov	r1, r9
  4059de:	461a      	mov	r2, r3
  4059e0:	4620      	mov	r0, r4
  4059e2:	f001 fa3f 	bl	406e64 <__lshift>
  4059e6:	4681      	mov	r9, r0
  4059e8:	9b06      	ldr	r3, [sp, #24]
  4059ea:	2b00      	cmp	r3, #0
  4059ec:	dd05      	ble.n	4059fa <_dtoa_r+0x53a>
  4059ee:	4641      	mov	r1, r8
  4059f0:	461a      	mov	r2, r3
  4059f2:	4620      	mov	r0, r4
  4059f4:	f001 fa36 	bl	406e64 <__lshift>
  4059f8:	4680      	mov	r8, r0
  4059fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4059fc:	2b00      	cmp	r3, #0
  4059fe:	f040 8086 	bne.w	405b0e <_dtoa_r+0x64e>
  405a02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a04:	2b00      	cmp	r3, #0
  405a06:	f340 8266 	ble.w	405ed6 <_dtoa_r+0xa16>
  405a0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405a0c:	2b00      	cmp	r3, #0
  405a0e:	f000 8098 	beq.w	405b42 <_dtoa_r+0x682>
  405a12:	2d00      	cmp	r5, #0
  405a14:	dd05      	ble.n	405a22 <_dtoa_r+0x562>
  405a16:	4631      	mov	r1, r6
  405a18:	462a      	mov	r2, r5
  405a1a:	4620      	mov	r0, r4
  405a1c:	f001 fa22 	bl	406e64 <__lshift>
  405a20:	4606      	mov	r6, r0
  405a22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405a24:	2b00      	cmp	r3, #0
  405a26:	f040 8337 	bne.w	406098 <_dtoa_r+0xbd8>
  405a2a:	9606      	str	r6, [sp, #24]
  405a2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a2e:	9a04      	ldr	r2, [sp, #16]
  405a30:	f8dd b018 	ldr.w	fp, [sp, #24]
  405a34:	3b01      	subs	r3, #1
  405a36:	18d3      	adds	r3, r2, r3
  405a38:	930b      	str	r3, [sp, #44]	; 0x2c
  405a3a:	f00a 0301 	and.w	r3, sl, #1
  405a3e:	930c      	str	r3, [sp, #48]	; 0x30
  405a40:	4617      	mov	r7, r2
  405a42:	46c2      	mov	sl, r8
  405a44:	4651      	mov	r1, sl
  405a46:	4648      	mov	r0, r9
  405a48:	f7ff fca6 	bl	405398 <quorem>
  405a4c:	4631      	mov	r1, r6
  405a4e:	4605      	mov	r5, r0
  405a50:	4648      	mov	r0, r9
  405a52:	f001 fa59 	bl	406f08 <__mcmp>
  405a56:	465a      	mov	r2, fp
  405a58:	900a      	str	r0, [sp, #40]	; 0x28
  405a5a:	4651      	mov	r1, sl
  405a5c:	4620      	mov	r0, r4
  405a5e:	f001 fa6f 	bl	406f40 <__mdiff>
  405a62:	68c2      	ldr	r2, [r0, #12]
  405a64:	4680      	mov	r8, r0
  405a66:	f105 0330 	add.w	r3, r5, #48	; 0x30
  405a6a:	2a00      	cmp	r2, #0
  405a6c:	f040 822b 	bne.w	405ec6 <_dtoa_r+0xa06>
  405a70:	4601      	mov	r1, r0
  405a72:	4648      	mov	r0, r9
  405a74:	9308      	str	r3, [sp, #32]
  405a76:	f001 fa47 	bl	406f08 <__mcmp>
  405a7a:	4641      	mov	r1, r8
  405a7c:	9006      	str	r0, [sp, #24]
  405a7e:	4620      	mov	r0, r4
  405a80:	f001 f86a 	bl	406b58 <_Bfree>
  405a84:	9a06      	ldr	r2, [sp, #24]
  405a86:	9b08      	ldr	r3, [sp, #32]
  405a88:	b932      	cbnz	r2, 405a98 <_dtoa_r+0x5d8>
  405a8a:	9924      	ldr	r1, [sp, #144]	; 0x90
  405a8c:	b921      	cbnz	r1, 405a98 <_dtoa_r+0x5d8>
  405a8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405a90:	2a00      	cmp	r2, #0
  405a92:	f000 83ef 	beq.w	406274 <_dtoa_r+0xdb4>
  405a96:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405a98:	990a      	ldr	r1, [sp, #40]	; 0x28
  405a9a:	2900      	cmp	r1, #0
  405a9c:	f2c0 829f 	blt.w	405fde <_dtoa_r+0xb1e>
  405aa0:	d105      	bne.n	405aae <_dtoa_r+0x5ee>
  405aa2:	9924      	ldr	r1, [sp, #144]	; 0x90
  405aa4:	b919      	cbnz	r1, 405aae <_dtoa_r+0x5ee>
  405aa6:	990c      	ldr	r1, [sp, #48]	; 0x30
  405aa8:	2900      	cmp	r1, #0
  405aaa:	f000 8298 	beq.w	405fde <_dtoa_r+0xb1e>
  405aae:	2a00      	cmp	r2, #0
  405ab0:	f300 8306 	bgt.w	4060c0 <_dtoa_r+0xc00>
  405ab4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405ab6:	703b      	strb	r3, [r7, #0]
  405ab8:	f107 0801 	add.w	r8, r7, #1
  405abc:	4297      	cmp	r7, r2
  405abe:	4645      	mov	r5, r8
  405ac0:	f000 830c 	beq.w	4060dc <_dtoa_r+0xc1c>
  405ac4:	4649      	mov	r1, r9
  405ac6:	2300      	movs	r3, #0
  405ac8:	220a      	movs	r2, #10
  405aca:	4620      	mov	r0, r4
  405acc:	f001 f84e 	bl	406b6c <__multadd>
  405ad0:	455e      	cmp	r6, fp
  405ad2:	4681      	mov	r9, r0
  405ad4:	4631      	mov	r1, r6
  405ad6:	f04f 0300 	mov.w	r3, #0
  405ada:	f04f 020a 	mov.w	r2, #10
  405ade:	4620      	mov	r0, r4
  405ae0:	f000 81eb 	beq.w	405eba <_dtoa_r+0x9fa>
  405ae4:	f001 f842 	bl	406b6c <__multadd>
  405ae8:	4659      	mov	r1, fp
  405aea:	4606      	mov	r6, r0
  405aec:	2300      	movs	r3, #0
  405aee:	220a      	movs	r2, #10
  405af0:	4620      	mov	r0, r4
  405af2:	f001 f83b 	bl	406b6c <__multadd>
  405af6:	4647      	mov	r7, r8
  405af8:	4683      	mov	fp, r0
  405afa:	e7a3      	b.n	405a44 <_dtoa_r+0x584>
  405afc:	201c      	movs	r0, #28
  405afe:	9b08      	ldr	r3, [sp, #32]
  405b00:	4403      	add	r3, r0
  405b02:	9308      	str	r3, [sp, #32]
  405b04:	9b06      	ldr	r3, [sp, #24]
  405b06:	4403      	add	r3, r0
  405b08:	4405      	add	r5, r0
  405b0a:	9306      	str	r3, [sp, #24]
  405b0c:	e763      	b.n	4059d6 <_dtoa_r+0x516>
  405b0e:	4641      	mov	r1, r8
  405b10:	4648      	mov	r0, r9
  405b12:	f001 f9f9 	bl	406f08 <__mcmp>
  405b16:	2800      	cmp	r0, #0
  405b18:	f6bf af73 	bge.w	405a02 <_dtoa_r+0x542>
  405b1c:	9f02      	ldr	r7, [sp, #8]
  405b1e:	4649      	mov	r1, r9
  405b20:	2300      	movs	r3, #0
  405b22:	220a      	movs	r2, #10
  405b24:	4620      	mov	r0, r4
  405b26:	3f01      	subs	r7, #1
  405b28:	9702      	str	r7, [sp, #8]
  405b2a:	f001 f81f 	bl	406b6c <__multadd>
  405b2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405b30:	4681      	mov	r9, r0
  405b32:	2b00      	cmp	r3, #0
  405b34:	f040 83b6 	bne.w	4062a4 <_dtoa_r+0xde4>
  405b38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405b3a:	2b00      	cmp	r3, #0
  405b3c:	f340 83bf 	ble.w	4062be <_dtoa_r+0xdfe>
  405b40:	930a      	str	r3, [sp, #40]	; 0x28
  405b42:	f8dd b010 	ldr.w	fp, [sp, #16]
  405b46:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  405b48:	465d      	mov	r5, fp
  405b4a:	e002      	b.n	405b52 <_dtoa_r+0x692>
  405b4c:	f001 f80e 	bl	406b6c <__multadd>
  405b50:	4681      	mov	r9, r0
  405b52:	4641      	mov	r1, r8
  405b54:	4648      	mov	r0, r9
  405b56:	f7ff fc1f 	bl	405398 <quorem>
  405b5a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  405b5e:	f805 ab01 	strb.w	sl, [r5], #1
  405b62:	eba5 030b 	sub.w	r3, r5, fp
  405b66:	42bb      	cmp	r3, r7
  405b68:	f04f 020a 	mov.w	r2, #10
  405b6c:	f04f 0300 	mov.w	r3, #0
  405b70:	4649      	mov	r1, r9
  405b72:	4620      	mov	r0, r4
  405b74:	dbea      	blt.n	405b4c <_dtoa_r+0x68c>
  405b76:	9b04      	ldr	r3, [sp, #16]
  405b78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405b7a:	2a01      	cmp	r2, #1
  405b7c:	bfac      	ite	ge
  405b7e:	189b      	addge	r3, r3, r2
  405b80:	3301      	addlt	r3, #1
  405b82:	461d      	mov	r5, r3
  405b84:	f04f 0b00 	mov.w	fp, #0
  405b88:	4649      	mov	r1, r9
  405b8a:	2201      	movs	r2, #1
  405b8c:	4620      	mov	r0, r4
  405b8e:	f001 f969 	bl	406e64 <__lshift>
  405b92:	4641      	mov	r1, r8
  405b94:	4681      	mov	r9, r0
  405b96:	f001 f9b7 	bl	406f08 <__mcmp>
  405b9a:	2800      	cmp	r0, #0
  405b9c:	f340 823d 	ble.w	40601a <_dtoa_r+0xb5a>
  405ba0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  405ba4:	9904      	ldr	r1, [sp, #16]
  405ba6:	1e6b      	subs	r3, r5, #1
  405ba8:	e004      	b.n	405bb4 <_dtoa_r+0x6f4>
  405baa:	428b      	cmp	r3, r1
  405bac:	f000 81ae 	beq.w	405f0c <_dtoa_r+0xa4c>
  405bb0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  405bb4:	2a39      	cmp	r2, #57	; 0x39
  405bb6:	f103 0501 	add.w	r5, r3, #1
  405bba:	d0f6      	beq.n	405baa <_dtoa_r+0x6ea>
  405bbc:	3201      	adds	r2, #1
  405bbe:	701a      	strb	r2, [r3, #0]
  405bc0:	4641      	mov	r1, r8
  405bc2:	4620      	mov	r0, r4
  405bc4:	f000 ffc8 	bl	406b58 <_Bfree>
  405bc8:	2e00      	cmp	r6, #0
  405bca:	f43f ae3d 	beq.w	405848 <_dtoa_r+0x388>
  405bce:	f1bb 0f00 	cmp.w	fp, #0
  405bd2:	d005      	beq.n	405be0 <_dtoa_r+0x720>
  405bd4:	45b3      	cmp	fp, r6
  405bd6:	d003      	beq.n	405be0 <_dtoa_r+0x720>
  405bd8:	4659      	mov	r1, fp
  405bda:	4620      	mov	r0, r4
  405bdc:	f000 ffbc 	bl	406b58 <_Bfree>
  405be0:	4631      	mov	r1, r6
  405be2:	4620      	mov	r0, r4
  405be4:	f000 ffb8 	bl	406b58 <_Bfree>
  405be8:	e62e      	b.n	405848 <_dtoa_r+0x388>
  405bea:	2300      	movs	r3, #0
  405bec:	930b      	str	r3, [sp, #44]	; 0x2c
  405bee:	9b02      	ldr	r3, [sp, #8]
  405bf0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405bf2:	4413      	add	r3, r2
  405bf4:	930f      	str	r3, [sp, #60]	; 0x3c
  405bf6:	3301      	adds	r3, #1
  405bf8:	2b01      	cmp	r3, #1
  405bfa:	461f      	mov	r7, r3
  405bfc:	461e      	mov	r6, r3
  405bfe:	930a      	str	r3, [sp, #40]	; 0x28
  405c00:	bfb8      	it	lt
  405c02:	2701      	movlt	r7, #1
  405c04:	2100      	movs	r1, #0
  405c06:	2f17      	cmp	r7, #23
  405c08:	6461      	str	r1, [r4, #68]	; 0x44
  405c0a:	d90a      	bls.n	405c22 <_dtoa_r+0x762>
  405c0c:	2201      	movs	r2, #1
  405c0e:	2304      	movs	r3, #4
  405c10:	005b      	lsls	r3, r3, #1
  405c12:	f103 0014 	add.w	r0, r3, #20
  405c16:	4287      	cmp	r7, r0
  405c18:	4611      	mov	r1, r2
  405c1a:	f102 0201 	add.w	r2, r2, #1
  405c1e:	d2f7      	bcs.n	405c10 <_dtoa_r+0x750>
  405c20:	6461      	str	r1, [r4, #68]	; 0x44
  405c22:	4620      	mov	r0, r4
  405c24:	f000 ff72 	bl	406b0c <_Balloc>
  405c28:	2e0e      	cmp	r6, #14
  405c2a:	9004      	str	r0, [sp, #16]
  405c2c:	6420      	str	r0, [r4, #64]	; 0x40
  405c2e:	f63f ad41 	bhi.w	4056b4 <_dtoa_r+0x1f4>
  405c32:	2d00      	cmp	r5, #0
  405c34:	f43f ad3e 	beq.w	4056b4 <_dtoa_r+0x1f4>
  405c38:	9902      	ldr	r1, [sp, #8]
  405c3a:	2900      	cmp	r1, #0
  405c3c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  405c40:	f340 8202 	ble.w	406048 <_dtoa_r+0xb88>
  405c44:	4bb8      	ldr	r3, [pc, #736]	; (405f28 <_dtoa_r+0xa68>)
  405c46:	f001 020f 	and.w	r2, r1, #15
  405c4a:	110d      	asrs	r5, r1, #4
  405c4c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405c50:	06e9      	lsls	r1, r5, #27
  405c52:	e9d3 6700 	ldrd	r6, r7, [r3]
  405c56:	f140 81ae 	bpl.w	405fb6 <_dtoa_r+0xaf6>
  405c5a:	4bb4      	ldr	r3, [pc, #720]	; (405f2c <_dtoa_r+0xa6c>)
  405c5c:	4650      	mov	r0, sl
  405c5e:	4659      	mov	r1, fp
  405c60:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  405c64:	f002 faa0 	bl	4081a8 <__aeabi_ddiv>
  405c68:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  405c6c:	f005 050f 	and.w	r5, r5, #15
  405c70:	f04f 0a03 	mov.w	sl, #3
  405c74:	b18d      	cbz	r5, 405c9a <_dtoa_r+0x7da>
  405c76:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405f2c <_dtoa_r+0xa6c>
  405c7a:	07ea      	lsls	r2, r5, #31
  405c7c:	d509      	bpl.n	405c92 <_dtoa_r+0x7d2>
  405c7e:	4630      	mov	r0, r6
  405c80:	4639      	mov	r1, r7
  405c82:	e9d8 2300 	ldrd	r2, r3, [r8]
  405c86:	f002 f965 	bl	407f54 <__aeabi_dmul>
  405c8a:	f10a 0a01 	add.w	sl, sl, #1
  405c8e:	4606      	mov	r6, r0
  405c90:	460f      	mov	r7, r1
  405c92:	106d      	asrs	r5, r5, #1
  405c94:	f108 0808 	add.w	r8, r8, #8
  405c98:	d1ef      	bne.n	405c7a <_dtoa_r+0x7ba>
  405c9a:	463b      	mov	r3, r7
  405c9c:	4632      	mov	r2, r6
  405c9e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  405ca2:	f002 fa81 	bl	4081a8 <__aeabi_ddiv>
  405ca6:	4607      	mov	r7, r0
  405ca8:	4688      	mov	r8, r1
  405caa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405cac:	b143      	cbz	r3, 405cc0 <_dtoa_r+0x800>
  405cae:	2200      	movs	r2, #0
  405cb0:	4b9f      	ldr	r3, [pc, #636]	; (405f30 <_dtoa_r+0xa70>)
  405cb2:	4638      	mov	r0, r7
  405cb4:	4641      	mov	r1, r8
  405cb6:	f002 fbbf 	bl	408438 <__aeabi_dcmplt>
  405cba:	2800      	cmp	r0, #0
  405cbc:	f040 8286 	bne.w	4061cc <_dtoa_r+0xd0c>
  405cc0:	4650      	mov	r0, sl
  405cc2:	f002 f8e1 	bl	407e88 <__aeabi_i2d>
  405cc6:	463a      	mov	r2, r7
  405cc8:	4643      	mov	r3, r8
  405cca:	f002 f943 	bl	407f54 <__aeabi_dmul>
  405cce:	4b99      	ldr	r3, [pc, #612]	; (405f34 <_dtoa_r+0xa74>)
  405cd0:	2200      	movs	r2, #0
  405cd2:	f001 ff8d 	bl	407bf0 <__adddf3>
  405cd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405cd8:	4605      	mov	r5, r0
  405cda:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405cde:	2b00      	cmp	r3, #0
  405ce0:	f000 813e 	beq.w	405f60 <_dtoa_r+0xaa0>
  405ce4:	9b02      	ldr	r3, [sp, #8]
  405ce6:	9315      	str	r3, [sp, #84]	; 0x54
  405ce8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405cea:	9312      	str	r3, [sp, #72]	; 0x48
  405cec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405cee:	2b00      	cmp	r3, #0
  405cf0:	f000 81fa 	beq.w	4060e8 <_dtoa_r+0xc28>
  405cf4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405cf6:	4b8c      	ldr	r3, [pc, #560]	; (405f28 <_dtoa_r+0xa68>)
  405cf8:	498f      	ldr	r1, [pc, #572]	; (405f38 <_dtoa_r+0xa78>)
  405cfa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405cfe:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405d02:	2000      	movs	r0, #0
  405d04:	f002 fa50 	bl	4081a8 <__aeabi_ddiv>
  405d08:	462a      	mov	r2, r5
  405d0a:	4633      	mov	r3, r6
  405d0c:	f001 ff6e 	bl	407bec <__aeabi_dsub>
  405d10:	4682      	mov	sl, r0
  405d12:	468b      	mov	fp, r1
  405d14:	4638      	mov	r0, r7
  405d16:	4641      	mov	r1, r8
  405d18:	f002 fbcc 	bl	4084b4 <__aeabi_d2iz>
  405d1c:	4605      	mov	r5, r0
  405d1e:	f002 f8b3 	bl	407e88 <__aeabi_i2d>
  405d22:	4602      	mov	r2, r0
  405d24:	460b      	mov	r3, r1
  405d26:	4638      	mov	r0, r7
  405d28:	4641      	mov	r1, r8
  405d2a:	f001 ff5f 	bl	407bec <__aeabi_dsub>
  405d2e:	3530      	adds	r5, #48	; 0x30
  405d30:	fa5f f885 	uxtb.w	r8, r5
  405d34:	9d04      	ldr	r5, [sp, #16]
  405d36:	4606      	mov	r6, r0
  405d38:	460f      	mov	r7, r1
  405d3a:	f885 8000 	strb.w	r8, [r5]
  405d3e:	4602      	mov	r2, r0
  405d40:	460b      	mov	r3, r1
  405d42:	4650      	mov	r0, sl
  405d44:	4659      	mov	r1, fp
  405d46:	3501      	adds	r5, #1
  405d48:	f002 fb94 	bl	408474 <__aeabi_dcmpgt>
  405d4c:	2800      	cmp	r0, #0
  405d4e:	d154      	bne.n	405dfa <_dtoa_r+0x93a>
  405d50:	4632      	mov	r2, r6
  405d52:	463b      	mov	r3, r7
  405d54:	2000      	movs	r0, #0
  405d56:	4976      	ldr	r1, [pc, #472]	; (405f30 <_dtoa_r+0xa70>)
  405d58:	f001 ff48 	bl	407bec <__aeabi_dsub>
  405d5c:	4602      	mov	r2, r0
  405d5e:	460b      	mov	r3, r1
  405d60:	4650      	mov	r0, sl
  405d62:	4659      	mov	r1, fp
  405d64:	f002 fb86 	bl	408474 <__aeabi_dcmpgt>
  405d68:	2800      	cmp	r0, #0
  405d6a:	f040 8270 	bne.w	40624e <_dtoa_r+0xd8e>
  405d6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405d70:	2a01      	cmp	r2, #1
  405d72:	f000 8111 	beq.w	405f98 <_dtoa_r+0xad8>
  405d76:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405d78:	9a04      	ldr	r2, [sp, #16]
  405d7a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405d7e:	4413      	add	r3, r2
  405d80:	4699      	mov	r9, r3
  405d82:	e00d      	b.n	405da0 <_dtoa_r+0x8e0>
  405d84:	2000      	movs	r0, #0
  405d86:	496a      	ldr	r1, [pc, #424]	; (405f30 <_dtoa_r+0xa70>)
  405d88:	f001 ff30 	bl	407bec <__aeabi_dsub>
  405d8c:	4652      	mov	r2, sl
  405d8e:	465b      	mov	r3, fp
  405d90:	f002 fb52 	bl	408438 <__aeabi_dcmplt>
  405d94:	2800      	cmp	r0, #0
  405d96:	f040 8258 	bne.w	40624a <_dtoa_r+0xd8a>
  405d9a:	454d      	cmp	r5, r9
  405d9c:	f000 80fa 	beq.w	405f94 <_dtoa_r+0xad4>
  405da0:	4650      	mov	r0, sl
  405da2:	4659      	mov	r1, fp
  405da4:	2200      	movs	r2, #0
  405da6:	4b65      	ldr	r3, [pc, #404]	; (405f3c <_dtoa_r+0xa7c>)
  405da8:	f002 f8d4 	bl	407f54 <__aeabi_dmul>
  405dac:	2200      	movs	r2, #0
  405dae:	4b63      	ldr	r3, [pc, #396]	; (405f3c <_dtoa_r+0xa7c>)
  405db0:	4682      	mov	sl, r0
  405db2:	468b      	mov	fp, r1
  405db4:	4630      	mov	r0, r6
  405db6:	4639      	mov	r1, r7
  405db8:	f002 f8cc 	bl	407f54 <__aeabi_dmul>
  405dbc:	460f      	mov	r7, r1
  405dbe:	4606      	mov	r6, r0
  405dc0:	f002 fb78 	bl	4084b4 <__aeabi_d2iz>
  405dc4:	4680      	mov	r8, r0
  405dc6:	f002 f85f 	bl	407e88 <__aeabi_i2d>
  405dca:	4602      	mov	r2, r0
  405dcc:	460b      	mov	r3, r1
  405dce:	4630      	mov	r0, r6
  405dd0:	4639      	mov	r1, r7
  405dd2:	f001 ff0b 	bl	407bec <__aeabi_dsub>
  405dd6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405dda:	fa5f f888 	uxtb.w	r8, r8
  405dde:	4652      	mov	r2, sl
  405de0:	465b      	mov	r3, fp
  405de2:	f805 8b01 	strb.w	r8, [r5], #1
  405de6:	4606      	mov	r6, r0
  405de8:	460f      	mov	r7, r1
  405dea:	f002 fb25 	bl	408438 <__aeabi_dcmplt>
  405dee:	4632      	mov	r2, r6
  405df0:	463b      	mov	r3, r7
  405df2:	2800      	cmp	r0, #0
  405df4:	d0c6      	beq.n	405d84 <_dtoa_r+0x8c4>
  405df6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405dfa:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405dfc:	9302      	str	r3, [sp, #8]
  405dfe:	e523      	b.n	405848 <_dtoa_r+0x388>
  405e00:	2300      	movs	r3, #0
  405e02:	930b      	str	r3, [sp, #44]	; 0x2c
  405e04:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405e06:	2b00      	cmp	r3, #0
  405e08:	f340 80dc 	ble.w	405fc4 <_dtoa_r+0xb04>
  405e0c:	461f      	mov	r7, r3
  405e0e:	461e      	mov	r6, r3
  405e10:	930f      	str	r3, [sp, #60]	; 0x3c
  405e12:	930a      	str	r3, [sp, #40]	; 0x28
  405e14:	e6f6      	b.n	405c04 <_dtoa_r+0x744>
  405e16:	2301      	movs	r3, #1
  405e18:	930b      	str	r3, [sp, #44]	; 0x2c
  405e1a:	e7f3      	b.n	405e04 <_dtoa_r+0x944>
  405e1c:	f1ba 0f00 	cmp.w	sl, #0
  405e20:	f47f ada8 	bne.w	405974 <_dtoa_r+0x4b4>
  405e24:	f3cb 0313 	ubfx	r3, fp, #0, #20
  405e28:	2b00      	cmp	r3, #0
  405e2a:	f47f adba 	bne.w	4059a2 <_dtoa_r+0x4e2>
  405e2e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405e32:	0d3f      	lsrs	r7, r7, #20
  405e34:	053f      	lsls	r7, r7, #20
  405e36:	2f00      	cmp	r7, #0
  405e38:	f000 820d 	beq.w	406256 <_dtoa_r+0xd96>
  405e3c:	9b08      	ldr	r3, [sp, #32]
  405e3e:	3301      	adds	r3, #1
  405e40:	9308      	str	r3, [sp, #32]
  405e42:	9b06      	ldr	r3, [sp, #24]
  405e44:	3301      	adds	r3, #1
  405e46:	9306      	str	r3, [sp, #24]
  405e48:	2301      	movs	r3, #1
  405e4a:	930c      	str	r3, [sp, #48]	; 0x30
  405e4c:	e5ab      	b.n	4059a6 <_dtoa_r+0x4e6>
  405e4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405e50:	2b00      	cmp	r3, #0
  405e52:	f73f ac42 	bgt.w	4056da <_dtoa_r+0x21a>
  405e56:	f040 8221 	bne.w	40629c <_dtoa_r+0xddc>
  405e5a:	2200      	movs	r2, #0
  405e5c:	4b38      	ldr	r3, [pc, #224]	; (405f40 <_dtoa_r+0xa80>)
  405e5e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405e62:	f002 f877 	bl	407f54 <__aeabi_dmul>
  405e66:	4652      	mov	r2, sl
  405e68:	465b      	mov	r3, fp
  405e6a:	f002 faf9 	bl	408460 <__aeabi_dcmpge>
  405e6e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  405e72:	4646      	mov	r6, r8
  405e74:	2800      	cmp	r0, #0
  405e76:	d041      	beq.n	405efc <_dtoa_r+0xa3c>
  405e78:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405e7a:	9d04      	ldr	r5, [sp, #16]
  405e7c:	43db      	mvns	r3, r3
  405e7e:	9302      	str	r3, [sp, #8]
  405e80:	4641      	mov	r1, r8
  405e82:	4620      	mov	r0, r4
  405e84:	f000 fe68 	bl	406b58 <_Bfree>
  405e88:	2e00      	cmp	r6, #0
  405e8a:	f43f acdd 	beq.w	405848 <_dtoa_r+0x388>
  405e8e:	e6a7      	b.n	405be0 <_dtoa_r+0x720>
  405e90:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405e92:	4649      	mov	r1, r9
  405e94:	4620      	mov	r0, r4
  405e96:	f000 ff95 	bl	406dc4 <__pow5mult>
  405e9a:	4681      	mov	r9, r0
  405e9c:	e558      	b.n	405950 <_dtoa_r+0x490>
  405e9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405ea0:	2a00      	cmp	r2, #0
  405ea2:	f000 8187 	beq.w	4061b4 <_dtoa_r+0xcf4>
  405ea6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405eaa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405eac:	9d08      	ldr	r5, [sp, #32]
  405eae:	e4f2      	b.n	405896 <_dtoa_r+0x3d6>
  405eb0:	f1ba 0f00 	cmp.w	sl, #0
  405eb4:	f47f ad75 	bne.w	4059a2 <_dtoa_r+0x4e2>
  405eb8:	e7b4      	b.n	405e24 <_dtoa_r+0x964>
  405eba:	f000 fe57 	bl	406b6c <__multadd>
  405ebe:	4647      	mov	r7, r8
  405ec0:	4606      	mov	r6, r0
  405ec2:	4683      	mov	fp, r0
  405ec4:	e5be      	b.n	405a44 <_dtoa_r+0x584>
  405ec6:	4601      	mov	r1, r0
  405ec8:	4620      	mov	r0, r4
  405eca:	9306      	str	r3, [sp, #24]
  405ecc:	f000 fe44 	bl	406b58 <_Bfree>
  405ed0:	2201      	movs	r2, #1
  405ed2:	9b06      	ldr	r3, [sp, #24]
  405ed4:	e5e0      	b.n	405a98 <_dtoa_r+0x5d8>
  405ed6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405ed8:	2b02      	cmp	r3, #2
  405eda:	f77f ad96 	ble.w	405a0a <_dtoa_r+0x54a>
  405ede:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405ee0:	2b00      	cmp	r3, #0
  405ee2:	d1c9      	bne.n	405e78 <_dtoa_r+0x9b8>
  405ee4:	4641      	mov	r1, r8
  405ee6:	2205      	movs	r2, #5
  405ee8:	4620      	mov	r0, r4
  405eea:	f000 fe3f 	bl	406b6c <__multadd>
  405eee:	4601      	mov	r1, r0
  405ef0:	4680      	mov	r8, r0
  405ef2:	4648      	mov	r0, r9
  405ef4:	f001 f808 	bl	406f08 <__mcmp>
  405ef8:	2800      	cmp	r0, #0
  405efa:	ddbd      	ble.n	405e78 <_dtoa_r+0x9b8>
  405efc:	9a02      	ldr	r2, [sp, #8]
  405efe:	9904      	ldr	r1, [sp, #16]
  405f00:	2331      	movs	r3, #49	; 0x31
  405f02:	3201      	adds	r2, #1
  405f04:	9202      	str	r2, [sp, #8]
  405f06:	700b      	strb	r3, [r1, #0]
  405f08:	1c4d      	adds	r5, r1, #1
  405f0a:	e7b9      	b.n	405e80 <_dtoa_r+0x9c0>
  405f0c:	9a02      	ldr	r2, [sp, #8]
  405f0e:	3201      	adds	r2, #1
  405f10:	9202      	str	r2, [sp, #8]
  405f12:	9a04      	ldr	r2, [sp, #16]
  405f14:	2331      	movs	r3, #49	; 0x31
  405f16:	7013      	strb	r3, [r2, #0]
  405f18:	e652      	b.n	405bc0 <_dtoa_r+0x700>
  405f1a:	2301      	movs	r3, #1
  405f1c:	930b      	str	r3, [sp, #44]	; 0x2c
  405f1e:	e666      	b.n	405bee <_dtoa_r+0x72e>
  405f20:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  405f24:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405f26:	e48f      	b.n	405848 <_dtoa_r+0x388>
  405f28:	00409328 	.word	0x00409328
  405f2c:	00409300 	.word	0x00409300
  405f30:	3ff00000 	.word	0x3ff00000
  405f34:	401c0000 	.word	0x401c0000
  405f38:	3fe00000 	.word	0x3fe00000
  405f3c:	40240000 	.word	0x40240000
  405f40:	40140000 	.word	0x40140000
  405f44:	4650      	mov	r0, sl
  405f46:	f001 ff9f 	bl	407e88 <__aeabi_i2d>
  405f4a:	463a      	mov	r2, r7
  405f4c:	4643      	mov	r3, r8
  405f4e:	f002 f801 	bl	407f54 <__aeabi_dmul>
  405f52:	2200      	movs	r2, #0
  405f54:	4bc1      	ldr	r3, [pc, #772]	; (40625c <_dtoa_r+0xd9c>)
  405f56:	f001 fe4b 	bl	407bf0 <__adddf3>
  405f5a:	4605      	mov	r5, r0
  405f5c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405f60:	4641      	mov	r1, r8
  405f62:	2200      	movs	r2, #0
  405f64:	4bbe      	ldr	r3, [pc, #760]	; (406260 <_dtoa_r+0xda0>)
  405f66:	4638      	mov	r0, r7
  405f68:	f001 fe40 	bl	407bec <__aeabi_dsub>
  405f6c:	462a      	mov	r2, r5
  405f6e:	4633      	mov	r3, r6
  405f70:	4682      	mov	sl, r0
  405f72:	468b      	mov	fp, r1
  405f74:	f002 fa7e 	bl	408474 <__aeabi_dcmpgt>
  405f78:	4680      	mov	r8, r0
  405f7a:	2800      	cmp	r0, #0
  405f7c:	f040 8110 	bne.w	4061a0 <_dtoa_r+0xce0>
  405f80:	462a      	mov	r2, r5
  405f82:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  405f86:	4650      	mov	r0, sl
  405f88:	4659      	mov	r1, fp
  405f8a:	f002 fa55 	bl	408438 <__aeabi_dcmplt>
  405f8e:	b118      	cbz	r0, 405f98 <_dtoa_r+0xad8>
  405f90:	4646      	mov	r6, r8
  405f92:	e771      	b.n	405e78 <_dtoa_r+0x9b8>
  405f94:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405f98:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  405f9c:	f7ff bb8a 	b.w	4056b4 <_dtoa_r+0x1f4>
  405fa0:	9804      	ldr	r0, [sp, #16]
  405fa2:	f7ff babb 	b.w	40551c <_dtoa_r+0x5c>
  405fa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405fa8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405faa:	970c      	str	r7, [sp, #48]	; 0x30
  405fac:	1afb      	subs	r3, r7, r3
  405fae:	441a      	add	r2, r3
  405fb0:	920d      	str	r2, [sp, #52]	; 0x34
  405fb2:	2700      	movs	r7, #0
  405fb4:	e469      	b.n	40588a <_dtoa_r+0x3ca>
  405fb6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405fba:	f04f 0a02 	mov.w	sl, #2
  405fbe:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  405fc2:	e657      	b.n	405c74 <_dtoa_r+0x7b4>
  405fc4:	2100      	movs	r1, #0
  405fc6:	2301      	movs	r3, #1
  405fc8:	6461      	str	r1, [r4, #68]	; 0x44
  405fca:	4620      	mov	r0, r4
  405fcc:	9325      	str	r3, [sp, #148]	; 0x94
  405fce:	f000 fd9d 	bl	406b0c <_Balloc>
  405fd2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405fd4:	9004      	str	r0, [sp, #16]
  405fd6:	6420      	str	r0, [r4, #64]	; 0x40
  405fd8:	930a      	str	r3, [sp, #40]	; 0x28
  405fda:	930f      	str	r3, [sp, #60]	; 0x3c
  405fdc:	e629      	b.n	405c32 <_dtoa_r+0x772>
  405fde:	2a00      	cmp	r2, #0
  405fe0:	46d0      	mov	r8, sl
  405fe2:	f8cd b018 	str.w	fp, [sp, #24]
  405fe6:	469a      	mov	sl, r3
  405fe8:	dd11      	ble.n	40600e <_dtoa_r+0xb4e>
  405fea:	4649      	mov	r1, r9
  405fec:	2201      	movs	r2, #1
  405fee:	4620      	mov	r0, r4
  405ff0:	f000 ff38 	bl	406e64 <__lshift>
  405ff4:	4641      	mov	r1, r8
  405ff6:	4681      	mov	r9, r0
  405ff8:	f000 ff86 	bl	406f08 <__mcmp>
  405ffc:	2800      	cmp	r0, #0
  405ffe:	f340 8146 	ble.w	40628e <_dtoa_r+0xdce>
  406002:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  406006:	f000 8106 	beq.w	406216 <_dtoa_r+0xd56>
  40600a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40600e:	46b3      	mov	fp, r6
  406010:	f887 a000 	strb.w	sl, [r7]
  406014:	1c7d      	adds	r5, r7, #1
  406016:	9e06      	ldr	r6, [sp, #24]
  406018:	e5d2      	b.n	405bc0 <_dtoa_r+0x700>
  40601a:	d104      	bne.n	406026 <_dtoa_r+0xb66>
  40601c:	f01a 0f01 	tst.w	sl, #1
  406020:	d001      	beq.n	406026 <_dtoa_r+0xb66>
  406022:	e5bd      	b.n	405ba0 <_dtoa_r+0x6e0>
  406024:	4615      	mov	r5, r2
  406026:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40602a:	2b30      	cmp	r3, #48	; 0x30
  40602c:	f105 32ff 	add.w	r2, r5, #4294967295
  406030:	d0f8      	beq.n	406024 <_dtoa_r+0xb64>
  406032:	e5c5      	b.n	405bc0 <_dtoa_r+0x700>
  406034:	9904      	ldr	r1, [sp, #16]
  406036:	2230      	movs	r2, #48	; 0x30
  406038:	700a      	strb	r2, [r1, #0]
  40603a:	9a02      	ldr	r2, [sp, #8]
  40603c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406040:	3201      	adds	r2, #1
  406042:	9202      	str	r2, [sp, #8]
  406044:	f7ff bbfc 	b.w	405840 <_dtoa_r+0x380>
  406048:	f000 80bb 	beq.w	4061c2 <_dtoa_r+0xd02>
  40604c:	9b02      	ldr	r3, [sp, #8]
  40604e:	425d      	negs	r5, r3
  406050:	4b84      	ldr	r3, [pc, #528]	; (406264 <_dtoa_r+0xda4>)
  406052:	f005 020f 	and.w	r2, r5, #15
  406056:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40605a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40605e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  406062:	f001 ff77 	bl	407f54 <__aeabi_dmul>
  406066:	112d      	asrs	r5, r5, #4
  406068:	4607      	mov	r7, r0
  40606a:	4688      	mov	r8, r1
  40606c:	f000 812c 	beq.w	4062c8 <_dtoa_r+0xe08>
  406070:	4e7d      	ldr	r6, [pc, #500]	; (406268 <_dtoa_r+0xda8>)
  406072:	f04f 0a02 	mov.w	sl, #2
  406076:	07eb      	lsls	r3, r5, #31
  406078:	d509      	bpl.n	40608e <_dtoa_r+0xbce>
  40607a:	4638      	mov	r0, r7
  40607c:	4641      	mov	r1, r8
  40607e:	e9d6 2300 	ldrd	r2, r3, [r6]
  406082:	f001 ff67 	bl	407f54 <__aeabi_dmul>
  406086:	f10a 0a01 	add.w	sl, sl, #1
  40608a:	4607      	mov	r7, r0
  40608c:	4688      	mov	r8, r1
  40608e:	106d      	asrs	r5, r5, #1
  406090:	f106 0608 	add.w	r6, r6, #8
  406094:	d1ef      	bne.n	406076 <_dtoa_r+0xbb6>
  406096:	e608      	b.n	405caa <_dtoa_r+0x7ea>
  406098:	6871      	ldr	r1, [r6, #4]
  40609a:	4620      	mov	r0, r4
  40609c:	f000 fd36 	bl	406b0c <_Balloc>
  4060a0:	6933      	ldr	r3, [r6, #16]
  4060a2:	3302      	adds	r3, #2
  4060a4:	009a      	lsls	r2, r3, #2
  4060a6:	4605      	mov	r5, r0
  4060a8:	f106 010c 	add.w	r1, r6, #12
  4060ac:	300c      	adds	r0, #12
  4060ae:	f000 fc8f 	bl	4069d0 <memcpy>
  4060b2:	4629      	mov	r1, r5
  4060b4:	2201      	movs	r2, #1
  4060b6:	4620      	mov	r0, r4
  4060b8:	f000 fed4 	bl	406e64 <__lshift>
  4060bc:	9006      	str	r0, [sp, #24]
  4060be:	e4b5      	b.n	405a2c <_dtoa_r+0x56c>
  4060c0:	2b39      	cmp	r3, #57	; 0x39
  4060c2:	f8cd b018 	str.w	fp, [sp, #24]
  4060c6:	46d0      	mov	r8, sl
  4060c8:	f000 80a5 	beq.w	406216 <_dtoa_r+0xd56>
  4060cc:	f103 0a01 	add.w	sl, r3, #1
  4060d0:	46b3      	mov	fp, r6
  4060d2:	f887 a000 	strb.w	sl, [r7]
  4060d6:	1c7d      	adds	r5, r7, #1
  4060d8:	9e06      	ldr	r6, [sp, #24]
  4060da:	e571      	b.n	405bc0 <_dtoa_r+0x700>
  4060dc:	465a      	mov	r2, fp
  4060de:	46d0      	mov	r8, sl
  4060e0:	46b3      	mov	fp, r6
  4060e2:	469a      	mov	sl, r3
  4060e4:	4616      	mov	r6, r2
  4060e6:	e54f      	b.n	405b88 <_dtoa_r+0x6c8>
  4060e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4060ea:	495e      	ldr	r1, [pc, #376]	; (406264 <_dtoa_r+0xda4>)
  4060ec:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4060f0:	462a      	mov	r2, r5
  4060f2:	4633      	mov	r3, r6
  4060f4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4060f8:	f001 ff2c 	bl	407f54 <__aeabi_dmul>
  4060fc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  406100:	4638      	mov	r0, r7
  406102:	4641      	mov	r1, r8
  406104:	f002 f9d6 	bl	4084b4 <__aeabi_d2iz>
  406108:	4605      	mov	r5, r0
  40610a:	f001 febd 	bl	407e88 <__aeabi_i2d>
  40610e:	460b      	mov	r3, r1
  406110:	4602      	mov	r2, r0
  406112:	4641      	mov	r1, r8
  406114:	4638      	mov	r0, r7
  406116:	f001 fd69 	bl	407bec <__aeabi_dsub>
  40611a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40611c:	460f      	mov	r7, r1
  40611e:	9904      	ldr	r1, [sp, #16]
  406120:	3530      	adds	r5, #48	; 0x30
  406122:	2b01      	cmp	r3, #1
  406124:	700d      	strb	r5, [r1, #0]
  406126:	4606      	mov	r6, r0
  406128:	f101 0501 	add.w	r5, r1, #1
  40612c:	d026      	beq.n	40617c <_dtoa_r+0xcbc>
  40612e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406130:	9a04      	ldr	r2, [sp, #16]
  406132:	f8df b13c 	ldr.w	fp, [pc, #316]	; 406270 <_dtoa_r+0xdb0>
  406136:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40613a:	4413      	add	r3, r2
  40613c:	f04f 0a00 	mov.w	sl, #0
  406140:	4699      	mov	r9, r3
  406142:	4652      	mov	r2, sl
  406144:	465b      	mov	r3, fp
  406146:	4630      	mov	r0, r6
  406148:	4639      	mov	r1, r7
  40614a:	f001 ff03 	bl	407f54 <__aeabi_dmul>
  40614e:	460f      	mov	r7, r1
  406150:	4606      	mov	r6, r0
  406152:	f002 f9af 	bl	4084b4 <__aeabi_d2iz>
  406156:	4680      	mov	r8, r0
  406158:	f001 fe96 	bl	407e88 <__aeabi_i2d>
  40615c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  406160:	4602      	mov	r2, r0
  406162:	460b      	mov	r3, r1
  406164:	4630      	mov	r0, r6
  406166:	4639      	mov	r1, r7
  406168:	f001 fd40 	bl	407bec <__aeabi_dsub>
  40616c:	f805 8b01 	strb.w	r8, [r5], #1
  406170:	454d      	cmp	r5, r9
  406172:	4606      	mov	r6, r0
  406174:	460f      	mov	r7, r1
  406176:	d1e4      	bne.n	406142 <_dtoa_r+0xc82>
  406178:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40617c:	4b3b      	ldr	r3, [pc, #236]	; (40626c <_dtoa_r+0xdac>)
  40617e:	2200      	movs	r2, #0
  406180:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  406184:	f001 fd34 	bl	407bf0 <__adddf3>
  406188:	4632      	mov	r2, r6
  40618a:	463b      	mov	r3, r7
  40618c:	f002 f954 	bl	408438 <__aeabi_dcmplt>
  406190:	2800      	cmp	r0, #0
  406192:	d046      	beq.n	406222 <_dtoa_r+0xd62>
  406194:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406196:	9302      	str	r3, [sp, #8]
  406198:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40619c:	f7ff bb43 	b.w	405826 <_dtoa_r+0x366>
  4061a0:	f04f 0800 	mov.w	r8, #0
  4061a4:	4646      	mov	r6, r8
  4061a6:	e6a9      	b.n	405efc <_dtoa_r+0xa3c>
  4061a8:	9b08      	ldr	r3, [sp, #32]
  4061aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4061ac:	1a9d      	subs	r5, r3, r2
  4061ae:	2300      	movs	r3, #0
  4061b0:	f7ff bb71 	b.w	405896 <_dtoa_r+0x3d6>
  4061b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4061b6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4061b8:	9d08      	ldr	r5, [sp, #32]
  4061ba:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4061be:	f7ff bb6a 	b.w	405896 <_dtoa_r+0x3d6>
  4061c2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4061c6:	f04f 0a02 	mov.w	sl, #2
  4061ca:	e56e      	b.n	405caa <_dtoa_r+0x7ea>
  4061cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4061ce:	2b00      	cmp	r3, #0
  4061d0:	f43f aeb8 	beq.w	405f44 <_dtoa_r+0xa84>
  4061d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4061d6:	2b00      	cmp	r3, #0
  4061d8:	f77f aede 	ble.w	405f98 <_dtoa_r+0xad8>
  4061dc:	2200      	movs	r2, #0
  4061de:	4b24      	ldr	r3, [pc, #144]	; (406270 <_dtoa_r+0xdb0>)
  4061e0:	4638      	mov	r0, r7
  4061e2:	4641      	mov	r1, r8
  4061e4:	f001 feb6 	bl	407f54 <__aeabi_dmul>
  4061e8:	4607      	mov	r7, r0
  4061ea:	4688      	mov	r8, r1
  4061ec:	f10a 0001 	add.w	r0, sl, #1
  4061f0:	f001 fe4a 	bl	407e88 <__aeabi_i2d>
  4061f4:	463a      	mov	r2, r7
  4061f6:	4643      	mov	r3, r8
  4061f8:	f001 feac 	bl	407f54 <__aeabi_dmul>
  4061fc:	2200      	movs	r2, #0
  4061fe:	4b17      	ldr	r3, [pc, #92]	; (40625c <_dtoa_r+0xd9c>)
  406200:	f001 fcf6 	bl	407bf0 <__adddf3>
  406204:	9a02      	ldr	r2, [sp, #8]
  406206:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406208:	9312      	str	r3, [sp, #72]	; 0x48
  40620a:	3a01      	subs	r2, #1
  40620c:	4605      	mov	r5, r0
  40620e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  406212:	9215      	str	r2, [sp, #84]	; 0x54
  406214:	e56a      	b.n	405cec <_dtoa_r+0x82c>
  406216:	2239      	movs	r2, #57	; 0x39
  406218:	46b3      	mov	fp, r6
  40621a:	703a      	strb	r2, [r7, #0]
  40621c:	9e06      	ldr	r6, [sp, #24]
  40621e:	1c7d      	adds	r5, r7, #1
  406220:	e4c0      	b.n	405ba4 <_dtoa_r+0x6e4>
  406222:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  406226:	2000      	movs	r0, #0
  406228:	4910      	ldr	r1, [pc, #64]	; (40626c <_dtoa_r+0xdac>)
  40622a:	f001 fcdf 	bl	407bec <__aeabi_dsub>
  40622e:	4632      	mov	r2, r6
  406230:	463b      	mov	r3, r7
  406232:	f002 f91f 	bl	408474 <__aeabi_dcmpgt>
  406236:	b908      	cbnz	r0, 40623c <_dtoa_r+0xd7c>
  406238:	e6ae      	b.n	405f98 <_dtoa_r+0xad8>
  40623a:	4615      	mov	r5, r2
  40623c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406240:	2b30      	cmp	r3, #48	; 0x30
  406242:	f105 32ff 	add.w	r2, r5, #4294967295
  406246:	d0f8      	beq.n	40623a <_dtoa_r+0xd7a>
  406248:	e5d7      	b.n	405dfa <_dtoa_r+0x93a>
  40624a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40624e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406250:	9302      	str	r3, [sp, #8]
  406252:	f7ff bae8 	b.w	405826 <_dtoa_r+0x366>
  406256:	970c      	str	r7, [sp, #48]	; 0x30
  406258:	f7ff bba5 	b.w	4059a6 <_dtoa_r+0x4e6>
  40625c:	401c0000 	.word	0x401c0000
  406260:	40140000 	.word	0x40140000
  406264:	00409328 	.word	0x00409328
  406268:	00409300 	.word	0x00409300
  40626c:	3fe00000 	.word	0x3fe00000
  406270:	40240000 	.word	0x40240000
  406274:	2b39      	cmp	r3, #57	; 0x39
  406276:	f8cd b018 	str.w	fp, [sp, #24]
  40627a:	46d0      	mov	r8, sl
  40627c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  406280:	469a      	mov	sl, r3
  406282:	d0c8      	beq.n	406216 <_dtoa_r+0xd56>
  406284:	f1bb 0f00 	cmp.w	fp, #0
  406288:	f73f aebf 	bgt.w	40600a <_dtoa_r+0xb4a>
  40628c:	e6bf      	b.n	40600e <_dtoa_r+0xb4e>
  40628e:	f47f aebe 	bne.w	40600e <_dtoa_r+0xb4e>
  406292:	f01a 0f01 	tst.w	sl, #1
  406296:	f43f aeba 	beq.w	40600e <_dtoa_r+0xb4e>
  40629a:	e6b2      	b.n	406002 <_dtoa_r+0xb42>
  40629c:	f04f 0800 	mov.w	r8, #0
  4062a0:	4646      	mov	r6, r8
  4062a2:	e5e9      	b.n	405e78 <_dtoa_r+0x9b8>
  4062a4:	4631      	mov	r1, r6
  4062a6:	2300      	movs	r3, #0
  4062a8:	220a      	movs	r2, #10
  4062aa:	4620      	mov	r0, r4
  4062ac:	f000 fc5e 	bl	406b6c <__multadd>
  4062b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062b2:	2b00      	cmp	r3, #0
  4062b4:	4606      	mov	r6, r0
  4062b6:	dd0a      	ble.n	4062ce <_dtoa_r+0xe0e>
  4062b8:	930a      	str	r3, [sp, #40]	; 0x28
  4062ba:	f7ff bbaa 	b.w	405a12 <_dtoa_r+0x552>
  4062be:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4062c0:	2b02      	cmp	r3, #2
  4062c2:	dc23      	bgt.n	40630c <_dtoa_r+0xe4c>
  4062c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062c6:	e43b      	b.n	405b40 <_dtoa_r+0x680>
  4062c8:	f04f 0a02 	mov.w	sl, #2
  4062cc:	e4ed      	b.n	405caa <_dtoa_r+0x7ea>
  4062ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4062d0:	2b02      	cmp	r3, #2
  4062d2:	dc1b      	bgt.n	40630c <_dtoa_r+0xe4c>
  4062d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062d6:	e7ef      	b.n	4062b8 <_dtoa_r+0xdf8>
  4062d8:	2500      	movs	r5, #0
  4062da:	6465      	str	r5, [r4, #68]	; 0x44
  4062dc:	4629      	mov	r1, r5
  4062de:	4620      	mov	r0, r4
  4062e0:	f000 fc14 	bl	406b0c <_Balloc>
  4062e4:	f04f 33ff 	mov.w	r3, #4294967295
  4062e8:	930a      	str	r3, [sp, #40]	; 0x28
  4062ea:	930f      	str	r3, [sp, #60]	; 0x3c
  4062ec:	2301      	movs	r3, #1
  4062ee:	9004      	str	r0, [sp, #16]
  4062f0:	9525      	str	r5, [sp, #148]	; 0x94
  4062f2:	6420      	str	r0, [r4, #64]	; 0x40
  4062f4:	930b      	str	r3, [sp, #44]	; 0x2c
  4062f6:	f7ff b9dd 	b.w	4056b4 <_dtoa_r+0x1f4>
  4062fa:	2501      	movs	r5, #1
  4062fc:	f7ff b9a5 	b.w	40564a <_dtoa_r+0x18a>
  406300:	f43f ab69 	beq.w	4059d6 <_dtoa_r+0x516>
  406304:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406308:	f7ff bbf9 	b.w	405afe <_dtoa_r+0x63e>
  40630c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40630e:	930a      	str	r3, [sp, #40]	; 0x28
  406310:	e5e5      	b.n	405ede <_dtoa_r+0xa1e>
  406312:	bf00      	nop

00406314 <__libc_fini_array>:
  406314:	b538      	push	{r3, r4, r5, lr}
  406316:	4c0a      	ldr	r4, [pc, #40]	; (406340 <__libc_fini_array+0x2c>)
  406318:	4d0a      	ldr	r5, [pc, #40]	; (406344 <__libc_fini_array+0x30>)
  40631a:	1b64      	subs	r4, r4, r5
  40631c:	10a4      	asrs	r4, r4, #2
  40631e:	d00a      	beq.n	406336 <__libc_fini_array+0x22>
  406320:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  406324:	3b01      	subs	r3, #1
  406326:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40632a:	3c01      	subs	r4, #1
  40632c:	f855 3904 	ldr.w	r3, [r5], #-4
  406330:	4798      	blx	r3
  406332:	2c00      	cmp	r4, #0
  406334:	d1f9      	bne.n	40632a <__libc_fini_array+0x16>
  406336:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40633a:	f003 b8f3 	b.w	409524 <_fini>
  40633e:	bf00      	nop
  406340:	00409534 	.word	0x00409534
  406344:	00409530 	.word	0x00409530

00406348 <_localeconv_r>:
  406348:	4a04      	ldr	r2, [pc, #16]	; (40635c <_localeconv_r+0x14>)
  40634a:	4b05      	ldr	r3, [pc, #20]	; (406360 <_localeconv_r+0x18>)
  40634c:	6812      	ldr	r2, [r2, #0]
  40634e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  406350:	2800      	cmp	r0, #0
  406352:	bf08      	it	eq
  406354:	4618      	moveq	r0, r3
  406356:	30f0      	adds	r0, #240	; 0xf0
  406358:	4770      	bx	lr
  40635a:	bf00      	nop
  40635c:	20000010 	.word	0x20000010
  406360:	20000850 	.word	0x20000850

00406364 <_malloc_r>:
  406364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406368:	f101 060b 	add.w	r6, r1, #11
  40636c:	2e16      	cmp	r6, #22
  40636e:	b083      	sub	sp, #12
  406370:	4605      	mov	r5, r0
  406372:	f240 809e 	bls.w	4064b2 <_malloc_r+0x14e>
  406376:	f036 0607 	bics.w	r6, r6, #7
  40637a:	f100 80bd 	bmi.w	4064f8 <_malloc_r+0x194>
  40637e:	42b1      	cmp	r1, r6
  406380:	f200 80ba 	bhi.w	4064f8 <_malloc_r+0x194>
  406384:	f000 fbbe 	bl	406b04 <__malloc_lock>
  406388:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40638c:	f0c0 8293 	bcc.w	4068b6 <_malloc_r+0x552>
  406390:	0a73      	lsrs	r3, r6, #9
  406392:	f000 80b8 	beq.w	406506 <_malloc_r+0x1a2>
  406396:	2b04      	cmp	r3, #4
  406398:	f200 8179 	bhi.w	40668e <_malloc_r+0x32a>
  40639c:	09b3      	lsrs	r3, r6, #6
  40639e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4063a2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4063a6:	00c3      	lsls	r3, r0, #3
  4063a8:	4fbf      	ldr	r7, [pc, #764]	; (4066a8 <_malloc_r+0x344>)
  4063aa:	443b      	add	r3, r7
  4063ac:	f1a3 0108 	sub.w	r1, r3, #8
  4063b0:	685c      	ldr	r4, [r3, #4]
  4063b2:	42a1      	cmp	r1, r4
  4063b4:	d106      	bne.n	4063c4 <_malloc_r+0x60>
  4063b6:	e00c      	b.n	4063d2 <_malloc_r+0x6e>
  4063b8:	2a00      	cmp	r2, #0
  4063ba:	f280 80aa 	bge.w	406512 <_malloc_r+0x1ae>
  4063be:	68e4      	ldr	r4, [r4, #12]
  4063c0:	42a1      	cmp	r1, r4
  4063c2:	d006      	beq.n	4063d2 <_malloc_r+0x6e>
  4063c4:	6863      	ldr	r3, [r4, #4]
  4063c6:	f023 0303 	bic.w	r3, r3, #3
  4063ca:	1b9a      	subs	r2, r3, r6
  4063cc:	2a0f      	cmp	r2, #15
  4063ce:	ddf3      	ble.n	4063b8 <_malloc_r+0x54>
  4063d0:	4670      	mov	r0, lr
  4063d2:	693c      	ldr	r4, [r7, #16]
  4063d4:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4066bc <_malloc_r+0x358>
  4063d8:	4574      	cmp	r4, lr
  4063da:	f000 81ab 	beq.w	406734 <_malloc_r+0x3d0>
  4063de:	6863      	ldr	r3, [r4, #4]
  4063e0:	f023 0303 	bic.w	r3, r3, #3
  4063e4:	1b9a      	subs	r2, r3, r6
  4063e6:	2a0f      	cmp	r2, #15
  4063e8:	f300 8190 	bgt.w	40670c <_malloc_r+0x3a8>
  4063ec:	2a00      	cmp	r2, #0
  4063ee:	f8c7 e014 	str.w	lr, [r7, #20]
  4063f2:	f8c7 e010 	str.w	lr, [r7, #16]
  4063f6:	f280 809d 	bge.w	406534 <_malloc_r+0x1d0>
  4063fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4063fe:	f080 8161 	bcs.w	4066c4 <_malloc_r+0x360>
  406402:	08db      	lsrs	r3, r3, #3
  406404:	f103 0c01 	add.w	ip, r3, #1
  406408:	1099      	asrs	r1, r3, #2
  40640a:	687a      	ldr	r2, [r7, #4]
  40640c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  406410:	f8c4 8008 	str.w	r8, [r4, #8]
  406414:	2301      	movs	r3, #1
  406416:	408b      	lsls	r3, r1
  406418:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40641c:	4313      	orrs	r3, r2
  40641e:	3908      	subs	r1, #8
  406420:	60e1      	str	r1, [r4, #12]
  406422:	607b      	str	r3, [r7, #4]
  406424:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  406428:	f8c8 400c 	str.w	r4, [r8, #12]
  40642c:	1082      	asrs	r2, r0, #2
  40642e:	2401      	movs	r4, #1
  406430:	4094      	lsls	r4, r2
  406432:	429c      	cmp	r4, r3
  406434:	f200 808b 	bhi.w	40654e <_malloc_r+0x1ea>
  406438:	421c      	tst	r4, r3
  40643a:	d106      	bne.n	40644a <_malloc_r+0xe6>
  40643c:	f020 0003 	bic.w	r0, r0, #3
  406440:	0064      	lsls	r4, r4, #1
  406442:	421c      	tst	r4, r3
  406444:	f100 0004 	add.w	r0, r0, #4
  406448:	d0fa      	beq.n	406440 <_malloc_r+0xdc>
  40644a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40644e:	46cc      	mov	ip, r9
  406450:	4680      	mov	r8, r0
  406452:	f8dc 300c 	ldr.w	r3, [ip, #12]
  406456:	459c      	cmp	ip, r3
  406458:	d107      	bne.n	40646a <_malloc_r+0x106>
  40645a:	e16d      	b.n	406738 <_malloc_r+0x3d4>
  40645c:	2a00      	cmp	r2, #0
  40645e:	f280 817b 	bge.w	406758 <_malloc_r+0x3f4>
  406462:	68db      	ldr	r3, [r3, #12]
  406464:	459c      	cmp	ip, r3
  406466:	f000 8167 	beq.w	406738 <_malloc_r+0x3d4>
  40646a:	6859      	ldr	r1, [r3, #4]
  40646c:	f021 0103 	bic.w	r1, r1, #3
  406470:	1b8a      	subs	r2, r1, r6
  406472:	2a0f      	cmp	r2, #15
  406474:	ddf2      	ble.n	40645c <_malloc_r+0xf8>
  406476:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40647a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40647e:	9300      	str	r3, [sp, #0]
  406480:	199c      	adds	r4, r3, r6
  406482:	4628      	mov	r0, r5
  406484:	f046 0601 	orr.w	r6, r6, #1
  406488:	f042 0501 	orr.w	r5, r2, #1
  40648c:	605e      	str	r6, [r3, #4]
  40648e:	f8c8 c00c 	str.w	ip, [r8, #12]
  406492:	f8cc 8008 	str.w	r8, [ip, #8]
  406496:	617c      	str	r4, [r7, #20]
  406498:	613c      	str	r4, [r7, #16]
  40649a:	f8c4 e00c 	str.w	lr, [r4, #12]
  40649e:	f8c4 e008 	str.w	lr, [r4, #8]
  4064a2:	6065      	str	r5, [r4, #4]
  4064a4:	505a      	str	r2, [r3, r1]
  4064a6:	f000 fb2f 	bl	406b08 <__malloc_unlock>
  4064aa:	9b00      	ldr	r3, [sp, #0]
  4064ac:	f103 0408 	add.w	r4, r3, #8
  4064b0:	e01e      	b.n	4064f0 <_malloc_r+0x18c>
  4064b2:	2910      	cmp	r1, #16
  4064b4:	d820      	bhi.n	4064f8 <_malloc_r+0x194>
  4064b6:	f000 fb25 	bl	406b04 <__malloc_lock>
  4064ba:	2610      	movs	r6, #16
  4064bc:	2318      	movs	r3, #24
  4064be:	2002      	movs	r0, #2
  4064c0:	4f79      	ldr	r7, [pc, #484]	; (4066a8 <_malloc_r+0x344>)
  4064c2:	443b      	add	r3, r7
  4064c4:	f1a3 0208 	sub.w	r2, r3, #8
  4064c8:	685c      	ldr	r4, [r3, #4]
  4064ca:	4294      	cmp	r4, r2
  4064cc:	f000 813d 	beq.w	40674a <_malloc_r+0x3e6>
  4064d0:	6863      	ldr	r3, [r4, #4]
  4064d2:	68e1      	ldr	r1, [r4, #12]
  4064d4:	68a6      	ldr	r6, [r4, #8]
  4064d6:	f023 0303 	bic.w	r3, r3, #3
  4064da:	4423      	add	r3, r4
  4064dc:	4628      	mov	r0, r5
  4064de:	685a      	ldr	r2, [r3, #4]
  4064e0:	60f1      	str	r1, [r6, #12]
  4064e2:	f042 0201 	orr.w	r2, r2, #1
  4064e6:	608e      	str	r6, [r1, #8]
  4064e8:	605a      	str	r2, [r3, #4]
  4064ea:	f000 fb0d 	bl	406b08 <__malloc_unlock>
  4064ee:	3408      	adds	r4, #8
  4064f0:	4620      	mov	r0, r4
  4064f2:	b003      	add	sp, #12
  4064f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4064f8:	2400      	movs	r4, #0
  4064fa:	230c      	movs	r3, #12
  4064fc:	4620      	mov	r0, r4
  4064fe:	602b      	str	r3, [r5, #0]
  406500:	b003      	add	sp, #12
  406502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406506:	2040      	movs	r0, #64	; 0x40
  406508:	f44f 7300 	mov.w	r3, #512	; 0x200
  40650c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  406510:	e74a      	b.n	4063a8 <_malloc_r+0x44>
  406512:	4423      	add	r3, r4
  406514:	68e1      	ldr	r1, [r4, #12]
  406516:	685a      	ldr	r2, [r3, #4]
  406518:	68a6      	ldr	r6, [r4, #8]
  40651a:	f042 0201 	orr.w	r2, r2, #1
  40651e:	60f1      	str	r1, [r6, #12]
  406520:	4628      	mov	r0, r5
  406522:	608e      	str	r6, [r1, #8]
  406524:	605a      	str	r2, [r3, #4]
  406526:	f000 faef 	bl	406b08 <__malloc_unlock>
  40652a:	3408      	adds	r4, #8
  40652c:	4620      	mov	r0, r4
  40652e:	b003      	add	sp, #12
  406530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406534:	4423      	add	r3, r4
  406536:	4628      	mov	r0, r5
  406538:	685a      	ldr	r2, [r3, #4]
  40653a:	f042 0201 	orr.w	r2, r2, #1
  40653e:	605a      	str	r2, [r3, #4]
  406540:	f000 fae2 	bl	406b08 <__malloc_unlock>
  406544:	3408      	adds	r4, #8
  406546:	4620      	mov	r0, r4
  406548:	b003      	add	sp, #12
  40654a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40654e:	68bc      	ldr	r4, [r7, #8]
  406550:	6863      	ldr	r3, [r4, #4]
  406552:	f023 0803 	bic.w	r8, r3, #3
  406556:	45b0      	cmp	r8, r6
  406558:	d304      	bcc.n	406564 <_malloc_r+0x200>
  40655a:	eba8 0306 	sub.w	r3, r8, r6
  40655e:	2b0f      	cmp	r3, #15
  406560:	f300 8085 	bgt.w	40666e <_malloc_r+0x30a>
  406564:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4066c0 <_malloc_r+0x35c>
  406568:	4b50      	ldr	r3, [pc, #320]	; (4066ac <_malloc_r+0x348>)
  40656a:	f8d9 2000 	ldr.w	r2, [r9]
  40656e:	681b      	ldr	r3, [r3, #0]
  406570:	3201      	adds	r2, #1
  406572:	4433      	add	r3, r6
  406574:	eb04 0a08 	add.w	sl, r4, r8
  406578:	f000 8155 	beq.w	406826 <_malloc_r+0x4c2>
  40657c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  406580:	330f      	adds	r3, #15
  406582:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  406586:	f02b 0b0f 	bic.w	fp, fp, #15
  40658a:	4659      	mov	r1, fp
  40658c:	4628      	mov	r0, r5
  40658e:	f000 fdb7 	bl	407100 <_sbrk_r>
  406592:	1c41      	adds	r1, r0, #1
  406594:	4602      	mov	r2, r0
  406596:	f000 80fc 	beq.w	406792 <_malloc_r+0x42e>
  40659a:	4582      	cmp	sl, r0
  40659c:	f200 80f7 	bhi.w	40678e <_malloc_r+0x42a>
  4065a0:	4b43      	ldr	r3, [pc, #268]	; (4066b0 <_malloc_r+0x34c>)
  4065a2:	6819      	ldr	r1, [r3, #0]
  4065a4:	4459      	add	r1, fp
  4065a6:	6019      	str	r1, [r3, #0]
  4065a8:	f000 814d 	beq.w	406846 <_malloc_r+0x4e2>
  4065ac:	f8d9 0000 	ldr.w	r0, [r9]
  4065b0:	3001      	adds	r0, #1
  4065b2:	bf1b      	ittet	ne
  4065b4:	eba2 0a0a 	subne.w	sl, r2, sl
  4065b8:	4451      	addne	r1, sl
  4065ba:	f8c9 2000 	streq.w	r2, [r9]
  4065be:	6019      	strne	r1, [r3, #0]
  4065c0:	f012 0107 	ands.w	r1, r2, #7
  4065c4:	f000 8115 	beq.w	4067f2 <_malloc_r+0x48e>
  4065c8:	f1c1 0008 	rsb	r0, r1, #8
  4065cc:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4065d0:	4402      	add	r2, r0
  4065d2:	3108      	adds	r1, #8
  4065d4:	eb02 090b 	add.w	r9, r2, fp
  4065d8:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4065dc:	eba1 0909 	sub.w	r9, r1, r9
  4065e0:	4649      	mov	r1, r9
  4065e2:	4628      	mov	r0, r5
  4065e4:	9301      	str	r3, [sp, #4]
  4065e6:	9200      	str	r2, [sp, #0]
  4065e8:	f000 fd8a 	bl	407100 <_sbrk_r>
  4065ec:	1c43      	adds	r3, r0, #1
  4065ee:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4065f2:	f000 8143 	beq.w	40687c <_malloc_r+0x518>
  4065f6:	1a80      	subs	r0, r0, r2
  4065f8:	4448      	add	r0, r9
  4065fa:	f040 0001 	orr.w	r0, r0, #1
  4065fe:	6819      	ldr	r1, [r3, #0]
  406600:	60ba      	str	r2, [r7, #8]
  406602:	4449      	add	r1, r9
  406604:	42bc      	cmp	r4, r7
  406606:	6050      	str	r0, [r2, #4]
  406608:	6019      	str	r1, [r3, #0]
  40660a:	d017      	beq.n	40663c <_malloc_r+0x2d8>
  40660c:	f1b8 0f0f 	cmp.w	r8, #15
  406610:	f240 80fb 	bls.w	40680a <_malloc_r+0x4a6>
  406614:	6860      	ldr	r0, [r4, #4]
  406616:	f1a8 020c 	sub.w	r2, r8, #12
  40661a:	f022 0207 	bic.w	r2, r2, #7
  40661e:	eb04 0e02 	add.w	lr, r4, r2
  406622:	f000 0001 	and.w	r0, r0, #1
  406626:	f04f 0c05 	mov.w	ip, #5
  40662a:	4310      	orrs	r0, r2
  40662c:	2a0f      	cmp	r2, #15
  40662e:	6060      	str	r0, [r4, #4]
  406630:	f8ce c004 	str.w	ip, [lr, #4]
  406634:	f8ce c008 	str.w	ip, [lr, #8]
  406638:	f200 8117 	bhi.w	40686a <_malloc_r+0x506>
  40663c:	4b1d      	ldr	r3, [pc, #116]	; (4066b4 <_malloc_r+0x350>)
  40663e:	68bc      	ldr	r4, [r7, #8]
  406640:	681a      	ldr	r2, [r3, #0]
  406642:	4291      	cmp	r1, r2
  406644:	bf88      	it	hi
  406646:	6019      	strhi	r1, [r3, #0]
  406648:	4b1b      	ldr	r3, [pc, #108]	; (4066b8 <_malloc_r+0x354>)
  40664a:	681a      	ldr	r2, [r3, #0]
  40664c:	4291      	cmp	r1, r2
  40664e:	6862      	ldr	r2, [r4, #4]
  406650:	bf88      	it	hi
  406652:	6019      	strhi	r1, [r3, #0]
  406654:	f022 0203 	bic.w	r2, r2, #3
  406658:	4296      	cmp	r6, r2
  40665a:	eba2 0306 	sub.w	r3, r2, r6
  40665e:	d801      	bhi.n	406664 <_malloc_r+0x300>
  406660:	2b0f      	cmp	r3, #15
  406662:	dc04      	bgt.n	40666e <_malloc_r+0x30a>
  406664:	4628      	mov	r0, r5
  406666:	f000 fa4f 	bl	406b08 <__malloc_unlock>
  40666a:	2400      	movs	r4, #0
  40666c:	e740      	b.n	4064f0 <_malloc_r+0x18c>
  40666e:	19a2      	adds	r2, r4, r6
  406670:	f043 0301 	orr.w	r3, r3, #1
  406674:	f046 0601 	orr.w	r6, r6, #1
  406678:	6066      	str	r6, [r4, #4]
  40667a:	4628      	mov	r0, r5
  40667c:	60ba      	str	r2, [r7, #8]
  40667e:	6053      	str	r3, [r2, #4]
  406680:	f000 fa42 	bl	406b08 <__malloc_unlock>
  406684:	3408      	adds	r4, #8
  406686:	4620      	mov	r0, r4
  406688:	b003      	add	sp, #12
  40668a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40668e:	2b14      	cmp	r3, #20
  406690:	d971      	bls.n	406776 <_malloc_r+0x412>
  406692:	2b54      	cmp	r3, #84	; 0x54
  406694:	f200 80a3 	bhi.w	4067de <_malloc_r+0x47a>
  406698:	0b33      	lsrs	r3, r6, #12
  40669a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40669e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4066a2:	00c3      	lsls	r3, r0, #3
  4066a4:	e680      	b.n	4063a8 <_malloc_r+0x44>
  4066a6:	bf00      	nop
  4066a8:	20000440 	.word	0x20000440
  4066ac:	20000ab0 	.word	0x20000ab0
  4066b0:	20000a80 	.word	0x20000a80
  4066b4:	20000aa8 	.word	0x20000aa8
  4066b8:	20000aac 	.word	0x20000aac
  4066bc:	20000448 	.word	0x20000448
  4066c0:	20000848 	.word	0x20000848
  4066c4:	0a5a      	lsrs	r2, r3, #9
  4066c6:	2a04      	cmp	r2, #4
  4066c8:	d95b      	bls.n	406782 <_malloc_r+0x41e>
  4066ca:	2a14      	cmp	r2, #20
  4066cc:	f200 80ae 	bhi.w	40682c <_malloc_r+0x4c8>
  4066d0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4066d4:	00c9      	lsls	r1, r1, #3
  4066d6:	325b      	adds	r2, #91	; 0x5b
  4066d8:	eb07 0c01 	add.w	ip, r7, r1
  4066dc:	5879      	ldr	r1, [r7, r1]
  4066de:	f1ac 0c08 	sub.w	ip, ip, #8
  4066e2:	458c      	cmp	ip, r1
  4066e4:	f000 8088 	beq.w	4067f8 <_malloc_r+0x494>
  4066e8:	684a      	ldr	r2, [r1, #4]
  4066ea:	f022 0203 	bic.w	r2, r2, #3
  4066ee:	4293      	cmp	r3, r2
  4066f0:	d273      	bcs.n	4067da <_malloc_r+0x476>
  4066f2:	6889      	ldr	r1, [r1, #8]
  4066f4:	458c      	cmp	ip, r1
  4066f6:	d1f7      	bne.n	4066e8 <_malloc_r+0x384>
  4066f8:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4066fc:	687b      	ldr	r3, [r7, #4]
  4066fe:	60e2      	str	r2, [r4, #12]
  406700:	f8c4 c008 	str.w	ip, [r4, #8]
  406704:	6094      	str	r4, [r2, #8]
  406706:	f8cc 400c 	str.w	r4, [ip, #12]
  40670a:	e68f      	b.n	40642c <_malloc_r+0xc8>
  40670c:	19a1      	adds	r1, r4, r6
  40670e:	f046 0c01 	orr.w	ip, r6, #1
  406712:	f042 0601 	orr.w	r6, r2, #1
  406716:	f8c4 c004 	str.w	ip, [r4, #4]
  40671a:	4628      	mov	r0, r5
  40671c:	6179      	str	r1, [r7, #20]
  40671e:	6139      	str	r1, [r7, #16]
  406720:	f8c1 e00c 	str.w	lr, [r1, #12]
  406724:	f8c1 e008 	str.w	lr, [r1, #8]
  406728:	604e      	str	r6, [r1, #4]
  40672a:	50e2      	str	r2, [r4, r3]
  40672c:	f000 f9ec 	bl	406b08 <__malloc_unlock>
  406730:	3408      	adds	r4, #8
  406732:	e6dd      	b.n	4064f0 <_malloc_r+0x18c>
  406734:	687b      	ldr	r3, [r7, #4]
  406736:	e679      	b.n	40642c <_malloc_r+0xc8>
  406738:	f108 0801 	add.w	r8, r8, #1
  40673c:	f018 0f03 	tst.w	r8, #3
  406740:	f10c 0c08 	add.w	ip, ip, #8
  406744:	f47f ae85 	bne.w	406452 <_malloc_r+0xee>
  406748:	e02d      	b.n	4067a6 <_malloc_r+0x442>
  40674a:	68dc      	ldr	r4, [r3, #12]
  40674c:	42a3      	cmp	r3, r4
  40674e:	bf08      	it	eq
  406750:	3002      	addeq	r0, #2
  406752:	f43f ae3e 	beq.w	4063d2 <_malloc_r+0x6e>
  406756:	e6bb      	b.n	4064d0 <_malloc_r+0x16c>
  406758:	4419      	add	r1, r3
  40675a:	461c      	mov	r4, r3
  40675c:	684a      	ldr	r2, [r1, #4]
  40675e:	68db      	ldr	r3, [r3, #12]
  406760:	f854 6f08 	ldr.w	r6, [r4, #8]!
  406764:	f042 0201 	orr.w	r2, r2, #1
  406768:	604a      	str	r2, [r1, #4]
  40676a:	4628      	mov	r0, r5
  40676c:	60f3      	str	r3, [r6, #12]
  40676e:	609e      	str	r6, [r3, #8]
  406770:	f000 f9ca 	bl	406b08 <__malloc_unlock>
  406774:	e6bc      	b.n	4064f0 <_malloc_r+0x18c>
  406776:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40677a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40677e:	00c3      	lsls	r3, r0, #3
  406780:	e612      	b.n	4063a8 <_malloc_r+0x44>
  406782:	099a      	lsrs	r2, r3, #6
  406784:	f102 0139 	add.w	r1, r2, #57	; 0x39
  406788:	00c9      	lsls	r1, r1, #3
  40678a:	3238      	adds	r2, #56	; 0x38
  40678c:	e7a4      	b.n	4066d8 <_malloc_r+0x374>
  40678e:	42bc      	cmp	r4, r7
  406790:	d054      	beq.n	40683c <_malloc_r+0x4d8>
  406792:	68bc      	ldr	r4, [r7, #8]
  406794:	6862      	ldr	r2, [r4, #4]
  406796:	f022 0203 	bic.w	r2, r2, #3
  40679a:	e75d      	b.n	406658 <_malloc_r+0x2f4>
  40679c:	f859 3908 	ldr.w	r3, [r9], #-8
  4067a0:	4599      	cmp	r9, r3
  4067a2:	f040 8086 	bne.w	4068b2 <_malloc_r+0x54e>
  4067a6:	f010 0f03 	tst.w	r0, #3
  4067aa:	f100 30ff 	add.w	r0, r0, #4294967295
  4067ae:	d1f5      	bne.n	40679c <_malloc_r+0x438>
  4067b0:	687b      	ldr	r3, [r7, #4]
  4067b2:	ea23 0304 	bic.w	r3, r3, r4
  4067b6:	607b      	str	r3, [r7, #4]
  4067b8:	0064      	lsls	r4, r4, #1
  4067ba:	429c      	cmp	r4, r3
  4067bc:	f63f aec7 	bhi.w	40654e <_malloc_r+0x1ea>
  4067c0:	2c00      	cmp	r4, #0
  4067c2:	f43f aec4 	beq.w	40654e <_malloc_r+0x1ea>
  4067c6:	421c      	tst	r4, r3
  4067c8:	4640      	mov	r0, r8
  4067ca:	f47f ae3e 	bne.w	40644a <_malloc_r+0xe6>
  4067ce:	0064      	lsls	r4, r4, #1
  4067d0:	421c      	tst	r4, r3
  4067d2:	f100 0004 	add.w	r0, r0, #4
  4067d6:	d0fa      	beq.n	4067ce <_malloc_r+0x46a>
  4067d8:	e637      	b.n	40644a <_malloc_r+0xe6>
  4067da:	468c      	mov	ip, r1
  4067dc:	e78c      	b.n	4066f8 <_malloc_r+0x394>
  4067de:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4067e2:	d815      	bhi.n	406810 <_malloc_r+0x4ac>
  4067e4:	0bf3      	lsrs	r3, r6, #15
  4067e6:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4067ea:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4067ee:	00c3      	lsls	r3, r0, #3
  4067f0:	e5da      	b.n	4063a8 <_malloc_r+0x44>
  4067f2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4067f6:	e6ed      	b.n	4065d4 <_malloc_r+0x270>
  4067f8:	687b      	ldr	r3, [r7, #4]
  4067fa:	1092      	asrs	r2, r2, #2
  4067fc:	2101      	movs	r1, #1
  4067fe:	fa01 f202 	lsl.w	r2, r1, r2
  406802:	4313      	orrs	r3, r2
  406804:	607b      	str	r3, [r7, #4]
  406806:	4662      	mov	r2, ip
  406808:	e779      	b.n	4066fe <_malloc_r+0x39a>
  40680a:	2301      	movs	r3, #1
  40680c:	6053      	str	r3, [r2, #4]
  40680e:	e729      	b.n	406664 <_malloc_r+0x300>
  406810:	f240 5254 	movw	r2, #1364	; 0x554
  406814:	4293      	cmp	r3, r2
  406816:	d822      	bhi.n	40685e <_malloc_r+0x4fa>
  406818:	0cb3      	lsrs	r3, r6, #18
  40681a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40681e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  406822:	00c3      	lsls	r3, r0, #3
  406824:	e5c0      	b.n	4063a8 <_malloc_r+0x44>
  406826:	f103 0b10 	add.w	fp, r3, #16
  40682a:	e6ae      	b.n	40658a <_malloc_r+0x226>
  40682c:	2a54      	cmp	r2, #84	; 0x54
  40682e:	d829      	bhi.n	406884 <_malloc_r+0x520>
  406830:	0b1a      	lsrs	r2, r3, #12
  406832:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  406836:	00c9      	lsls	r1, r1, #3
  406838:	326e      	adds	r2, #110	; 0x6e
  40683a:	e74d      	b.n	4066d8 <_malloc_r+0x374>
  40683c:	4b20      	ldr	r3, [pc, #128]	; (4068c0 <_malloc_r+0x55c>)
  40683e:	6819      	ldr	r1, [r3, #0]
  406840:	4459      	add	r1, fp
  406842:	6019      	str	r1, [r3, #0]
  406844:	e6b2      	b.n	4065ac <_malloc_r+0x248>
  406846:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40684a:	2800      	cmp	r0, #0
  40684c:	f47f aeae 	bne.w	4065ac <_malloc_r+0x248>
  406850:	eb08 030b 	add.w	r3, r8, fp
  406854:	68ba      	ldr	r2, [r7, #8]
  406856:	f043 0301 	orr.w	r3, r3, #1
  40685a:	6053      	str	r3, [r2, #4]
  40685c:	e6ee      	b.n	40663c <_malloc_r+0x2d8>
  40685e:	207f      	movs	r0, #127	; 0x7f
  406860:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  406864:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  406868:	e59e      	b.n	4063a8 <_malloc_r+0x44>
  40686a:	f104 0108 	add.w	r1, r4, #8
  40686e:	4628      	mov	r0, r5
  406870:	9300      	str	r3, [sp, #0]
  406872:	f000 fea3 	bl	4075bc <_free_r>
  406876:	9b00      	ldr	r3, [sp, #0]
  406878:	6819      	ldr	r1, [r3, #0]
  40687a:	e6df      	b.n	40663c <_malloc_r+0x2d8>
  40687c:	2001      	movs	r0, #1
  40687e:	f04f 0900 	mov.w	r9, #0
  406882:	e6bc      	b.n	4065fe <_malloc_r+0x29a>
  406884:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  406888:	d805      	bhi.n	406896 <_malloc_r+0x532>
  40688a:	0bda      	lsrs	r2, r3, #15
  40688c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  406890:	00c9      	lsls	r1, r1, #3
  406892:	3277      	adds	r2, #119	; 0x77
  406894:	e720      	b.n	4066d8 <_malloc_r+0x374>
  406896:	f240 5154 	movw	r1, #1364	; 0x554
  40689a:	428a      	cmp	r2, r1
  40689c:	d805      	bhi.n	4068aa <_malloc_r+0x546>
  40689e:	0c9a      	lsrs	r2, r3, #18
  4068a0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4068a4:	00c9      	lsls	r1, r1, #3
  4068a6:	327c      	adds	r2, #124	; 0x7c
  4068a8:	e716      	b.n	4066d8 <_malloc_r+0x374>
  4068aa:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4068ae:	227e      	movs	r2, #126	; 0x7e
  4068b0:	e712      	b.n	4066d8 <_malloc_r+0x374>
  4068b2:	687b      	ldr	r3, [r7, #4]
  4068b4:	e780      	b.n	4067b8 <_malloc_r+0x454>
  4068b6:	08f0      	lsrs	r0, r6, #3
  4068b8:	f106 0308 	add.w	r3, r6, #8
  4068bc:	e600      	b.n	4064c0 <_malloc_r+0x15c>
  4068be:	bf00      	nop
  4068c0:	20000a80 	.word	0x20000a80
	...

004068d0 <memchr>:
  4068d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4068d4:	2a10      	cmp	r2, #16
  4068d6:	db2b      	blt.n	406930 <memchr+0x60>
  4068d8:	f010 0f07 	tst.w	r0, #7
  4068dc:	d008      	beq.n	4068f0 <memchr+0x20>
  4068de:	f810 3b01 	ldrb.w	r3, [r0], #1
  4068e2:	3a01      	subs	r2, #1
  4068e4:	428b      	cmp	r3, r1
  4068e6:	d02d      	beq.n	406944 <memchr+0x74>
  4068e8:	f010 0f07 	tst.w	r0, #7
  4068ec:	b342      	cbz	r2, 406940 <memchr+0x70>
  4068ee:	d1f6      	bne.n	4068de <memchr+0xe>
  4068f0:	b4f0      	push	{r4, r5, r6, r7}
  4068f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4068f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4068fa:	f022 0407 	bic.w	r4, r2, #7
  4068fe:	f07f 0700 	mvns.w	r7, #0
  406902:	2300      	movs	r3, #0
  406904:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  406908:	3c08      	subs	r4, #8
  40690a:	ea85 0501 	eor.w	r5, r5, r1
  40690e:	ea86 0601 	eor.w	r6, r6, r1
  406912:	fa85 f547 	uadd8	r5, r5, r7
  406916:	faa3 f587 	sel	r5, r3, r7
  40691a:	fa86 f647 	uadd8	r6, r6, r7
  40691e:	faa5 f687 	sel	r6, r5, r7
  406922:	b98e      	cbnz	r6, 406948 <memchr+0x78>
  406924:	d1ee      	bne.n	406904 <memchr+0x34>
  406926:	bcf0      	pop	{r4, r5, r6, r7}
  406928:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40692c:	f002 0207 	and.w	r2, r2, #7
  406930:	b132      	cbz	r2, 406940 <memchr+0x70>
  406932:	f810 3b01 	ldrb.w	r3, [r0], #1
  406936:	3a01      	subs	r2, #1
  406938:	ea83 0301 	eor.w	r3, r3, r1
  40693c:	b113      	cbz	r3, 406944 <memchr+0x74>
  40693e:	d1f8      	bne.n	406932 <memchr+0x62>
  406940:	2000      	movs	r0, #0
  406942:	4770      	bx	lr
  406944:	3801      	subs	r0, #1
  406946:	4770      	bx	lr
  406948:	2d00      	cmp	r5, #0
  40694a:	bf06      	itte	eq
  40694c:	4635      	moveq	r5, r6
  40694e:	3803      	subeq	r0, #3
  406950:	3807      	subne	r0, #7
  406952:	f015 0f01 	tst.w	r5, #1
  406956:	d107      	bne.n	406968 <memchr+0x98>
  406958:	3001      	adds	r0, #1
  40695a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40695e:	bf02      	ittt	eq
  406960:	3001      	addeq	r0, #1
  406962:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  406966:	3001      	addeq	r0, #1
  406968:	bcf0      	pop	{r4, r5, r6, r7}
  40696a:	3801      	subs	r0, #1
  40696c:	4770      	bx	lr
  40696e:	bf00      	nop

00406970 <memcmp>:
  406970:	2a03      	cmp	r2, #3
  406972:	b470      	push	{r4, r5, r6}
  406974:	d922      	bls.n	4069bc <memcmp+0x4c>
  406976:	ea40 0301 	orr.w	r3, r0, r1
  40697a:	079b      	lsls	r3, r3, #30
  40697c:	d011      	beq.n	4069a2 <memcmp+0x32>
  40697e:	7803      	ldrb	r3, [r0, #0]
  406980:	780c      	ldrb	r4, [r1, #0]
  406982:	42a3      	cmp	r3, r4
  406984:	d11d      	bne.n	4069c2 <memcmp+0x52>
  406986:	440a      	add	r2, r1
  406988:	3101      	adds	r1, #1
  40698a:	e005      	b.n	406998 <memcmp+0x28>
  40698c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  406990:	f811 4b01 	ldrb.w	r4, [r1], #1
  406994:	42a3      	cmp	r3, r4
  406996:	d114      	bne.n	4069c2 <memcmp+0x52>
  406998:	4291      	cmp	r1, r2
  40699a:	d1f7      	bne.n	40698c <memcmp+0x1c>
  40699c:	2000      	movs	r0, #0
  40699e:	bc70      	pop	{r4, r5, r6}
  4069a0:	4770      	bx	lr
  4069a2:	680d      	ldr	r5, [r1, #0]
  4069a4:	6806      	ldr	r6, [r0, #0]
  4069a6:	42ae      	cmp	r6, r5
  4069a8:	460c      	mov	r4, r1
  4069aa:	4603      	mov	r3, r0
  4069ac:	f101 0104 	add.w	r1, r1, #4
  4069b0:	f100 0004 	add.w	r0, r0, #4
  4069b4:	d108      	bne.n	4069c8 <memcmp+0x58>
  4069b6:	3a04      	subs	r2, #4
  4069b8:	2a03      	cmp	r2, #3
  4069ba:	d8f2      	bhi.n	4069a2 <memcmp+0x32>
  4069bc:	2a00      	cmp	r2, #0
  4069be:	d1de      	bne.n	40697e <memcmp+0xe>
  4069c0:	e7ec      	b.n	40699c <memcmp+0x2c>
  4069c2:	1b18      	subs	r0, r3, r4
  4069c4:	bc70      	pop	{r4, r5, r6}
  4069c6:	4770      	bx	lr
  4069c8:	4621      	mov	r1, r4
  4069ca:	4618      	mov	r0, r3
  4069cc:	e7d7      	b.n	40697e <memcmp+0xe>
  4069ce:	bf00      	nop

004069d0 <memcpy>:
  4069d0:	4684      	mov	ip, r0
  4069d2:	ea41 0300 	orr.w	r3, r1, r0
  4069d6:	f013 0303 	ands.w	r3, r3, #3
  4069da:	d16d      	bne.n	406ab8 <memcpy+0xe8>
  4069dc:	3a40      	subs	r2, #64	; 0x40
  4069de:	d341      	bcc.n	406a64 <memcpy+0x94>
  4069e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4069e4:	f840 3b04 	str.w	r3, [r0], #4
  4069e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4069ec:	f840 3b04 	str.w	r3, [r0], #4
  4069f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4069f4:	f840 3b04 	str.w	r3, [r0], #4
  4069f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4069fc:	f840 3b04 	str.w	r3, [r0], #4
  406a00:	f851 3b04 	ldr.w	r3, [r1], #4
  406a04:	f840 3b04 	str.w	r3, [r0], #4
  406a08:	f851 3b04 	ldr.w	r3, [r1], #4
  406a0c:	f840 3b04 	str.w	r3, [r0], #4
  406a10:	f851 3b04 	ldr.w	r3, [r1], #4
  406a14:	f840 3b04 	str.w	r3, [r0], #4
  406a18:	f851 3b04 	ldr.w	r3, [r1], #4
  406a1c:	f840 3b04 	str.w	r3, [r0], #4
  406a20:	f851 3b04 	ldr.w	r3, [r1], #4
  406a24:	f840 3b04 	str.w	r3, [r0], #4
  406a28:	f851 3b04 	ldr.w	r3, [r1], #4
  406a2c:	f840 3b04 	str.w	r3, [r0], #4
  406a30:	f851 3b04 	ldr.w	r3, [r1], #4
  406a34:	f840 3b04 	str.w	r3, [r0], #4
  406a38:	f851 3b04 	ldr.w	r3, [r1], #4
  406a3c:	f840 3b04 	str.w	r3, [r0], #4
  406a40:	f851 3b04 	ldr.w	r3, [r1], #4
  406a44:	f840 3b04 	str.w	r3, [r0], #4
  406a48:	f851 3b04 	ldr.w	r3, [r1], #4
  406a4c:	f840 3b04 	str.w	r3, [r0], #4
  406a50:	f851 3b04 	ldr.w	r3, [r1], #4
  406a54:	f840 3b04 	str.w	r3, [r0], #4
  406a58:	f851 3b04 	ldr.w	r3, [r1], #4
  406a5c:	f840 3b04 	str.w	r3, [r0], #4
  406a60:	3a40      	subs	r2, #64	; 0x40
  406a62:	d2bd      	bcs.n	4069e0 <memcpy+0x10>
  406a64:	3230      	adds	r2, #48	; 0x30
  406a66:	d311      	bcc.n	406a8c <memcpy+0xbc>
  406a68:	f851 3b04 	ldr.w	r3, [r1], #4
  406a6c:	f840 3b04 	str.w	r3, [r0], #4
  406a70:	f851 3b04 	ldr.w	r3, [r1], #4
  406a74:	f840 3b04 	str.w	r3, [r0], #4
  406a78:	f851 3b04 	ldr.w	r3, [r1], #4
  406a7c:	f840 3b04 	str.w	r3, [r0], #4
  406a80:	f851 3b04 	ldr.w	r3, [r1], #4
  406a84:	f840 3b04 	str.w	r3, [r0], #4
  406a88:	3a10      	subs	r2, #16
  406a8a:	d2ed      	bcs.n	406a68 <memcpy+0x98>
  406a8c:	320c      	adds	r2, #12
  406a8e:	d305      	bcc.n	406a9c <memcpy+0xcc>
  406a90:	f851 3b04 	ldr.w	r3, [r1], #4
  406a94:	f840 3b04 	str.w	r3, [r0], #4
  406a98:	3a04      	subs	r2, #4
  406a9a:	d2f9      	bcs.n	406a90 <memcpy+0xc0>
  406a9c:	3204      	adds	r2, #4
  406a9e:	d008      	beq.n	406ab2 <memcpy+0xe2>
  406aa0:	07d2      	lsls	r2, r2, #31
  406aa2:	bf1c      	itt	ne
  406aa4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406aa8:	f800 3b01 	strbne.w	r3, [r0], #1
  406aac:	d301      	bcc.n	406ab2 <memcpy+0xe2>
  406aae:	880b      	ldrh	r3, [r1, #0]
  406ab0:	8003      	strh	r3, [r0, #0]
  406ab2:	4660      	mov	r0, ip
  406ab4:	4770      	bx	lr
  406ab6:	bf00      	nop
  406ab8:	2a08      	cmp	r2, #8
  406aba:	d313      	bcc.n	406ae4 <memcpy+0x114>
  406abc:	078b      	lsls	r3, r1, #30
  406abe:	d08d      	beq.n	4069dc <memcpy+0xc>
  406ac0:	f010 0303 	ands.w	r3, r0, #3
  406ac4:	d08a      	beq.n	4069dc <memcpy+0xc>
  406ac6:	f1c3 0304 	rsb	r3, r3, #4
  406aca:	1ad2      	subs	r2, r2, r3
  406acc:	07db      	lsls	r3, r3, #31
  406ace:	bf1c      	itt	ne
  406ad0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406ad4:	f800 3b01 	strbne.w	r3, [r0], #1
  406ad8:	d380      	bcc.n	4069dc <memcpy+0xc>
  406ada:	f831 3b02 	ldrh.w	r3, [r1], #2
  406ade:	f820 3b02 	strh.w	r3, [r0], #2
  406ae2:	e77b      	b.n	4069dc <memcpy+0xc>
  406ae4:	3a04      	subs	r2, #4
  406ae6:	d3d9      	bcc.n	406a9c <memcpy+0xcc>
  406ae8:	3a01      	subs	r2, #1
  406aea:	f811 3b01 	ldrb.w	r3, [r1], #1
  406aee:	f800 3b01 	strb.w	r3, [r0], #1
  406af2:	d2f9      	bcs.n	406ae8 <memcpy+0x118>
  406af4:	780b      	ldrb	r3, [r1, #0]
  406af6:	7003      	strb	r3, [r0, #0]
  406af8:	784b      	ldrb	r3, [r1, #1]
  406afa:	7043      	strb	r3, [r0, #1]
  406afc:	788b      	ldrb	r3, [r1, #2]
  406afe:	7083      	strb	r3, [r0, #2]
  406b00:	4660      	mov	r0, ip
  406b02:	4770      	bx	lr

00406b04 <__malloc_lock>:
  406b04:	4770      	bx	lr
  406b06:	bf00      	nop

00406b08 <__malloc_unlock>:
  406b08:	4770      	bx	lr
  406b0a:	bf00      	nop

00406b0c <_Balloc>:
  406b0c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406b0e:	b570      	push	{r4, r5, r6, lr}
  406b10:	4605      	mov	r5, r0
  406b12:	460c      	mov	r4, r1
  406b14:	b14b      	cbz	r3, 406b2a <_Balloc+0x1e>
  406b16:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  406b1a:	b180      	cbz	r0, 406b3e <_Balloc+0x32>
  406b1c:	6802      	ldr	r2, [r0, #0]
  406b1e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  406b22:	2300      	movs	r3, #0
  406b24:	6103      	str	r3, [r0, #16]
  406b26:	60c3      	str	r3, [r0, #12]
  406b28:	bd70      	pop	{r4, r5, r6, pc}
  406b2a:	2221      	movs	r2, #33	; 0x21
  406b2c:	2104      	movs	r1, #4
  406b2e:	f000 fcc5 	bl	4074bc <_calloc_r>
  406b32:	64e8      	str	r0, [r5, #76]	; 0x4c
  406b34:	4603      	mov	r3, r0
  406b36:	2800      	cmp	r0, #0
  406b38:	d1ed      	bne.n	406b16 <_Balloc+0xa>
  406b3a:	2000      	movs	r0, #0
  406b3c:	bd70      	pop	{r4, r5, r6, pc}
  406b3e:	2101      	movs	r1, #1
  406b40:	fa01 f604 	lsl.w	r6, r1, r4
  406b44:	1d72      	adds	r2, r6, #5
  406b46:	4628      	mov	r0, r5
  406b48:	0092      	lsls	r2, r2, #2
  406b4a:	f000 fcb7 	bl	4074bc <_calloc_r>
  406b4e:	2800      	cmp	r0, #0
  406b50:	d0f3      	beq.n	406b3a <_Balloc+0x2e>
  406b52:	6044      	str	r4, [r0, #4]
  406b54:	6086      	str	r6, [r0, #8]
  406b56:	e7e4      	b.n	406b22 <_Balloc+0x16>

00406b58 <_Bfree>:
  406b58:	b131      	cbz	r1, 406b68 <_Bfree+0x10>
  406b5a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406b5c:	684a      	ldr	r2, [r1, #4]
  406b5e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  406b62:	6008      	str	r0, [r1, #0]
  406b64:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  406b68:	4770      	bx	lr
  406b6a:	bf00      	nop

00406b6c <__multadd>:
  406b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
  406b6e:	690c      	ldr	r4, [r1, #16]
  406b70:	b083      	sub	sp, #12
  406b72:	460d      	mov	r5, r1
  406b74:	4606      	mov	r6, r0
  406b76:	f101 0e14 	add.w	lr, r1, #20
  406b7a:	2700      	movs	r7, #0
  406b7c:	f8de 0000 	ldr.w	r0, [lr]
  406b80:	b281      	uxth	r1, r0
  406b82:	fb02 3301 	mla	r3, r2, r1, r3
  406b86:	0c01      	lsrs	r1, r0, #16
  406b88:	0c18      	lsrs	r0, r3, #16
  406b8a:	fb02 0101 	mla	r1, r2, r1, r0
  406b8e:	b29b      	uxth	r3, r3
  406b90:	3701      	adds	r7, #1
  406b92:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  406b96:	42bc      	cmp	r4, r7
  406b98:	f84e 3b04 	str.w	r3, [lr], #4
  406b9c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  406ba0:	dcec      	bgt.n	406b7c <__multadd+0x10>
  406ba2:	b13b      	cbz	r3, 406bb4 <__multadd+0x48>
  406ba4:	68aa      	ldr	r2, [r5, #8]
  406ba6:	4294      	cmp	r4, r2
  406ba8:	da07      	bge.n	406bba <__multadd+0x4e>
  406baa:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  406bae:	3401      	adds	r4, #1
  406bb0:	6153      	str	r3, [r2, #20]
  406bb2:	612c      	str	r4, [r5, #16]
  406bb4:	4628      	mov	r0, r5
  406bb6:	b003      	add	sp, #12
  406bb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406bba:	6869      	ldr	r1, [r5, #4]
  406bbc:	9301      	str	r3, [sp, #4]
  406bbe:	3101      	adds	r1, #1
  406bc0:	4630      	mov	r0, r6
  406bc2:	f7ff ffa3 	bl	406b0c <_Balloc>
  406bc6:	692a      	ldr	r2, [r5, #16]
  406bc8:	3202      	adds	r2, #2
  406bca:	f105 010c 	add.w	r1, r5, #12
  406bce:	4607      	mov	r7, r0
  406bd0:	0092      	lsls	r2, r2, #2
  406bd2:	300c      	adds	r0, #12
  406bd4:	f7ff fefc 	bl	4069d0 <memcpy>
  406bd8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  406bda:	6869      	ldr	r1, [r5, #4]
  406bdc:	9b01      	ldr	r3, [sp, #4]
  406bde:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  406be2:	6028      	str	r0, [r5, #0]
  406be4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  406be8:	463d      	mov	r5, r7
  406bea:	e7de      	b.n	406baa <__multadd+0x3e>

00406bec <__hi0bits>:
  406bec:	0c02      	lsrs	r2, r0, #16
  406bee:	0412      	lsls	r2, r2, #16
  406bf0:	4603      	mov	r3, r0
  406bf2:	b9b2      	cbnz	r2, 406c22 <__hi0bits+0x36>
  406bf4:	0403      	lsls	r3, r0, #16
  406bf6:	2010      	movs	r0, #16
  406bf8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406bfc:	bf04      	itt	eq
  406bfe:	021b      	lsleq	r3, r3, #8
  406c00:	3008      	addeq	r0, #8
  406c02:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  406c06:	bf04      	itt	eq
  406c08:	011b      	lsleq	r3, r3, #4
  406c0a:	3004      	addeq	r0, #4
  406c0c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406c10:	bf04      	itt	eq
  406c12:	009b      	lsleq	r3, r3, #2
  406c14:	3002      	addeq	r0, #2
  406c16:	2b00      	cmp	r3, #0
  406c18:	db02      	blt.n	406c20 <__hi0bits+0x34>
  406c1a:	005b      	lsls	r3, r3, #1
  406c1c:	d403      	bmi.n	406c26 <__hi0bits+0x3a>
  406c1e:	2020      	movs	r0, #32
  406c20:	4770      	bx	lr
  406c22:	2000      	movs	r0, #0
  406c24:	e7e8      	b.n	406bf8 <__hi0bits+0xc>
  406c26:	3001      	adds	r0, #1
  406c28:	4770      	bx	lr
  406c2a:	bf00      	nop

00406c2c <__lo0bits>:
  406c2c:	6803      	ldr	r3, [r0, #0]
  406c2e:	f013 0207 	ands.w	r2, r3, #7
  406c32:	4601      	mov	r1, r0
  406c34:	d007      	beq.n	406c46 <__lo0bits+0x1a>
  406c36:	07da      	lsls	r2, r3, #31
  406c38:	d421      	bmi.n	406c7e <__lo0bits+0x52>
  406c3a:	0798      	lsls	r0, r3, #30
  406c3c:	d421      	bmi.n	406c82 <__lo0bits+0x56>
  406c3e:	089b      	lsrs	r3, r3, #2
  406c40:	600b      	str	r3, [r1, #0]
  406c42:	2002      	movs	r0, #2
  406c44:	4770      	bx	lr
  406c46:	b298      	uxth	r0, r3
  406c48:	b198      	cbz	r0, 406c72 <__lo0bits+0x46>
  406c4a:	4610      	mov	r0, r2
  406c4c:	f013 0fff 	tst.w	r3, #255	; 0xff
  406c50:	bf04      	itt	eq
  406c52:	0a1b      	lsreq	r3, r3, #8
  406c54:	3008      	addeq	r0, #8
  406c56:	071a      	lsls	r2, r3, #28
  406c58:	bf04      	itt	eq
  406c5a:	091b      	lsreq	r3, r3, #4
  406c5c:	3004      	addeq	r0, #4
  406c5e:	079a      	lsls	r2, r3, #30
  406c60:	bf04      	itt	eq
  406c62:	089b      	lsreq	r3, r3, #2
  406c64:	3002      	addeq	r0, #2
  406c66:	07da      	lsls	r2, r3, #31
  406c68:	d407      	bmi.n	406c7a <__lo0bits+0x4e>
  406c6a:	085b      	lsrs	r3, r3, #1
  406c6c:	d104      	bne.n	406c78 <__lo0bits+0x4c>
  406c6e:	2020      	movs	r0, #32
  406c70:	4770      	bx	lr
  406c72:	0c1b      	lsrs	r3, r3, #16
  406c74:	2010      	movs	r0, #16
  406c76:	e7e9      	b.n	406c4c <__lo0bits+0x20>
  406c78:	3001      	adds	r0, #1
  406c7a:	600b      	str	r3, [r1, #0]
  406c7c:	4770      	bx	lr
  406c7e:	2000      	movs	r0, #0
  406c80:	4770      	bx	lr
  406c82:	085b      	lsrs	r3, r3, #1
  406c84:	600b      	str	r3, [r1, #0]
  406c86:	2001      	movs	r0, #1
  406c88:	4770      	bx	lr
  406c8a:	bf00      	nop

00406c8c <__i2b>:
  406c8c:	b510      	push	{r4, lr}
  406c8e:	460c      	mov	r4, r1
  406c90:	2101      	movs	r1, #1
  406c92:	f7ff ff3b 	bl	406b0c <_Balloc>
  406c96:	2201      	movs	r2, #1
  406c98:	6144      	str	r4, [r0, #20]
  406c9a:	6102      	str	r2, [r0, #16]
  406c9c:	bd10      	pop	{r4, pc}
  406c9e:	bf00      	nop

00406ca0 <__multiply>:
  406ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406ca4:	690c      	ldr	r4, [r1, #16]
  406ca6:	6915      	ldr	r5, [r2, #16]
  406ca8:	42ac      	cmp	r4, r5
  406caa:	b083      	sub	sp, #12
  406cac:	468b      	mov	fp, r1
  406cae:	4616      	mov	r6, r2
  406cb0:	da04      	bge.n	406cbc <__multiply+0x1c>
  406cb2:	4622      	mov	r2, r4
  406cb4:	46b3      	mov	fp, r6
  406cb6:	462c      	mov	r4, r5
  406cb8:	460e      	mov	r6, r1
  406cba:	4615      	mov	r5, r2
  406cbc:	f8db 3008 	ldr.w	r3, [fp, #8]
  406cc0:	f8db 1004 	ldr.w	r1, [fp, #4]
  406cc4:	eb04 0805 	add.w	r8, r4, r5
  406cc8:	4598      	cmp	r8, r3
  406cca:	bfc8      	it	gt
  406ccc:	3101      	addgt	r1, #1
  406cce:	f7ff ff1d 	bl	406b0c <_Balloc>
  406cd2:	f100 0914 	add.w	r9, r0, #20
  406cd6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  406cda:	45d1      	cmp	r9, sl
  406cdc:	9000      	str	r0, [sp, #0]
  406cde:	d205      	bcs.n	406cec <__multiply+0x4c>
  406ce0:	464b      	mov	r3, r9
  406ce2:	2100      	movs	r1, #0
  406ce4:	f843 1b04 	str.w	r1, [r3], #4
  406ce8:	459a      	cmp	sl, r3
  406cea:	d8fb      	bhi.n	406ce4 <__multiply+0x44>
  406cec:	f106 0c14 	add.w	ip, r6, #20
  406cf0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  406cf4:	f10b 0b14 	add.w	fp, fp, #20
  406cf8:	459c      	cmp	ip, r3
  406cfa:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406cfe:	d24c      	bcs.n	406d9a <__multiply+0xfa>
  406d00:	f8cd a004 	str.w	sl, [sp, #4]
  406d04:	469a      	mov	sl, r3
  406d06:	f8dc 5000 	ldr.w	r5, [ip]
  406d0a:	b2af      	uxth	r7, r5
  406d0c:	b1ef      	cbz	r7, 406d4a <__multiply+0xaa>
  406d0e:	2100      	movs	r1, #0
  406d10:	464d      	mov	r5, r9
  406d12:	465e      	mov	r6, fp
  406d14:	460c      	mov	r4, r1
  406d16:	f856 2b04 	ldr.w	r2, [r6], #4
  406d1a:	6828      	ldr	r0, [r5, #0]
  406d1c:	b293      	uxth	r3, r2
  406d1e:	b281      	uxth	r1, r0
  406d20:	fb07 1303 	mla	r3, r7, r3, r1
  406d24:	0c12      	lsrs	r2, r2, #16
  406d26:	0c01      	lsrs	r1, r0, #16
  406d28:	4423      	add	r3, r4
  406d2a:	fb07 1102 	mla	r1, r7, r2, r1
  406d2e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  406d32:	b29b      	uxth	r3, r3
  406d34:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  406d38:	45b6      	cmp	lr, r6
  406d3a:	f845 3b04 	str.w	r3, [r5], #4
  406d3e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  406d42:	d8e8      	bhi.n	406d16 <__multiply+0x76>
  406d44:	602c      	str	r4, [r5, #0]
  406d46:	f8dc 5000 	ldr.w	r5, [ip]
  406d4a:	0c2d      	lsrs	r5, r5, #16
  406d4c:	d01d      	beq.n	406d8a <__multiply+0xea>
  406d4e:	f8d9 3000 	ldr.w	r3, [r9]
  406d52:	4648      	mov	r0, r9
  406d54:	461c      	mov	r4, r3
  406d56:	4659      	mov	r1, fp
  406d58:	2200      	movs	r2, #0
  406d5a:	880e      	ldrh	r6, [r1, #0]
  406d5c:	0c24      	lsrs	r4, r4, #16
  406d5e:	fb05 4406 	mla	r4, r5, r6, r4
  406d62:	4422      	add	r2, r4
  406d64:	b29b      	uxth	r3, r3
  406d66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  406d6a:	f840 3b04 	str.w	r3, [r0], #4
  406d6e:	f851 3b04 	ldr.w	r3, [r1], #4
  406d72:	6804      	ldr	r4, [r0, #0]
  406d74:	0c1b      	lsrs	r3, r3, #16
  406d76:	b2a6      	uxth	r6, r4
  406d78:	fb05 6303 	mla	r3, r5, r3, r6
  406d7c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  406d80:	458e      	cmp	lr, r1
  406d82:	ea4f 4213 	mov.w	r2, r3, lsr #16
  406d86:	d8e8      	bhi.n	406d5a <__multiply+0xba>
  406d88:	6003      	str	r3, [r0, #0]
  406d8a:	f10c 0c04 	add.w	ip, ip, #4
  406d8e:	45e2      	cmp	sl, ip
  406d90:	f109 0904 	add.w	r9, r9, #4
  406d94:	d8b7      	bhi.n	406d06 <__multiply+0x66>
  406d96:	f8dd a004 	ldr.w	sl, [sp, #4]
  406d9a:	f1b8 0f00 	cmp.w	r8, #0
  406d9e:	dd0b      	ble.n	406db8 <__multiply+0x118>
  406da0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  406da4:	f1aa 0a04 	sub.w	sl, sl, #4
  406da8:	b11b      	cbz	r3, 406db2 <__multiply+0x112>
  406daa:	e005      	b.n	406db8 <__multiply+0x118>
  406dac:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  406db0:	b913      	cbnz	r3, 406db8 <__multiply+0x118>
  406db2:	f1b8 0801 	subs.w	r8, r8, #1
  406db6:	d1f9      	bne.n	406dac <__multiply+0x10c>
  406db8:	9800      	ldr	r0, [sp, #0]
  406dba:	f8c0 8010 	str.w	r8, [r0, #16]
  406dbe:	b003      	add	sp, #12
  406dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406dc4 <__pow5mult>:
  406dc4:	f012 0303 	ands.w	r3, r2, #3
  406dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406dcc:	4614      	mov	r4, r2
  406dce:	4607      	mov	r7, r0
  406dd0:	d12e      	bne.n	406e30 <__pow5mult+0x6c>
  406dd2:	460d      	mov	r5, r1
  406dd4:	10a4      	asrs	r4, r4, #2
  406dd6:	d01c      	beq.n	406e12 <__pow5mult+0x4e>
  406dd8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  406dda:	b396      	cbz	r6, 406e42 <__pow5mult+0x7e>
  406ddc:	07e3      	lsls	r3, r4, #31
  406dde:	f04f 0800 	mov.w	r8, #0
  406de2:	d406      	bmi.n	406df2 <__pow5mult+0x2e>
  406de4:	1064      	asrs	r4, r4, #1
  406de6:	d014      	beq.n	406e12 <__pow5mult+0x4e>
  406de8:	6830      	ldr	r0, [r6, #0]
  406dea:	b1a8      	cbz	r0, 406e18 <__pow5mult+0x54>
  406dec:	4606      	mov	r6, r0
  406dee:	07e3      	lsls	r3, r4, #31
  406df0:	d5f8      	bpl.n	406de4 <__pow5mult+0x20>
  406df2:	4632      	mov	r2, r6
  406df4:	4629      	mov	r1, r5
  406df6:	4638      	mov	r0, r7
  406df8:	f7ff ff52 	bl	406ca0 <__multiply>
  406dfc:	b1b5      	cbz	r5, 406e2c <__pow5mult+0x68>
  406dfe:	686a      	ldr	r2, [r5, #4]
  406e00:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406e02:	1064      	asrs	r4, r4, #1
  406e04:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406e08:	6029      	str	r1, [r5, #0]
  406e0a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  406e0e:	4605      	mov	r5, r0
  406e10:	d1ea      	bne.n	406de8 <__pow5mult+0x24>
  406e12:	4628      	mov	r0, r5
  406e14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406e18:	4632      	mov	r2, r6
  406e1a:	4631      	mov	r1, r6
  406e1c:	4638      	mov	r0, r7
  406e1e:	f7ff ff3f 	bl	406ca0 <__multiply>
  406e22:	6030      	str	r0, [r6, #0]
  406e24:	f8c0 8000 	str.w	r8, [r0]
  406e28:	4606      	mov	r6, r0
  406e2a:	e7e0      	b.n	406dee <__pow5mult+0x2a>
  406e2c:	4605      	mov	r5, r0
  406e2e:	e7d9      	b.n	406de4 <__pow5mult+0x20>
  406e30:	1e5a      	subs	r2, r3, #1
  406e32:	4d0b      	ldr	r5, [pc, #44]	; (406e60 <__pow5mult+0x9c>)
  406e34:	2300      	movs	r3, #0
  406e36:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  406e3a:	f7ff fe97 	bl	406b6c <__multadd>
  406e3e:	4605      	mov	r5, r0
  406e40:	e7c8      	b.n	406dd4 <__pow5mult+0x10>
  406e42:	2101      	movs	r1, #1
  406e44:	4638      	mov	r0, r7
  406e46:	f7ff fe61 	bl	406b0c <_Balloc>
  406e4a:	f240 2171 	movw	r1, #625	; 0x271
  406e4e:	2201      	movs	r2, #1
  406e50:	2300      	movs	r3, #0
  406e52:	6141      	str	r1, [r0, #20]
  406e54:	6102      	str	r2, [r0, #16]
  406e56:	4606      	mov	r6, r0
  406e58:	64b8      	str	r0, [r7, #72]	; 0x48
  406e5a:	6003      	str	r3, [r0, #0]
  406e5c:	e7be      	b.n	406ddc <__pow5mult+0x18>
  406e5e:	bf00      	nop
  406e60:	004093f0 	.word	0x004093f0

00406e64 <__lshift>:
  406e64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406e68:	4691      	mov	r9, r2
  406e6a:	690a      	ldr	r2, [r1, #16]
  406e6c:	688b      	ldr	r3, [r1, #8]
  406e6e:	ea4f 1469 	mov.w	r4, r9, asr #5
  406e72:	eb04 0802 	add.w	r8, r4, r2
  406e76:	f108 0501 	add.w	r5, r8, #1
  406e7a:	429d      	cmp	r5, r3
  406e7c:	460e      	mov	r6, r1
  406e7e:	4607      	mov	r7, r0
  406e80:	6849      	ldr	r1, [r1, #4]
  406e82:	dd04      	ble.n	406e8e <__lshift+0x2a>
  406e84:	005b      	lsls	r3, r3, #1
  406e86:	429d      	cmp	r5, r3
  406e88:	f101 0101 	add.w	r1, r1, #1
  406e8c:	dcfa      	bgt.n	406e84 <__lshift+0x20>
  406e8e:	4638      	mov	r0, r7
  406e90:	f7ff fe3c 	bl	406b0c <_Balloc>
  406e94:	2c00      	cmp	r4, #0
  406e96:	f100 0314 	add.w	r3, r0, #20
  406e9a:	dd06      	ble.n	406eaa <__lshift+0x46>
  406e9c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  406ea0:	2100      	movs	r1, #0
  406ea2:	f843 1b04 	str.w	r1, [r3], #4
  406ea6:	429a      	cmp	r2, r3
  406ea8:	d1fb      	bne.n	406ea2 <__lshift+0x3e>
  406eaa:	6934      	ldr	r4, [r6, #16]
  406eac:	f106 0114 	add.w	r1, r6, #20
  406eb0:	f019 091f 	ands.w	r9, r9, #31
  406eb4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  406eb8:	d01d      	beq.n	406ef6 <__lshift+0x92>
  406eba:	f1c9 0c20 	rsb	ip, r9, #32
  406ebe:	2200      	movs	r2, #0
  406ec0:	680c      	ldr	r4, [r1, #0]
  406ec2:	fa04 f409 	lsl.w	r4, r4, r9
  406ec6:	4314      	orrs	r4, r2
  406ec8:	f843 4b04 	str.w	r4, [r3], #4
  406ecc:	f851 2b04 	ldr.w	r2, [r1], #4
  406ed0:	458e      	cmp	lr, r1
  406ed2:	fa22 f20c 	lsr.w	r2, r2, ip
  406ed6:	d8f3      	bhi.n	406ec0 <__lshift+0x5c>
  406ed8:	601a      	str	r2, [r3, #0]
  406eda:	b10a      	cbz	r2, 406ee0 <__lshift+0x7c>
  406edc:	f108 0502 	add.w	r5, r8, #2
  406ee0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406ee2:	6872      	ldr	r2, [r6, #4]
  406ee4:	3d01      	subs	r5, #1
  406ee6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406eea:	6105      	str	r5, [r0, #16]
  406eec:	6031      	str	r1, [r6, #0]
  406eee:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  406ef2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406ef6:	3b04      	subs	r3, #4
  406ef8:	f851 2b04 	ldr.w	r2, [r1], #4
  406efc:	f843 2f04 	str.w	r2, [r3, #4]!
  406f00:	458e      	cmp	lr, r1
  406f02:	d8f9      	bhi.n	406ef8 <__lshift+0x94>
  406f04:	e7ec      	b.n	406ee0 <__lshift+0x7c>
  406f06:	bf00      	nop

00406f08 <__mcmp>:
  406f08:	b430      	push	{r4, r5}
  406f0a:	690b      	ldr	r3, [r1, #16]
  406f0c:	4605      	mov	r5, r0
  406f0e:	6900      	ldr	r0, [r0, #16]
  406f10:	1ac0      	subs	r0, r0, r3
  406f12:	d10f      	bne.n	406f34 <__mcmp+0x2c>
  406f14:	009b      	lsls	r3, r3, #2
  406f16:	3514      	adds	r5, #20
  406f18:	3114      	adds	r1, #20
  406f1a:	4419      	add	r1, r3
  406f1c:	442b      	add	r3, r5
  406f1e:	e001      	b.n	406f24 <__mcmp+0x1c>
  406f20:	429d      	cmp	r5, r3
  406f22:	d207      	bcs.n	406f34 <__mcmp+0x2c>
  406f24:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  406f28:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  406f2c:	4294      	cmp	r4, r2
  406f2e:	d0f7      	beq.n	406f20 <__mcmp+0x18>
  406f30:	d302      	bcc.n	406f38 <__mcmp+0x30>
  406f32:	2001      	movs	r0, #1
  406f34:	bc30      	pop	{r4, r5}
  406f36:	4770      	bx	lr
  406f38:	f04f 30ff 	mov.w	r0, #4294967295
  406f3c:	e7fa      	b.n	406f34 <__mcmp+0x2c>
  406f3e:	bf00      	nop

00406f40 <__mdiff>:
  406f40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406f44:	690f      	ldr	r7, [r1, #16]
  406f46:	460e      	mov	r6, r1
  406f48:	6911      	ldr	r1, [r2, #16]
  406f4a:	1a7f      	subs	r7, r7, r1
  406f4c:	2f00      	cmp	r7, #0
  406f4e:	4690      	mov	r8, r2
  406f50:	d117      	bne.n	406f82 <__mdiff+0x42>
  406f52:	0089      	lsls	r1, r1, #2
  406f54:	f106 0514 	add.w	r5, r6, #20
  406f58:	f102 0e14 	add.w	lr, r2, #20
  406f5c:	186b      	adds	r3, r5, r1
  406f5e:	4471      	add	r1, lr
  406f60:	e001      	b.n	406f66 <__mdiff+0x26>
  406f62:	429d      	cmp	r5, r3
  406f64:	d25c      	bcs.n	407020 <__mdiff+0xe0>
  406f66:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  406f6a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  406f6e:	42a2      	cmp	r2, r4
  406f70:	d0f7      	beq.n	406f62 <__mdiff+0x22>
  406f72:	d25e      	bcs.n	407032 <__mdiff+0xf2>
  406f74:	4633      	mov	r3, r6
  406f76:	462c      	mov	r4, r5
  406f78:	4646      	mov	r6, r8
  406f7a:	4675      	mov	r5, lr
  406f7c:	4698      	mov	r8, r3
  406f7e:	2701      	movs	r7, #1
  406f80:	e005      	b.n	406f8e <__mdiff+0x4e>
  406f82:	db58      	blt.n	407036 <__mdiff+0xf6>
  406f84:	f106 0514 	add.w	r5, r6, #20
  406f88:	f108 0414 	add.w	r4, r8, #20
  406f8c:	2700      	movs	r7, #0
  406f8e:	6871      	ldr	r1, [r6, #4]
  406f90:	f7ff fdbc 	bl	406b0c <_Balloc>
  406f94:	f8d8 3010 	ldr.w	r3, [r8, #16]
  406f98:	6936      	ldr	r6, [r6, #16]
  406f9a:	60c7      	str	r7, [r0, #12]
  406f9c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  406fa0:	46a6      	mov	lr, r4
  406fa2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  406fa6:	f100 0414 	add.w	r4, r0, #20
  406faa:	2300      	movs	r3, #0
  406fac:	f85e 1b04 	ldr.w	r1, [lr], #4
  406fb0:	f855 8b04 	ldr.w	r8, [r5], #4
  406fb4:	b28a      	uxth	r2, r1
  406fb6:	fa13 f388 	uxtah	r3, r3, r8
  406fba:	0c09      	lsrs	r1, r1, #16
  406fbc:	1a9a      	subs	r2, r3, r2
  406fbe:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  406fc2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  406fc6:	b292      	uxth	r2, r2
  406fc8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  406fcc:	45f4      	cmp	ip, lr
  406fce:	f844 2b04 	str.w	r2, [r4], #4
  406fd2:	ea4f 4323 	mov.w	r3, r3, asr #16
  406fd6:	d8e9      	bhi.n	406fac <__mdiff+0x6c>
  406fd8:	42af      	cmp	r7, r5
  406fda:	d917      	bls.n	40700c <__mdiff+0xcc>
  406fdc:	46a4      	mov	ip, r4
  406fde:	46ae      	mov	lr, r5
  406fe0:	f85e 2b04 	ldr.w	r2, [lr], #4
  406fe4:	fa13 f382 	uxtah	r3, r3, r2
  406fe8:	1419      	asrs	r1, r3, #16
  406fea:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  406fee:	b29b      	uxth	r3, r3
  406ff0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  406ff4:	4577      	cmp	r7, lr
  406ff6:	f84c 2b04 	str.w	r2, [ip], #4
  406ffa:	ea4f 4321 	mov.w	r3, r1, asr #16
  406ffe:	d8ef      	bhi.n	406fe0 <__mdiff+0xa0>
  407000:	43ed      	mvns	r5, r5
  407002:	442f      	add	r7, r5
  407004:	f027 0703 	bic.w	r7, r7, #3
  407008:	3704      	adds	r7, #4
  40700a:	443c      	add	r4, r7
  40700c:	3c04      	subs	r4, #4
  40700e:	b922      	cbnz	r2, 40701a <__mdiff+0xda>
  407010:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  407014:	3e01      	subs	r6, #1
  407016:	2b00      	cmp	r3, #0
  407018:	d0fa      	beq.n	407010 <__mdiff+0xd0>
  40701a:	6106      	str	r6, [r0, #16]
  40701c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407020:	2100      	movs	r1, #0
  407022:	f7ff fd73 	bl	406b0c <_Balloc>
  407026:	2201      	movs	r2, #1
  407028:	2300      	movs	r3, #0
  40702a:	6102      	str	r2, [r0, #16]
  40702c:	6143      	str	r3, [r0, #20]
  40702e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407032:	4674      	mov	r4, lr
  407034:	e7ab      	b.n	406f8e <__mdiff+0x4e>
  407036:	4633      	mov	r3, r6
  407038:	f106 0414 	add.w	r4, r6, #20
  40703c:	f102 0514 	add.w	r5, r2, #20
  407040:	4616      	mov	r6, r2
  407042:	2701      	movs	r7, #1
  407044:	4698      	mov	r8, r3
  407046:	e7a2      	b.n	406f8e <__mdiff+0x4e>

00407048 <__d2b>:
  407048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40704c:	b082      	sub	sp, #8
  40704e:	2101      	movs	r1, #1
  407050:	461c      	mov	r4, r3
  407052:	f3c3 570a 	ubfx	r7, r3, #20, #11
  407056:	4615      	mov	r5, r2
  407058:	9e08      	ldr	r6, [sp, #32]
  40705a:	f7ff fd57 	bl	406b0c <_Balloc>
  40705e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  407062:	4680      	mov	r8, r0
  407064:	b10f      	cbz	r7, 40706a <__d2b+0x22>
  407066:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40706a:	9401      	str	r4, [sp, #4]
  40706c:	b31d      	cbz	r5, 4070b6 <__d2b+0x6e>
  40706e:	a802      	add	r0, sp, #8
  407070:	f840 5d08 	str.w	r5, [r0, #-8]!
  407074:	f7ff fdda 	bl	406c2c <__lo0bits>
  407078:	2800      	cmp	r0, #0
  40707a:	d134      	bne.n	4070e6 <__d2b+0x9e>
  40707c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407080:	f8c8 2014 	str.w	r2, [r8, #20]
  407084:	2b00      	cmp	r3, #0
  407086:	bf0c      	ite	eq
  407088:	2101      	moveq	r1, #1
  40708a:	2102      	movne	r1, #2
  40708c:	f8c8 3018 	str.w	r3, [r8, #24]
  407090:	f8c8 1010 	str.w	r1, [r8, #16]
  407094:	b9df      	cbnz	r7, 4070ce <__d2b+0x86>
  407096:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40709a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40709e:	6030      	str	r0, [r6, #0]
  4070a0:	6918      	ldr	r0, [r3, #16]
  4070a2:	f7ff fda3 	bl	406bec <__hi0bits>
  4070a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4070a8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4070ac:	6018      	str	r0, [r3, #0]
  4070ae:	4640      	mov	r0, r8
  4070b0:	b002      	add	sp, #8
  4070b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4070b6:	a801      	add	r0, sp, #4
  4070b8:	f7ff fdb8 	bl	406c2c <__lo0bits>
  4070bc:	9b01      	ldr	r3, [sp, #4]
  4070be:	f8c8 3014 	str.w	r3, [r8, #20]
  4070c2:	2101      	movs	r1, #1
  4070c4:	3020      	adds	r0, #32
  4070c6:	f8c8 1010 	str.w	r1, [r8, #16]
  4070ca:	2f00      	cmp	r7, #0
  4070cc:	d0e3      	beq.n	407096 <__d2b+0x4e>
  4070ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4070d0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4070d4:	4407      	add	r7, r0
  4070d6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4070da:	6037      	str	r7, [r6, #0]
  4070dc:	6018      	str	r0, [r3, #0]
  4070de:	4640      	mov	r0, r8
  4070e0:	b002      	add	sp, #8
  4070e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4070e6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4070ea:	f1c0 0220 	rsb	r2, r0, #32
  4070ee:	fa03 f202 	lsl.w	r2, r3, r2
  4070f2:	430a      	orrs	r2, r1
  4070f4:	40c3      	lsrs	r3, r0
  4070f6:	9301      	str	r3, [sp, #4]
  4070f8:	f8c8 2014 	str.w	r2, [r8, #20]
  4070fc:	e7c2      	b.n	407084 <__d2b+0x3c>
  4070fe:	bf00      	nop

00407100 <_sbrk_r>:
  407100:	b538      	push	{r3, r4, r5, lr}
  407102:	4c07      	ldr	r4, [pc, #28]	; (407120 <_sbrk_r+0x20>)
  407104:	2300      	movs	r3, #0
  407106:	4605      	mov	r5, r0
  407108:	4608      	mov	r0, r1
  40710a:	6023      	str	r3, [r4, #0]
  40710c:	f7fb feb6 	bl	402e7c <_sbrk>
  407110:	1c43      	adds	r3, r0, #1
  407112:	d000      	beq.n	407116 <_sbrk_r+0x16>
  407114:	bd38      	pop	{r3, r4, r5, pc}
  407116:	6823      	ldr	r3, [r4, #0]
  407118:	2b00      	cmp	r3, #0
  40711a:	d0fb      	beq.n	407114 <_sbrk_r+0x14>
  40711c:	602b      	str	r3, [r5, #0]
  40711e:	bd38      	pop	{r3, r4, r5, pc}
  407120:	2000d1fc 	.word	0x2000d1fc

00407124 <strchr>:
  407124:	b2c9      	uxtb	r1, r1
  407126:	2900      	cmp	r1, #0
  407128:	d041      	beq.n	4071ae <strchr+0x8a>
  40712a:	0782      	lsls	r2, r0, #30
  40712c:	b4f0      	push	{r4, r5, r6, r7}
  40712e:	d067      	beq.n	407200 <strchr+0xdc>
  407130:	7803      	ldrb	r3, [r0, #0]
  407132:	2b00      	cmp	r3, #0
  407134:	d068      	beq.n	407208 <strchr+0xe4>
  407136:	4299      	cmp	r1, r3
  407138:	d037      	beq.n	4071aa <strchr+0x86>
  40713a:	1c43      	adds	r3, r0, #1
  40713c:	e004      	b.n	407148 <strchr+0x24>
  40713e:	f813 0b01 	ldrb.w	r0, [r3], #1
  407142:	b390      	cbz	r0, 4071aa <strchr+0x86>
  407144:	4281      	cmp	r1, r0
  407146:	d02f      	beq.n	4071a8 <strchr+0x84>
  407148:	079a      	lsls	r2, r3, #30
  40714a:	461c      	mov	r4, r3
  40714c:	d1f7      	bne.n	40713e <strchr+0x1a>
  40714e:	6825      	ldr	r5, [r4, #0]
  407150:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  407154:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  407158:	ea83 0605 	eor.w	r6, r3, r5
  40715c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  407160:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  407164:	ea20 0006 	bic.w	r0, r0, r6
  407168:	ea22 0205 	bic.w	r2, r2, r5
  40716c:	4302      	orrs	r2, r0
  40716e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407172:	d111      	bne.n	407198 <strchr+0x74>
  407174:	4620      	mov	r0, r4
  407176:	f850 6f04 	ldr.w	r6, [r0, #4]!
  40717a:	ea83 0706 	eor.w	r7, r3, r6
  40717e:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  407182:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  407186:	ea25 0507 	bic.w	r5, r5, r7
  40718a:	ea22 0206 	bic.w	r2, r2, r6
  40718e:	432a      	orrs	r2, r5
  407190:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407194:	d0ef      	beq.n	407176 <strchr+0x52>
  407196:	4604      	mov	r4, r0
  407198:	7820      	ldrb	r0, [r4, #0]
  40719a:	b918      	cbnz	r0, 4071a4 <strchr+0x80>
  40719c:	e005      	b.n	4071aa <strchr+0x86>
  40719e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  4071a2:	b110      	cbz	r0, 4071aa <strchr+0x86>
  4071a4:	4281      	cmp	r1, r0
  4071a6:	d1fa      	bne.n	40719e <strchr+0x7a>
  4071a8:	4620      	mov	r0, r4
  4071aa:	bcf0      	pop	{r4, r5, r6, r7}
  4071ac:	4770      	bx	lr
  4071ae:	0783      	lsls	r3, r0, #30
  4071b0:	d024      	beq.n	4071fc <strchr+0xd8>
  4071b2:	7803      	ldrb	r3, [r0, #0]
  4071b4:	2b00      	cmp	r3, #0
  4071b6:	d0f9      	beq.n	4071ac <strchr+0x88>
  4071b8:	1c43      	adds	r3, r0, #1
  4071ba:	e003      	b.n	4071c4 <strchr+0xa0>
  4071bc:	7802      	ldrb	r2, [r0, #0]
  4071be:	3301      	adds	r3, #1
  4071c0:	2a00      	cmp	r2, #0
  4071c2:	d0f3      	beq.n	4071ac <strchr+0x88>
  4071c4:	0799      	lsls	r1, r3, #30
  4071c6:	4618      	mov	r0, r3
  4071c8:	d1f8      	bne.n	4071bc <strchr+0x98>
  4071ca:	6819      	ldr	r1, [r3, #0]
  4071cc:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  4071d0:	ea22 0201 	bic.w	r2, r2, r1
  4071d4:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4071d8:	d108      	bne.n	4071ec <strchr+0xc8>
  4071da:	f853 1f04 	ldr.w	r1, [r3, #4]!
  4071de:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  4071e2:	ea22 0201 	bic.w	r2, r2, r1
  4071e6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4071ea:	d0f6      	beq.n	4071da <strchr+0xb6>
  4071ec:	781a      	ldrb	r2, [r3, #0]
  4071ee:	4618      	mov	r0, r3
  4071f0:	b142      	cbz	r2, 407204 <strchr+0xe0>
  4071f2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4071f6:	2b00      	cmp	r3, #0
  4071f8:	d1fb      	bne.n	4071f2 <strchr+0xce>
  4071fa:	4770      	bx	lr
  4071fc:	4603      	mov	r3, r0
  4071fe:	e7e4      	b.n	4071ca <strchr+0xa6>
  407200:	4604      	mov	r4, r0
  407202:	e7a4      	b.n	40714e <strchr+0x2a>
  407204:	4618      	mov	r0, r3
  407206:	4770      	bx	lr
  407208:	4618      	mov	r0, r3
  40720a:	e7ce      	b.n	4071aa <strchr+0x86>
	...

00407240 <strlen>:
  407240:	f890 f000 	pld	[r0]
  407244:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  407248:	f020 0107 	bic.w	r1, r0, #7
  40724c:	f06f 0c00 	mvn.w	ip, #0
  407250:	f010 0407 	ands.w	r4, r0, #7
  407254:	f891 f020 	pld	[r1, #32]
  407258:	f040 8049 	bne.w	4072ee <strlen+0xae>
  40725c:	f04f 0400 	mov.w	r4, #0
  407260:	f06f 0007 	mvn.w	r0, #7
  407264:	e9d1 2300 	ldrd	r2, r3, [r1]
  407268:	f891 f040 	pld	[r1, #64]	; 0x40
  40726c:	f100 0008 	add.w	r0, r0, #8
  407270:	fa82 f24c 	uadd8	r2, r2, ip
  407274:	faa4 f28c 	sel	r2, r4, ip
  407278:	fa83 f34c 	uadd8	r3, r3, ip
  40727c:	faa2 f38c 	sel	r3, r2, ip
  407280:	bb4b      	cbnz	r3, 4072d6 <strlen+0x96>
  407282:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  407286:	fa82 f24c 	uadd8	r2, r2, ip
  40728a:	f100 0008 	add.w	r0, r0, #8
  40728e:	faa4 f28c 	sel	r2, r4, ip
  407292:	fa83 f34c 	uadd8	r3, r3, ip
  407296:	faa2 f38c 	sel	r3, r2, ip
  40729a:	b9e3      	cbnz	r3, 4072d6 <strlen+0x96>
  40729c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4072a0:	fa82 f24c 	uadd8	r2, r2, ip
  4072a4:	f100 0008 	add.w	r0, r0, #8
  4072a8:	faa4 f28c 	sel	r2, r4, ip
  4072ac:	fa83 f34c 	uadd8	r3, r3, ip
  4072b0:	faa2 f38c 	sel	r3, r2, ip
  4072b4:	b97b      	cbnz	r3, 4072d6 <strlen+0x96>
  4072b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4072ba:	f101 0120 	add.w	r1, r1, #32
  4072be:	fa82 f24c 	uadd8	r2, r2, ip
  4072c2:	f100 0008 	add.w	r0, r0, #8
  4072c6:	faa4 f28c 	sel	r2, r4, ip
  4072ca:	fa83 f34c 	uadd8	r3, r3, ip
  4072ce:	faa2 f38c 	sel	r3, r2, ip
  4072d2:	2b00      	cmp	r3, #0
  4072d4:	d0c6      	beq.n	407264 <strlen+0x24>
  4072d6:	2a00      	cmp	r2, #0
  4072d8:	bf04      	itt	eq
  4072da:	3004      	addeq	r0, #4
  4072dc:	461a      	moveq	r2, r3
  4072de:	ba12      	rev	r2, r2
  4072e0:	fab2 f282 	clz	r2, r2
  4072e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4072e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4072ec:	4770      	bx	lr
  4072ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4072f2:	f004 0503 	and.w	r5, r4, #3
  4072f6:	f1c4 0000 	rsb	r0, r4, #0
  4072fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4072fe:	f014 0f04 	tst.w	r4, #4
  407302:	f891 f040 	pld	[r1, #64]	; 0x40
  407306:	fa0c f505 	lsl.w	r5, ip, r5
  40730a:	ea62 0205 	orn	r2, r2, r5
  40730e:	bf1c      	itt	ne
  407310:	ea63 0305 	ornne	r3, r3, r5
  407314:	4662      	movne	r2, ip
  407316:	f04f 0400 	mov.w	r4, #0
  40731a:	e7a9      	b.n	407270 <strlen+0x30>

0040731c <__ssprint_r>:
  40731c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407320:	6893      	ldr	r3, [r2, #8]
  407322:	b083      	sub	sp, #12
  407324:	4690      	mov	r8, r2
  407326:	2b00      	cmp	r3, #0
  407328:	d070      	beq.n	40740c <__ssprint_r+0xf0>
  40732a:	4682      	mov	sl, r0
  40732c:	460c      	mov	r4, r1
  40732e:	6817      	ldr	r7, [r2, #0]
  407330:	688d      	ldr	r5, [r1, #8]
  407332:	6808      	ldr	r0, [r1, #0]
  407334:	e042      	b.n	4073bc <__ssprint_r+0xa0>
  407336:	89a3      	ldrh	r3, [r4, #12]
  407338:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40733c:	d02e      	beq.n	40739c <__ssprint_r+0x80>
  40733e:	6965      	ldr	r5, [r4, #20]
  407340:	6921      	ldr	r1, [r4, #16]
  407342:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  407346:	eba0 0b01 	sub.w	fp, r0, r1
  40734a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40734e:	f10b 0001 	add.w	r0, fp, #1
  407352:	106d      	asrs	r5, r5, #1
  407354:	4430      	add	r0, r6
  407356:	42a8      	cmp	r0, r5
  407358:	462a      	mov	r2, r5
  40735a:	bf84      	itt	hi
  40735c:	4605      	movhi	r5, r0
  40735e:	462a      	movhi	r2, r5
  407360:	055b      	lsls	r3, r3, #21
  407362:	d538      	bpl.n	4073d6 <__ssprint_r+0xba>
  407364:	4611      	mov	r1, r2
  407366:	4650      	mov	r0, sl
  407368:	f7fe fffc 	bl	406364 <_malloc_r>
  40736c:	2800      	cmp	r0, #0
  40736e:	d03c      	beq.n	4073ea <__ssprint_r+0xce>
  407370:	465a      	mov	r2, fp
  407372:	6921      	ldr	r1, [r4, #16]
  407374:	9001      	str	r0, [sp, #4]
  407376:	f7ff fb2b 	bl	4069d0 <memcpy>
  40737a:	89a2      	ldrh	r2, [r4, #12]
  40737c:	9b01      	ldr	r3, [sp, #4]
  40737e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  407382:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  407386:	81a2      	strh	r2, [r4, #12]
  407388:	eba5 020b 	sub.w	r2, r5, fp
  40738c:	eb03 000b 	add.w	r0, r3, fp
  407390:	6165      	str	r5, [r4, #20]
  407392:	6123      	str	r3, [r4, #16]
  407394:	6020      	str	r0, [r4, #0]
  407396:	60a2      	str	r2, [r4, #8]
  407398:	4635      	mov	r5, r6
  40739a:	46b3      	mov	fp, r6
  40739c:	465a      	mov	r2, fp
  40739e:	4649      	mov	r1, r9
  4073a0:	f000 fa08 	bl	4077b4 <memmove>
  4073a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4073a8:	68a2      	ldr	r2, [r4, #8]
  4073aa:	6820      	ldr	r0, [r4, #0]
  4073ac:	1b55      	subs	r5, r2, r5
  4073ae:	4458      	add	r0, fp
  4073b0:	1b9e      	subs	r6, r3, r6
  4073b2:	60a5      	str	r5, [r4, #8]
  4073b4:	6020      	str	r0, [r4, #0]
  4073b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4073ba:	b33e      	cbz	r6, 40740c <__ssprint_r+0xf0>
  4073bc:	687e      	ldr	r6, [r7, #4]
  4073be:	463b      	mov	r3, r7
  4073c0:	3708      	adds	r7, #8
  4073c2:	2e00      	cmp	r6, #0
  4073c4:	d0fa      	beq.n	4073bc <__ssprint_r+0xa0>
  4073c6:	42ae      	cmp	r6, r5
  4073c8:	f8d3 9000 	ldr.w	r9, [r3]
  4073cc:	46ab      	mov	fp, r5
  4073ce:	d2b2      	bcs.n	407336 <__ssprint_r+0x1a>
  4073d0:	4635      	mov	r5, r6
  4073d2:	46b3      	mov	fp, r6
  4073d4:	e7e2      	b.n	40739c <__ssprint_r+0x80>
  4073d6:	4650      	mov	r0, sl
  4073d8:	f000 fa50 	bl	40787c <_realloc_r>
  4073dc:	4603      	mov	r3, r0
  4073de:	2800      	cmp	r0, #0
  4073e0:	d1d2      	bne.n	407388 <__ssprint_r+0x6c>
  4073e2:	6921      	ldr	r1, [r4, #16]
  4073e4:	4650      	mov	r0, sl
  4073e6:	f000 f8e9 	bl	4075bc <_free_r>
  4073ea:	230c      	movs	r3, #12
  4073ec:	f8ca 3000 	str.w	r3, [sl]
  4073f0:	89a3      	ldrh	r3, [r4, #12]
  4073f2:	2200      	movs	r2, #0
  4073f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4073f8:	f04f 30ff 	mov.w	r0, #4294967295
  4073fc:	81a3      	strh	r3, [r4, #12]
  4073fe:	f8c8 2008 	str.w	r2, [r8, #8]
  407402:	f8c8 2004 	str.w	r2, [r8, #4]
  407406:	b003      	add	sp, #12
  407408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40740c:	2000      	movs	r0, #0
  40740e:	f8c8 0004 	str.w	r0, [r8, #4]
  407412:	b003      	add	sp, #12
  407414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407418 <__register_exitproc>:
  407418:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40741c:	4c25      	ldr	r4, [pc, #148]	; (4074b4 <__register_exitproc+0x9c>)
  40741e:	6825      	ldr	r5, [r4, #0]
  407420:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  407424:	4606      	mov	r6, r0
  407426:	4688      	mov	r8, r1
  407428:	4692      	mov	sl, r2
  40742a:	4699      	mov	r9, r3
  40742c:	b3c4      	cbz	r4, 4074a0 <__register_exitproc+0x88>
  40742e:	6860      	ldr	r0, [r4, #4]
  407430:	281f      	cmp	r0, #31
  407432:	dc17      	bgt.n	407464 <__register_exitproc+0x4c>
  407434:	1c43      	adds	r3, r0, #1
  407436:	b176      	cbz	r6, 407456 <__register_exitproc+0x3e>
  407438:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  40743c:	2201      	movs	r2, #1
  40743e:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  407442:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  407446:	4082      	lsls	r2, r0
  407448:	4311      	orrs	r1, r2
  40744a:	2e02      	cmp	r6, #2
  40744c:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  407450:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  407454:	d01e      	beq.n	407494 <__register_exitproc+0x7c>
  407456:	3002      	adds	r0, #2
  407458:	6063      	str	r3, [r4, #4]
  40745a:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  40745e:	2000      	movs	r0, #0
  407460:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407464:	4b14      	ldr	r3, [pc, #80]	; (4074b8 <__register_exitproc+0xa0>)
  407466:	b303      	cbz	r3, 4074aa <__register_exitproc+0x92>
  407468:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40746c:	f3af 8000 	nop.w
  407470:	4604      	mov	r4, r0
  407472:	b1d0      	cbz	r0, 4074aa <__register_exitproc+0x92>
  407474:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  407478:	2700      	movs	r7, #0
  40747a:	e880 0088 	stmia.w	r0, {r3, r7}
  40747e:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  407482:	4638      	mov	r0, r7
  407484:	2301      	movs	r3, #1
  407486:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40748a:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  40748e:	2e00      	cmp	r6, #0
  407490:	d0e1      	beq.n	407456 <__register_exitproc+0x3e>
  407492:	e7d1      	b.n	407438 <__register_exitproc+0x20>
  407494:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  407498:	430a      	orrs	r2, r1
  40749a:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  40749e:	e7da      	b.n	407456 <__register_exitproc+0x3e>
  4074a0:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  4074a4:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  4074a8:	e7c1      	b.n	40742e <__register_exitproc+0x16>
  4074aa:	f04f 30ff 	mov.w	r0, #4294967295
  4074ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4074b2:	bf00      	nop
  4074b4:	00409284 	.word	0x00409284
  4074b8:	00000000 	.word	0x00000000

004074bc <_calloc_r>:
  4074bc:	b510      	push	{r4, lr}
  4074be:	fb02 f101 	mul.w	r1, r2, r1
  4074c2:	f7fe ff4f 	bl	406364 <_malloc_r>
  4074c6:	4604      	mov	r4, r0
  4074c8:	b1d8      	cbz	r0, 407502 <_calloc_r+0x46>
  4074ca:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4074ce:	f022 0203 	bic.w	r2, r2, #3
  4074d2:	3a04      	subs	r2, #4
  4074d4:	2a24      	cmp	r2, #36	; 0x24
  4074d6:	d818      	bhi.n	40750a <_calloc_r+0x4e>
  4074d8:	2a13      	cmp	r2, #19
  4074da:	d914      	bls.n	407506 <_calloc_r+0x4a>
  4074dc:	2300      	movs	r3, #0
  4074de:	2a1b      	cmp	r2, #27
  4074e0:	6003      	str	r3, [r0, #0]
  4074e2:	6043      	str	r3, [r0, #4]
  4074e4:	d916      	bls.n	407514 <_calloc_r+0x58>
  4074e6:	2a24      	cmp	r2, #36	; 0x24
  4074e8:	6083      	str	r3, [r0, #8]
  4074ea:	60c3      	str	r3, [r0, #12]
  4074ec:	bf11      	iteee	ne
  4074ee:	f100 0210 	addne.w	r2, r0, #16
  4074f2:	6103      	streq	r3, [r0, #16]
  4074f4:	6143      	streq	r3, [r0, #20]
  4074f6:	f100 0218 	addeq.w	r2, r0, #24
  4074fa:	2300      	movs	r3, #0
  4074fc:	6013      	str	r3, [r2, #0]
  4074fe:	6053      	str	r3, [r2, #4]
  407500:	6093      	str	r3, [r2, #8]
  407502:	4620      	mov	r0, r4
  407504:	bd10      	pop	{r4, pc}
  407506:	4602      	mov	r2, r0
  407508:	e7f7      	b.n	4074fa <_calloc_r+0x3e>
  40750a:	2100      	movs	r1, #0
  40750c:	f7fc fa36 	bl	40397c <memset>
  407510:	4620      	mov	r0, r4
  407512:	bd10      	pop	{r4, pc}
  407514:	f100 0208 	add.w	r2, r0, #8
  407518:	e7ef      	b.n	4074fa <_calloc_r+0x3e>
  40751a:	bf00      	nop

0040751c <_malloc_trim_r>:
  40751c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40751e:	4f24      	ldr	r7, [pc, #144]	; (4075b0 <_malloc_trim_r+0x94>)
  407520:	460c      	mov	r4, r1
  407522:	4606      	mov	r6, r0
  407524:	f7ff faee 	bl	406b04 <__malloc_lock>
  407528:	68bb      	ldr	r3, [r7, #8]
  40752a:	685d      	ldr	r5, [r3, #4]
  40752c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  407530:	310f      	adds	r1, #15
  407532:	f025 0503 	bic.w	r5, r5, #3
  407536:	4429      	add	r1, r5
  407538:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40753c:	f021 010f 	bic.w	r1, r1, #15
  407540:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  407544:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  407548:	db07      	blt.n	40755a <_malloc_trim_r+0x3e>
  40754a:	2100      	movs	r1, #0
  40754c:	4630      	mov	r0, r6
  40754e:	f7ff fdd7 	bl	407100 <_sbrk_r>
  407552:	68bb      	ldr	r3, [r7, #8]
  407554:	442b      	add	r3, r5
  407556:	4298      	cmp	r0, r3
  407558:	d004      	beq.n	407564 <_malloc_trim_r+0x48>
  40755a:	4630      	mov	r0, r6
  40755c:	f7ff fad4 	bl	406b08 <__malloc_unlock>
  407560:	2000      	movs	r0, #0
  407562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407564:	4261      	negs	r1, r4
  407566:	4630      	mov	r0, r6
  407568:	f7ff fdca 	bl	407100 <_sbrk_r>
  40756c:	3001      	adds	r0, #1
  40756e:	d00d      	beq.n	40758c <_malloc_trim_r+0x70>
  407570:	4b10      	ldr	r3, [pc, #64]	; (4075b4 <_malloc_trim_r+0x98>)
  407572:	68ba      	ldr	r2, [r7, #8]
  407574:	6819      	ldr	r1, [r3, #0]
  407576:	1b2d      	subs	r5, r5, r4
  407578:	f045 0501 	orr.w	r5, r5, #1
  40757c:	4630      	mov	r0, r6
  40757e:	1b09      	subs	r1, r1, r4
  407580:	6055      	str	r5, [r2, #4]
  407582:	6019      	str	r1, [r3, #0]
  407584:	f7ff fac0 	bl	406b08 <__malloc_unlock>
  407588:	2001      	movs	r0, #1
  40758a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40758c:	2100      	movs	r1, #0
  40758e:	4630      	mov	r0, r6
  407590:	f7ff fdb6 	bl	407100 <_sbrk_r>
  407594:	68ba      	ldr	r2, [r7, #8]
  407596:	1a83      	subs	r3, r0, r2
  407598:	2b0f      	cmp	r3, #15
  40759a:	ddde      	ble.n	40755a <_malloc_trim_r+0x3e>
  40759c:	4c06      	ldr	r4, [pc, #24]	; (4075b8 <_malloc_trim_r+0x9c>)
  40759e:	4905      	ldr	r1, [pc, #20]	; (4075b4 <_malloc_trim_r+0x98>)
  4075a0:	6824      	ldr	r4, [r4, #0]
  4075a2:	f043 0301 	orr.w	r3, r3, #1
  4075a6:	1b00      	subs	r0, r0, r4
  4075a8:	6053      	str	r3, [r2, #4]
  4075aa:	6008      	str	r0, [r1, #0]
  4075ac:	e7d5      	b.n	40755a <_malloc_trim_r+0x3e>
  4075ae:	bf00      	nop
  4075b0:	20000440 	.word	0x20000440
  4075b4:	20000a80 	.word	0x20000a80
  4075b8:	20000848 	.word	0x20000848

004075bc <_free_r>:
  4075bc:	2900      	cmp	r1, #0
  4075be:	d044      	beq.n	40764a <_free_r+0x8e>
  4075c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4075c4:	460d      	mov	r5, r1
  4075c6:	4680      	mov	r8, r0
  4075c8:	f7ff fa9c 	bl	406b04 <__malloc_lock>
  4075cc:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4075d0:	4969      	ldr	r1, [pc, #420]	; (407778 <_free_r+0x1bc>)
  4075d2:	f027 0301 	bic.w	r3, r7, #1
  4075d6:	f1a5 0408 	sub.w	r4, r5, #8
  4075da:	18e2      	adds	r2, r4, r3
  4075dc:	688e      	ldr	r6, [r1, #8]
  4075de:	6850      	ldr	r0, [r2, #4]
  4075e0:	42b2      	cmp	r2, r6
  4075e2:	f020 0003 	bic.w	r0, r0, #3
  4075e6:	d05e      	beq.n	4076a6 <_free_r+0xea>
  4075e8:	07fe      	lsls	r6, r7, #31
  4075ea:	6050      	str	r0, [r2, #4]
  4075ec:	d40b      	bmi.n	407606 <_free_r+0x4a>
  4075ee:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4075f2:	1be4      	subs	r4, r4, r7
  4075f4:	f101 0e08 	add.w	lr, r1, #8
  4075f8:	68a5      	ldr	r5, [r4, #8]
  4075fa:	4575      	cmp	r5, lr
  4075fc:	443b      	add	r3, r7
  4075fe:	d06d      	beq.n	4076dc <_free_r+0x120>
  407600:	68e7      	ldr	r7, [r4, #12]
  407602:	60ef      	str	r7, [r5, #12]
  407604:	60bd      	str	r5, [r7, #8]
  407606:	1815      	adds	r5, r2, r0
  407608:	686d      	ldr	r5, [r5, #4]
  40760a:	07ed      	lsls	r5, r5, #31
  40760c:	d53e      	bpl.n	40768c <_free_r+0xd0>
  40760e:	f043 0201 	orr.w	r2, r3, #1
  407612:	6062      	str	r2, [r4, #4]
  407614:	50e3      	str	r3, [r4, r3]
  407616:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40761a:	d217      	bcs.n	40764c <_free_r+0x90>
  40761c:	08db      	lsrs	r3, r3, #3
  40761e:	1c58      	adds	r0, r3, #1
  407620:	109a      	asrs	r2, r3, #2
  407622:	684d      	ldr	r5, [r1, #4]
  407624:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  407628:	60a7      	str	r7, [r4, #8]
  40762a:	2301      	movs	r3, #1
  40762c:	4093      	lsls	r3, r2
  40762e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  407632:	432b      	orrs	r3, r5
  407634:	3a08      	subs	r2, #8
  407636:	60e2      	str	r2, [r4, #12]
  407638:	604b      	str	r3, [r1, #4]
  40763a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40763e:	60fc      	str	r4, [r7, #12]
  407640:	4640      	mov	r0, r8
  407642:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  407646:	f7ff ba5f 	b.w	406b08 <__malloc_unlock>
  40764a:	4770      	bx	lr
  40764c:	0a5a      	lsrs	r2, r3, #9
  40764e:	2a04      	cmp	r2, #4
  407650:	d852      	bhi.n	4076f8 <_free_r+0x13c>
  407652:	099a      	lsrs	r2, r3, #6
  407654:	f102 0739 	add.w	r7, r2, #57	; 0x39
  407658:	00ff      	lsls	r7, r7, #3
  40765a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40765e:	19c8      	adds	r0, r1, r7
  407660:	59ca      	ldr	r2, [r1, r7]
  407662:	3808      	subs	r0, #8
  407664:	4290      	cmp	r0, r2
  407666:	d04f      	beq.n	407708 <_free_r+0x14c>
  407668:	6851      	ldr	r1, [r2, #4]
  40766a:	f021 0103 	bic.w	r1, r1, #3
  40766e:	428b      	cmp	r3, r1
  407670:	d232      	bcs.n	4076d8 <_free_r+0x11c>
  407672:	6892      	ldr	r2, [r2, #8]
  407674:	4290      	cmp	r0, r2
  407676:	d1f7      	bne.n	407668 <_free_r+0xac>
  407678:	68c3      	ldr	r3, [r0, #12]
  40767a:	60a0      	str	r0, [r4, #8]
  40767c:	60e3      	str	r3, [r4, #12]
  40767e:	609c      	str	r4, [r3, #8]
  407680:	60c4      	str	r4, [r0, #12]
  407682:	4640      	mov	r0, r8
  407684:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  407688:	f7ff ba3e 	b.w	406b08 <__malloc_unlock>
  40768c:	6895      	ldr	r5, [r2, #8]
  40768e:	4f3b      	ldr	r7, [pc, #236]	; (40777c <_free_r+0x1c0>)
  407690:	42bd      	cmp	r5, r7
  407692:	4403      	add	r3, r0
  407694:	d040      	beq.n	407718 <_free_r+0x15c>
  407696:	68d0      	ldr	r0, [r2, #12]
  407698:	60e8      	str	r0, [r5, #12]
  40769a:	f043 0201 	orr.w	r2, r3, #1
  40769e:	6085      	str	r5, [r0, #8]
  4076a0:	6062      	str	r2, [r4, #4]
  4076a2:	50e3      	str	r3, [r4, r3]
  4076a4:	e7b7      	b.n	407616 <_free_r+0x5a>
  4076a6:	07ff      	lsls	r7, r7, #31
  4076a8:	4403      	add	r3, r0
  4076aa:	d407      	bmi.n	4076bc <_free_r+0x100>
  4076ac:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4076b0:	1aa4      	subs	r4, r4, r2
  4076b2:	4413      	add	r3, r2
  4076b4:	68a0      	ldr	r0, [r4, #8]
  4076b6:	68e2      	ldr	r2, [r4, #12]
  4076b8:	60c2      	str	r2, [r0, #12]
  4076ba:	6090      	str	r0, [r2, #8]
  4076bc:	4a30      	ldr	r2, [pc, #192]	; (407780 <_free_r+0x1c4>)
  4076be:	6812      	ldr	r2, [r2, #0]
  4076c0:	f043 0001 	orr.w	r0, r3, #1
  4076c4:	4293      	cmp	r3, r2
  4076c6:	6060      	str	r0, [r4, #4]
  4076c8:	608c      	str	r4, [r1, #8]
  4076ca:	d3b9      	bcc.n	407640 <_free_r+0x84>
  4076cc:	4b2d      	ldr	r3, [pc, #180]	; (407784 <_free_r+0x1c8>)
  4076ce:	4640      	mov	r0, r8
  4076d0:	6819      	ldr	r1, [r3, #0]
  4076d2:	f7ff ff23 	bl	40751c <_malloc_trim_r>
  4076d6:	e7b3      	b.n	407640 <_free_r+0x84>
  4076d8:	4610      	mov	r0, r2
  4076da:	e7cd      	b.n	407678 <_free_r+0xbc>
  4076dc:	1811      	adds	r1, r2, r0
  4076de:	6849      	ldr	r1, [r1, #4]
  4076e0:	07c9      	lsls	r1, r1, #31
  4076e2:	d444      	bmi.n	40776e <_free_r+0x1b2>
  4076e4:	6891      	ldr	r1, [r2, #8]
  4076e6:	68d2      	ldr	r2, [r2, #12]
  4076e8:	60ca      	str	r2, [r1, #12]
  4076ea:	4403      	add	r3, r0
  4076ec:	f043 0001 	orr.w	r0, r3, #1
  4076f0:	6091      	str	r1, [r2, #8]
  4076f2:	6060      	str	r0, [r4, #4]
  4076f4:	50e3      	str	r3, [r4, r3]
  4076f6:	e7a3      	b.n	407640 <_free_r+0x84>
  4076f8:	2a14      	cmp	r2, #20
  4076fa:	d816      	bhi.n	40772a <_free_r+0x16e>
  4076fc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  407700:	00ff      	lsls	r7, r7, #3
  407702:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  407706:	e7aa      	b.n	40765e <_free_r+0xa2>
  407708:	10aa      	asrs	r2, r5, #2
  40770a:	2301      	movs	r3, #1
  40770c:	684d      	ldr	r5, [r1, #4]
  40770e:	4093      	lsls	r3, r2
  407710:	432b      	orrs	r3, r5
  407712:	604b      	str	r3, [r1, #4]
  407714:	4603      	mov	r3, r0
  407716:	e7b0      	b.n	40767a <_free_r+0xbe>
  407718:	f043 0201 	orr.w	r2, r3, #1
  40771c:	614c      	str	r4, [r1, #20]
  40771e:	610c      	str	r4, [r1, #16]
  407720:	60e5      	str	r5, [r4, #12]
  407722:	60a5      	str	r5, [r4, #8]
  407724:	6062      	str	r2, [r4, #4]
  407726:	50e3      	str	r3, [r4, r3]
  407728:	e78a      	b.n	407640 <_free_r+0x84>
  40772a:	2a54      	cmp	r2, #84	; 0x54
  40772c:	d806      	bhi.n	40773c <_free_r+0x180>
  40772e:	0b1a      	lsrs	r2, r3, #12
  407730:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  407734:	00ff      	lsls	r7, r7, #3
  407736:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40773a:	e790      	b.n	40765e <_free_r+0xa2>
  40773c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  407740:	d806      	bhi.n	407750 <_free_r+0x194>
  407742:	0bda      	lsrs	r2, r3, #15
  407744:	f102 0778 	add.w	r7, r2, #120	; 0x78
  407748:	00ff      	lsls	r7, r7, #3
  40774a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40774e:	e786      	b.n	40765e <_free_r+0xa2>
  407750:	f240 5054 	movw	r0, #1364	; 0x554
  407754:	4282      	cmp	r2, r0
  407756:	d806      	bhi.n	407766 <_free_r+0x1aa>
  407758:	0c9a      	lsrs	r2, r3, #18
  40775a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40775e:	00ff      	lsls	r7, r7, #3
  407760:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  407764:	e77b      	b.n	40765e <_free_r+0xa2>
  407766:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40776a:	257e      	movs	r5, #126	; 0x7e
  40776c:	e777      	b.n	40765e <_free_r+0xa2>
  40776e:	f043 0101 	orr.w	r1, r3, #1
  407772:	6061      	str	r1, [r4, #4]
  407774:	6013      	str	r3, [r2, #0]
  407776:	e763      	b.n	407640 <_free_r+0x84>
  407778:	20000440 	.word	0x20000440
  40777c:	20000448 	.word	0x20000448
  407780:	2000084c 	.word	0x2000084c
  407784:	20000ab0 	.word	0x20000ab0

00407788 <__ascii_mbtowc>:
  407788:	b082      	sub	sp, #8
  40778a:	b149      	cbz	r1, 4077a0 <__ascii_mbtowc+0x18>
  40778c:	b15a      	cbz	r2, 4077a6 <__ascii_mbtowc+0x1e>
  40778e:	b16b      	cbz	r3, 4077ac <__ascii_mbtowc+0x24>
  407790:	7813      	ldrb	r3, [r2, #0]
  407792:	600b      	str	r3, [r1, #0]
  407794:	7812      	ldrb	r2, [r2, #0]
  407796:	1c10      	adds	r0, r2, #0
  407798:	bf18      	it	ne
  40779a:	2001      	movne	r0, #1
  40779c:	b002      	add	sp, #8
  40779e:	4770      	bx	lr
  4077a0:	a901      	add	r1, sp, #4
  4077a2:	2a00      	cmp	r2, #0
  4077a4:	d1f3      	bne.n	40778e <__ascii_mbtowc+0x6>
  4077a6:	4610      	mov	r0, r2
  4077a8:	b002      	add	sp, #8
  4077aa:	4770      	bx	lr
  4077ac:	f06f 0001 	mvn.w	r0, #1
  4077b0:	e7f4      	b.n	40779c <__ascii_mbtowc+0x14>
  4077b2:	bf00      	nop

004077b4 <memmove>:
  4077b4:	4288      	cmp	r0, r1
  4077b6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4077b8:	d90d      	bls.n	4077d6 <memmove+0x22>
  4077ba:	188b      	adds	r3, r1, r2
  4077bc:	4298      	cmp	r0, r3
  4077be:	d20a      	bcs.n	4077d6 <memmove+0x22>
  4077c0:	1884      	adds	r4, r0, r2
  4077c2:	2a00      	cmp	r2, #0
  4077c4:	d051      	beq.n	40786a <memmove+0xb6>
  4077c6:	4622      	mov	r2, r4
  4077c8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4077cc:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4077d0:	4299      	cmp	r1, r3
  4077d2:	d1f9      	bne.n	4077c8 <memmove+0x14>
  4077d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4077d6:	2a0f      	cmp	r2, #15
  4077d8:	d948      	bls.n	40786c <memmove+0xb8>
  4077da:	ea41 0300 	orr.w	r3, r1, r0
  4077de:	079b      	lsls	r3, r3, #30
  4077e0:	d146      	bne.n	407870 <memmove+0xbc>
  4077e2:	f100 0410 	add.w	r4, r0, #16
  4077e6:	f101 0310 	add.w	r3, r1, #16
  4077ea:	4615      	mov	r5, r2
  4077ec:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4077f0:	f844 6c10 	str.w	r6, [r4, #-16]
  4077f4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4077f8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4077fc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  407800:	f844 6c08 	str.w	r6, [r4, #-8]
  407804:	3d10      	subs	r5, #16
  407806:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40780a:	f844 6c04 	str.w	r6, [r4, #-4]
  40780e:	2d0f      	cmp	r5, #15
  407810:	f103 0310 	add.w	r3, r3, #16
  407814:	f104 0410 	add.w	r4, r4, #16
  407818:	d8e8      	bhi.n	4077ec <memmove+0x38>
  40781a:	f1a2 0310 	sub.w	r3, r2, #16
  40781e:	f023 030f 	bic.w	r3, r3, #15
  407822:	f002 0e0f 	and.w	lr, r2, #15
  407826:	3310      	adds	r3, #16
  407828:	f1be 0f03 	cmp.w	lr, #3
  40782c:	4419      	add	r1, r3
  40782e:	4403      	add	r3, r0
  407830:	d921      	bls.n	407876 <memmove+0xc2>
  407832:	1f1e      	subs	r6, r3, #4
  407834:	460d      	mov	r5, r1
  407836:	4674      	mov	r4, lr
  407838:	3c04      	subs	r4, #4
  40783a:	f855 7b04 	ldr.w	r7, [r5], #4
  40783e:	f846 7f04 	str.w	r7, [r6, #4]!
  407842:	2c03      	cmp	r4, #3
  407844:	d8f8      	bhi.n	407838 <memmove+0x84>
  407846:	f1ae 0404 	sub.w	r4, lr, #4
  40784a:	f024 0403 	bic.w	r4, r4, #3
  40784e:	3404      	adds	r4, #4
  407850:	4421      	add	r1, r4
  407852:	4423      	add	r3, r4
  407854:	f002 0203 	and.w	r2, r2, #3
  407858:	b162      	cbz	r2, 407874 <memmove+0xc0>
  40785a:	3b01      	subs	r3, #1
  40785c:	440a      	add	r2, r1
  40785e:	f811 4b01 	ldrb.w	r4, [r1], #1
  407862:	f803 4f01 	strb.w	r4, [r3, #1]!
  407866:	428a      	cmp	r2, r1
  407868:	d1f9      	bne.n	40785e <memmove+0xaa>
  40786a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40786c:	4603      	mov	r3, r0
  40786e:	e7f3      	b.n	407858 <memmove+0xa4>
  407870:	4603      	mov	r3, r0
  407872:	e7f2      	b.n	40785a <memmove+0xa6>
  407874:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407876:	4672      	mov	r2, lr
  407878:	e7ee      	b.n	407858 <memmove+0xa4>
  40787a:	bf00      	nop

0040787c <_realloc_r>:
  40787c:	2900      	cmp	r1, #0
  40787e:	f000 8095 	beq.w	4079ac <_realloc_r+0x130>
  407882:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407886:	460d      	mov	r5, r1
  407888:	4616      	mov	r6, r2
  40788a:	b083      	sub	sp, #12
  40788c:	4680      	mov	r8, r0
  40788e:	f106 070b 	add.w	r7, r6, #11
  407892:	f7ff f937 	bl	406b04 <__malloc_lock>
  407896:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40789a:	2f16      	cmp	r7, #22
  40789c:	f02e 0403 	bic.w	r4, lr, #3
  4078a0:	f1a5 0908 	sub.w	r9, r5, #8
  4078a4:	d83c      	bhi.n	407920 <_realloc_r+0xa4>
  4078a6:	2210      	movs	r2, #16
  4078a8:	4617      	mov	r7, r2
  4078aa:	42be      	cmp	r6, r7
  4078ac:	d83d      	bhi.n	40792a <_realloc_r+0xae>
  4078ae:	4294      	cmp	r4, r2
  4078b0:	da43      	bge.n	40793a <_realloc_r+0xbe>
  4078b2:	4bc4      	ldr	r3, [pc, #784]	; (407bc4 <_realloc_r+0x348>)
  4078b4:	6899      	ldr	r1, [r3, #8]
  4078b6:	eb09 0004 	add.w	r0, r9, r4
  4078ba:	4288      	cmp	r0, r1
  4078bc:	f000 80b4 	beq.w	407a28 <_realloc_r+0x1ac>
  4078c0:	6843      	ldr	r3, [r0, #4]
  4078c2:	f023 0101 	bic.w	r1, r3, #1
  4078c6:	4401      	add	r1, r0
  4078c8:	6849      	ldr	r1, [r1, #4]
  4078ca:	07c9      	lsls	r1, r1, #31
  4078cc:	d54c      	bpl.n	407968 <_realloc_r+0xec>
  4078ce:	f01e 0f01 	tst.w	lr, #1
  4078d2:	f000 809b 	beq.w	407a0c <_realloc_r+0x190>
  4078d6:	4631      	mov	r1, r6
  4078d8:	4640      	mov	r0, r8
  4078da:	f7fe fd43 	bl	406364 <_malloc_r>
  4078de:	4606      	mov	r6, r0
  4078e0:	2800      	cmp	r0, #0
  4078e2:	d03a      	beq.n	40795a <_realloc_r+0xde>
  4078e4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4078e8:	f023 0301 	bic.w	r3, r3, #1
  4078ec:	444b      	add	r3, r9
  4078ee:	f1a0 0208 	sub.w	r2, r0, #8
  4078f2:	429a      	cmp	r2, r3
  4078f4:	f000 8121 	beq.w	407b3a <_realloc_r+0x2be>
  4078f8:	1f22      	subs	r2, r4, #4
  4078fa:	2a24      	cmp	r2, #36	; 0x24
  4078fc:	f200 8107 	bhi.w	407b0e <_realloc_r+0x292>
  407900:	2a13      	cmp	r2, #19
  407902:	f200 80db 	bhi.w	407abc <_realloc_r+0x240>
  407906:	4603      	mov	r3, r0
  407908:	462a      	mov	r2, r5
  40790a:	6811      	ldr	r1, [r2, #0]
  40790c:	6019      	str	r1, [r3, #0]
  40790e:	6851      	ldr	r1, [r2, #4]
  407910:	6059      	str	r1, [r3, #4]
  407912:	6892      	ldr	r2, [r2, #8]
  407914:	609a      	str	r2, [r3, #8]
  407916:	4629      	mov	r1, r5
  407918:	4640      	mov	r0, r8
  40791a:	f7ff fe4f 	bl	4075bc <_free_r>
  40791e:	e01c      	b.n	40795a <_realloc_r+0xde>
  407920:	f027 0707 	bic.w	r7, r7, #7
  407924:	2f00      	cmp	r7, #0
  407926:	463a      	mov	r2, r7
  407928:	dabf      	bge.n	4078aa <_realloc_r+0x2e>
  40792a:	2600      	movs	r6, #0
  40792c:	230c      	movs	r3, #12
  40792e:	4630      	mov	r0, r6
  407930:	f8c8 3000 	str.w	r3, [r8]
  407934:	b003      	add	sp, #12
  407936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40793a:	462e      	mov	r6, r5
  40793c:	1be3      	subs	r3, r4, r7
  40793e:	2b0f      	cmp	r3, #15
  407940:	d81e      	bhi.n	407980 <_realloc_r+0x104>
  407942:	f8d9 3004 	ldr.w	r3, [r9, #4]
  407946:	f003 0301 	and.w	r3, r3, #1
  40794a:	4323      	orrs	r3, r4
  40794c:	444c      	add	r4, r9
  40794e:	f8c9 3004 	str.w	r3, [r9, #4]
  407952:	6863      	ldr	r3, [r4, #4]
  407954:	f043 0301 	orr.w	r3, r3, #1
  407958:	6063      	str	r3, [r4, #4]
  40795a:	4640      	mov	r0, r8
  40795c:	f7ff f8d4 	bl	406b08 <__malloc_unlock>
  407960:	4630      	mov	r0, r6
  407962:	b003      	add	sp, #12
  407964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407968:	f023 0303 	bic.w	r3, r3, #3
  40796c:	18e1      	adds	r1, r4, r3
  40796e:	4291      	cmp	r1, r2
  407970:	db1f      	blt.n	4079b2 <_realloc_r+0x136>
  407972:	68c3      	ldr	r3, [r0, #12]
  407974:	6882      	ldr	r2, [r0, #8]
  407976:	462e      	mov	r6, r5
  407978:	60d3      	str	r3, [r2, #12]
  40797a:	460c      	mov	r4, r1
  40797c:	609a      	str	r2, [r3, #8]
  40797e:	e7dd      	b.n	40793c <_realloc_r+0xc0>
  407980:	f8d9 2004 	ldr.w	r2, [r9, #4]
  407984:	eb09 0107 	add.w	r1, r9, r7
  407988:	f002 0201 	and.w	r2, r2, #1
  40798c:	444c      	add	r4, r9
  40798e:	f043 0301 	orr.w	r3, r3, #1
  407992:	4317      	orrs	r7, r2
  407994:	f8c9 7004 	str.w	r7, [r9, #4]
  407998:	604b      	str	r3, [r1, #4]
  40799a:	6863      	ldr	r3, [r4, #4]
  40799c:	f043 0301 	orr.w	r3, r3, #1
  4079a0:	3108      	adds	r1, #8
  4079a2:	6063      	str	r3, [r4, #4]
  4079a4:	4640      	mov	r0, r8
  4079a6:	f7ff fe09 	bl	4075bc <_free_r>
  4079aa:	e7d6      	b.n	40795a <_realloc_r+0xde>
  4079ac:	4611      	mov	r1, r2
  4079ae:	f7fe bcd9 	b.w	406364 <_malloc_r>
  4079b2:	f01e 0f01 	tst.w	lr, #1
  4079b6:	d18e      	bne.n	4078d6 <_realloc_r+0x5a>
  4079b8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4079bc:	eba9 0a01 	sub.w	sl, r9, r1
  4079c0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4079c4:	f021 0103 	bic.w	r1, r1, #3
  4079c8:	440b      	add	r3, r1
  4079ca:	4423      	add	r3, r4
  4079cc:	4293      	cmp	r3, r2
  4079ce:	db25      	blt.n	407a1c <_realloc_r+0x1a0>
  4079d0:	68c2      	ldr	r2, [r0, #12]
  4079d2:	6881      	ldr	r1, [r0, #8]
  4079d4:	4656      	mov	r6, sl
  4079d6:	60ca      	str	r2, [r1, #12]
  4079d8:	6091      	str	r1, [r2, #8]
  4079da:	f8da 100c 	ldr.w	r1, [sl, #12]
  4079de:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4079e2:	1f22      	subs	r2, r4, #4
  4079e4:	2a24      	cmp	r2, #36	; 0x24
  4079e6:	60c1      	str	r1, [r0, #12]
  4079e8:	6088      	str	r0, [r1, #8]
  4079ea:	f200 8094 	bhi.w	407b16 <_realloc_r+0x29a>
  4079ee:	2a13      	cmp	r2, #19
  4079f0:	d96f      	bls.n	407ad2 <_realloc_r+0x256>
  4079f2:	6829      	ldr	r1, [r5, #0]
  4079f4:	f8ca 1008 	str.w	r1, [sl, #8]
  4079f8:	6869      	ldr	r1, [r5, #4]
  4079fa:	f8ca 100c 	str.w	r1, [sl, #12]
  4079fe:	2a1b      	cmp	r2, #27
  407a00:	f200 80a2 	bhi.w	407b48 <_realloc_r+0x2cc>
  407a04:	3508      	adds	r5, #8
  407a06:	f10a 0210 	add.w	r2, sl, #16
  407a0a:	e063      	b.n	407ad4 <_realloc_r+0x258>
  407a0c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  407a10:	eba9 0a03 	sub.w	sl, r9, r3
  407a14:	f8da 1004 	ldr.w	r1, [sl, #4]
  407a18:	f021 0103 	bic.w	r1, r1, #3
  407a1c:	1863      	adds	r3, r4, r1
  407a1e:	4293      	cmp	r3, r2
  407a20:	f6ff af59 	blt.w	4078d6 <_realloc_r+0x5a>
  407a24:	4656      	mov	r6, sl
  407a26:	e7d8      	b.n	4079da <_realloc_r+0x15e>
  407a28:	6841      	ldr	r1, [r0, #4]
  407a2a:	f021 0b03 	bic.w	fp, r1, #3
  407a2e:	44a3      	add	fp, r4
  407a30:	f107 0010 	add.w	r0, r7, #16
  407a34:	4583      	cmp	fp, r0
  407a36:	da56      	bge.n	407ae6 <_realloc_r+0x26a>
  407a38:	f01e 0f01 	tst.w	lr, #1
  407a3c:	f47f af4b 	bne.w	4078d6 <_realloc_r+0x5a>
  407a40:	f855 1c08 	ldr.w	r1, [r5, #-8]
  407a44:	eba9 0a01 	sub.w	sl, r9, r1
  407a48:	f8da 1004 	ldr.w	r1, [sl, #4]
  407a4c:	f021 0103 	bic.w	r1, r1, #3
  407a50:	448b      	add	fp, r1
  407a52:	4558      	cmp	r0, fp
  407a54:	dce2      	bgt.n	407a1c <_realloc_r+0x1a0>
  407a56:	4656      	mov	r6, sl
  407a58:	f8da 100c 	ldr.w	r1, [sl, #12]
  407a5c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  407a60:	1f22      	subs	r2, r4, #4
  407a62:	2a24      	cmp	r2, #36	; 0x24
  407a64:	60c1      	str	r1, [r0, #12]
  407a66:	6088      	str	r0, [r1, #8]
  407a68:	f200 808f 	bhi.w	407b8a <_realloc_r+0x30e>
  407a6c:	2a13      	cmp	r2, #19
  407a6e:	f240 808a 	bls.w	407b86 <_realloc_r+0x30a>
  407a72:	6829      	ldr	r1, [r5, #0]
  407a74:	f8ca 1008 	str.w	r1, [sl, #8]
  407a78:	6869      	ldr	r1, [r5, #4]
  407a7a:	f8ca 100c 	str.w	r1, [sl, #12]
  407a7e:	2a1b      	cmp	r2, #27
  407a80:	f200 808a 	bhi.w	407b98 <_realloc_r+0x31c>
  407a84:	3508      	adds	r5, #8
  407a86:	f10a 0210 	add.w	r2, sl, #16
  407a8a:	6829      	ldr	r1, [r5, #0]
  407a8c:	6011      	str	r1, [r2, #0]
  407a8e:	6869      	ldr	r1, [r5, #4]
  407a90:	6051      	str	r1, [r2, #4]
  407a92:	68a9      	ldr	r1, [r5, #8]
  407a94:	6091      	str	r1, [r2, #8]
  407a96:	eb0a 0107 	add.w	r1, sl, r7
  407a9a:	ebab 0207 	sub.w	r2, fp, r7
  407a9e:	f042 0201 	orr.w	r2, r2, #1
  407aa2:	6099      	str	r1, [r3, #8]
  407aa4:	604a      	str	r2, [r1, #4]
  407aa6:	f8da 3004 	ldr.w	r3, [sl, #4]
  407aaa:	f003 0301 	and.w	r3, r3, #1
  407aae:	431f      	orrs	r7, r3
  407ab0:	4640      	mov	r0, r8
  407ab2:	f8ca 7004 	str.w	r7, [sl, #4]
  407ab6:	f7ff f827 	bl	406b08 <__malloc_unlock>
  407aba:	e751      	b.n	407960 <_realloc_r+0xe4>
  407abc:	682b      	ldr	r3, [r5, #0]
  407abe:	6003      	str	r3, [r0, #0]
  407ac0:	686b      	ldr	r3, [r5, #4]
  407ac2:	6043      	str	r3, [r0, #4]
  407ac4:	2a1b      	cmp	r2, #27
  407ac6:	d82d      	bhi.n	407b24 <_realloc_r+0x2a8>
  407ac8:	f100 0308 	add.w	r3, r0, #8
  407acc:	f105 0208 	add.w	r2, r5, #8
  407ad0:	e71b      	b.n	40790a <_realloc_r+0x8e>
  407ad2:	4632      	mov	r2, r6
  407ad4:	6829      	ldr	r1, [r5, #0]
  407ad6:	6011      	str	r1, [r2, #0]
  407ad8:	6869      	ldr	r1, [r5, #4]
  407ada:	6051      	str	r1, [r2, #4]
  407adc:	68a9      	ldr	r1, [r5, #8]
  407ade:	6091      	str	r1, [r2, #8]
  407ae0:	461c      	mov	r4, r3
  407ae2:	46d1      	mov	r9, sl
  407ae4:	e72a      	b.n	40793c <_realloc_r+0xc0>
  407ae6:	eb09 0107 	add.w	r1, r9, r7
  407aea:	ebab 0b07 	sub.w	fp, fp, r7
  407aee:	f04b 0201 	orr.w	r2, fp, #1
  407af2:	6099      	str	r1, [r3, #8]
  407af4:	604a      	str	r2, [r1, #4]
  407af6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  407afa:	f003 0301 	and.w	r3, r3, #1
  407afe:	431f      	orrs	r7, r3
  407b00:	4640      	mov	r0, r8
  407b02:	f845 7c04 	str.w	r7, [r5, #-4]
  407b06:	f7fe ffff 	bl	406b08 <__malloc_unlock>
  407b0a:	462e      	mov	r6, r5
  407b0c:	e728      	b.n	407960 <_realloc_r+0xe4>
  407b0e:	4629      	mov	r1, r5
  407b10:	f7ff fe50 	bl	4077b4 <memmove>
  407b14:	e6ff      	b.n	407916 <_realloc_r+0x9a>
  407b16:	4629      	mov	r1, r5
  407b18:	4630      	mov	r0, r6
  407b1a:	461c      	mov	r4, r3
  407b1c:	46d1      	mov	r9, sl
  407b1e:	f7ff fe49 	bl	4077b4 <memmove>
  407b22:	e70b      	b.n	40793c <_realloc_r+0xc0>
  407b24:	68ab      	ldr	r3, [r5, #8]
  407b26:	6083      	str	r3, [r0, #8]
  407b28:	68eb      	ldr	r3, [r5, #12]
  407b2a:	60c3      	str	r3, [r0, #12]
  407b2c:	2a24      	cmp	r2, #36	; 0x24
  407b2e:	d017      	beq.n	407b60 <_realloc_r+0x2e4>
  407b30:	f100 0310 	add.w	r3, r0, #16
  407b34:	f105 0210 	add.w	r2, r5, #16
  407b38:	e6e7      	b.n	40790a <_realloc_r+0x8e>
  407b3a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  407b3e:	f023 0303 	bic.w	r3, r3, #3
  407b42:	441c      	add	r4, r3
  407b44:	462e      	mov	r6, r5
  407b46:	e6f9      	b.n	40793c <_realloc_r+0xc0>
  407b48:	68a9      	ldr	r1, [r5, #8]
  407b4a:	f8ca 1010 	str.w	r1, [sl, #16]
  407b4e:	68e9      	ldr	r1, [r5, #12]
  407b50:	f8ca 1014 	str.w	r1, [sl, #20]
  407b54:	2a24      	cmp	r2, #36	; 0x24
  407b56:	d00c      	beq.n	407b72 <_realloc_r+0x2f6>
  407b58:	3510      	adds	r5, #16
  407b5a:	f10a 0218 	add.w	r2, sl, #24
  407b5e:	e7b9      	b.n	407ad4 <_realloc_r+0x258>
  407b60:	692b      	ldr	r3, [r5, #16]
  407b62:	6103      	str	r3, [r0, #16]
  407b64:	696b      	ldr	r3, [r5, #20]
  407b66:	6143      	str	r3, [r0, #20]
  407b68:	f105 0218 	add.w	r2, r5, #24
  407b6c:	f100 0318 	add.w	r3, r0, #24
  407b70:	e6cb      	b.n	40790a <_realloc_r+0x8e>
  407b72:	692a      	ldr	r2, [r5, #16]
  407b74:	f8ca 2018 	str.w	r2, [sl, #24]
  407b78:	696a      	ldr	r2, [r5, #20]
  407b7a:	f8ca 201c 	str.w	r2, [sl, #28]
  407b7e:	3518      	adds	r5, #24
  407b80:	f10a 0220 	add.w	r2, sl, #32
  407b84:	e7a6      	b.n	407ad4 <_realloc_r+0x258>
  407b86:	4632      	mov	r2, r6
  407b88:	e77f      	b.n	407a8a <_realloc_r+0x20e>
  407b8a:	4629      	mov	r1, r5
  407b8c:	4630      	mov	r0, r6
  407b8e:	9301      	str	r3, [sp, #4]
  407b90:	f7ff fe10 	bl	4077b4 <memmove>
  407b94:	9b01      	ldr	r3, [sp, #4]
  407b96:	e77e      	b.n	407a96 <_realloc_r+0x21a>
  407b98:	68a9      	ldr	r1, [r5, #8]
  407b9a:	f8ca 1010 	str.w	r1, [sl, #16]
  407b9e:	68e9      	ldr	r1, [r5, #12]
  407ba0:	f8ca 1014 	str.w	r1, [sl, #20]
  407ba4:	2a24      	cmp	r2, #36	; 0x24
  407ba6:	d003      	beq.n	407bb0 <_realloc_r+0x334>
  407ba8:	3510      	adds	r5, #16
  407baa:	f10a 0218 	add.w	r2, sl, #24
  407bae:	e76c      	b.n	407a8a <_realloc_r+0x20e>
  407bb0:	692a      	ldr	r2, [r5, #16]
  407bb2:	f8ca 2018 	str.w	r2, [sl, #24]
  407bb6:	696a      	ldr	r2, [r5, #20]
  407bb8:	f8ca 201c 	str.w	r2, [sl, #28]
  407bbc:	3518      	adds	r5, #24
  407bbe:	f10a 0220 	add.w	r2, sl, #32
  407bc2:	e762      	b.n	407a8a <_realloc_r+0x20e>
  407bc4:	20000440 	.word	0x20000440

00407bc8 <__ascii_wctomb>:
  407bc8:	b121      	cbz	r1, 407bd4 <__ascii_wctomb+0xc>
  407bca:	2aff      	cmp	r2, #255	; 0xff
  407bcc:	d804      	bhi.n	407bd8 <__ascii_wctomb+0x10>
  407bce:	700a      	strb	r2, [r1, #0]
  407bd0:	2001      	movs	r0, #1
  407bd2:	4770      	bx	lr
  407bd4:	4608      	mov	r0, r1
  407bd6:	4770      	bx	lr
  407bd8:	238a      	movs	r3, #138	; 0x8a
  407bda:	6003      	str	r3, [r0, #0]
  407bdc:	f04f 30ff 	mov.w	r0, #4294967295
  407be0:	4770      	bx	lr
  407be2:	bf00      	nop

00407be4 <__aeabi_drsub>:
  407be4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  407be8:	e002      	b.n	407bf0 <__adddf3>
  407bea:	bf00      	nop

00407bec <__aeabi_dsub>:
  407bec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00407bf0 <__adddf3>:
  407bf0:	b530      	push	{r4, r5, lr}
  407bf2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  407bf6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  407bfa:	ea94 0f05 	teq	r4, r5
  407bfe:	bf08      	it	eq
  407c00:	ea90 0f02 	teqeq	r0, r2
  407c04:	bf1f      	itttt	ne
  407c06:	ea54 0c00 	orrsne.w	ip, r4, r0
  407c0a:	ea55 0c02 	orrsne.w	ip, r5, r2
  407c0e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  407c12:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407c16:	f000 80e2 	beq.w	407dde <__adddf3+0x1ee>
  407c1a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  407c1e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  407c22:	bfb8      	it	lt
  407c24:	426d      	neglt	r5, r5
  407c26:	dd0c      	ble.n	407c42 <__adddf3+0x52>
  407c28:	442c      	add	r4, r5
  407c2a:	ea80 0202 	eor.w	r2, r0, r2
  407c2e:	ea81 0303 	eor.w	r3, r1, r3
  407c32:	ea82 0000 	eor.w	r0, r2, r0
  407c36:	ea83 0101 	eor.w	r1, r3, r1
  407c3a:	ea80 0202 	eor.w	r2, r0, r2
  407c3e:	ea81 0303 	eor.w	r3, r1, r3
  407c42:	2d36      	cmp	r5, #54	; 0x36
  407c44:	bf88      	it	hi
  407c46:	bd30      	pophi	{r4, r5, pc}
  407c48:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407c4c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407c50:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407c54:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407c58:	d002      	beq.n	407c60 <__adddf3+0x70>
  407c5a:	4240      	negs	r0, r0
  407c5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407c60:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407c64:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407c68:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407c6c:	d002      	beq.n	407c74 <__adddf3+0x84>
  407c6e:	4252      	negs	r2, r2
  407c70:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407c74:	ea94 0f05 	teq	r4, r5
  407c78:	f000 80a7 	beq.w	407dca <__adddf3+0x1da>
  407c7c:	f1a4 0401 	sub.w	r4, r4, #1
  407c80:	f1d5 0e20 	rsbs	lr, r5, #32
  407c84:	db0d      	blt.n	407ca2 <__adddf3+0xb2>
  407c86:	fa02 fc0e 	lsl.w	ip, r2, lr
  407c8a:	fa22 f205 	lsr.w	r2, r2, r5
  407c8e:	1880      	adds	r0, r0, r2
  407c90:	f141 0100 	adc.w	r1, r1, #0
  407c94:	fa03 f20e 	lsl.w	r2, r3, lr
  407c98:	1880      	adds	r0, r0, r2
  407c9a:	fa43 f305 	asr.w	r3, r3, r5
  407c9e:	4159      	adcs	r1, r3
  407ca0:	e00e      	b.n	407cc0 <__adddf3+0xd0>
  407ca2:	f1a5 0520 	sub.w	r5, r5, #32
  407ca6:	f10e 0e20 	add.w	lr, lr, #32
  407caa:	2a01      	cmp	r2, #1
  407cac:	fa03 fc0e 	lsl.w	ip, r3, lr
  407cb0:	bf28      	it	cs
  407cb2:	f04c 0c02 	orrcs.w	ip, ip, #2
  407cb6:	fa43 f305 	asr.w	r3, r3, r5
  407cba:	18c0      	adds	r0, r0, r3
  407cbc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  407cc0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407cc4:	d507      	bpl.n	407cd6 <__adddf3+0xe6>
  407cc6:	f04f 0e00 	mov.w	lr, #0
  407cca:	f1dc 0c00 	rsbs	ip, ip, #0
  407cce:	eb7e 0000 	sbcs.w	r0, lr, r0
  407cd2:	eb6e 0101 	sbc.w	r1, lr, r1
  407cd6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  407cda:	d31b      	bcc.n	407d14 <__adddf3+0x124>
  407cdc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  407ce0:	d30c      	bcc.n	407cfc <__adddf3+0x10c>
  407ce2:	0849      	lsrs	r1, r1, #1
  407ce4:	ea5f 0030 	movs.w	r0, r0, rrx
  407ce8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  407cec:	f104 0401 	add.w	r4, r4, #1
  407cf0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  407cf4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  407cf8:	f080 809a 	bcs.w	407e30 <__adddf3+0x240>
  407cfc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  407d00:	bf08      	it	eq
  407d02:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407d06:	f150 0000 	adcs.w	r0, r0, #0
  407d0a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407d0e:	ea41 0105 	orr.w	r1, r1, r5
  407d12:	bd30      	pop	{r4, r5, pc}
  407d14:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407d18:	4140      	adcs	r0, r0
  407d1a:	eb41 0101 	adc.w	r1, r1, r1
  407d1e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407d22:	f1a4 0401 	sub.w	r4, r4, #1
  407d26:	d1e9      	bne.n	407cfc <__adddf3+0x10c>
  407d28:	f091 0f00 	teq	r1, #0
  407d2c:	bf04      	itt	eq
  407d2e:	4601      	moveq	r1, r0
  407d30:	2000      	moveq	r0, #0
  407d32:	fab1 f381 	clz	r3, r1
  407d36:	bf08      	it	eq
  407d38:	3320      	addeq	r3, #32
  407d3a:	f1a3 030b 	sub.w	r3, r3, #11
  407d3e:	f1b3 0220 	subs.w	r2, r3, #32
  407d42:	da0c      	bge.n	407d5e <__adddf3+0x16e>
  407d44:	320c      	adds	r2, #12
  407d46:	dd08      	ble.n	407d5a <__adddf3+0x16a>
  407d48:	f102 0c14 	add.w	ip, r2, #20
  407d4c:	f1c2 020c 	rsb	r2, r2, #12
  407d50:	fa01 f00c 	lsl.w	r0, r1, ip
  407d54:	fa21 f102 	lsr.w	r1, r1, r2
  407d58:	e00c      	b.n	407d74 <__adddf3+0x184>
  407d5a:	f102 0214 	add.w	r2, r2, #20
  407d5e:	bfd8      	it	le
  407d60:	f1c2 0c20 	rsble	ip, r2, #32
  407d64:	fa01 f102 	lsl.w	r1, r1, r2
  407d68:	fa20 fc0c 	lsr.w	ip, r0, ip
  407d6c:	bfdc      	itt	le
  407d6e:	ea41 010c 	orrle.w	r1, r1, ip
  407d72:	4090      	lslle	r0, r2
  407d74:	1ae4      	subs	r4, r4, r3
  407d76:	bfa2      	ittt	ge
  407d78:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407d7c:	4329      	orrge	r1, r5
  407d7e:	bd30      	popge	{r4, r5, pc}
  407d80:	ea6f 0404 	mvn.w	r4, r4
  407d84:	3c1f      	subs	r4, #31
  407d86:	da1c      	bge.n	407dc2 <__adddf3+0x1d2>
  407d88:	340c      	adds	r4, #12
  407d8a:	dc0e      	bgt.n	407daa <__adddf3+0x1ba>
  407d8c:	f104 0414 	add.w	r4, r4, #20
  407d90:	f1c4 0220 	rsb	r2, r4, #32
  407d94:	fa20 f004 	lsr.w	r0, r0, r4
  407d98:	fa01 f302 	lsl.w	r3, r1, r2
  407d9c:	ea40 0003 	orr.w	r0, r0, r3
  407da0:	fa21 f304 	lsr.w	r3, r1, r4
  407da4:	ea45 0103 	orr.w	r1, r5, r3
  407da8:	bd30      	pop	{r4, r5, pc}
  407daa:	f1c4 040c 	rsb	r4, r4, #12
  407dae:	f1c4 0220 	rsb	r2, r4, #32
  407db2:	fa20 f002 	lsr.w	r0, r0, r2
  407db6:	fa01 f304 	lsl.w	r3, r1, r4
  407dba:	ea40 0003 	orr.w	r0, r0, r3
  407dbe:	4629      	mov	r1, r5
  407dc0:	bd30      	pop	{r4, r5, pc}
  407dc2:	fa21 f004 	lsr.w	r0, r1, r4
  407dc6:	4629      	mov	r1, r5
  407dc8:	bd30      	pop	{r4, r5, pc}
  407dca:	f094 0f00 	teq	r4, #0
  407dce:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  407dd2:	bf06      	itte	eq
  407dd4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  407dd8:	3401      	addeq	r4, #1
  407dda:	3d01      	subne	r5, #1
  407ddc:	e74e      	b.n	407c7c <__adddf3+0x8c>
  407dde:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407de2:	bf18      	it	ne
  407de4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407de8:	d029      	beq.n	407e3e <__adddf3+0x24e>
  407dea:	ea94 0f05 	teq	r4, r5
  407dee:	bf08      	it	eq
  407df0:	ea90 0f02 	teqeq	r0, r2
  407df4:	d005      	beq.n	407e02 <__adddf3+0x212>
  407df6:	ea54 0c00 	orrs.w	ip, r4, r0
  407dfa:	bf04      	itt	eq
  407dfc:	4619      	moveq	r1, r3
  407dfe:	4610      	moveq	r0, r2
  407e00:	bd30      	pop	{r4, r5, pc}
  407e02:	ea91 0f03 	teq	r1, r3
  407e06:	bf1e      	ittt	ne
  407e08:	2100      	movne	r1, #0
  407e0a:	2000      	movne	r0, #0
  407e0c:	bd30      	popne	{r4, r5, pc}
  407e0e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  407e12:	d105      	bne.n	407e20 <__adddf3+0x230>
  407e14:	0040      	lsls	r0, r0, #1
  407e16:	4149      	adcs	r1, r1
  407e18:	bf28      	it	cs
  407e1a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  407e1e:	bd30      	pop	{r4, r5, pc}
  407e20:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  407e24:	bf3c      	itt	cc
  407e26:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  407e2a:	bd30      	popcc	{r4, r5, pc}
  407e2c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407e30:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  407e34:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407e38:	f04f 0000 	mov.w	r0, #0
  407e3c:	bd30      	pop	{r4, r5, pc}
  407e3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407e42:	bf1a      	itte	ne
  407e44:	4619      	movne	r1, r3
  407e46:	4610      	movne	r0, r2
  407e48:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407e4c:	bf1c      	itt	ne
  407e4e:	460b      	movne	r3, r1
  407e50:	4602      	movne	r2, r0
  407e52:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407e56:	bf06      	itte	eq
  407e58:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407e5c:	ea91 0f03 	teqeq	r1, r3
  407e60:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407e64:	bd30      	pop	{r4, r5, pc}
  407e66:	bf00      	nop

00407e68 <__aeabi_ui2d>:
  407e68:	f090 0f00 	teq	r0, #0
  407e6c:	bf04      	itt	eq
  407e6e:	2100      	moveq	r1, #0
  407e70:	4770      	bxeq	lr
  407e72:	b530      	push	{r4, r5, lr}
  407e74:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407e78:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407e7c:	f04f 0500 	mov.w	r5, #0
  407e80:	f04f 0100 	mov.w	r1, #0
  407e84:	e750      	b.n	407d28 <__adddf3+0x138>
  407e86:	bf00      	nop

00407e88 <__aeabi_i2d>:
  407e88:	f090 0f00 	teq	r0, #0
  407e8c:	bf04      	itt	eq
  407e8e:	2100      	moveq	r1, #0
  407e90:	4770      	bxeq	lr
  407e92:	b530      	push	{r4, r5, lr}
  407e94:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407e98:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407e9c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407ea0:	bf48      	it	mi
  407ea2:	4240      	negmi	r0, r0
  407ea4:	f04f 0100 	mov.w	r1, #0
  407ea8:	e73e      	b.n	407d28 <__adddf3+0x138>
  407eaa:	bf00      	nop

00407eac <__aeabi_f2d>:
  407eac:	0042      	lsls	r2, r0, #1
  407eae:	ea4f 01e2 	mov.w	r1, r2, asr #3
  407eb2:	ea4f 0131 	mov.w	r1, r1, rrx
  407eb6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  407eba:	bf1f      	itttt	ne
  407ebc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  407ec0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407ec4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  407ec8:	4770      	bxne	lr
  407eca:	f092 0f00 	teq	r2, #0
  407ece:	bf14      	ite	ne
  407ed0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407ed4:	4770      	bxeq	lr
  407ed6:	b530      	push	{r4, r5, lr}
  407ed8:	f44f 7460 	mov.w	r4, #896	; 0x380
  407edc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407ee0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407ee4:	e720      	b.n	407d28 <__adddf3+0x138>
  407ee6:	bf00      	nop

00407ee8 <__aeabi_ul2d>:
  407ee8:	ea50 0201 	orrs.w	r2, r0, r1
  407eec:	bf08      	it	eq
  407eee:	4770      	bxeq	lr
  407ef0:	b530      	push	{r4, r5, lr}
  407ef2:	f04f 0500 	mov.w	r5, #0
  407ef6:	e00a      	b.n	407f0e <__aeabi_l2d+0x16>

00407ef8 <__aeabi_l2d>:
  407ef8:	ea50 0201 	orrs.w	r2, r0, r1
  407efc:	bf08      	it	eq
  407efe:	4770      	bxeq	lr
  407f00:	b530      	push	{r4, r5, lr}
  407f02:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  407f06:	d502      	bpl.n	407f0e <__aeabi_l2d+0x16>
  407f08:	4240      	negs	r0, r0
  407f0a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407f0e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407f12:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407f16:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  407f1a:	f43f aedc 	beq.w	407cd6 <__adddf3+0xe6>
  407f1e:	f04f 0203 	mov.w	r2, #3
  407f22:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407f26:	bf18      	it	ne
  407f28:	3203      	addne	r2, #3
  407f2a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407f2e:	bf18      	it	ne
  407f30:	3203      	addne	r2, #3
  407f32:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  407f36:	f1c2 0320 	rsb	r3, r2, #32
  407f3a:	fa00 fc03 	lsl.w	ip, r0, r3
  407f3e:	fa20 f002 	lsr.w	r0, r0, r2
  407f42:	fa01 fe03 	lsl.w	lr, r1, r3
  407f46:	ea40 000e 	orr.w	r0, r0, lr
  407f4a:	fa21 f102 	lsr.w	r1, r1, r2
  407f4e:	4414      	add	r4, r2
  407f50:	e6c1      	b.n	407cd6 <__adddf3+0xe6>
  407f52:	bf00      	nop

00407f54 <__aeabi_dmul>:
  407f54:	b570      	push	{r4, r5, r6, lr}
  407f56:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407f5a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407f5e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407f62:	bf1d      	ittte	ne
  407f64:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407f68:	ea94 0f0c 	teqne	r4, ip
  407f6c:	ea95 0f0c 	teqne	r5, ip
  407f70:	f000 f8de 	bleq	408130 <__aeabi_dmul+0x1dc>
  407f74:	442c      	add	r4, r5
  407f76:	ea81 0603 	eor.w	r6, r1, r3
  407f7a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  407f7e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407f82:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  407f86:	bf18      	it	ne
  407f88:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  407f8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407f90:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407f94:	d038      	beq.n	408008 <__aeabi_dmul+0xb4>
  407f96:	fba0 ce02 	umull	ip, lr, r0, r2
  407f9a:	f04f 0500 	mov.w	r5, #0
  407f9e:	fbe1 e502 	umlal	lr, r5, r1, r2
  407fa2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  407fa6:	fbe0 e503 	umlal	lr, r5, r0, r3
  407faa:	f04f 0600 	mov.w	r6, #0
  407fae:	fbe1 5603 	umlal	r5, r6, r1, r3
  407fb2:	f09c 0f00 	teq	ip, #0
  407fb6:	bf18      	it	ne
  407fb8:	f04e 0e01 	orrne.w	lr, lr, #1
  407fbc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  407fc0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  407fc4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  407fc8:	d204      	bcs.n	407fd4 <__aeabi_dmul+0x80>
  407fca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  407fce:	416d      	adcs	r5, r5
  407fd0:	eb46 0606 	adc.w	r6, r6, r6
  407fd4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  407fd8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  407fdc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  407fe0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  407fe4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  407fe8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407fec:	bf88      	it	hi
  407fee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407ff2:	d81e      	bhi.n	408032 <__aeabi_dmul+0xde>
  407ff4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  407ff8:	bf08      	it	eq
  407ffa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  407ffe:	f150 0000 	adcs.w	r0, r0, #0
  408002:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  408006:	bd70      	pop	{r4, r5, r6, pc}
  408008:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40800c:	ea46 0101 	orr.w	r1, r6, r1
  408010:	ea40 0002 	orr.w	r0, r0, r2
  408014:	ea81 0103 	eor.w	r1, r1, r3
  408018:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40801c:	bfc2      	ittt	gt
  40801e:	ebd4 050c 	rsbsgt	r5, r4, ip
  408022:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  408026:	bd70      	popgt	{r4, r5, r6, pc}
  408028:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40802c:	f04f 0e00 	mov.w	lr, #0
  408030:	3c01      	subs	r4, #1
  408032:	f300 80ab 	bgt.w	40818c <__aeabi_dmul+0x238>
  408036:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40803a:	bfde      	ittt	le
  40803c:	2000      	movle	r0, #0
  40803e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  408042:	bd70      	pople	{r4, r5, r6, pc}
  408044:	f1c4 0400 	rsb	r4, r4, #0
  408048:	3c20      	subs	r4, #32
  40804a:	da35      	bge.n	4080b8 <__aeabi_dmul+0x164>
  40804c:	340c      	adds	r4, #12
  40804e:	dc1b      	bgt.n	408088 <__aeabi_dmul+0x134>
  408050:	f104 0414 	add.w	r4, r4, #20
  408054:	f1c4 0520 	rsb	r5, r4, #32
  408058:	fa00 f305 	lsl.w	r3, r0, r5
  40805c:	fa20 f004 	lsr.w	r0, r0, r4
  408060:	fa01 f205 	lsl.w	r2, r1, r5
  408064:	ea40 0002 	orr.w	r0, r0, r2
  408068:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40806c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  408070:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  408074:	fa21 f604 	lsr.w	r6, r1, r4
  408078:	eb42 0106 	adc.w	r1, r2, r6
  40807c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  408080:	bf08      	it	eq
  408082:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  408086:	bd70      	pop	{r4, r5, r6, pc}
  408088:	f1c4 040c 	rsb	r4, r4, #12
  40808c:	f1c4 0520 	rsb	r5, r4, #32
  408090:	fa00 f304 	lsl.w	r3, r0, r4
  408094:	fa20 f005 	lsr.w	r0, r0, r5
  408098:	fa01 f204 	lsl.w	r2, r1, r4
  40809c:	ea40 0002 	orr.w	r0, r0, r2
  4080a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4080a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4080a8:	f141 0100 	adc.w	r1, r1, #0
  4080ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4080b0:	bf08      	it	eq
  4080b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4080b6:	bd70      	pop	{r4, r5, r6, pc}
  4080b8:	f1c4 0520 	rsb	r5, r4, #32
  4080bc:	fa00 f205 	lsl.w	r2, r0, r5
  4080c0:	ea4e 0e02 	orr.w	lr, lr, r2
  4080c4:	fa20 f304 	lsr.w	r3, r0, r4
  4080c8:	fa01 f205 	lsl.w	r2, r1, r5
  4080cc:	ea43 0302 	orr.w	r3, r3, r2
  4080d0:	fa21 f004 	lsr.w	r0, r1, r4
  4080d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4080d8:	fa21 f204 	lsr.w	r2, r1, r4
  4080dc:	ea20 0002 	bic.w	r0, r0, r2
  4080e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4080e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4080e8:	bf08      	it	eq
  4080ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4080ee:	bd70      	pop	{r4, r5, r6, pc}
  4080f0:	f094 0f00 	teq	r4, #0
  4080f4:	d10f      	bne.n	408116 <__aeabi_dmul+0x1c2>
  4080f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4080fa:	0040      	lsls	r0, r0, #1
  4080fc:	eb41 0101 	adc.w	r1, r1, r1
  408100:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408104:	bf08      	it	eq
  408106:	3c01      	subeq	r4, #1
  408108:	d0f7      	beq.n	4080fa <__aeabi_dmul+0x1a6>
  40810a:	ea41 0106 	orr.w	r1, r1, r6
  40810e:	f095 0f00 	teq	r5, #0
  408112:	bf18      	it	ne
  408114:	4770      	bxne	lr
  408116:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40811a:	0052      	lsls	r2, r2, #1
  40811c:	eb43 0303 	adc.w	r3, r3, r3
  408120:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  408124:	bf08      	it	eq
  408126:	3d01      	subeq	r5, #1
  408128:	d0f7      	beq.n	40811a <__aeabi_dmul+0x1c6>
  40812a:	ea43 0306 	orr.w	r3, r3, r6
  40812e:	4770      	bx	lr
  408130:	ea94 0f0c 	teq	r4, ip
  408134:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  408138:	bf18      	it	ne
  40813a:	ea95 0f0c 	teqne	r5, ip
  40813e:	d00c      	beq.n	40815a <__aeabi_dmul+0x206>
  408140:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  408144:	bf18      	it	ne
  408146:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40814a:	d1d1      	bne.n	4080f0 <__aeabi_dmul+0x19c>
  40814c:	ea81 0103 	eor.w	r1, r1, r3
  408150:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  408154:	f04f 0000 	mov.w	r0, #0
  408158:	bd70      	pop	{r4, r5, r6, pc}
  40815a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40815e:	bf06      	itte	eq
  408160:	4610      	moveq	r0, r2
  408162:	4619      	moveq	r1, r3
  408164:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  408168:	d019      	beq.n	40819e <__aeabi_dmul+0x24a>
  40816a:	ea94 0f0c 	teq	r4, ip
  40816e:	d102      	bne.n	408176 <__aeabi_dmul+0x222>
  408170:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  408174:	d113      	bne.n	40819e <__aeabi_dmul+0x24a>
  408176:	ea95 0f0c 	teq	r5, ip
  40817a:	d105      	bne.n	408188 <__aeabi_dmul+0x234>
  40817c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  408180:	bf1c      	itt	ne
  408182:	4610      	movne	r0, r2
  408184:	4619      	movne	r1, r3
  408186:	d10a      	bne.n	40819e <__aeabi_dmul+0x24a>
  408188:	ea81 0103 	eor.w	r1, r1, r3
  40818c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  408190:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  408194:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  408198:	f04f 0000 	mov.w	r0, #0
  40819c:	bd70      	pop	{r4, r5, r6, pc}
  40819e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4081a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4081a6:	bd70      	pop	{r4, r5, r6, pc}

004081a8 <__aeabi_ddiv>:
  4081a8:	b570      	push	{r4, r5, r6, lr}
  4081aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4081ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4081b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4081b6:	bf1d      	ittte	ne
  4081b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4081bc:	ea94 0f0c 	teqne	r4, ip
  4081c0:	ea95 0f0c 	teqne	r5, ip
  4081c4:	f000 f8a7 	bleq	408316 <__aeabi_ddiv+0x16e>
  4081c8:	eba4 0405 	sub.w	r4, r4, r5
  4081cc:	ea81 0e03 	eor.w	lr, r1, r3
  4081d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4081d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4081d8:	f000 8088 	beq.w	4082ec <__aeabi_ddiv+0x144>
  4081dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4081e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4081e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4081e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4081ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4081f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4081f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4081f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4081fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  408200:	429d      	cmp	r5, r3
  408202:	bf08      	it	eq
  408204:	4296      	cmpeq	r6, r2
  408206:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40820a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40820e:	d202      	bcs.n	408216 <__aeabi_ddiv+0x6e>
  408210:	085b      	lsrs	r3, r3, #1
  408212:	ea4f 0232 	mov.w	r2, r2, rrx
  408216:	1ab6      	subs	r6, r6, r2
  408218:	eb65 0503 	sbc.w	r5, r5, r3
  40821c:	085b      	lsrs	r3, r3, #1
  40821e:	ea4f 0232 	mov.w	r2, r2, rrx
  408222:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  408226:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40822a:	ebb6 0e02 	subs.w	lr, r6, r2
  40822e:	eb75 0e03 	sbcs.w	lr, r5, r3
  408232:	bf22      	ittt	cs
  408234:	1ab6      	subcs	r6, r6, r2
  408236:	4675      	movcs	r5, lr
  408238:	ea40 000c 	orrcs.w	r0, r0, ip
  40823c:	085b      	lsrs	r3, r3, #1
  40823e:	ea4f 0232 	mov.w	r2, r2, rrx
  408242:	ebb6 0e02 	subs.w	lr, r6, r2
  408246:	eb75 0e03 	sbcs.w	lr, r5, r3
  40824a:	bf22      	ittt	cs
  40824c:	1ab6      	subcs	r6, r6, r2
  40824e:	4675      	movcs	r5, lr
  408250:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  408254:	085b      	lsrs	r3, r3, #1
  408256:	ea4f 0232 	mov.w	r2, r2, rrx
  40825a:	ebb6 0e02 	subs.w	lr, r6, r2
  40825e:	eb75 0e03 	sbcs.w	lr, r5, r3
  408262:	bf22      	ittt	cs
  408264:	1ab6      	subcs	r6, r6, r2
  408266:	4675      	movcs	r5, lr
  408268:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40826c:	085b      	lsrs	r3, r3, #1
  40826e:	ea4f 0232 	mov.w	r2, r2, rrx
  408272:	ebb6 0e02 	subs.w	lr, r6, r2
  408276:	eb75 0e03 	sbcs.w	lr, r5, r3
  40827a:	bf22      	ittt	cs
  40827c:	1ab6      	subcs	r6, r6, r2
  40827e:	4675      	movcs	r5, lr
  408280:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  408284:	ea55 0e06 	orrs.w	lr, r5, r6
  408288:	d018      	beq.n	4082bc <__aeabi_ddiv+0x114>
  40828a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40828e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  408292:	ea4f 1606 	mov.w	r6, r6, lsl #4
  408296:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40829a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40829e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4082a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4082a6:	d1c0      	bne.n	40822a <__aeabi_ddiv+0x82>
  4082a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4082ac:	d10b      	bne.n	4082c6 <__aeabi_ddiv+0x11e>
  4082ae:	ea41 0100 	orr.w	r1, r1, r0
  4082b2:	f04f 0000 	mov.w	r0, #0
  4082b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4082ba:	e7b6      	b.n	40822a <__aeabi_ddiv+0x82>
  4082bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4082c0:	bf04      	itt	eq
  4082c2:	4301      	orreq	r1, r0
  4082c4:	2000      	moveq	r0, #0
  4082c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4082ca:	bf88      	it	hi
  4082cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4082d0:	f63f aeaf 	bhi.w	408032 <__aeabi_dmul+0xde>
  4082d4:	ebb5 0c03 	subs.w	ip, r5, r3
  4082d8:	bf04      	itt	eq
  4082da:	ebb6 0c02 	subseq.w	ip, r6, r2
  4082de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4082e2:	f150 0000 	adcs.w	r0, r0, #0
  4082e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4082ea:	bd70      	pop	{r4, r5, r6, pc}
  4082ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4082f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4082f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4082f8:	bfc2      	ittt	gt
  4082fa:	ebd4 050c 	rsbsgt	r5, r4, ip
  4082fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  408302:	bd70      	popgt	{r4, r5, r6, pc}
  408304:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  408308:	f04f 0e00 	mov.w	lr, #0
  40830c:	3c01      	subs	r4, #1
  40830e:	e690      	b.n	408032 <__aeabi_dmul+0xde>
  408310:	ea45 0e06 	orr.w	lr, r5, r6
  408314:	e68d      	b.n	408032 <__aeabi_dmul+0xde>
  408316:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40831a:	ea94 0f0c 	teq	r4, ip
  40831e:	bf08      	it	eq
  408320:	ea95 0f0c 	teqeq	r5, ip
  408324:	f43f af3b 	beq.w	40819e <__aeabi_dmul+0x24a>
  408328:	ea94 0f0c 	teq	r4, ip
  40832c:	d10a      	bne.n	408344 <__aeabi_ddiv+0x19c>
  40832e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  408332:	f47f af34 	bne.w	40819e <__aeabi_dmul+0x24a>
  408336:	ea95 0f0c 	teq	r5, ip
  40833a:	f47f af25 	bne.w	408188 <__aeabi_dmul+0x234>
  40833e:	4610      	mov	r0, r2
  408340:	4619      	mov	r1, r3
  408342:	e72c      	b.n	40819e <__aeabi_dmul+0x24a>
  408344:	ea95 0f0c 	teq	r5, ip
  408348:	d106      	bne.n	408358 <__aeabi_ddiv+0x1b0>
  40834a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40834e:	f43f aefd 	beq.w	40814c <__aeabi_dmul+0x1f8>
  408352:	4610      	mov	r0, r2
  408354:	4619      	mov	r1, r3
  408356:	e722      	b.n	40819e <__aeabi_dmul+0x24a>
  408358:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40835c:	bf18      	it	ne
  40835e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  408362:	f47f aec5 	bne.w	4080f0 <__aeabi_dmul+0x19c>
  408366:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40836a:	f47f af0d 	bne.w	408188 <__aeabi_dmul+0x234>
  40836e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  408372:	f47f aeeb 	bne.w	40814c <__aeabi_dmul+0x1f8>
  408376:	e712      	b.n	40819e <__aeabi_dmul+0x24a>

00408378 <__gedf2>:
  408378:	f04f 3cff 	mov.w	ip, #4294967295
  40837c:	e006      	b.n	40838c <__cmpdf2+0x4>
  40837e:	bf00      	nop

00408380 <__ledf2>:
  408380:	f04f 0c01 	mov.w	ip, #1
  408384:	e002      	b.n	40838c <__cmpdf2+0x4>
  408386:	bf00      	nop

00408388 <__cmpdf2>:
  408388:	f04f 0c01 	mov.w	ip, #1
  40838c:	f84d cd04 	str.w	ip, [sp, #-4]!
  408390:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408394:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408398:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40839c:	bf18      	it	ne
  40839e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4083a2:	d01b      	beq.n	4083dc <__cmpdf2+0x54>
  4083a4:	b001      	add	sp, #4
  4083a6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4083aa:	bf0c      	ite	eq
  4083ac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4083b0:	ea91 0f03 	teqne	r1, r3
  4083b4:	bf02      	ittt	eq
  4083b6:	ea90 0f02 	teqeq	r0, r2
  4083ba:	2000      	moveq	r0, #0
  4083bc:	4770      	bxeq	lr
  4083be:	f110 0f00 	cmn.w	r0, #0
  4083c2:	ea91 0f03 	teq	r1, r3
  4083c6:	bf58      	it	pl
  4083c8:	4299      	cmppl	r1, r3
  4083ca:	bf08      	it	eq
  4083cc:	4290      	cmpeq	r0, r2
  4083ce:	bf2c      	ite	cs
  4083d0:	17d8      	asrcs	r0, r3, #31
  4083d2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4083d6:	f040 0001 	orr.w	r0, r0, #1
  4083da:	4770      	bx	lr
  4083dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4083e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4083e4:	d102      	bne.n	4083ec <__cmpdf2+0x64>
  4083e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4083ea:	d107      	bne.n	4083fc <__cmpdf2+0x74>
  4083ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4083f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4083f4:	d1d6      	bne.n	4083a4 <__cmpdf2+0x1c>
  4083f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4083fa:	d0d3      	beq.n	4083a4 <__cmpdf2+0x1c>
  4083fc:	f85d 0b04 	ldr.w	r0, [sp], #4
  408400:	4770      	bx	lr
  408402:	bf00      	nop

00408404 <__aeabi_cdrcmple>:
  408404:	4684      	mov	ip, r0
  408406:	4610      	mov	r0, r2
  408408:	4662      	mov	r2, ip
  40840a:	468c      	mov	ip, r1
  40840c:	4619      	mov	r1, r3
  40840e:	4663      	mov	r3, ip
  408410:	e000      	b.n	408414 <__aeabi_cdcmpeq>
  408412:	bf00      	nop

00408414 <__aeabi_cdcmpeq>:
  408414:	b501      	push	{r0, lr}
  408416:	f7ff ffb7 	bl	408388 <__cmpdf2>
  40841a:	2800      	cmp	r0, #0
  40841c:	bf48      	it	mi
  40841e:	f110 0f00 	cmnmi.w	r0, #0
  408422:	bd01      	pop	{r0, pc}

00408424 <__aeabi_dcmpeq>:
  408424:	f84d ed08 	str.w	lr, [sp, #-8]!
  408428:	f7ff fff4 	bl	408414 <__aeabi_cdcmpeq>
  40842c:	bf0c      	ite	eq
  40842e:	2001      	moveq	r0, #1
  408430:	2000      	movne	r0, #0
  408432:	f85d fb08 	ldr.w	pc, [sp], #8
  408436:	bf00      	nop

00408438 <__aeabi_dcmplt>:
  408438:	f84d ed08 	str.w	lr, [sp, #-8]!
  40843c:	f7ff ffea 	bl	408414 <__aeabi_cdcmpeq>
  408440:	bf34      	ite	cc
  408442:	2001      	movcc	r0, #1
  408444:	2000      	movcs	r0, #0
  408446:	f85d fb08 	ldr.w	pc, [sp], #8
  40844a:	bf00      	nop

0040844c <__aeabi_dcmple>:
  40844c:	f84d ed08 	str.w	lr, [sp, #-8]!
  408450:	f7ff ffe0 	bl	408414 <__aeabi_cdcmpeq>
  408454:	bf94      	ite	ls
  408456:	2001      	movls	r0, #1
  408458:	2000      	movhi	r0, #0
  40845a:	f85d fb08 	ldr.w	pc, [sp], #8
  40845e:	bf00      	nop

00408460 <__aeabi_dcmpge>:
  408460:	f84d ed08 	str.w	lr, [sp, #-8]!
  408464:	f7ff ffce 	bl	408404 <__aeabi_cdrcmple>
  408468:	bf94      	ite	ls
  40846a:	2001      	movls	r0, #1
  40846c:	2000      	movhi	r0, #0
  40846e:	f85d fb08 	ldr.w	pc, [sp], #8
  408472:	bf00      	nop

00408474 <__aeabi_dcmpgt>:
  408474:	f84d ed08 	str.w	lr, [sp, #-8]!
  408478:	f7ff ffc4 	bl	408404 <__aeabi_cdrcmple>
  40847c:	bf34      	ite	cc
  40847e:	2001      	movcc	r0, #1
  408480:	2000      	movcs	r0, #0
  408482:	f85d fb08 	ldr.w	pc, [sp], #8
  408486:	bf00      	nop

00408488 <__aeabi_dcmpun>:
  408488:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40848c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408490:	d102      	bne.n	408498 <__aeabi_dcmpun+0x10>
  408492:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  408496:	d10a      	bne.n	4084ae <__aeabi_dcmpun+0x26>
  408498:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40849c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4084a0:	d102      	bne.n	4084a8 <__aeabi_dcmpun+0x20>
  4084a2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4084a6:	d102      	bne.n	4084ae <__aeabi_dcmpun+0x26>
  4084a8:	f04f 0000 	mov.w	r0, #0
  4084ac:	4770      	bx	lr
  4084ae:	f04f 0001 	mov.w	r0, #1
  4084b2:	4770      	bx	lr

004084b4 <__aeabi_d2iz>:
  4084b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4084b8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4084bc:	d215      	bcs.n	4084ea <__aeabi_d2iz+0x36>
  4084be:	d511      	bpl.n	4084e4 <__aeabi_d2iz+0x30>
  4084c0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4084c4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4084c8:	d912      	bls.n	4084f0 <__aeabi_d2iz+0x3c>
  4084ca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4084ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4084d2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4084d6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4084da:	fa23 f002 	lsr.w	r0, r3, r2
  4084de:	bf18      	it	ne
  4084e0:	4240      	negne	r0, r0
  4084e2:	4770      	bx	lr
  4084e4:	f04f 0000 	mov.w	r0, #0
  4084e8:	4770      	bx	lr
  4084ea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4084ee:	d105      	bne.n	4084fc <__aeabi_d2iz+0x48>
  4084f0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4084f4:	bf08      	it	eq
  4084f6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4084fa:	4770      	bx	lr
  4084fc:	f04f 0000 	mov.w	r0, #0
  408500:	4770      	bx	lr
  408502:	bf00      	nop

00408504 <OV2640_JPEG_INIT>:
  408504:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  408514:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  408524:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  408534:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  408544:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  408554:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  408564:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  408574:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  408584:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  408594:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  4085a4:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  4085b4:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  4085c4:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  4085d4:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  4085e4:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  4085f4:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  408604:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  408614:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  408624:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  408634:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  408644:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  408654:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  408664:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  408674:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00408684 <OV2640_YUV422>:
  408684:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  408694:	0000 ffff                                   ....

00408698 <OV2640_JPEG>:
  408698:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  4086a8:	ffff 0000                                   ....

004086ac <OV2640_JPEG_320x240>:
  4086ac:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  4086bc:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  4086cc:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  4086dc:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  4086ec:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

004086fc <OV2640_JPEG_640x480>:
  4086fc:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  40870c:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40871c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40872c:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  40873c:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  40874c:	ffff 0000                                   ....

00408750 <OV2640_JPEG_800x600>:
  408750:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  408760:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  408770:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  408780:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  408790:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  4087a0:	ffff 0000                                   ....

004087a4 <OV2640_JPEG_1024x768>:
  4087a4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4087b4:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4087c4:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4087d4:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4087e4:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

004087f4 <OV2640_JPEG_1280x1024>:
  4087f4:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  408804:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  408814:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  408824:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  408834:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  408844:	ffff 0000                                   ....

00408848 <OV2640_JPEG_1600x1200>:
  408848:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  408858:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  408868:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  408878:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  408888:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  408898:	ffff 0000                                   ....

0040889c <OV2640_QVGA_YUV422_10FPS>:
  40889c:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  4088ac:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4088bc:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4088cc:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4088dc:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4088ec:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4088fc:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40890c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40891c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40892c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40893c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  40894c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  40895c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  40896c:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  40897c:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

0040898c <OV2640_QVGA_YUV422_15FPS>:
  40898c:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  40899c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4089ac:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4089bc:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  4089cc:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  4089dc:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  4089ec:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  4089fc:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  408a0c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  408a1c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408a2c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408a3c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408a4c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408a5c:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  408a6c:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00408a7c <OV2640_QVGA_YUV422_20FPS>:
  408a7c:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  408a8c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  408a9c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  408aac:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  408abc:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  408acc:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  408adc:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  408aec:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  408afc:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  408b0c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408b1c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408b2c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408b3c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408b4c:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  408b5c:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00408b6c <OV2640_QVGA_YUV422_30FPS>:
  408b6c:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  408b7c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  408b8c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  408b9c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  408bac:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  408bbc:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  408bcc:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  408bdc:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  408bec:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  408bfc:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408c0c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408c1c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408c2c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408c3c:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  408c4c:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00408c5c <OV2640_QVGA_RGB888>:
  408c5c:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  408c6c:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  408c7c:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  408c8c:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  408c9c:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  408cac:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  408cbc:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  408ccc:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  408cdc:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  408cec:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  408cfc:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  408d0c:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  408d1c:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  408d2c:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  408d3c:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  408d4c:	0228 ffff                                   (...

00408d50 <OV2640_QQVGA_YUV422>:
  408d50:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  408d60:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  408d70:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  408d80:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  408d90:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  408da0:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  408db0:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  408dc0:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  408dd0:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  408de0:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408df0:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408e00:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408e10:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408e20:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  408e30:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  408e40:	00d9 ffff                                   ....

00408e44 <OV2640_QQVGA_RGB888>:
  408e44:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  408e54:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  408e64:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  408e74:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  408e84:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  408e94:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  408ea4:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  408eb4:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  408ec4:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  408ed4:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  408ee4:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  408ef4:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  408f04:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  408f14:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  408f24:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  408f34:	0228 ffff                                   (...

00408f38 <OV2640_TEST_PATTERN>:
  408f38:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  408f48:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  408f58:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  408f68:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  408f78:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  408f88:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  408f98:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  408fa8:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  408fb8:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  408fc8:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  408fd8:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  408fe8:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  408ff8:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  409008:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  409018:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  409028:	0228 ffff                                   (...

0040902c <OV2640_VGA_YUV422_20FPS>:
  40902c:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  40903c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  40904c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40905c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40906c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40907c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40908c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40909c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  4090ac:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  4090bc:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4090cc:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4090dc:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4090ec:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4090fc:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  40910c:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...
  40911c:	c200 0001 00c0 0000 0800 0000 0000 0000     ................
	...
  409134:	6d69 6761 5f65 7274 6e61 6673 7265 2520     image_transfer %
  409144:	0d75 000a 0000 0000 6f43 706d 656c 6574     u.......Complete
  409154:	0a0d 0000 6f4e 656e 0000 0000 6d69 6761     ....None....imag
  409164:	5f65 7274 6e61 6673 7265 0000 6573 2074     e_transfer..set 
  409174:	6175 7472 662e 6f6c 2077 2030 6e6f 0d20     uart.flow 0 on .
  409184:	000a 0000 6573 2074 7562 2e73 6f63 6d6d     ....set bus.comm
  409194:	6e61 2e64 7872 625f 6675 6973 657a 3520     and.rx_bufsize 5
  4091a4:	3030 0d30 000a 0000 6573 2074 7973 6920     000.....set sy i
  4091b4:	6720 7720 616c 206e 3032 0a0d 0000 0000      g wlan 20......
  4091c4:	6573 2074 7973 6920 6720 6e20 7465 6f77     set sy i g netwo
  4091d4:	6b72 3120 0d39 000a 6573 2074 7973 6920     rk 19...set sy i
  4091e4:	6720 7320 666f 6174 2070 3132 0a0d 0000      g softap 21....
  4091f4:	6573 2074 7973 7473 6d65 632e 646d 672e     set system.cmd.g
  409204:	6970 206f 3331 0a0d 0000 0000 6573 2074     pio 13......set 
  409214:	6c77 6e20 6f20 3120 0d34 000a 6573 2074     wl n o 14...set 
  409224:	7973 6320 7020 6f20 6666 0a0d 0000 0000     sy c p off......
  409234:	6573 2074 7973 6320 6520 6f20 6666 0a0d     set sy c e off..
  409244:	0000 0000 6173 6576 0a0d 0000 6573 2074     ....save....set 
  409254:	7973 6320 6520 6f20 0d6e 000a 6573 7574     sy c e on...setu
  409264:	2070 6577 0d62 000a 6572 6f62 746f 0a0d     p web...reboot..
  409274:	0000 0000 6f70 6c6c 6120 6c6c 0a0d 0000     ....poll all....

00409284 <_global_impure_ptr>:
  409284:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  409294:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  4092a4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  4092b4:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  4092c4:	296c 0000 0030 0000                         l)..0...

004092cc <blanks.7208>:
  4092cc:	2020 2020 2020 2020 2020 2020 2020 2020                     

004092dc <zeroes.7209>:
  4092dc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  4092ec:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  4092fc:	0000 0000                                   ....

00409300 <__mprec_bigtens>:
  409300:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  409310:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  409320:	bf3c 7f73 4fdd 7515                         <.s..O.u

00409328 <__mprec_tens>:
  409328:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  409338:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  409348:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  409358:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  409368:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  409378:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  409388:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  409398:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  4093a8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  4093b8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  4093c8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  4093d8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  4093e8:	9db4 79d9 7843 44ea                         ...yCx.D

004093f0 <p05.6040>:
  4093f0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  409400:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040940c <_ctype_>:
  40940c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40941c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40942c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40943c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40944c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40945c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40946c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40947c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40948c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00409510 <_init>:
  409510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409512:	bf00      	nop
  409514:	bcf8      	pop	{r3, r4, r5, r6, r7}
  409516:	bc08      	pop	{r3}
  409518:	469e      	mov	lr, r3
  40951a:	4770      	bx	lr

0040951c <__init_array_start>:
  40951c:	00405379 	.word	0x00405379

00409520 <__frame_dummy_init_array_entry>:
  409520:	004000f1                                ..@.

00409524 <_fini>:
  409524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409526:	bf00      	nop
  409528:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40952a:	bc08      	pop	{r3}
  40952c:	469e      	mov	lr, r3
  40952e:	4770      	bx	lr

00409530 <__fini_array_start>:
  409530:	004000cd 	.word	0x004000cd
=======
  4031da:	e0b5      	b.n	403348 <main+0x3e4>
  4031dc:	00400421 	.word	0x00400421
  4031e0:	400e1450 	.word	0x400e1450
  4031e4:	004016ed 	.word	0x004016ed
  4031e8:	00402a55 	.word	0x00402a55
  4031ec:	00402385 	.word	0x00402385
  4031f0:	0040258d 	.word	0x0040258d
  4031f4:	0040263d 	.word	0x0040263d
  4031f8:	0040269d 	.word	0x0040269d
  4031fc:	00402ead 	.word	0x00402ead
  403200:	00402e99 	.word	0x00402e99
  403204:	00403431 	.word	0x00403431
  403208:	20000001 	.word	0x20000001
  40320c:	00401a81 	.word	0x00401a81
  403210:	00401b45 	.word	0x00401b45
  403214:	00408fc4 	.word	0x00408fc4
  403218:	004026fd 	.word	0x004026fd
  40321c:	20000a60 	.word	0x20000a60
  403220:	00408fd8 	.word	0x00408fd8
  403224:	00402f17 	.word	0x00402f17
  403228:	00408fe4 	.word	0x00408fe4
  40322c:	00408ffc 	.word	0x00408ffc
  403230:	00409020 	.word	0x00409020
  403234:	00409038 	.word	0x00409038
  403238:	00409050 	.word	0x00409050
  40323c:	00409068 	.word	0x00409068
  403240:	00409084 	.word	0x00409084
  403244:	00409094 	.word	0x00409094
  403248:	0040909c 	.word	0x0040909c
			ioport_set_pin_level(WIFI_RESET_PIN, 0);
  40324c:	2100      	movs	r1, #0
  40324e:	2000      	movs	r0, #0
  403250:	4b6d      	ldr	r3, [pc, #436]	; (403408 <main+0x4a4>)
  403252:	4798      	blx	r3
			delay_ms(100);
  403254:	4b6d      	ldr	r3, [pc, #436]	; (40340c <main+0x4a8>)
  403256:	4798      	blx	r3
  403258:	4603      	mov	r3, r0
  40325a:	4619      	mov	r1, r3
  40325c:	f04f 0200 	mov.w	r2, #0
  403260:	460b      	mov	r3, r1
  403262:	4614      	mov	r4, r2
  403264:	18db      	adds	r3, r3, r3
  403266:	eb44 0404 	adc.w	r4, r4, r4
  40326a:	185b      	adds	r3, r3, r1
  40326c:	eb44 0402 	adc.w	r4, r4, r2
  403270:	0160      	lsls	r0, r4, #5
  403272:	6378      	str	r0, [r7, #52]	; 0x34
  403274:	6b78      	ldr	r0, [r7, #52]	; 0x34
  403276:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  40327a:	6378      	str	r0, [r7, #52]	; 0x34
  40327c:	0158      	lsls	r0, r3, #5
  40327e:	6338      	str	r0, [r7, #48]	; 0x30
  403280:	e9d7 560c 	ldrd	r5, r6, [r7, #48]	; 0x30
  403284:	18ed      	adds	r5, r5, r3
  403286:	eb46 0604 	adc.w	r6, r6, r4
  40328a:	462b      	mov	r3, r5
  40328c:	4634      	mov	r4, r6
  40328e:	185b      	adds	r3, r3, r1
  403290:	eb44 0402 	adc.w	r4, r4, r2
  403294:	f243 61af 	movw	r1, #13999	; 0x36af
  403298:	f04f 0200 	mov.w	r2, #0
  40329c:	185d      	adds	r5, r3, r1
  40329e:	eb44 0602 	adc.w	r6, r4, r2
  4032a2:	4628      	mov	r0, r5
  4032a4:	4631      	mov	r1, r6
  4032a6:	4c5a      	ldr	r4, [pc, #360]	; (403410 <main+0x4ac>)
  4032a8:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4032ac:	f04f 0300 	mov.w	r3, #0
  4032b0:	47a0      	blx	r4
  4032b2:	4603      	mov	r3, r0
  4032b4:	460c      	mov	r4, r1
  4032b6:	4618      	mov	r0, r3
  4032b8:	4b56      	ldr	r3, [pc, #344]	; (403414 <main+0x4b0>)
  4032ba:	4798      	blx	r3
			ioport_set_pin_level(WIFI_RESET_PIN, 1);
  4032bc:	2101      	movs	r1, #1
  4032be:	2000      	movs	r0, #0
  4032c0:	4b51      	ldr	r3, [pc, #324]	; (403408 <main+0x4a4>)
  4032c2:	4798      	blx	r3
			delay_ms(500);
  4032c4:	4b51      	ldr	r3, [pc, #324]	; (40340c <main+0x4a8>)
  4032c6:	4798      	blx	r3
  4032c8:	4603      	mov	r3, r0
  4032ca:	4619      	mov	r1, r3
  4032cc:	f04f 0200 	mov.w	r2, #0
  4032d0:	460b      	mov	r3, r1
  4032d2:	4614      	mov	r4, r2
  4032d4:	0160      	lsls	r0, r4, #5
  4032d6:	62f8      	str	r0, [r7, #44]	; 0x2c
  4032d8:	6af8      	ldr	r0, [r7, #44]	; 0x2c
  4032da:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  4032de:	62f8      	str	r0, [r7, #44]	; 0x2c
  4032e0:	015b      	lsls	r3, r3, #5
  4032e2:	62bb      	str	r3, [r7, #40]	; 0x28
  4032e4:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
  4032e8:	1a5b      	subs	r3, r3, r1
  4032ea:	eb64 0402 	sbc.w	r4, r4, r2
  4032ee:	00a0      	lsls	r0, r4, #2
  4032f0:	6278      	str	r0, [r7, #36]	; 0x24
  4032f2:	6a78      	ldr	r0, [r7, #36]	; 0x24
  4032f4:	ea40 7093 	orr.w	r0, r0, r3, lsr #30
  4032f8:	6278      	str	r0, [r7, #36]	; 0x24
  4032fa:	009b      	lsls	r3, r3, #2
  4032fc:	623b      	str	r3, [r7, #32]
  4032fe:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
  403302:	185b      	adds	r3, r3, r1
  403304:	eb44 0402 	adc.w	r4, r4, r2
  403308:	00a2      	lsls	r2, r4, #2
  40330a:	61fa      	str	r2, [r7, #28]
  40330c:	69fa      	ldr	r2, [r7, #28]
  40330e:	ea42 7293 	orr.w	r2, r2, r3, lsr #30
  403312:	61fa      	str	r2, [r7, #28]
  403314:	009b      	lsls	r3, r3, #2
  403316:	61bb      	str	r3, [r7, #24]
  403318:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
  40331c:	4619      	mov	r1, r3
  40331e:	4622      	mov	r2, r4
  403320:	f243 63af 	movw	r3, #13999	; 0x36af
  403324:	f04f 0400 	mov.w	r4, #0
  403328:	18cd      	adds	r5, r1, r3
  40332a:	eb42 0604 	adc.w	r6, r2, r4
  40332e:	4628      	mov	r0, r5
  403330:	4631      	mov	r1, r6
  403332:	4c37      	ldr	r4, [pc, #220]	; (403410 <main+0x4ac>)
  403334:	f243 62b0 	movw	r2, #14000	; 0x36b0
  403338:	f04f 0300 	mov.w	r3, #0
  40333c:	47a0      	blx	r4
  40333e:	4603      	mov	r3, r0
  403340:	460c      	mov	r4, r1
  403342:	4618      	mov	r0, r3
  403344:	4b33      	ldr	r3, [pc, #204]	; (403414 <main+0x4b0>)
  403346:	4798      	blx	r3
		while(ioport_get_pin_level(WIFI_STATUS)==0){
  403348:	200a      	movs	r0, #10
  40334a:	4b33      	ldr	r3, [pc, #204]	; (403418 <main+0x4b4>)
  40334c:	4798      	blx	r3
  40334e:	4603      	mov	r3, r0
  403350:	f083 0301 	eor.w	r3, r3, #1
  403354:	b2db      	uxtb	r3, r3
  403356:	2b00      	cmp	r3, #0
  403358:	f47f af78 	bne.w	40324c <main+0x2e8>
		}
		write_wifi_command("poll all\r\n", 5);
  40335c:	2105      	movs	r1, #5
  40335e:	482f      	ldr	r0, [pc, #188]	; (40341c <main+0x4b8>)
  403360:	4b2f      	ldr	r3, [pc, #188]	; (403420 <main+0x4bc>)
  403362:	4798      	blx	r3
		if(wait_flag){
  403364:	4b2f      	ldr	r3, [pc, #188]	; (403424 <main+0x4c0>)
  403366:	681b      	ldr	r3, [r3, #0]
  403368:	2b00      	cmp	r3, #0
  40336a:	d045      	beq.n	4033f8 <main+0x494>
			delay_ms(1000);
  40336c:	4b27      	ldr	r3, [pc, #156]	; (40340c <main+0x4a8>)
  40336e:	4798      	blx	r3
  403370:	4603      	mov	r3, r0
  403372:	4619      	mov	r1, r3
  403374:	f04f 0200 	mov.w	r2, #0
  403378:	460b      	mov	r3, r1
  40337a:	4614      	mov	r4, r2
  40337c:	0160      	lsls	r0, r4, #5
  40337e:	6178      	str	r0, [r7, #20]
  403380:	6978      	ldr	r0, [r7, #20]
  403382:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  403386:	6178      	str	r0, [r7, #20]
  403388:	015b      	lsls	r3, r3, #5
  40338a:	613b      	str	r3, [r7, #16]
  40338c:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
  403390:	1a5b      	subs	r3, r3, r1
  403392:	eb64 0402 	sbc.w	r4, r4, r2
  403396:	00a0      	lsls	r0, r4, #2
  403398:	60f8      	str	r0, [r7, #12]
  40339a:	68f8      	ldr	r0, [r7, #12]
  40339c:	ea40 7093 	orr.w	r0, r0, r3, lsr #30
  4033a0:	60f8      	str	r0, [r7, #12]
  4033a2:	009b      	lsls	r3, r3, #2
  4033a4:	60bb      	str	r3, [r7, #8]
  4033a6:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
  4033aa:	185b      	adds	r3, r3, r1
  4033ac:	eb44 0402 	adc.w	r4, r4, r2
  4033b0:	00e2      	lsls	r2, r4, #3
  4033b2:	607a      	str	r2, [r7, #4]
  4033b4:	687a      	ldr	r2, [r7, #4]
  4033b6:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
  4033ba:	607a      	str	r2, [r7, #4]
  4033bc:	00db      	lsls	r3, r3, #3
  4033be:	603b      	str	r3, [r7, #0]
  4033c0:	e9d7 3400 	ldrd	r3, r4, [r7]
  4033c4:	4619      	mov	r1, r3
  4033c6:	4622      	mov	r2, r4
  4033c8:	f243 63af 	movw	r3, #13999	; 0x36af
  4033cc:	f04f 0400 	mov.w	r4, #0
  4033d0:	18cd      	adds	r5, r1, r3
  4033d2:	eb42 0604 	adc.w	r6, r2, r4
  4033d6:	4628      	mov	r0, r5
  4033d8:	4631      	mov	r1, r6
  4033da:	4c0d      	ldr	r4, [pc, #52]	; (403410 <main+0x4ac>)
  4033dc:	f243 62b0 	movw	r2, #14000	; 0x36b0
  4033e0:	f04f 0300 	mov.w	r3, #0
  4033e4:	47a0      	blx	r4
  4033e6:	4603      	mov	r3, r0
  4033e8:	460c      	mov	r4, r1
  4033ea:	4618      	mov	r0, r3
  4033ec:	4b09      	ldr	r3, [pc, #36]	; (403414 <main+0x4b0>)
  4033ee:	4798      	blx	r3
			wait_flag=0;
  4033f0:	4a0c      	ldr	r2, [pc, #48]	; (403424 <main+0x4c0>)
  4033f2:	2300      	movs	r3, #0
  4033f4:	6013      	str	r3, [r2, #0]
  4033f6:	e66c      	b.n	4030d2 <main+0x16e>
			} else {
			uint8_t get_image = start_capture();
  4033f8:	4b0b      	ldr	r3, [pc, #44]	; (403428 <main+0x4c4>)
  4033fa:	4798      	blx	r3
  4033fc:	4603      	mov	r3, r0
  4033fe:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
			write_image_to_file();
  403402:	4b0a      	ldr	r3, [pc, #40]	; (40342c <main+0x4c8>)
  403404:	4798      	blx	r3
		if(wifi_setup_button_flag){
  403406:	e664      	b.n	4030d2 <main+0x16e>
  403408:	00402ead 	.word	0x00402ead
  40340c:	00402e99 	.word	0x00402e99
  403410:	00403431 	.word	0x00403431
  403414:	20000001 	.word	0x20000001
  403418:	00402f17 	.word	0x00402f17
  40341c:	004090a8 	.word	0x004090a8
  403420:	004026fd 	.word	0x004026fd
  403424:	20000a70 	.word	0x20000a70
  403428:	00401c19 	.word	0x00401c19
  40342c:	0040274d 	.word	0x0040274d

00403430 <__aeabi_uldivmod>:
  403430:	b953      	cbnz	r3, 403448 <__aeabi_uldivmod+0x18>
  403432:	b94a      	cbnz	r2, 403448 <__aeabi_uldivmod+0x18>
  403434:	2900      	cmp	r1, #0
  403436:	bf08      	it	eq
  403438:	2800      	cmpeq	r0, #0
  40343a:	bf1c      	itt	ne
  40343c:	f04f 31ff 	movne.w	r1, #4294967295
  403440:	f04f 30ff 	movne.w	r0, #4294967295
  403444:	f000 b97a 	b.w	40373c <__aeabi_idiv0>
  403448:	f1ad 0c08 	sub.w	ip, sp, #8
  40344c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  403450:	f000 f806 	bl	403460 <__udivmoddi4>
  403454:	f8dd e004 	ldr.w	lr, [sp, #4]
  403458:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40345c:	b004      	add	sp, #16
  40345e:	4770      	bx	lr

00403460 <__udivmoddi4>:
  403460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403464:	468c      	mov	ip, r1
  403466:	460d      	mov	r5, r1
  403468:	4604      	mov	r4, r0
  40346a:	9e08      	ldr	r6, [sp, #32]
  40346c:	2b00      	cmp	r3, #0
  40346e:	d151      	bne.n	403514 <__udivmoddi4+0xb4>
  403470:	428a      	cmp	r2, r1
  403472:	4617      	mov	r7, r2
  403474:	d96d      	bls.n	403552 <__udivmoddi4+0xf2>
  403476:	fab2 fe82 	clz	lr, r2
  40347a:	f1be 0f00 	cmp.w	lr, #0
  40347e:	d00b      	beq.n	403498 <__udivmoddi4+0x38>
  403480:	f1ce 0c20 	rsb	ip, lr, #32
  403484:	fa01 f50e 	lsl.w	r5, r1, lr
  403488:	fa20 fc0c 	lsr.w	ip, r0, ip
  40348c:	fa02 f70e 	lsl.w	r7, r2, lr
  403490:	ea4c 0c05 	orr.w	ip, ip, r5
  403494:	fa00 f40e 	lsl.w	r4, r0, lr
  403498:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40349c:	0c25      	lsrs	r5, r4, #16
  40349e:	fbbc f8fa 	udiv	r8, ip, sl
  4034a2:	fa1f f987 	uxth.w	r9, r7
  4034a6:	fb0a cc18 	mls	ip, sl, r8, ip
  4034aa:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4034ae:	fb08 f309 	mul.w	r3, r8, r9
  4034b2:	42ab      	cmp	r3, r5
  4034b4:	d90a      	bls.n	4034cc <__udivmoddi4+0x6c>
  4034b6:	19ed      	adds	r5, r5, r7
  4034b8:	f108 32ff 	add.w	r2, r8, #4294967295
  4034bc:	f080 8123 	bcs.w	403706 <__udivmoddi4+0x2a6>
  4034c0:	42ab      	cmp	r3, r5
  4034c2:	f240 8120 	bls.w	403706 <__udivmoddi4+0x2a6>
  4034c6:	f1a8 0802 	sub.w	r8, r8, #2
  4034ca:	443d      	add	r5, r7
  4034cc:	1aed      	subs	r5, r5, r3
  4034ce:	b2a4      	uxth	r4, r4
  4034d0:	fbb5 f0fa 	udiv	r0, r5, sl
  4034d4:	fb0a 5510 	mls	r5, sl, r0, r5
  4034d8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4034dc:	fb00 f909 	mul.w	r9, r0, r9
  4034e0:	45a1      	cmp	r9, r4
  4034e2:	d909      	bls.n	4034f8 <__udivmoddi4+0x98>
  4034e4:	19e4      	adds	r4, r4, r7
  4034e6:	f100 33ff 	add.w	r3, r0, #4294967295
  4034ea:	f080 810a 	bcs.w	403702 <__udivmoddi4+0x2a2>
  4034ee:	45a1      	cmp	r9, r4
  4034f0:	f240 8107 	bls.w	403702 <__udivmoddi4+0x2a2>
  4034f4:	3802      	subs	r0, #2
  4034f6:	443c      	add	r4, r7
  4034f8:	eba4 0409 	sub.w	r4, r4, r9
  4034fc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  403500:	2100      	movs	r1, #0
  403502:	2e00      	cmp	r6, #0
  403504:	d061      	beq.n	4035ca <__udivmoddi4+0x16a>
  403506:	fa24 f40e 	lsr.w	r4, r4, lr
  40350a:	2300      	movs	r3, #0
  40350c:	6034      	str	r4, [r6, #0]
  40350e:	6073      	str	r3, [r6, #4]
  403510:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403514:	428b      	cmp	r3, r1
  403516:	d907      	bls.n	403528 <__udivmoddi4+0xc8>
  403518:	2e00      	cmp	r6, #0
  40351a:	d054      	beq.n	4035c6 <__udivmoddi4+0x166>
  40351c:	2100      	movs	r1, #0
  40351e:	e886 0021 	stmia.w	r6, {r0, r5}
  403522:	4608      	mov	r0, r1
  403524:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403528:	fab3 f183 	clz	r1, r3
  40352c:	2900      	cmp	r1, #0
  40352e:	f040 808e 	bne.w	40364e <__udivmoddi4+0x1ee>
  403532:	42ab      	cmp	r3, r5
  403534:	d302      	bcc.n	40353c <__udivmoddi4+0xdc>
  403536:	4282      	cmp	r2, r0
  403538:	f200 80fa 	bhi.w	403730 <__udivmoddi4+0x2d0>
  40353c:	1a84      	subs	r4, r0, r2
  40353e:	eb65 0503 	sbc.w	r5, r5, r3
  403542:	2001      	movs	r0, #1
  403544:	46ac      	mov	ip, r5
  403546:	2e00      	cmp	r6, #0
  403548:	d03f      	beq.n	4035ca <__udivmoddi4+0x16a>
  40354a:	e886 1010 	stmia.w	r6, {r4, ip}
  40354e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403552:	b912      	cbnz	r2, 40355a <__udivmoddi4+0xfa>
  403554:	2701      	movs	r7, #1
  403556:	fbb7 f7f2 	udiv	r7, r7, r2
  40355a:	fab7 fe87 	clz	lr, r7
  40355e:	f1be 0f00 	cmp.w	lr, #0
  403562:	d134      	bne.n	4035ce <__udivmoddi4+0x16e>
  403564:	1beb      	subs	r3, r5, r7
  403566:	0c3a      	lsrs	r2, r7, #16
  403568:	fa1f fc87 	uxth.w	ip, r7
  40356c:	2101      	movs	r1, #1
  40356e:	fbb3 f8f2 	udiv	r8, r3, r2
  403572:	0c25      	lsrs	r5, r4, #16
  403574:	fb02 3318 	mls	r3, r2, r8, r3
  403578:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40357c:	fb0c f308 	mul.w	r3, ip, r8
  403580:	42ab      	cmp	r3, r5
  403582:	d907      	bls.n	403594 <__udivmoddi4+0x134>
  403584:	19ed      	adds	r5, r5, r7
  403586:	f108 30ff 	add.w	r0, r8, #4294967295
  40358a:	d202      	bcs.n	403592 <__udivmoddi4+0x132>
  40358c:	42ab      	cmp	r3, r5
  40358e:	f200 80d1 	bhi.w	403734 <__udivmoddi4+0x2d4>
  403592:	4680      	mov	r8, r0
  403594:	1aed      	subs	r5, r5, r3
  403596:	b2a3      	uxth	r3, r4
  403598:	fbb5 f0f2 	udiv	r0, r5, r2
  40359c:	fb02 5510 	mls	r5, r2, r0, r5
  4035a0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4035a4:	fb0c fc00 	mul.w	ip, ip, r0
  4035a8:	45a4      	cmp	ip, r4
  4035aa:	d907      	bls.n	4035bc <__udivmoddi4+0x15c>
  4035ac:	19e4      	adds	r4, r4, r7
  4035ae:	f100 33ff 	add.w	r3, r0, #4294967295
  4035b2:	d202      	bcs.n	4035ba <__udivmoddi4+0x15a>
  4035b4:	45a4      	cmp	ip, r4
  4035b6:	f200 80b8 	bhi.w	40372a <__udivmoddi4+0x2ca>
  4035ba:	4618      	mov	r0, r3
  4035bc:	eba4 040c 	sub.w	r4, r4, ip
  4035c0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4035c4:	e79d      	b.n	403502 <__udivmoddi4+0xa2>
  4035c6:	4631      	mov	r1, r6
  4035c8:	4630      	mov	r0, r6
  4035ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4035ce:	f1ce 0420 	rsb	r4, lr, #32
  4035d2:	fa05 f30e 	lsl.w	r3, r5, lr
  4035d6:	fa07 f70e 	lsl.w	r7, r7, lr
  4035da:	fa20 f804 	lsr.w	r8, r0, r4
  4035de:	0c3a      	lsrs	r2, r7, #16
  4035e0:	fa25 f404 	lsr.w	r4, r5, r4
  4035e4:	ea48 0803 	orr.w	r8, r8, r3
  4035e8:	fbb4 f1f2 	udiv	r1, r4, r2
  4035ec:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4035f0:	fb02 4411 	mls	r4, r2, r1, r4
  4035f4:	fa1f fc87 	uxth.w	ip, r7
  4035f8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4035fc:	fb01 f30c 	mul.w	r3, r1, ip
  403600:	42ab      	cmp	r3, r5
  403602:	fa00 f40e 	lsl.w	r4, r0, lr
  403606:	d909      	bls.n	40361c <__udivmoddi4+0x1bc>
  403608:	19ed      	adds	r5, r5, r7
  40360a:	f101 30ff 	add.w	r0, r1, #4294967295
  40360e:	f080 808a 	bcs.w	403726 <__udivmoddi4+0x2c6>
  403612:	42ab      	cmp	r3, r5
  403614:	f240 8087 	bls.w	403726 <__udivmoddi4+0x2c6>
  403618:	3902      	subs	r1, #2
  40361a:	443d      	add	r5, r7
  40361c:	1aeb      	subs	r3, r5, r3
  40361e:	fa1f f588 	uxth.w	r5, r8
  403622:	fbb3 f0f2 	udiv	r0, r3, r2
  403626:	fb02 3310 	mls	r3, r2, r0, r3
  40362a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40362e:	fb00 f30c 	mul.w	r3, r0, ip
  403632:	42ab      	cmp	r3, r5
  403634:	d907      	bls.n	403646 <__udivmoddi4+0x1e6>
  403636:	19ed      	adds	r5, r5, r7
  403638:	f100 38ff 	add.w	r8, r0, #4294967295
  40363c:	d26f      	bcs.n	40371e <__udivmoddi4+0x2be>
  40363e:	42ab      	cmp	r3, r5
  403640:	d96d      	bls.n	40371e <__udivmoddi4+0x2be>
  403642:	3802      	subs	r0, #2
  403644:	443d      	add	r5, r7
  403646:	1aeb      	subs	r3, r5, r3
  403648:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40364c:	e78f      	b.n	40356e <__udivmoddi4+0x10e>
  40364e:	f1c1 0720 	rsb	r7, r1, #32
  403652:	fa22 f807 	lsr.w	r8, r2, r7
  403656:	408b      	lsls	r3, r1
  403658:	fa05 f401 	lsl.w	r4, r5, r1
  40365c:	ea48 0303 	orr.w	r3, r8, r3
  403660:	fa20 fe07 	lsr.w	lr, r0, r7
  403664:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  403668:	40fd      	lsrs	r5, r7
  40366a:	ea4e 0e04 	orr.w	lr, lr, r4
  40366e:	fbb5 f9fc 	udiv	r9, r5, ip
  403672:	ea4f 441e 	mov.w	r4, lr, lsr #16
  403676:	fb0c 5519 	mls	r5, ip, r9, r5
  40367a:	fa1f f883 	uxth.w	r8, r3
  40367e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  403682:	fb09 f408 	mul.w	r4, r9, r8
  403686:	42ac      	cmp	r4, r5
  403688:	fa02 f201 	lsl.w	r2, r2, r1
  40368c:	fa00 fa01 	lsl.w	sl, r0, r1
  403690:	d908      	bls.n	4036a4 <__udivmoddi4+0x244>
  403692:	18ed      	adds	r5, r5, r3
  403694:	f109 30ff 	add.w	r0, r9, #4294967295
  403698:	d243      	bcs.n	403722 <__udivmoddi4+0x2c2>
  40369a:	42ac      	cmp	r4, r5
  40369c:	d941      	bls.n	403722 <__udivmoddi4+0x2c2>
  40369e:	f1a9 0902 	sub.w	r9, r9, #2
  4036a2:	441d      	add	r5, r3
  4036a4:	1b2d      	subs	r5, r5, r4
  4036a6:	fa1f fe8e 	uxth.w	lr, lr
  4036aa:	fbb5 f0fc 	udiv	r0, r5, ip
  4036ae:	fb0c 5510 	mls	r5, ip, r0, r5
  4036b2:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4036b6:	fb00 f808 	mul.w	r8, r0, r8
  4036ba:	45a0      	cmp	r8, r4
  4036bc:	d907      	bls.n	4036ce <__udivmoddi4+0x26e>
  4036be:	18e4      	adds	r4, r4, r3
  4036c0:	f100 35ff 	add.w	r5, r0, #4294967295
  4036c4:	d229      	bcs.n	40371a <__udivmoddi4+0x2ba>
  4036c6:	45a0      	cmp	r8, r4
  4036c8:	d927      	bls.n	40371a <__udivmoddi4+0x2ba>
  4036ca:	3802      	subs	r0, #2
  4036cc:	441c      	add	r4, r3
  4036ce:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4036d2:	eba4 0408 	sub.w	r4, r4, r8
  4036d6:	fba0 8902 	umull	r8, r9, r0, r2
  4036da:	454c      	cmp	r4, r9
  4036dc:	46c6      	mov	lr, r8
  4036de:	464d      	mov	r5, r9
  4036e0:	d315      	bcc.n	40370e <__udivmoddi4+0x2ae>
  4036e2:	d012      	beq.n	40370a <__udivmoddi4+0x2aa>
  4036e4:	b156      	cbz	r6, 4036fc <__udivmoddi4+0x29c>
  4036e6:	ebba 030e 	subs.w	r3, sl, lr
  4036ea:	eb64 0405 	sbc.w	r4, r4, r5
  4036ee:	fa04 f707 	lsl.w	r7, r4, r7
  4036f2:	40cb      	lsrs	r3, r1
  4036f4:	431f      	orrs	r7, r3
  4036f6:	40cc      	lsrs	r4, r1
  4036f8:	6037      	str	r7, [r6, #0]
  4036fa:	6074      	str	r4, [r6, #4]
  4036fc:	2100      	movs	r1, #0
  4036fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403702:	4618      	mov	r0, r3
  403704:	e6f8      	b.n	4034f8 <__udivmoddi4+0x98>
  403706:	4690      	mov	r8, r2
  403708:	e6e0      	b.n	4034cc <__udivmoddi4+0x6c>
  40370a:	45c2      	cmp	sl, r8
  40370c:	d2ea      	bcs.n	4036e4 <__udivmoddi4+0x284>
  40370e:	ebb8 0e02 	subs.w	lr, r8, r2
  403712:	eb69 0503 	sbc.w	r5, r9, r3
  403716:	3801      	subs	r0, #1
  403718:	e7e4      	b.n	4036e4 <__udivmoddi4+0x284>
  40371a:	4628      	mov	r0, r5
  40371c:	e7d7      	b.n	4036ce <__udivmoddi4+0x26e>
  40371e:	4640      	mov	r0, r8
  403720:	e791      	b.n	403646 <__udivmoddi4+0x1e6>
  403722:	4681      	mov	r9, r0
  403724:	e7be      	b.n	4036a4 <__udivmoddi4+0x244>
  403726:	4601      	mov	r1, r0
  403728:	e778      	b.n	40361c <__udivmoddi4+0x1bc>
  40372a:	3802      	subs	r0, #2
  40372c:	443c      	add	r4, r7
  40372e:	e745      	b.n	4035bc <__udivmoddi4+0x15c>
  403730:	4608      	mov	r0, r1
  403732:	e708      	b.n	403546 <__udivmoddi4+0xe6>
  403734:	f1a8 0802 	sub.w	r8, r8, #2
  403738:	443d      	add	r5, r7
  40373a:	e72b      	b.n	403594 <__udivmoddi4+0x134>

0040373c <__aeabi_idiv0>:
  40373c:	4770      	bx	lr
  40373e:	bf00      	nop

00403740 <__libc_init_array>:
  403740:	b570      	push	{r4, r5, r6, lr}
  403742:	4e0f      	ldr	r6, [pc, #60]	; (403780 <__libc_init_array+0x40>)
  403744:	4d0f      	ldr	r5, [pc, #60]	; (403784 <__libc_init_array+0x44>)
  403746:	1b76      	subs	r6, r6, r5
  403748:	10b6      	asrs	r6, r6, #2
  40374a:	bf18      	it	ne
  40374c:	2400      	movne	r4, #0
  40374e:	d005      	beq.n	40375c <__libc_init_array+0x1c>
  403750:	3401      	adds	r4, #1
  403752:	f855 3b04 	ldr.w	r3, [r5], #4
  403756:	4798      	blx	r3
  403758:	42a6      	cmp	r6, r4
  40375a:	d1f9      	bne.n	403750 <__libc_init_array+0x10>
  40375c:	4e0a      	ldr	r6, [pc, #40]	; (403788 <__libc_init_array+0x48>)
  40375e:	4d0b      	ldr	r5, [pc, #44]	; (40378c <__libc_init_array+0x4c>)
  403760:	1b76      	subs	r6, r6, r5
  403762:	f005 fded 	bl	409340 <_init>
  403766:	10b6      	asrs	r6, r6, #2
  403768:	bf18      	it	ne
  40376a:	2400      	movne	r4, #0
  40376c:	d006      	beq.n	40377c <__libc_init_array+0x3c>
  40376e:	3401      	adds	r4, #1
  403770:	f855 3b04 	ldr.w	r3, [r5], #4
  403774:	4798      	blx	r3
  403776:	42a6      	cmp	r6, r4
  403778:	d1f9      	bne.n	40376e <__libc_init_array+0x2e>
  40377a:	bd70      	pop	{r4, r5, r6, pc}
  40377c:	bd70      	pop	{r4, r5, r6, pc}
  40377e:	bf00      	nop
  403780:	0040934c 	.word	0x0040934c
  403784:	0040934c 	.word	0x0040934c
  403788:	00409354 	.word	0x00409354
  40378c:	0040934c 	.word	0x0040934c

00403790 <memset>:
  403790:	b470      	push	{r4, r5, r6}
  403792:	0786      	lsls	r6, r0, #30
  403794:	d046      	beq.n	403824 <memset+0x94>
  403796:	1e54      	subs	r4, r2, #1
  403798:	2a00      	cmp	r2, #0
  40379a:	d041      	beq.n	403820 <memset+0x90>
  40379c:	b2ca      	uxtb	r2, r1
  40379e:	4603      	mov	r3, r0
  4037a0:	e002      	b.n	4037a8 <memset+0x18>
  4037a2:	f114 34ff 	adds.w	r4, r4, #4294967295
  4037a6:	d33b      	bcc.n	403820 <memset+0x90>
  4037a8:	f803 2b01 	strb.w	r2, [r3], #1
  4037ac:	079d      	lsls	r5, r3, #30
  4037ae:	d1f8      	bne.n	4037a2 <memset+0x12>
  4037b0:	2c03      	cmp	r4, #3
  4037b2:	d92e      	bls.n	403812 <memset+0x82>
  4037b4:	b2cd      	uxtb	r5, r1
  4037b6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4037ba:	2c0f      	cmp	r4, #15
  4037bc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4037c0:	d919      	bls.n	4037f6 <memset+0x66>
  4037c2:	f103 0210 	add.w	r2, r3, #16
  4037c6:	4626      	mov	r6, r4
  4037c8:	3e10      	subs	r6, #16
  4037ca:	2e0f      	cmp	r6, #15
  4037cc:	f842 5c10 	str.w	r5, [r2, #-16]
  4037d0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4037d4:	f842 5c08 	str.w	r5, [r2, #-8]
  4037d8:	f842 5c04 	str.w	r5, [r2, #-4]
  4037dc:	f102 0210 	add.w	r2, r2, #16
  4037e0:	d8f2      	bhi.n	4037c8 <memset+0x38>
  4037e2:	f1a4 0210 	sub.w	r2, r4, #16
  4037e6:	f022 020f 	bic.w	r2, r2, #15
  4037ea:	f004 040f 	and.w	r4, r4, #15
  4037ee:	3210      	adds	r2, #16
  4037f0:	2c03      	cmp	r4, #3
  4037f2:	4413      	add	r3, r2
  4037f4:	d90d      	bls.n	403812 <memset+0x82>
  4037f6:	461e      	mov	r6, r3
  4037f8:	4622      	mov	r2, r4
  4037fa:	3a04      	subs	r2, #4
  4037fc:	2a03      	cmp	r2, #3
  4037fe:	f846 5b04 	str.w	r5, [r6], #4
  403802:	d8fa      	bhi.n	4037fa <memset+0x6a>
  403804:	1f22      	subs	r2, r4, #4
  403806:	f022 0203 	bic.w	r2, r2, #3
  40380a:	3204      	adds	r2, #4
  40380c:	4413      	add	r3, r2
  40380e:	f004 0403 	and.w	r4, r4, #3
  403812:	b12c      	cbz	r4, 403820 <memset+0x90>
  403814:	b2c9      	uxtb	r1, r1
  403816:	441c      	add	r4, r3
  403818:	f803 1b01 	strb.w	r1, [r3], #1
  40381c:	429c      	cmp	r4, r3
  40381e:	d1fb      	bne.n	403818 <memset+0x88>
  403820:	bc70      	pop	{r4, r5, r6}
  403822:	4770      	bx	lr
  403824:	4614      	mov	r4, r2
  403826:	4603      	mov	r3, r0
  403828:	e7c2      	b.n	4037b0 <memset+0x20>
  40382a:	bf00      	nop

0040382c <sprintf>:
  40382c:	b40e      	push	{r1, r2, r3}
  40382e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403830:	b09c      	sub	sp, #112	; 0x70
  403832:	ab21      	add	r3, sp, #132	; 0x84
  403834:	490f      	ldr	r1, [pc, #60]	; (403874 <sprintf+0x48>)
  403836:	f853 2b04 	ldr.w	r2, [r3], #4
  40383a:	9301      	str	r3, [sp, #4]
  40383c:	4605      	mov	r5, r0
  40383e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  403842:	6808      	ldr	r0, [r1, #0]
  403844:	9502      	str	r5, [sp, #8]
  403846:	f44f 7702 	mov.w	r7, #520	; 0x208
  40384a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40384e:	a902      	add	r1, sp, #8
  403850:	9506      	str	r5, [sp, #24]
  403852:	f8ad 7014 	strh.w	r7, [sp, #20]
  403856:	9404      	str	r4, [sp, #16]
  403858:	9407      	str	r4, [sp, #28]
  40385a:	f8ad 6016 	strh.w	r6, [sp, #22]
  40385e:	f000 fa6f 	bl	403d40 <_svfprintf_r>
  403862:	9b02      	ldr	r3, [sp, #8]
  403864:	2200      	movs	r2, #0
  403866:	701a      	strb	r2, [r3, #0]
  403868:	b01c      	add	sp, #112	; 0x70
  40386a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40386e:	b003      	add	sp, #12
  403870:	4770      	bx	lr
  403872:	bf00      	nop
  403874:	20000010 	.word	0x20000010

00403878 <critical_factorization>:
  403878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40387c:	f04f 0e01 	mov.w	lr, #1
  403880:	4674      	mov	r4, lr
  403882:	2500      	movs	r5, #0
  403884:	f04f 36ff 	mov.w	r6, #4294967295
  403888:	192b      	adds	r3, r5, r4
  40388a:	428b      	cmp	r3, r1
  40388c:	eb00 0706 	add.w	r7, r0, r6
  403890:	d20d      	bcs.n	4038ae <critical_factorization+0x36>
  403892:	5d3f      	ldrb	r7, [r7, r4]
  403894:	f810 c003 	ldrb.w	ip, [r0, r3]
  403898:	45bc      	cmp	ip, r7
  40389a:	d22d      	bcs.n	4038f8 <critical_factorization+0x80>
  40389c:	461d      	mov	r5, r3
  40389e:	2401      	movs	r4, #1
  4038a0:	eba3 0e06 	sub.w	lr, r3, r6
  4038a4:	192b      	adds	r3, r5, r4
  4038a6:	428b      	cmp	r3, r1
  4038a8:	eb00 0706 	add.w	r7, r0, r6
  4038ac:	d3f1      	bcc.n	403892 <critical_factorization+0x1a>
  4038ae:	f04f 0801 	mov.w	r8, #1
  4038b2:	f8c2 e000 	str.w	lr, [r2]
  4038b6:	4644      	mov	r4, r8
  4038b8:	2500      	movs	r5, #0
  4038ba:	f04f 37ff 	mov.w	r7, #4294967295
  4038be:	192b      	adds	r3, r5, r4
  4038c0:	4299      	cmp	r1, r3
  4038c2:	eb00 0e07 	add.w	lr, r0, r7
  4038c6:	d90e      	bls.n	4038e6 <critical_factorization+0x6e>
  4038c8:	f81e e004 	ldrb.w	lr, [lr, r4]
  4038cc:	f810 c003 	ldrb.w	ip, [r0, r3]
  4038d0:	45f4      	cmp	ip, lr
  4038d2:	d918      	bls.n	403906 <critical_factorization+0x8e>
  4038d4:	461d      	mov	r5, r3
  4038d6:	2401      	movs	r4, #1
  4038d8:	eba3 0807 	sub.w	r8, r3, r7
  4038dc:	192b      	adds	r3, r5, r4
  4038de:	4299      	cmp	r1, r3
  4038e0:	eb00 0e07 	add.w	lr, r0, r7
  4038e4:	d8f0      	bhi.n	4038c8 <critical_factorization+0x50>
  4038e6:	3701      	adds	r7, #1
  4038e8:	1c70      	adds	r0, r6, #1
  4038ea:	4287      	cmp	r7, r0
  4038ec:	bf24      	itt	cs
  4038ee:	f8c2 8000 	strcs.w	r8, [r2]
  4038f2:	4638      	movcs	r0, r7
  4038f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4038f8:	d00c      	beq.n	403914 <critical_factorization+0x9c>
  4038fa:	f04f 0e01 	mov.w	lr, #1
  4038fe:	462e      	mov	r6, r5
  403900:	4674      	mov	r4, lr
  403902:	4475      	add	r5, lr
  403904:	e7c0      	b.n	403888 <critical_factorization+0x10>
  403906:	d00b      	beq.n	403920 <critical_factorization+0xa8>
  403908:	f04f 0801 	mov.w	r8, #1
  40390c:	462f      	mov	r7, r5
  40390e:	4644      	mov	r4, r8
  403910:	4445      	add	r5, r8
  403912:	e7d4      	b.n	4038be <critical_factorization+0x46>
  403914:	4574      	cmp	r4, lr
  403916:	bf12      	itee	ne
  403918:	3401      	addne	r4, #1
  40391a:	461d      	moveq	r5, r3
  40391c:	2401      	moveq	r4, #1
  40391e:	e7b3      	b.n	403888 <critical_factorization+0x10>
  403920:	4544      	cmp	r4, r8
  403922:	bf12      	itee	ne
  403924:	3401      	addne	r4, #1
  403926:	461d      	moveq	r5, r3
  403928:	2401      	moveq	r4, #1
  40392a:	e7c8      	b.n	4038be <critical_factorization+0x46>

0040392c <two_way_long_needle>:
  40392c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403930:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  403934:	4616      	mov	r6, r2
  403936:	4605      	mov	r5, r0
  403938:	468b      	mov	fp, r1
  40393a:	4610      	mov	r0, r2
  40393c:	4619      	mov	r1, r3
  40393e:	aa03      	add	r2, sp, #12
  403940:	461c      	mov	r4, r3
  403942:	f7ff ff99 	bl	403878 <critical_factorization>
  403946:	ab03      	add	r3, sp, #12
  403948:	4681      	mov	r9, r0
  40394a:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  40394e:	f843 4f04 	str.w	r4, [r3, #4]!
  403952:	4293      	cmp	r3, r2
  403954:	d1fb      	bne.n	40394e <two_way_long_needle+0x22>
  403956:	b14c      	cbz	r4, 40396c <two_way_long_needle+0x40>
  403958:	1e63      	subs	r3, r4, #1
  40395a:	1e72      	subs	r2, r6, #1
  40395c:	a804      	add	r0, sp, #16
  40395e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  403962:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  403966:	f113 33ff 	adds.w	r3, r3, #4294967295
  40396a:	d2f8      	bcs.n	40395e <two_way_long_needle+0x32>
  40396c:	9903      	ldr	r1, [sp, #12]
  40396e:	464a      	mov	r2, r9
  403970:	4431      	add	r1, r6
  403972:	4630      	mov	r0, r6
  403974:	f002 ff14 	bl	4067a0 <memcmp>
  403978:	2800      	cmp	r0, #0
  40397a:	d16f      	bne.n	403a5c <two_way_long_needle+0x130>
  40397c:	f109 33ff 	add.w	r3, r9, #4294967295
  403980:	9300      	str	r3, [sp, #0]
  403982:	18f3      	adds	r3, r6, r3
  403984:	4682      	mov	sl, r0
  403986:	9301      	str	r3, [sp, #4]
  403988:	4623      	mov	r3, r4
  40398a:	4680      	mov	r8, r0
  40398c:	4654      	mov	r4, sl
  40398e:	4658      	mov	r0, fp
  403990:	469a      	mov	sl, r3
  403992:	eb08 070a 	add.w	r7, r8, sl
  403996:	1a3a      	subs	r2, r7, r0
  403998:	2100      	movs	r1, #0
  40399a:	4428      	add	r0, r5
  40399c:	f002 feb0 	bl	406700 <memchr>
  4039a0:	2800      	cmp	r0, #0
  4039a2:	d156      	bne.n	403a52 <two_way_long_needle+0x126>
  4039a4:	2f00      	cmp	r7, #0
  4039a6:	d054      	beq.n	403a52 <two_way_long_needle+0x126>
  4039a8:	19eb      	adds	r3, r5, r7
  4039aa:	aa04      	add	r2, sp, #16
  4039ac:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  4039b0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4039b4:	b14b      	cbz	r3, 4039ca <two_way_long_needle+0x9e>
  4039b6:	b124      	cbz	r4, 4039c2 <two_way_long_needle+0x96>
  4039b8:	9a03      	ldr	r2, [sp, #12]
  4039ba:	4293      	cmp	r3, r2
  4039bc:	d201      	bcs.n	4039c2 <two_way_long_needle+0x96>
  4039be:	ebaa 0302 	sub.w	r3, sl, r2
  4039c2:	4498      	add	r8, r3
  4039c4:	2400      	movs	r4, #0
  4039c6:	4638      	mov	r0, r7
  4039c8:	e7e3      	b.n	403992 <two_way_long_needle+0x66>
  4039ca:	454c      	cmp	r4, r9
  4039cc:	4623      	mov	r3, r4
  4039ce:	f10a 3eff 	add.w	lr, sl, #4294967295
  4039d2:	bf38      	it	cc
  4039d4:	464b      	movcc	r3, r9
  4039d6:	4573      	cmp	r3, lr
  4039d8:	d213      	bcs.n	403a02 <two_way_long_needle+0xd6>
  4039da:	eb08 0203 	add.w	r2, r8, r3
  4039de:	f816 c003 	ldrb.w	ip, [r6, r3]
  4039e2:	5ca8      	ldrb	r0, [r5, r2]
  4039e4:	4584      	cmp	ip, r0
  4039e6:	442a      	add	r2, r5
  4039e8:	eb06 0103 	add.w	r1, r6, r3
  4039ec:	d006      	beq.n	4039fc <two_way_long_needle+0xd0>
  4039ee:	e02c      	b.n	403a4a <two_way_long_needle+0x11e>
  4039f0:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  4039f4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4039f8:	4584      	cmp	ip, r0
  4039fa:	d126      	bne.n	403a4a <two_way_long_needle+0x11e>
  4039fc:	3301      	adds	r3, #1
  4039fe:	4573      	cmp	r3, lr
  403a00:	d3f6      	bcc.n	4039f0 <two_way_long_needle+0xc4>
  403a02:	454c      	cmp	r4, r9
  403a04:	9900      	ldr	r1, [sp, #0]
  403a06:	f080 8089 	bcs.w	403b1c <two_way_long_needle+0x1f0>
  403a0a:	9b00      	ldr	r3, [sp, #0]
  403a0c:	eb08 0203 	add.w	r2, r8, r3
  403a10:	9b01      	ldr	r3, [sp, #4]
  403a12:	5ca8      	ldrb	r0, [r5, r2]
  403a14:	781b      	ldrb	r3, [r3, #0]
  403a16:	4298      	cmp	r0, r3
  403a18:	442a      	add	r2, r5
  403a1a:	d17f      	bne.n	403b1c <two_way_long_needle+0x1f0>
  403a1c:	9801      	ldr	r0, [sp, #4]
  403a1e:	f104 3bff 	add.w	fp, r4, #4294967295
  403a22:	e006      	b.n	403a32 <two_way_long_needle+0x106>
  403a24:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  403a28:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  403a2c:	45f4      	cmp	ip, lr
  403a2e:	d103      	bne.n	403a38 <two_way_long_needle+0x10c>
  403a30:	4619      	mov	r1, r3
  403a32:	1e4b      	subs	r3, r1, #1
  403a34:	459b      	cmp	fp, r3
  403a36:	d1f5      	bne.n	403a24 <two_way_long_needle+0xf8>
  403a38:	3401      	adds	r4, #1
  403a3a:	428c      	cmp	r4, r1
  403a3c:	d870      	bhi.n	403b20 <two_way_long_needle+0x1f4>
  403a3e:	9c03      	ldr	r4, [sp, #12]
  403a40:	4638      	mov	r0, r7
  403a42:	44a0      	add	r8, r4
  403a44:	ebaa 0404 	sub.w	r4, sl, r4
  403a48:	e7a3      	b.n	403992 <two_way_long_needle+0x66>
  403a4a:	f1c9 0201 	rsb	r2, r9, #1
  403a4e:	4490      	add	r8, r2
  403a50:	e7b7      	b.n	4039c2 <two_way_long_needle+0x96>
  403a52:	2000      	movs	r0, #0
  403a54:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  403a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a5c:	eba4 0309 	sub.w	r3, r4, r9
  403a60:	454b      	cmp	r3, r9
  403a62:	bf38      	it	cc
  403a64:	464b      	movcc	r3, r9
  403a66:	3301      	adds	r3, #1
  403a68:	f109 38ff 	add.w	r8, r9, #4294967295
  403a6c:	9303      	str	r3, [sp, #12]
  403a6e:	eb06 0308 	add.w	r3, r6, r8
  403a72:	4658      	mov	r0, fp
  403a74:	f04f 0a00 	mov.w	sl, #0
  403a78:	46cb      	mov	fp, r9
  403a7a:	4699      	mov	r9, r3
  403a7c:	eb0a 0704 	add.w	r7, sl, r4
  403a80:	1a3a      	subs	r2, r7, r0
  403a82:	2100      	movs	r1, #0
  403a84:	4428      	add	r0, r5
  403a86:	f002 fe3b 	bl	406700 <memchr>
  403a8a:	2800      	cmp	r0, #0
  403a8c:	d1e1      	bne.n	403a52 <two_way_long_needle+0x126>
  403a8e:	2f00      	cmp	r7, #0
  403a90:	d0df      	beq.n	403a52 <two_way_long_needle+0x126>
  403a92:	19eb      	adds	r3, r5, r7
  403a94:	aa04      	add	r2, sp, #16
  403a96:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  403a9a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  403a9e:	bba3      	cbnz	r3, 403b0a <two_way_long_needle+0x1de>
  403aa0:	1e61      	subs	r1, r4, #1
  403aa2:	458b      	cmp	fp, r1
  403aa4:	d215      	bcs.n	403ad2 <two_way_long_needle+0x1a6>
  403aa6:	eb0a 020b 	add.w	r2, sl, fp
  403aaa:	f816 300b 	ldrb.w	r3, [r6, fp]
  403aae:	f815 e002 	ldrb.w	lr, [r5, r2]
  403ab2:	459e      	cmp	lr, r3
  403ab4:	442a      	add	r2, r5
  403ab6:	eb06 000b 	add.w	r0, r6, fp
  403aba:	465b      	mov	r3, fp
  403abc:	d006      	beq.n	403acc <two_way_long_needle+0x1a0>
  403abe:	e027      	b.n	403b10 <two_way_long_needle+0x1e4>
  403ac0:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  403ac4:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  403ac8:	45f4      	cmp	ip, lr
  403aca:	d121      	bne.n	403b10 <two_way_long_needle+0x1e4>
  403acc:	3301      	adds	r3, #1
  403ace:	428b      	cmp	r3, r1
  403ad0:	d3f6      	bcc.n	403ac0 <two_way_long_needle+0x194>
  403ad2:	f1b8 3fff 	cmp.w	r8, #4294967295
  403ad6:	d011      	beq.n	403afc <two_way_long_needle+0x1d0>
  403ad8:	eb0a 0208 	add.w	r2, sl, r8
  403adc:	f899 1000 	ldrb.w	r1, [r9]
  403ae0:	5cab      	ldrb	r3, [r5, r2]
  403ae2:	4299      	cmp	r1, r3
  403ae4:	442a      	add	r2, r5
  403ae6:	d10f      	bne.n	403b08 <two_way_long_needle+0x1dc>
  403ae8:	464b      	mov	r3, r9
  403aea:	e005      	b.n	403af8 <two_way_long_needle+0x1cc>
  403aec:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  403af0:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  403af4:	4288      	cmp	r0, r1
  403af6:	d107      	bne.n	403b08 <two_way_long_needle+0x1dc>
  403af8:	42b3      	cmp	r3, r6
  403afa:	d1f7      	bne.n	403aec <two_way_long_needle+0x1c0>
  403afc:	eb05 000a 	add.w	r0, r5, sl
  403b00:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  403b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b08:	9b03      	ldr	r3, [sp, #12]
  403b0a:	449a      	add	sl, r3
  403b0c:	4638      	mov	r0, r7
  403b0e:	e7b5      	b.n	403a7c <two_way_long_needle+0x150>
  403b10:	f1cb 0201 	rsb	r2, fp, #1
  403b14:	4492      	add	sl, r2
  403b16:	449a      	add	sl, r3
  403b18:	4638      	mov	r0, r7
  403b1a:	e7af      	b.n	403a7c <two_way_long_needle+0x150>
  403b1c:	4649      	mov	r1, r9
  403b1e:	e78b      	b.n	403a38 <two_way_long_needle+0x10c>
  403b20:	eb05 0008 	add.w	r0, r5, r8
  403b24:	e796      	b.n	403a54 <two_way_long_needle+0x128>
  403b26:	bf00      	nop

00403b28 <strstr>:
  403b28:	7802      	ldrb	r2, [r0, #0]
  403b2a:	2a00      	cmp	r2, #0
  403b2c:	f000 8101 	beq.w	403d32 <strstr+0x20a>
  403b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403b34:	f891 8000 	ldrb.w	r8, [r1]
  403b38:	b085      	sub	sp, #20
  403b3a:	4644      	mov	r4, r8
  403b3c:	f1b8 0f00 	cmp.w	r8, #0
  403b40:	d016      	beq.n	403b70 <strstr+0x48>
  403b42:	4686      	mov	lr, r0
  403b44:	f101 0c01 	add.w	ip, r1, #1
  403b48:	2701      	movs	r7, #1
  403b4a:	e003      	b.n	403b54 <strstr+0x2c>
  403b4c:	f813 4b01 	ldrb.w	r4, [r3], #1
  403b50:	b16c      	cbz	r4, 403b6e <strstr+0x46>
  403b52:	469c      	mov	ip, r3
  403b54:	42a2      	cmp	r2, r4
  403b56:	bf14      	ite	ne
  403b58:	2700      	movne	r7, #0
  403b5a:	f007 0701 	andeq.w	r7, r7, #1
  403b5e:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  403b62:	4663      	mov	r3, ip
  403b64:	2a00      	cmp	r2, #0
  403b66:	d1f1      	bne.n	403b4c <strstr+0x24>
  403b68:	f89c 3000 	ldrb.w	r3, [ip]
  403b6c:	b9fb      	cbnz	r3, 403bae <strstr+0x86>
  403b6e:	b117      	cbz	r7, 403b76 <strstr+0x4e>
  403b70:	b005      	add	sp, #20
  403b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403b76:	460e      	mov	r6, r1
  403b78:	4605      	mov	r5, r0
  403b7a:	4641      	mov	r1, r8
  403b7c:	3001      	adds	r0, #1
  403b7e:	ebac 0406 	sub.w	r4, ip, r6
  403b82:	f003 f9ef 	bl	406f64 <strchr>
  403b86:	4607      	mov	r7, r0
  403b88:	b188      	cbz	r0, 403bae <strstr+0x86>
  403b8a:	2c01      	cmp	r4, #1
  403b8c:	d0f0      	beq.n	403b70 <strstr+0x48>
  403b8e:	1928      	adds	r0, r5, r4
  403b90:	4287      	cmp	r7, r0
  403b92:	bf94      	ite	ls
  403b94:	1bc1      	subls	r1, r0, r7
  403b96:	2101      	movhi	r1, #1
  403b98:	2c1f      	cmp	r4, #31
  403b9a:	468b      	mov	fp, r1
  403b9c:	d90b      	bls.n	403bb6 <strstr+0x8e>
  403b9e:	4623      	mov	r3, r4
  403ba0:	4632      	mov	r2, r6
  403ba2:	4638      	mov	r0, r7
  403ba4:	f7ff fec2 	bl	40392c <two_way_long_needle>
  403ba8:	b005      	add	sp, #20
  403baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bae:	2000      	movs	r0, #0
  403bb0:	b005      	add	sp, #20
  403bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bb6:	aa03      	add	r2, sp, #12
  403bb8:	4621      	mov	r1, r4
  403bba:	4630      	mov	r0, r6
  403bbc:	f7ff fe5c 	bl	403878 <critical_factorization>
  403bc0:	9903      	ldr	r1, [sp, #12]
  403bc2:	4680      	mov	r8, r0
  403bc4:	4602      	mov	r2, r0
  403bc6:	4431      	add	r1, r6
  403bc8:	4630      	mov	r0, r6
  403bca:	f002 fde9 	bl	4067a0 <memcmp>
  403bce:	2800      	cmp	r0, #0
  403bd0:	d157      	bne.n	403c82 <strstr+0x15a>
  403bd2:	f108 33ff 	add.w	r3, r8, #4294967295
  403bd6:	9300      	str	r3, [sp, #0]
  403bd8:	18f3      	adds	r3, r6, r3
  403bda:	4681      	mov	r9, r0
  403bdc:	4605      	mov	r5, r0
  403bde:	9301      	str	r3, [sp, #4]
  403be0:	4658      	mov	r0, fp
  403be2:	46b2      	mov	sl, r6
  403be4:	1966      	adds	r6, r4, r5
  403be6:	1a32      	subs	r2, r6, r0
  403be8:	2100      	movs	r1, #0
  403bea:	4438      	add	r0, r7
  403bec:	f002 fd88 	bl	406700 <memchr>
  403bf0:	2800      	cmp	r0, #0
  403bf2:	d1dc      	bne.n	403bae <strstr+0x86>
  403bf4:	2e00      	cmp	r6, #0
  403bf6:	d0da      	beq.n	403bae <strstr+0x86>
  403bf8:	45c8      	cmp	r8, r9
  403bfa:	4643      	mov	r3, r8
  403bfc:	bf38      	it	cc
  403bfe:	464b      	movcc	r3, r9
  403c00:	429c      	cmp	r4, r3
  403c02:	d912      	bls.n	403c2a <strstr+0x102>
  403c04:	195a      	adds	r2, r3, r5
  403c06:	f81a 1003 	ldrb.w	r1, [sl, r3]
  403c0a:	5cb8      	ldrb	r0, [r7, r2]
  403c0c:	4281      	cmp	r1, r0
  403c0e:	443a      	add	r2, r7
  403c10:	eb0a 0e03 	add.w	lr, sl, r3
  403c14:	d006      	beq.n	403c24 <strstr+0xfc>
  403c16:	e02c      	b.n	403c72 <strstr+0x14a>
  403c18:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  403c1c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  403c20:	4288      	cmp	r0, r1
  403c22:	d126      	bne.n	403c72 <strstr+0x14a>
  403c24:	3301      	adds	r3, #1
  403c26:	429c      	cmp	r4, r3
  403c28:	d1f6      	bne.n	403c18 <strstr+0xf0>
  403c2a:	45c8      	cmp	r8, r9
  403c2c:	9900      	ldr	r1, [sp, #0]
  403c2e:	f240 8083 	bls.w	403d38 <strstr+0x210>
  403c32:	9b00      	ldr	r3, [sp, #0]
  403c34:	18ea      	adds	r2, r5, r3
  403c36:	9b01      	ldr	r3, [sp, #4]
  403c38:	5cb8      	ldrb	r0, [r7, r2]
  403c3a:	781b      	ldrb	r3, [r3, #0]
  403c3c:	4298      	cmp	r0, r3
  403c3e:	443a      	add	r2, r7
  403c40:	d17a      	bne.n	403d38 <strstr+0x210>
  403c42:	9801      	ldr	r0, [sp, #4]
  403c44:	f109 3bff 	add.w	fp, r9, #4294967295
  403c48:	e006      	b.n	403c58 <strstr+0x130>
  403c4a:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  403c4e:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  403c52:	45f4      	cmp	ip, lr
  403c54:	d103      	bne.n	403c5e <strstr+0x136>
  403c56:	4619      	mov	r1, r3
  403c58:	1e4b      	subs	r3, r1, #1
  403c5a:	455b      	cmp	r3, fp
  403c5c:	d1f5      	bne.n	403c4a <strstr+0x122>
  403c5e:	f109 0901 	add.w	r9, r9, #1
  403c62:	4589      	cmp	r9, r1
  403c64:	d857      	bhi.n	403d16 <strstr+0x1ee>
  403c66:	9b03      	ldr	r3, [sp, #12]
  403c68:	4630      	mov	r0, r6
  403c6a:	441d      	add	r5, r3
  403c6c:	eba4 0903 	sub.w	r9, r4, r3
  403c70:	e7b8      	b.n	403be4 <strstr+0xbc>
  403c72:	f1c8 0201 	rsb	r2, r8, #1
  403c76:	4415      	add	r5, r2
  403c78:	441d      	add	r5, r3
  403c7a:	f04f 0900 	mov.w	r9, #0
  403c7e:	4630      	mov	r0, r6
  403c80:	e7b0      	b.n	403be4 <strstr+0xbc>
  403c82:	eba4 0308 	sub.w	r3, r4, r8
  403c86:	4543      	cmp	r3, r8
  403c88:	bf38      	it	cc
  403c8a:	4643      	movcc	r3, r8
  403c8c:	3301      	adds	r3, #1
  403c8e:	f108 39ff 	add.w	r9, r8, #4294967295
  403c92:	9303      	str	r3, [sp, #12]
  403c94:	eb06 0309 	add.w	r3, r6, r9
  403c98:	4658      	mov	r0, fp
  403c9a:	2500      	movs	r5, #0
  403c9c:	46bb      	mov	fp, r7
  403c9e:	469a      	mov	sl, r3
  403ca0:	1967      	adds	r7, r4, r5
  403ca2:	1a3a      	subs	r2, r7, r0
  403ca4:	2100      	movs	r1, #0
  403ca6:	4458      	add	r0, fp
  403ca8:	f002 fd2a 	bl	406700 <memchr>
  403cac:	2800      	cmp	r0, #0
  403cae:	f47f af7e 	bne.w	403bae <strstr+0x86>
  403cb2:	2f00      	cmp	r7, #0
  403cb4:	f43f af7b 	beq.w	403bae <strstr+0x86>
  403cb8:	4544      	cmp	r4, r8
  403cba:	d915      	bls.n	403ce8 <strstr+0x1c0>
  403cbc:	eb08 0205 	add.w	r2, r8, r5
  403cc0:	f816 3008 	ldrb.w	r3, [r6, r8]
  403cc4:	f81b 0002 	ldrb.w	r0, [fp, r2]
  403cc8:	4298      	cmp	r0, r3
  403cca:	445a      	add	r2, fp
  403ccc:	eb06 0108 	add.w	r1, r6, r8
  403cd0:	4643      	mov	r3, r8
  403cd2:	d006      	beq.n	403ce2 <strstr+0x1ba>
  403cd4:	e023      	b.n	403d1e <strstr+0x1f6>
  403cd6:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  403cda:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  403cde:	4586      	cmp	lr, r0
  403ce0:	d11d      	bne.n	403d1e <strstr+0x1f6>
  403ce2:	3301      	adds	r3, #1
  403ce4:	429c      	cmp	r4, r3
  403ce6:	d1f6      	bne.n	403cd6 <strstr+0x1ae>
  403ce8:	f1b9 3fff 	cmp.w	r9, #4294967295
  403cec:	d012      	beq.n	403d14 <strstr+0x1ec>
  403cee:	eb05 0209 	add.w	r2, r5, r9
  403cf2:	f89a 3000 	ldrb.w	r3, [sl]
  403cf6:	f81b 1002 	ldrb.w	r1, [fp, r2]
  403cfa:	4299      	cmp	r1, r3
  403cfc:	445a      	add	r2, fp
  403cfe:	d114      	bne.n	403d2a <strstr+0x202>
  403d00:	4653      	mov	r3, sl
  403d02:	e005      	b.n	403d10 <strstr+0x1e8>
  403d04:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  403d08:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  403d0c:	4288      	cmp	r0, r1
  403d0e:	d10c      	bne.n	403d2a <strstr+0x202>
  403d10:	42b3      	cmp	r3, r6
  403d12:	d1f7      	bne.n	403d04 <strstr+0x1dc>
  403d14:	465f      	mov	r7, fp
  403d16:	1978      	adds	r0, r7, r5
  403d18:	b005      	add	sp, #20
  403d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d1e:	f1c8 0201 	rsb	r2, r8, #1
  403d22:	4415      	add	r5, r2
  403d24:	441d      	add	r5, r3
  403d26:	4638      	mov	r0, r7
  403d28:	e7ba      	b.n	403ca0 <strstr+0x178>
  403d2a:	9b03      	ldr	r3, [sp, #12]
  403d2c:	4638      	mov	r0, r7
  403d2e:	441d      	add	r5, r3
  403d30:	e7b6      	b.n	403ca0 <strstr+0x178>
  403d32:	780b      	ldrb	r3, [r1, #0]
  403d34:	b913      	cbnz	r3, 403d3c <strstr+0x214>
  403d36:	4770      	bx	lr
  403d38:	4641      	mov	r1, r8
  403d3a:	e790      	b.n	403c5e <strstr+0x136>
  403d3c:	2000      	movs	r0, #0
  403d3e:	4770      	bx	lr

00403d40 <_svfprintf_r>:
  403d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403d44:	b0c3      	sub	sp, #268	; 0x10c
  403d46:	460c      	mov	r4, r1
  403d48:	910b      	str	r1, [sp, #44]	; 0x2c
  403d4a:	4692      	mov	sl, r2
  403d4c:	930f      	str	r3, [sp, #60]	; 0x3c
  403d4e:	900c      	str	r0, [sp, #48]	; 0x30
  403d50:	f002 fa0e 	bl	406170 <_localeconv_r>
  403d54:	6803      	ldr	r3, [r0, #0]
  403d56:	931a      	str	r3, [sp, #104]	; 0x68
  403d58:	4618      	mov	r0, r3
  403d5a:	f003 f991 	bl	407080 <strlen>
  403d5e:	89a3      	ldrh	r3, [r4, #12]
  403d60:	9019      	str	r0, [sp, #100]	; 0x64
  403d62:	0619      	lsls	r1, r3, #24
  403d64:	d503      	bpl.n	403d6e <_svfprintf_r+0x2e>
  403d66:	6923      	ldr	r3, [r4, #16]
  403d68:	2b00      	cmp	r3, #0
  403d6a:	f001 8003 	beq.w	404d74 <_svfprintf_r+0x1034>
  403d6e:	2300      	movs	r3, #0
  403d70:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  403d74:	9313      	str	r3, [sp, #76]	; 0x4c
  403d76:	9315      	str	r3, [sp, #84]	; 0x54
  403d78:	9314      	str	r3, [sp, #80]	; 0x50
  403d7a:	9327      	str	r3, [sp, #156]	; 0x9c
  403d7c:	9326      	str	r3, [sp, #152]	; 0x98
  403d7e:	9318      	str	r3, [sp, #96]	; 0x60
  403d80:	931b      	str	r3, [sp, #108]	; 0x6c
  403d82:	9309      	str	r3, [sp, #36]	; 0x24
  403d84:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  403d88:	46c8      	mov	r8, r9
  403d8a:	9316      	str	r3, [sp, #88]	; 0x58
  403d8c:	9317      	str	r3, [sp, #92]	; 0x5c
  403d8e:	f89a 3000 	ldrb.w	r3, [sl]
  403d92:	4654      	mov	r4, sl
  403d94:	b1e3      	cbz	r3, 403dd0 <_svfprintf_r+0x90>
  403d96:	2b25      	cmp	r3, #37	; 0x25
  403d98:	d102      	bne.n	403da0 <_svfprintf_r+0x60>
  403d9a:	e019      	b.n	403dd0 <_svfprintf_r+0x90>
  403d9c:	2b25      	cmp	r3, #37	; 0x25
  403d9e:	d003      	beq.n	403da8 <_svfprintf_r+0x68>
  403da0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  403da4:	2b00      	cmp	r3, #0
  403da6:	d1f9      	bne.n	403d9c <_svfprintf_r+0x5c>
  403da8:	eba4 050a 	sub.w	r5, r4, sl
  403dac:	b185      	cbz	r5, 403dd0 <_svfprintf_r+0x90>
  403dae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403db0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403db2:	f8c8 a000 	str.w	sl, [r8]
  403db6:	3301      	adds	r3, #1
  403db8:	442a      	add	r2, r5
  403dba:	2b07      	cmp	r3, #7
  403dbc:	f8c8 5004 	str.w	r5, [r8, #4]
  403dc0:	9227      	str	r2, [sp, #156]	; 0x9c
  403dc2:	9326      	str	r3, [sp, #152]	; 0x98
  403dc4:	dc7f      	bgt.n	403ec6 <_svfprintf_r+0x186>
  403dc6:	f108 0808 	add.w	r8, r8, #8
  403dca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403dcc:	442b      	add	r3, r5
  403dce:	9309      	str	r3, [sp, #36]	; 0x24
  403dd0:	7823      	ldrb	r3, [r4, #0]
  403dd2:	2b00      	cmp	r3, #0
  403dd4:	d07f      	beq.n	403ed6 <_svfprintf_r+0x196>
  403dd6:	2300      	movs	r3, #0
  403dd8:	461a      	mov	r2, r3
  403dda:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  403dde:	4619      	mov	r1, r3
  403de0:	930d      	str	r3, [sp, #52]	; 0x34
  403de2:	469b      	mov	fp, r3
  403de4:	f04f 30ff 	mov.w	r0, #4294967295
  403de8:	7863      	ldrb	r3, [r4, #1]
  403dea:	900a      	str	r0, [sp, #40]	; 0x28
  403dec:	f104 0a01 	add.w	sl, r4, #1
  403df0:	f10a 0a01 	add.w	sl, sl, #1
  403df4:	f1a3 0020 	sub.w	r0, r3, #32
  403df8:	2858      	cmp	r0, #88	; 0x58
  403dfa:	f200 83c1 	bhi.w	404580 <_svfprintf_r+0x840>
  403dfe:	e8df f010 	tbh	[pc, r0, lsl #1]
  403e02:	0238      	.short	0x0238
  403e04:	03bf03bf 	.word	0x03bf03bf
  403e08:	03bf0240 	.word	0x03bf0240
  403e0c:	03bf03bf 	.word	0x03bf03bf
  403e10:	03bf03bf 	.word	0x03bf03bf
  403e14:	024503bf 	.word	0x024503bf
  403e18:	03bf0203 	.word	0x03bf0203
  403e1c:	026b005d 	.word	0x026b005d
  403e20:	028603bf 	.word	0x028603bf
  403e24:	039d039d 	.word	0x039d039d
  403e28:	039d039d 	.word	0x039d039d
  403e2c:	039d039d 	.word	0x039d039d
  403e30:	039d039d 	.word	0x039d039d
  403e34:	03bf039d 	.word	0x03bf039d
  403e38:	03bf03bf 	.word	0x03bf03bf
  403e3c:	03bf03bf 	.word	0x03bf03bf
  403e40:	03bf03bf 	.word	0x03bf03bf
  403e44:	03bf03bf 	.word	0x03bf03bf
  403e48:	033703bf 	.word	0x033703bf
  403e4c:	03bf0357 	.word	0x03bf0357
  403e50:	03bf0357 	.word	0x03bf0357
  403e54:	03bf03bf 	.word	0x03bf03bf
  403e58:	039803bf 	.word	0x039803bf
  403e5c:	03bf03bf 	.word	0x03bf03bf
  403e60:	03bf03ad 	.word	0x03bf03ad
  403e64:	03bf03bf 	.word	0x03bf03bf
  403e68:	03bf03bf 	.word	0x03bf03bf
  403e6c:	03bf0259 	.word	0x03bf0259
  403e70:	031e03bf 	.word	0x031e03bf
  403e74:	03bf03bf 	.word	0x03bf03bf
  403e78:	03bf03bf 	.word	0x03bf03bf
  403e7c:	03bf03bf 	.word	0x03bf03bf
  403e80:	03bf03bf 	.word	0x03bf03bf
  403e84:	03bf03bf 	.word	0x03bf03bf
  403e88:	02db02c6 	.word	0x02db02c6
  403e8c:	03570357 	.word	0x03570357
  403e90:	028b0357 	.word	0x028b0357
  403e94:	03bf02db 	.word	0x03bf02db
  403e98:	029003bf 	.word	0x029003bf
  403e9c:	029d03bf 	.word	0x029d03bf
  403ea0:	02b401cc 	.word	0x02b401cc
  403ea4:	03bf0208 	.word	0x03bf0208
  403ea8:	03bf01e1 	.word	0x03bf01e1
  403eac:	03bf007e 	.word	0x03bf007e
  403eb0:	020d03bf 	.word	0x020d03bf
  403eb4:	980d      	ldr	r0, [sp, #52]	; 0x34
  403eb6:	930f      	str	r3, [sp, #60]	; 0x3c
  403eb8:	4240      	negs	r0, r0
  403eba:	900d      	str	r0, [sp, #52]	; 0x34
  403ebc:	f04b 0b04 	orr.w	fp, fp, #4
  403ec0:	f89a 3000 	ldrb.w	r3, [sl]
  403ec4:	e794      	b.n	403df0 <_svfprintf_r+0xb0>
  403ec6:	aa25      	add	r2, sp, #148	; 0x94
  403ec8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403eca:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ecc:	f003 f946 	bl	40715c <__ssprint_r>
  403ed0:	b940      	cbnz	r0, 403ee4 <_svfprintf_r+0x1a4>
  403ed2:	46c8      	mov	r8, r9
  403ed4:	e779      	b.n	403dca <_svfprintf_r+0x8a>
  403ed6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  403ed8:	b123      	cbz	r3, 403ee4 <_svfprintf_r+0x1a4>
  403eda:	980c      	ldr	r0, [sp, #48]	; 0x30
  403edc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ede:	aa25      	add	r2, sp, #148	; 0x94
  403ee0:	f003 f93c 	bl	40715c <__ssprint_r>
  403ee4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403ee6:	899b      	ldrh	r3, [r3, #12]
  403ee8:	f013 0f40 	tst.w	r3, #64	; 0x40
  403eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403eee:	bf18      	it	ne
  403ef0:	f04f 33ff 	movne.w	r3, #4294967295
  403ef4:	9309      	str	r3, [sp, #36]	; 0x24
  403ef6:	9809      	ldr	r0, [sp, #36]	; 0x24
  403ef8:	b043      	add	sp, #268	; 0x10c
  403efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403efe:	f01b 0f20 	tst.w	fp, #32
  403f02:	9311      	str	r3, [sp, #68]	; 0x44
  403f04:	f040 81dd 	bne.w	4042c2 <_svfprintf_r+0x582>
  403f08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403f0a:	f01b 0f10 	tst.w	fp, #16
  403f0e:	4613      	mov	r3, r2
  403f10:	f040 856e 	bne.w	4049f0 <_svfprintf_r+0xcb0>
  403f14:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403f18:	f000 856a 	beq.w	4049f0 <_svfprintf_r+0xcb0>
  403f1c:	8814      	ldrh	r4, [r2, #0]
  403f1e:	3204      	adds	r2, #4
  403f20:	2500      	movs	r5, #0
  403f22:	2301      	movs	r3, #1
  403f24:	920f      	str	r2, [sp, #60]	; 0x3c
  403f26:	2700      	movs	r7, #0
  403f28:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403f2c:	990a      	ldr	r1, [sp, #40]	; 0x28
  403f2e:	1c4a      	adds	r2, r1, #1
  403f30:	f000 8265 	beq.w	4043fe <_svfprintf_r+0x6be>
  403f34:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  403f38:	9207      	str	r2, [sp, #28]
  403f3a:	ea54 0205 	orrs.w	r2, r4, r5
  403f3e:	f040 8264 	bne.w	40440a <_svfprintf_r+0x6ca>
  403f42:	2900      	cmp	r1, #0
  403f44:	f040 843c 	bne.w	4047c0 <_svfprintf_r+0xa80>
  403f48:	2b00      	cmp	r3, #0
  403f4a:	f040 84d7 	bne.w	4048fc <_svfprintf_r+0xbbc>
  403f4e:	f01b 0301 	ands.w	r3, fp, #1
  403f52:	930e      	str	r3, [sp, #56]	; 0x38
  403f54:	f000 8604 	beq.w	404b60 <_svfprintf_r+0xe20>
  403f58:	ae42      	add	r6, sp, #264	; 0x108
  403f5a:	2330      	movs	r3, #48	; 0x30
  403f5c:	f806 3d41 	strb.w	r3, [r6, #-65]!
  403f60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403f64:	4293      	cmp	r3, r2
  403f66:	bfb8      	it	lt
  403f68:	4613      	movlt	r3, r2
  403f6a:	9308      	str	r3, [sp, #32]
  403f6c:	2300      	movs	r3, #0
  403f6e:	9312      	str	r3, [sp, #72]	; 0x48
  403f70:	b117      	cbz	r7, 403f78 <_svfprintf_r+0x238>
  403f72:	9b08      	ldr	r3, [sp, #32]
  403f74:	3301      	adds	r3, #1
  403f76:	9308      	str	r3, [sp, #32]
  403f78:	9b07      	ldr	r3, [sp, #28]
  403f7a:	f013 0302 	ands.w	r3, r3, #2
  403f7e:	9310      	str	r3, [sp, #64]	; 0x40
  403f80:	d002      	beq.n	403f88 <_svfprintf_r+0x248>
  403f82:	9b08      	ldr	r3, [sp, #32]
  403f84:	3302      	adds	r3, #2
  403f86:	9308      	str	r3, [sp, #32]
  403f88:	9b07      	ldr	r3, [sp, #28]
  403f8a:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  403f8e:	f040 830e 	bne.w	4045ae <_svfprintf_r+0x86e>
  403f92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403f94:	9a08      	ldr	r2, [sp, #32]
  403f96:	eba3 0b02 	sub.w	fp, r3, r2
  403f9a:	f1bb 0f00 	cmp.w	fp, #0
  403f9e:	f340 8306 	ble.w	4045ae <_svfprintf_r+0x86e>
  403fa2:	f1bb 0f10 	cmp.w	fp, #16
  403fa6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403fa8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403faa:	dd29      	ble.n	404000 <_svfprintf_r+0x2c0>
  403fac:	4643      	mov	r3, r8
  403fae:	4621      	mov	r1, r4
  403fb0:	46a8      	mov	r8, r5
  403fb2:	2710      	movs	r7, #16
  403fb4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403fb6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403fb8:	e006      	b.n	403fc8 <_svfprintf_r+0x288>
  403fba:	f1ab 0b10 	sub.w	fp, fp, #16
  403fbe:	f1bb 0f10 	cmp.w	fp, #16
  403fc2:	f103 0308 	add.w	r3, r3, #8
  403fc6:	dd18      	ble.n	403ffa <_svfprintf_r+0x2ba>
  403fc8:	3201      	adds	r2, #1
  403fca:	48b7      	ldr	r0, [pc, #732]	; (4042a8 <_svfprintf_r+0x568>)
  403fcc:	9226      	str	r2, [sp, #152]	; 0x98
  403fce:	3110      	adds	r1, #16
  403fd0:	2a07      	cmp	r2, #7
  403fd2:	9127      	str	r1, [sp, #156]	; 0x9c
  403fd4:	e883 0081 	stmia.w	r3, {r0, r7}
  403fd8:	ddef      	ble.n	403fba <_svfprintf_r+0x27a>
  403fda:	aa25      	add	r2, sp, #148	; 0x94
  403fdc:	4629      	mov	r1, r5
  403fde:	4620      	mov	r0, r4
  403fe0:	f003 f8bc 	bl	40715c <__ssprint_r>
  403fe4:	2800      	cmp	r0, #0
  403fe6:	f47f af7d 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  403fea:	f1ab 0b10 	sub.w	fp, fp, #16
  403fee:	f1bb 0f10 	cmp.w	fp, #16
  403ff2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403ff4:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403ff6:	464b      	mov	r3, r9
  403ff8:	dce6      	bgt.n	403fc8 <_svfprintf_r+0x288>
  403ffa:	4645      	mov	r5, r8
  403ffc:	460c      	mov	r4, r1
  403ffe:	4698      	mov	r8, r3
  404000:	3201      	adds	r2, #1
  404002:	4ba9      	ldr	r3, [pc, #676]	; (4042a8 <_svfprintf_r+0x568>)
  404004:	9226      	str	r2, [sp, #152]	; 0x98
  404006:	445c      	add	r4, fp
  404008:	2a07      	cmp	r2, #7
  40400a:	9427      	str	r4, [sp, #156]	; 0x9c
  40400c:	e888 0808 	stmia.w	r8, {r3, fp}
  404010:	f300 8498 	bgt.w	404944 <_svfprintf_r+0xc04>
  404014:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404018:	f108 0808 	add.w	r8, r8, #8
  40401c:	b177      	cbz	r7, 40403c <_svfprintf_r+0x2fc>
  40401e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404020:	3301      	adds	r3, #1
  404022:	3401      	adds	r4, #1
  404024:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  404028:	2201      	movs	r2, #1
  40402a:	2b07      	cmp	r3, #7
  40402c:	9427      	str	r4, [sp, #156]	; 0x9c
  40402e:	9326      	str	r3, [sp, #152]	; 0x98
  404030:	e888 0006 	stmia.w	r8, {r1, r2}
  404034:	f300 83db 	bgt.w	4047ee <_svfprintf_r+0xaae>
  404038:	f108 0808 	add.w	r8, r8, #8
  40403c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40403e:	b16b      	cbz	r3, 40405c <_svfprintf_r+0x31c>
  404040:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404042:	3301      	adds	r3, #1
  404044:	3402      	adds	r4, #2
  404046:	a91e      	add	r1, sp, #120	; 0x78
  404048:	2202      	movs	r2, #2
  40404a:	2b07      	cmp	r3, #7
  40404c:	9427      	str	r4, [sp, #156]	; 0x9c
  40404e:	9326      	str	r3, [sp, #152]	; 0x98
  404050:	e888 0006 	stmia.w	r8, {r1, r2}
  404054:	f300 83d6 	bgt.w	404804 <_svfprintf_r+0xac4>
  404058:	f108 0808 	add.w	r8, r8, #8
  40405c:	2d80      	cmp	r5, #128	; 0x80
  40405e:	f000 8315 	beq.w	40468c <_svfprintf_r+0x94c>
  404062:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404064:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404066:	1a9f      	subs	r7, r3, r2
  404068:	2f00      	cmp	r7, #0
  40406a:	dd36      	ble.n	4040da <_svfprintf_r+0x39a>
  40406c:	2f10      	cmp	r7, #16
  40406e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404070:	4d8e      	ldr	r5, [pc, #568]	; (4042ac <_svfprintf_r+0x56c>)
  404072:	dd27      	ble.n	4040c4 <_svfprintf_r+0x384>
  404074:	4642      	mov	r2, r8
  404076:	4621      	mov	r1, r4
  404078:	46b0      	mov	r8, r6
  40407a:	f04f 0b10 	mov.w	fp, #16
  40407e:	462e      	mov	r6, r5
  404080:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404082:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404084:	e004      	b.n	404090 <_svfprintf_r+0x350>
  404086:	3f10      	subs	r7, #16
  404088:	2f10      	cmp	r7, #16
  40408a:	f102 0208 	add.w	r2, r2, #8
  40408e:	dd15      	ble.n	4040bc <_svfprintf_r+0x37c>
  404090:	3301      	adds	r3, #1
  404092:	3110      	adds	r1, #16
  404094:	2b07      	cmp	r3, #7
  404096:	9127      	str	r1, [sp, #156]	; 0x9c
  404098:	9326      	str	r3, [sp, #152]	; 0x98
  40409a:	e882 0840 	stmia.w	r2, {r6, fp}
  40409e:	ddf2      	ble.n	404086 <_svfprintf_r+0x346>
  4040a0:	aa25      	add	r2, sp, #148	; 0x94
  4040a2:	4629      	mov	r1, r5
  4040a4:	4620      	mov	r0, r4
  4040a6:	f003 f859 	bl	40715c <__ssprint_r>
  4040aa:	2800      	cmp	r0, #0
  4040ac:	f47f af1a 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4040b0:	3f10      	subs	r7, #16
  4040b2:	2f10      	cmp	r7, #16
  4040b4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4040b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4040b8:	464a      	mov	r2, r9
  4040ba:	dce9      	bgt.n	404090 <_svfprintf_r+0x350>
  4040bc:	4635      	mov	r5, r6
  4040be:	460c      	mov	r4, r1
  4040c0:	4646      	mov	r6, r8
  4040c2:	4690      	mov	r8, r2
  4040c4:	3301      	adds	r3, #1
  4040c6:	443c      	add	r4, r7
  4040c8:	2b07      	cmp	r3, #7
  4040ca:	9427      	str	r4, [sp, #156]	; 0x9c
  4040cc:	9326      	str	r3, [sp, #152]	; 0x98
  4040ce:	e888 00a0 	stmia.w	r8, {r5, r7}
  4040d2:	f300 8381 	bgt.w	4047d8 <_svfprintf_r+0xa98>
  4040d6:	f108 0808 	add.w	r8, r8, #8
  4040da:	9b07      	ldr	r3, [sp, #28]
  4040dc:	05df      	lsls	r7, r3, #23
  4040de:	f100 8268 	bmi.w	4045b2 <_svfprintf_r+0x872>
  4040e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4040e4:	990e      	ldr	r1, [sp, #56]	; 0x38
  4040e6:	f8c8 6000 	str.w	r6, [r8]
  4040ea:	3301      	adds	r3, #1
  4040ec:	440c      	add	r4, r1
  4040ee:	2b07      	cmp	r3, #7
  4040f0:	9427      	str	r4, [sp, #156]	; 0x9c
  4040f2:	f8c8 1004 	str.w	r1, [r8, #4]
  4040f6:	9326      	str	r3, [sp, #152]	; 0x98
  4040f8:	f300 834d 	bgt.w	404796 <_svfprintf_r+0xa56>
  4040fc:	f108 0808 	add.w	r8, r8, #8
  404100:	9b07      	ldr	r3, [sp, #28]
  404102:	075b      	lsls	r3, r3, #29
  404104:	d53a      	bpl.n	40417c <_svfprintf_r+0x43c>
  404106:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404108:	9a08      	ldr	r2, [sp, #32]
  40410a:	1a9d      	subs	r5, r3, r2
  40410c:	2d00      	cmp	r5, #0
  40410e:	dd35      	ble.n	40417c <_svfprintf_r+0x43c>
  404110:	2d10      	cmp	r5, #16
  404112:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404114:	dd20      	ble.n	404158 <_svfprintf_r+0x418>
  404116:	2610      	movs	r6, #16
  404118:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40411a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40411e:	e004      	b.n	40412a <_svfprintf_r+0x3ea>
  404120:	3d10      	subs	r5, #16
  404122:	2d10      	cmp	r5, #16
  404124:	f108 0808 	add.w	r8, r8, #8
  404128:	dd16      	ble.n	404158 <_svfprintf_r+0x418>
  40412a:	3301      	adds	r3, #1
  40412c:	4a5e      	ldr	r2, [pc, #376]	; (4042a8 <_svfprintf_r+0x568>)
  40412e:	9326      	str	r3, [sp, #152]	; 0x98
  404130:	3410      	adds	r4, #16
  404132:	2b07      	cmp	r3, #7
  404134:	9427      	str	r4, [sp, #156]	; 0x9c
  404136:	e888 0044 	stmia.w	r8, {r2, r6}
  40413a:	ddf1      	ble.n	404120 <_svfprintf_r+0x3e0>
  40413c:	aa25      	add	r2, sp, #148	; 0x94
  40413e:	4659      	mov	r1, fp
  404140:	4638      	mov	r0, r7
  404142:	f003 f80b 	bl	40715c <__ssprint_r>
  404146:	2800      	cmp	r0, #0
  404148:	f47f aecc 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  40414c:	3d10      	subs	r5, #16
  40414e:	2d10      	cmp	r5, #16
  404150:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404152:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404154:	46c8      	mov	r8, r9
  404156:	dce8      	bgt.n	40412a <_svfprintf_r+0x3ea>
  404158:	3301      	adds	r3, #1
  40415a:	4a53      	ldr	r2, [pc, #332]	; (4042a8 <_svfprintf_r+0x568>)
  40415c:	9326      	str	r3, [sp, #152]	; 0x98
  40415e:	442c      	add	r4, r5
  404160:	2b07      	cmp	r3, #7
  404162:	9427      	str	r4, [sp, #156]	; 0x9c
  404164:	e888 0024 	stmia.w	r8, {r2, r5}
  404168:	dd08      	ble.n	40417c <_svfprintf_r+0x43c>
  40416a:	aa25      	add	r2, sp, #148	; 0x94
  40416c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40416e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404170:	f002 fff4 	bl	40715c <__ssprint_r>
  404174:	2800      	cmp	r0, #0
  404176:	f47f aeb5 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  40417a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40417c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40417e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404180:	9908      	ldr	r1, [sp, #32]
  404182:	428a      	cmp	r2, r1
  404184:	bfac      	ite	ge
  404186:	189b      	addge	r3, r3, r2
  404188:	185b      	addlt	r3, r3, r1
  40418a:	9309      	str	r3, [sp, #36]	; 0x24
  40418c:	2c00      	cmp	r4, #0
  40418e:	f040 830d 	bne.w	4047ac <_svfprintf_r+0xa6c>
  404192:	2300      	movs	r3, #0
  404194:	9326      	str	r3, [sp, #152]	; 0x98
  404196:	46c8      	mov	r8, r9
  404198:	e5f9      	b.n	403d8e <_svfprintf_r+0x4e>
  40419a:	9311      	str	r3, [sp, #68]	; 0x44
  40419c:	f01b 0320 	ands.w	r3, fp, #32
  4041a0:	f040 81e3 	bne.w	40456a <_svfprintf_r+0x82a>
  4041a4:	f01b 0210 	ands.w	r2, fp, #16
  4041a8:	f040 842e 	bne.w	404a08 <_svfprintf_r+0xcc8>
  4041ac:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4041b0:	f000 842a 	beq.w	404a08 <_svfprintf_r+0xcc8>
  4041b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4041b6:	4613      	mov	r3, r2
  4041b8:	460a      	mov	r2, r1
  4041ba:	3204      	adds	r2, #4
  4041bc:	880c      	ldrh	r4, [r1, #0]
  4041be:	920f      	str	r2, [sp, #60]	; 0x3c
  4041c0:	2500      	movs	r5, #0
  4041c2:	e6b0      	b.n	403f26 <_svfprintf_r+0x1e6>
  4041c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4041c6:	9311      	str	r3, [sp, #68]	; 0x44
  4041c8:	6816      	ldr	r6, [r2, #0]
  4041ca:	2400      	movs	r4, #0
  4041cc:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4041d0:	1d15      	adds	r5, r2, #4
  4041d2:	2e00      	cmp	r6, #0
  4041d4:	f000 86a7 	beq.w	404f26 <_svfprintf_r+0x11e6>
  4041d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4041da:	1c53      	adds	r3, r2, #1
  4041dc:	f000 8609 	beq.w	404df2 <_svfprintf_r+0x10b2>
  4041e0:	4621      	mov	r1, r4
  4041e2:	4630      	mov	r0, r6
  4041e4:	f002 fa8c 	bl	406700 <memchr>
  4041e8:	2800      	cmp	r0, #0
  4041ea:	f000 86e1 	beq.w	404fb0 <_svfprintf_r+0x1270>
  4041ee:	1b83      	subs	r3, r0, r6
  4041f0:	930e      	str	r3, [sp, #56]	; 0x38
  4041f2:	940a      	str	r4, [sp, #40]	; 0x28
  4041f4:	950f      	str	r5, [sp, #60]	; 0x3c
  4041f6:	f8cd b01c 	str.w	fp, [sp, #28]
  4041fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4041fe:	9308      	str	r3, [sp, #32]
  404200:	9412      	str	r4, [sp, #72]	; 0x48
  404202:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404206:	e6b3      	b.n	403f70 <_svfprintf_r+0x230>
  404208:	f89a 3000 	ldrb.w	r3, [sl]
  40420c:	2201      	movs	r2, #1
  40420e:	212b      	movs	r1, #43	; 0x2b
  404210:	e5ee      	b.n	403df0 <_svfprintf_r+0xb0>
  404212:	f04b 0b20 	orr.w	fp, fp, #32
  404216:	f89a 3000 	ldrb.w	r3, [sl]
  40421a:	e5e9      	b.n	403df0 <_svfprintf_r+0xb0>
  40421c:	9311      	str	r3, [sp, #68]	; 0x44
  40421e:	2a00      	cmp	r2, #0
  404220:	f040 8795 	bne.w	40514e <_svfprintf_r+0x140e>
  404224:	4b22      	ldr	r3, [pc, #136]	; (4042b0 <_svfprintf_r+0x570>)
  404226:	9318      	str	r3, [sp, #96]	; 0x60
  404228:	f01b 0f20 	tst.w	fp, #32
  40422c:	f040 8111 	bne.w	404452 <_svfprintf_r+0x712>
  404230:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404232:	f01b 0f10 	tst.w	fp, #16
  404236:	4613      	mov	r3, r2
  404238:	f040 83e1 	bne.w	4049fe <_svfprintf_r+0xcbe>
  40423c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404240:	f000 83dd 	beq.w	4049fe <_svfprintf_r+0xcbe>
  404244:	3304      	adds	r3, #4
  404246:	8814      	ldrh	r4, [r2, #0]
  404248:	930f      	str	r3, [sp, #60]	; 0x3c
  40424a:	2500      	movs	r5, #0
  40424c:	f01b 0f01 	tst.w	fp, #1
  404250:	f000 810c 	beq.w	40446c <_svfprintf_r+0x72c>
  404254:	ea54 0305 	orrs.w	r3, r4, r5
  404258:	f000 8108 	beq.w	40446c <_svfprintf_r+0x72c>
  40425c:	2330      	movs	r3, #48	; 0x30
  40425e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  404262:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  404266:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40426a:	f04b 0b02 	orr.w	fp, fp, #2
  40426e:	2302      	movs	r3, #2
  404270:	e659      	b.n	403f26 <_svfprintf_r+0x1e6>
  404272:	f89a 3000 	ldrb.w	r3, [sl]
  404276:	2900      	cmp	r1, #0
  404278:	f47f adba 	bne.w	403df0 <_svfprintf_r+0xb0>
  40427c:	2201      	movs	r2, #1
  40427e:	2120      	movs	r1, #32
  404280:	e5b6      	b.n	403df0 <_svfprintf_r+0xb0>
  404282:	f04b 0b01 	orr.w	fp, fp, #1
  404286:	f89a 3000 	ldrb.w	r3, [sl]
  40428a:	e5b1      	b.n	403df0 <_svfprintf_r+0xb0>
  40428c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40428e:	6823      	ldr	r3, [r4, #0]
  404290:	930d      	str	r3, [sp, #52]	; 0x34
  404292:	4618      	mov	r0, r3
  404294:	2800      	cmp	r0, #0
  404296:	4623      	mov	r3, r4
  404298:	f103 0304 	add.w	r3, r3, #4
  40429c:	f6ff ae0a 	blt.w	403eb4 <_svfprintf_r+0x174>
  4042a0:	930f      	str	r3, [sp, #60]	; 0x3c
  4042a2:	f89a 3000 	ldrb.w	r3, [sl]
  4042a6:	e5a3      	b.n	403df0 <_svfprintf_r+0xb0>
  4042a8:	004090fc 	.word	0x004090fc
  4042ac:	0040910c 	.word	0x0040910c
  4042b0:	004090dc 	.word	0x004090dc
  4042b4:	f04b 0b10 	orr.w	fp, fp, #16
  4042b8:	f01b 0f20 	tst.w	fp, #32
  4042bc:	9311      	str	r3, [sp, #68]	; 0x44
  4042be:	f43f ae23 	beq.w	403f08 <_svfprintf_r+0x1c8>
  4042c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4042c4:	3507      	adds	r5, #7
  4042c6:	f025 0307 	bic.w	r3, r5, #7
  4042ca:	f103 0208 	add.w	r2, r3, #8
  4042ce:	e9d3 4500 	ldrd	r4, r5, [r3]
  4042d2:	920f      	str	r2, [sp, #60]	; 0x3c
  4042d4:	2301      	movs	r3, #1
  4042d6:	e626      	b.n	403f26 <_svfprintf_r+0x1e6>
  4042d8:	f89a 3000 	ldrb.w	r3, [sl]
  4042dc:	2b2a      	cmp	r3, #42	; 0x2a
  4042de:	f10a 0401 	add.w	r4, sl, #1
  4042e2:	f000 8727 	beq.w	405134 <_svfprintf_r+0x13f4>
  4042e6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4042ea:	2809      	cmp	r0, #9
  4042ec:	46a2      	mov	sl, r4
  4042ee:	f200 86ad 	bhi.w	40504c <_svfprintf_r+0x130c>
  4042f2:	2300      	movs	r3, #0
  4042f4:	461c      	mov	r4, r3
  4042f6:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4042fa:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4042fe:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  404302:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404306:	2809      	cmp	r0, #9
  404308:	d9f5      	bls.n	4042f6 <_svfprintf_r+0x5b6>
  40430a:	940a      	str	r4, [sp, #40]	; 0x28
  40430c:	e572      	b.n	403df4 <_svfprintf_r+0xb4>
  40430e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  404312:	f89a 3000 	ldrb.w	r3, [sl]
  404316:	e56b      	b.n	403df0 <_svfprintf_r+0xb0>
  404318:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40431c:	f89a 3000 	ldrb.w	r3, [sl]
  404320:	e566      	b.n	403df0 <_svfprintf_r+0xb0>
  404322:	f89a 3000 	ldrb.w	r3, [sl]
  404326:	2b6c      	cmp	r3, #108	; 0x6c
  404328:	bf03      	ittte	eq
  40432a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40432e:	f04b 0b20 	orreq.w	fp, fp, #32
  404332:	f10a 0a01 	addeq.w	sl, sl, #1
  404336:	f04b 0b10 	orrne.w	fp, fp, #16
  40433a:	e559      	b.n	403df0 <_svfprintf_r+0xb0>
  40433c:	2a00      	cmp	r2, #0
  40433e:	f040 8711 	bne.w	405164 <_svfprintf_r+0x1424>
  404342:	f01b 0f20 	tst.w	fp, #32
  404346:	f040 84f9 	bne.w	404d3c <_svfprintf_r+0xffc>
  40434a:	f01b 0f10 	tst.w	fp, #16
  40434e:	f040 84ac 	bne.w	404caa <_svfprintf_r+0xf6a>
  404352:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404356:	f000 84a8 	beq.w	404caa <_svfprintf_r+0xf6a>
  40435a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40435c:	6813      	ldr	r3, [r2, #0]
  40435e:	3204      	adds	r2, #4
  404360:	920f      	str	r2, [sp, #60]	; 0x3c
  404362:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  404366:	801a      	strh	r2, [r3, #0]
  404368:	e511      	b.n	403d8e <_svfprintf_r+0x4e>
  40436a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40436c:	4bb3      	ldr	r3, [pc, #716]	; (40463c <_svfprintf_r+0x8fc>)
  40436e:	680c      	ldr	r4, [r1, #0]
  404370:	9318      	str	r3, [sp, #96]	; 0x60
  404372:	2230      	movs	r2, #48	; 0x30
  404374:	2378      	movs	r3, #120	; 0x78
  404376:	3104      	adds	r1, #4
  404378:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  40437c:	9311      	str	r3, [sp, #68]	; 0x44
  40437e:	f04b 0b02 	orr.w	fp, fp, #2
  404382:	910f      	str	r1, [sp, #60]	; 0x3c
  404384:	2500      	movs	r5, #0
  404386:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40438a:	2302      	movs	r3, #2
  40438c:	e5cb      	b.n	403f26 <_svfprintf_r+0x1e6>
  40438e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404390:	9311      	str	r3, [sp, #68]	; 0x44
  404392:	680a      	ldr	r2, [r1, #0]
  404394:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  404398:	2300      	movs	r3, #0
  40439a:	460a      	mov	r2, r1
  40439c:	461f      	mov	r7, r3
  40439e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4043a2:	3204      	adds	r2, #4
  4043a4:	2301      	movs	r3, #1
  4043a6:	9308      	str	r3, [sp, #32]
  4043a8:	f8cd b01c 	str.w	fp, [sp, #28]
  4043ac:	970a      	str	r7, [sp, #40]	; 0x28
  4043ae:	9712      	str	r7, [sp, #72]	; 0x48
  4043b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4043b2:	930e      	str	r3, [sp, #56]	; 0x38
  4043b4:	ae28      	add	r6, sp, #160	; 0xa0
  4043b6:	e5df      	b.n	403f78 <_svfprintf_r+0x238>
  4043b8:	9311      	str	r3, [sp, #68]	; 0x44
  4043ba:	2a00      	cmp	r2, #0
  4043bc:	f040 86ea 	bne.w	405194 <_svfprintf_r+0x1454>
  4043c0:	f01b 0f20 	tst.w	fp, #32
  4043c4:	d15d      	bne.n	404482 <_svfprintf_r+0x742>
  4043c6:	f01b 0f10 	tst.w	fp, #16
  4043ca:	f040 8308 	bne.w	4049de <_svfprintf_r+0xc9e>
  4043ce:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4043d2:	f000 8304 	beq.w	4049de <_svfprintf_r+0xc9e>
  4043d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4043d8:	f9b1 4000 	ldrsh.w	r4, [r1]
  4043dc:	3104      	adds	r1, #4
  4043de:	17e5      	asrs	r5, r4, #31
  4043e0:	4622      	mov	r2, r4
  4043e2:	462b      	mov	r3, r5
  4043e4:	910f      	str	r1, [sp, #60]	; 0x3c
  4043e6:	2a00      	cmp	r2, #0
  4043e8:	f173 0300 	sbcs.w	r3, r3, #0
  4043ec:	db58      	blt.n	4044a0 <_svfprintf_r+0x760>
  4043ee:	990a      	ldr	r1, [sp, #40]	; 0x28
  4043f0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4043f4:	1c4a      	adds	r2, r1, #1
  4043f6:	f04f 0301 	mov.w	r3, #1
  4043fa:	f47f ad9b 	bne.w	403f34 <_svfprintf_r+0x1f4>
  4043fe:	ea54 0205 	orrs.w	r2, r4, r5
  404402:	f000 81df 	beq.w	4047c4 <_svfprintf_r+0xa84>
  404406:	f8cd b01c 	str.w	fp, [sp, #28]
  40440a:	2b01      	cmp	r3, #1
  40440c:	f000 827b 	beq.w	404906 <_svfprintf_r+0xbc6>
  404410:	2b02      	cmp	r3, #2
  404412:	f040 8206 	bne.w	404822 <_svfprintf_r+0xae2>
  404416:	9818      	ldr	r0, [sp, #96]	; 0x60
  404418:	464e      	mov	r6, r9
  40441a:	0923      	lsrs	r3, r4, #4
  40441c:	f004 010f 	and.w	r1, r4, #15
  404420:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  404424:	092a      	lsrs	r2, r5, #4
  404426:	461c      	mov	r4, r3
  404428:	4615      	mov	r5, r2
  40442a:	5c43      	ldrb	r3, [r0, r1]
  40442c:	f806 3d01 	strb.w	r3, [r6, #-1]!
  404430:	ea54 0305 	orrs.w	r3, r4, r5
  404434:	d1f1      	bne.n	40441a <_svfprintf_r+0x6da>
  404436:	eba9 0306 	sub.w	r3, r9, r6
  40443a:	930e      	str	r3, [sp, #56]	; 0x38
  40443c:	e590      	b.n	403f60 <_svfprintf_r+0x220>
  40443e:	9311      	str	r3, [sp, #68]	; 0x44
  404440:	2a00      	cmp	r2, #0
  404442:	f040 86a3 	bne.w	40518c <_svfprintf_r+0x144c>
  404446:	4b7e      	ldr	r3, [pc, #504]	; (404640 <_svfprintf_r+0x900>)
  404448:	9318      	str	r3, [sp, #96]	; 0x60
  40444a:	f01b 0f20 	tst.w	fp, #32
  40444e:	f43f aeef 	beq.w	404230 <_svfprintf_r+0x4f0>
  404452:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404454:	3507      	adds	r5, #7
  404456:	f025 0307 	bic.w	r3, r5, #7
  40445a:	f103 0208 	add.w	r2, r3, #8
  40445e:	f01b 0f01 	tst.w	fp, #1
  404462:	920f      	str	r2, [sp, #60]	; 0x3c
  404464:	e9d3 4500 	ldrd	r4, r5, [r3]
  404468:	f47f aef4 	bne.w	404254 <_svfprintf_r+0x514>
  40446c:	2302      	movs	r3, #2
  40446e:	e55a      	b.n	403f26 <_svfprintf_r+0x1e6>
  404470:	9311      	str	r3, [sp, #68]	; 0x44
  404472:	2a00      	cmp	r2, #0
  404474:	f040 8686 	bne.w	405184 <_svfprintf_r+0x1444>
  404478:	f04b 0b10 	orr.w	fp, fp, #16
  40447c:	f01b 0f20 	tst.w	fp, #32
  404480:	d0a1      	beq.n	4043c6 <_svfprintf_r+0x686>
  404482:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404484:	3507      	adds	r5, #7
  404486:	f025 0507 	bic.w	r5, r5, #7
  40448a:	e9d5 2300 	ldrd	r2, r3, [r5]
  40448e:	2a00      	cmp	r2, #0
  404490:	f105 0108 	add.w	r1, r5, #8
  404494:	461d      	mov	r5, r3
  404496:	f173 0300 	sbcs.w	r3, r3, #0
  40449a:	910f      	str	r1, [sp, #60]	; 0x3c
  40449c:	4614      	mov	r4, r2
  40449e:	daa6      	bge.n	4043ee <_svfprintf_r+0x6ae>
  4044a0:	272d      	movs	r7, #45	; 0x2d
  4044a2:	4264      	negs	r4, r4
  4044a4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4044a8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4044ac:	2301      	movs	r3, #1
  4044ae:	e53d      	b.n	403f2c <_svfprintf_r+0x1ec>
  4044b0:	9311      	str	r3, [sp, #68]	; 0x44
  4044b2:	2a00      	cmp	r2, #0
  4044b4:	f040 8662 	bne.w	40517c <_svfprintf_r+0x143c>
  4044b8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4044ba:	3507      	adds	r5, #7
  4044bc:	f025 0307 	bic.w	r3, r5, #7
  4044c0:	f103 0208 	add.w	r2, r3, #8
  4044c4:	920f      	str	r2, [sp, #60]	; 0x3c
  4044c6:	681a      	ldr	r2, [r3, #0]
  4044c8:	9215      	str	r2, [sp, #84]	; 0x54
  4044ca:	685b      	ldr	r3, [r3, #4]
  4044cc:	9314      	str	r3, [sp, #80]	; 0x50
  4044ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4044d0:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4044d2:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4044d6:	4628      	mov	r0, r5
  4044d8:	4621      	mov	r1, r4
  4044da:	f04f 32ff 	mov.w	r2, #4294967295
  4044de:	4b59      	ldr	r3, [pc, #356]	; (404644 <_svfprintf_r+0x904>)
  4044e0:	f003 ff02 	bl	4082e8 <__aeabi_dcmpun>
  4044e4:	2800      	cmp	r0, #0
  4044e6:	f040 834a 	bne.w	404b7e <_svfprintf_r+0xe3e>
  4044ea:	4628      	mov	r0, r5
  4044ec:	4621      	mov	r1, r4
  4044ee:	f04f 32ff 	mov.w	r2, #4294967295
  4044f2:	4b54      	ldr	r3, [pc, #336]	; (404644 <_svfprintf_r+0x904>)
  4044f4:	f003 feda 	bl	4082ac <__aeabi_dcmple>
  4044f8:	2800      	cmp	r0, #0
  4044fa:	f040 8340 	bne.w	404b7e <_svfprintf_r+0xe3e>
  4044fe:	a815      	add	r0, sp, #84	; 0x54
  404500:	c80d      	ldmia	r0, {r0, r2, r3}
  404502:	9914      	ldr	r1, [sp, #80]	; 0x50
  404504:	f003 fec8 	bl	408298 <__aeabi_dcmplt>
  404508:	2800      	cmp	r0, #0
  40450a:	f040 8530 	bne.w	404f6e <_svfprintf_r+0x122e>
  40450e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404512:	4e4d      	ldr	r6, [pc, #308]	; (404648 <_svfprintf_r+0x908>)
  404514:	4b4d      	ldr	r3, [pc, #308]	; (40464c <_svfprintf_r+0x90c>)
  404516:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40451a:	9007      	str	r0, [sp, #28]
  40451c:	9811      	ldr	r0, [sp, #68]	; 0x44
  40451e:	2203      	movs	r2, #3
  404520:	2100      	movs	r1, #0
  404522:	9208      	str	r2, [sp, #32]
  404524:	910a      	str	r1, [sp, #40]	; 0x28
  404526:	2847      	cmp	r0, #71	; 0x47
  404528:	bfd8      	it	le
  40452a:	461e      	movle	r6, r3
  40452c:	920e      	str	r2, [sp, #56]	; 0x38
  40452e:	9112      	str	r1, [sp, #72]	; 0x48
  404530:	e51e      	b.n	403f70 <_svfprintf_r+0x230>
  404532:	f04b 0b08 	orr.w	fp, fp, #8
  404536:	f89a 3000 	ldrb.w	r3, [sl]
  40453a:	e459      	b.n	403df0 <_svfprintf_r+0xb0>
  40453c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404540:	2300      	movs	r3, #0
  404542:	461c      	mov	r4, r3
  404544:	f81a 3b01 	ldrb.w	r3, [sl], #1
  404548:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40454c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  404550:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404554:	2809      	cmp	r0, #9
  404556:	d9f5      	bls.n	404544 <_svfprintf_r+0x804>
  404558:	940d      	str	r4, [sp, #52]	; 0x34
  40455a:	e44b      	b.n	403df4 <_svfprintf_r+0xb4>
  40455c:	f04b 0b10 	orr.w	fp, fp, #16
  404560:	9311      	str	r3, [sp, #68]	; 0x44
  404562:	f01b 0320 	ands.w	r3, fp, #32
  404566:	f43f ae1d 	beq.w	4041a4 <_svfprintf_r+0x464>
  40456a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40456c:	3507      	adds	r5, #7
  40456e:	f025 0307 	bic.w	r3, r5, #7
  404572:	f103 0208 	add.w	r2, r3, #8
  404576:	e9d3 4500 	ldrd	r4, r5, [r3]
  40457a:	920f      	str	r2, [sp, #60]	; 0x3c
  40457c:	2300      	movs	r3, #0
  40457e:	e4d2      	b.n	403f26 <_svfprintf_r+0x1e6>
  404580:	9311      	str	r3, [sp, #68]	; 0x44
  404582:	2a00      	cmp	r2, #0
  404584:	f040 85e7 	bne.w	405156 <_svfprintf_r+0x1416>
  404588:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40458a:	2a00      	cmp	r2, #0
  40458c:	f43f aca3 	beq.w	403ed6 <_svfprintf_r+0x196>
  404590:	2300      	movs	r3, #0
  404592:	2101      	movs	r1, #1
  404594:	461f      	mov	r7, r3
  404596:	9108      	str	r1, [sp, #32]
  404598:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40459c:	f8cd b01c 	str.w	fp, [sp, #28]
  4045a0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4045a4:	930a      	str	r3, [sp, #40]	; 0x28
  4045a6:	9312      	str	r3, [sp, #72]	; 0x48
  4045a8:	910e      	str	r1, [sp, #56]	; 0x38
  4045aa:	ae28      	add	r6, sp, #160	; 0xa0
  4045ac:	e4e4      	b.n	403f78 <_svfprintf_r+0x238>
  4045ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4045b0:	e534      	b.n	40401c <_svfprintf_r+0x2dc>
  4045b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4045b4:	2b65      	cmp	r3, #101	; 0x65
  4045b6:	f340 80a7 	ble.w	404708 <_svfprintf_r+0x9c8>
  4045ba:	a815      	add	r0, sp, #84	; 0x54
  4045bc:	c80d      	ldmia	r0, {r0, r2, r3}
  4045be:	9914      	ldr	r1, [sp, #80]	; 0x50
  4045c0:	f003 fe60 	bl	408284 <__aeabi_dcmpeq>
  4045c4:	2800      	cmp	r0, #0
  4045c6:	f000 8150 	beq.w	40486a <_svfprintf_r+0xb2a>
  4045ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4045cc:	4a20      	ldr	r2, [pc, #128]	; (404650 <_svfprintf_r+0x910>)
  4045ce:	f8c8 2000 	str.w	r2, [r8]
  4045d2:	3301      	adds	r3, #1
  4045d4:	3401      	adds	r4, #1
  4045d6:	2201      	movs	r2, #1
  4045d8:	2b07      	cmp	r3, #7
  4045da:	9427      	str	r4, [sp, #156]	; 0x9c
  4045dc:	9326      	str	r3, [sp, #152]	; 0x98
  4045de:	f8c8 2004 	str.w	r2, [r8, #4]
  4045e2:	f300 836a 	bgt.w	404cba <_svfprintf_r+0xf7a>
  4045e6:	f108 0808 	add.w	r8, r8, #8
  4045ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4045ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4045ee:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4045f0:	4293      	cmp	r3, r2
  4045f2:	db03      	blt.n	4045fc <_svfprintf_r+0x8bc>
  4045f4:	9b07      	ldr	r3, [sp, #28]
  4045f6:	07dd      	lsls	r5, r3, #31
  4045f8:	f57f ad82 	bpl.w	404100 <_svfprintf_r+0x3c0>
  4045fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4045fe:	9919      	ldr	r1, [sp, #100]	; 0x64
  404600:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  404602:	f8c8 2000 	str.w	r2, [r8]
  404606:	3301      	adds	r3, #1
  404608:	440c      	add	r4, r1
  40460a:	2b07      	cmp	r3, #7
  40460c:	f8c8 1004 	str.w	r1, [r8, #4]
  404610:	9427      	str	r4, [sp, #156]	; 0x9c
  404612:	9326      	str	r3, [sp, #152]	; 0x98
  404614:	f300 839e 	bgt.w	404d54 <_svfprintf_r+0x1014>
  404618:	f108 0808 	add.w	r8, r8, #8
  40461c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40461e:	1e5e      	subs	r6, r3, #1
  404620:	2e00      	cmp	r6, #0
  404622:	f77f ad6d 	ble.w	404100 <_svfprintf_r+0x3c0>
  404626:	2e10      	cmp	r6, #16
  404628:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40462a:	4d0a      	ldr	r5, [pc, #40]	; (404654 <_svfprintf_r+0x914>)
  40462c:	f340 81f5 	ble.w	404a1a <_svfprintf_r+0xcda>
  404630:	4622      	mov	r2, r4
  404632:	2710      	movs	r7, #16
  404634:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404638:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40463a:	e013      	b.n	404664 <_svfprintf_r+0x924>
  40463c:	004090dc 	.word	0x004090dc
  404640:	004090c8 	.word	0x004090c8
  404644:	7fefffff 	.word	0x7fefffff
  404648:	004090bc 	.word	0x004090bc
  40464c:	004090b8 	.word	0x004090b8
  404650:	004090f8 	.word	0x004090f8
  404654:	0040910c 	.word	0x0040910c
  404658:	f108 0808 	add.w	r8, r8, #8
  40465c:	3e10      	subs	r6, #16
  40465e:	2e10      	cmp	r6, #16
  404660:	f340 81da 	ble.w	404a18 <_svfprintf_r+0xcd8>
  404664:	3301      	adds	r3, #1
  404666:	3210      	adds	r2, #16
  404668:	2b07      	cmp	r3, #7
  40466a:	9227      	str	r2, [sp, #156]	; 0x9c
  40466c:	9326      	str	r3, [sp, #152]	; 0x98
  40466e:	e888 00a0 	stmia.w	r8, {r5, r7}
  404672:	ddf1      	ble.n	404658 <_svfprintf_r+0x918>
  404674:	aa25      	add	r2, sp, #148	; 0x94
  404676:	4621      	mov	r1, r4
  404678:	4658      	mov	r0, fp
  40467a:	f002 fd6f 	bl	40715c <__ssprint_r>
  40467e:	2800      	cmp	r0, #0
  404680:	f47f ac30 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404684:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404686:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404688:	46c8      	mov	r8, r9
  40468a:	e7e7      	b.n	40465c <_svfprintf_r+0x91c>
  40468c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40468e:	9a08      	ldr	r2, [sp, #32]
  404690:	1a9f      	subs	r7, r3, r2
  404692:	2f00      	cmp	r7, #0
  404694:	f77f ace5 	ble.w	404062 <_svfprintf_r+0x322>
  404698:	2f10      	cmp	r7, #16
  40469a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40469c:	4db6      	ldr	r5, [pc, #728]	; (404978 <_svfprintf_r+0xc38>)
  40469e:	dd27      	ble.n	4046f0 <_svfprintf_r+0x9b0>
  4046a0:	4642      	mov	r2, r8
  4046a2:	4621      	mov	r1, r4
  4046a4:	46b0      	mov	r8, r6
  4046a6:	f04f 0b10 	mov.w	fp, #16
  4046aa:	462e      	mov	r6, r5
  4046ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4046ae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4046b0:	e004      	b.n	4046bc <_svfprintf_r+0x97c>
  4046b2:	3f10      	subs	r7, #16
  4046b4:	2f10      	cmp	r7, #16
  4046b6:	f102 0208 	add.w	r2, r2, #8
  4046ba:	dd15      	ble.n	4046e8 <_svfprintf_r+0x9a8>
  4046bc:	3301      	adds	r3, #1
  4046be:	3110      	adds	r1, #16
  4046c0:	2b07      	cmp	r3, #7
  4046c2:	9127      	str	r1, [sp, #156]	; 0x9c
  4046c4:	9326      	str	r3, [sp, #152]	; 0x98
  4046c6:	e882 0840 	stmia.w	r2, {r6, fp}
  4046ca:	ddf2      	ble.n	4046b2 <_svfprintf_r+0x972>
  4046cc:	aa25      	add	r2, sp, #148	; 0x94
  4046ce:	4629      	mov	r1, r5
  4046d0:	4620      	mov	r0, r4
  4046d2:	f002 fd43 	bl	40715c <__ssprint_r>
  4046d6:	2800      	cmp	r0, #0
  4046d8:	f47f ac04 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4046dc:	3f10      	subs	r7, #16
  4046de:	2f10      	cmp	r7, #16
  4046e0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4046e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4046e4:	464a      	mov	r2, r9
  4046e6:	dce9      	bgt.n	4046bc <_svfprintf_r+0x97c>
  4046e8:	4635      	mov	r5, r6
  4046ea:	460c      	mov	r4, r1
  4046ec:	4646      	mov	r6, r8
  4046ee:	4690      	mov	r8, r2
  4046f0:	3301      	adds	r3, #1
  4046f2:	443c      	add	r4, r7
  4046f4:	2b07      	cmp	r3, #7
  4046f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4046f8:	9326      	str	r3, [sp, #152]	; 0x98
  4046fa:	e888 00a0 	stmia.w	r8, {r5, r7}
  4046fe:	f300 8232 	bgt.w	404b66 <_svfprintf_r+0xe26>
  404702:	f108 0808 	add.w	r8, r8, #8
  404706:	e4ac      	b.n	404062 <_svfprintf_r+0x322>
  404708:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40470a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40470c:	2b01      	cmp	r3, #1
  40470e:	f340 81fe 	ble.w	404b0e <_svfprintf_r+0xdce>
  404712:	3701      	adds	r7, #1
  404714:	3401      	adds	r4, #1
  404716:	2301      	movs	r3, #1
  404718:	2f07      	cmp	r7, #7
  40471a:	9427      	str	r4, [sp, #156]	; 0x9c
  40471c:	9726      	str	r7, [sp, #152]	; 0x98
  40471e:	f8c8 6000 	str.w	r6, [r8]
  404722:	f8c8 3004 	str.w	r3, [r8, #4]
  404726:	f300 8203 	bgt.w	404b30 <_svfprintf_r+0xdf0>
  40472a:	f108 0808 	add.w	r8, r8, #8
  40472e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404730:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  404732:	f8c8 3000 	str.w	r3, [r8]
  404736:	3701      	adds	r7, #1
  404738:	4414      	add	r4, r2
  40473a:	2f07      	cmp	r7, #7
  40473c:	9427      	str	r4, [sp, #156]	; 0x9c
  40473e:	9726      	str	r7, [sp, #152]	; 0x98
  404740:	f8c8 2004 	str.w	r2, [r8, #4]
  404744:	f300 8200 	bgt.w	404b48 <_svfprintf_r+0xe08>
  404748:	f108 0808 	add.w	r8, r8, #8
  40474c:	a815      	add	r0, sp, #84	; 0x54
  40474e:	c80d      	ldmia	r0, {r0, r2, r3}
  404750:	9914      	ldr	r1, [sp, #80]	; 0x50
  404752:	f003 fd97 	bl	408284 <__aeabi_dcmpeq>
  404756:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404758:	2800      	cmp	r0, #0
  40475a:	f040 8101 	bne.w	404960 <_svfprintf_r+0xc20>
  40475e:	3b01      	subs	r3, #1
  404760:	3701      	adds	r7, #1
  404762:	3601      	adds	r6, #1
  404764:	441c      	add	r4, r3
  404766:	2f07      	cmp	r7, #7
  404768:	9726      	str	r7, [sp, #152]	; 0x98
  40476a:	9427      	str	r4, [sp, #156]	; 0x9c
  40476c:	f8c8 6000 	str.w	r6, [r8]
  404770:	f8c8 3004 	str.w	r3, [r8, #4]
  404774:	f300 8127 	bgt.w	4049c6 <_svfprintf_r+0xc86>
  404778:	f108 0808 	add.w	r8, r8, #8
  40477c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  40477e:	f8c8 2004 	str.w	r2, [r8, #4]
  404782:	3701      	adds	r7, #1
  404784:	4414      	add	r4, r2
  404786:	ab21      	add	r3, sp, #132	; 0x84
  404788:	2f07      	cmp	r7, #7
  40478a:	9427      	str	r4, [sp, #156]	; 0x9c
  40478c:	9726      	str	r7, [sp, #152]	; 0x98
  40478e:	f8c8 3000 	str.w	r3, [r8]
  404792:	f77f acb3 	ble.w	4040fc <_svfprintf_r+0x3bc>
  404796:	aa25      	add	r2, sp, #148	; 0x94
  404798:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40479a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40479c:	f002 fcde 	bl	40715c <__ssprint_r>
  4047a0:	2800      	cmp	r0, #0
  4047a2:	f47f ab9f 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4047a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4047a8:	46c8      	mov	r8, r9
  4047aa:	e4a9      	b.n	404100 <_svfprintf_r+0x3c0>
  4047ac:	aa25      	add	r2, sp, #148	; 0x94
  4047ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4047b0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4047b2:	f002 fcd3 	bl	40715c <__ssprint_r>
  4047b6:	2800      	cmp	r0, #0
  4047b8:	f43f aceb 	beq.w	404192 <_svfprintf_r+0x452>
  4047bc:	f7ff bb92 	b.w	403ee4 <_svfprintf_r+0x1a4>
  4047c0:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4047c4:	2b01      	cmp	r3, #1
  4047c6:	f000 8134 	beq.w	404a32 <_svfprintf_r+0xcf2>
  4047ca:	2b02      	cmp	r3, #2
  4047cc:	d125      	bne.n	40481a <_svfprintf_r+0xada>
  4047ce:	f8cd b01c 	str.w	fp, [sp, #28]
  4047d2:	2400      	movs	r4, #0
  4047d4:	2500      	movs	r5, #0
  4047d6:	e61e      	b.n	404416 <_svfprintf_r+0x6d6>
  4047d8:	aa25      	add	r2, sp, #148	; 0x94
  4047da:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4047dc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4047de:	f002 fcbd 	bl	40715c <__ssprint_r>
  4047e2:	2800      	cmp	r0, #0
  4047e4:	f47f ab7e 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4047e8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4047ea:	46c8      	mov	r8, r9
  4047ec:	e475      	b.n	4040da <_svfprintf_r+0x39a>
  4047ee:	aa25      	add	r2, sp, #148	; 0x94
  4047f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4047f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4047f4:	f002 fcb2 	bl	40715c <__ssprint_r>
  4047f8:	2800      	cmp	r0, #0
  4047fa:	f47f ab73 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4047fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404800:	46c8      	mov	r8, r9
  404802:	e41b      	b.n	40403c <_svfprintf_r+0x2fc>
  404804:	aa25      	add	r2, sp, #148	; 0x94
  404806:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404808:	980c      	ldr	r0, [sp, #48]	; 0x30
  40480a:	f002 fca7 	bl	40715c <__ssprint_r>
  40480e:	2800      	cmp	r0, #0
  404810:	f47f ab68 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404814:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404816:	46c8      	mov	r8, r9
  404818:	e420      	b.n	40405c <_svfprintf_r+0x31c>
  40481a:	f8cd b01c 	str.w	fp, [sp, #28]
  40481e:	2400      	movs	r4, #0
  404820:	2500      	movs	r5, #0
  404822:	4649      	mov	r1, r9
  404824:	e000      	b.n	404828 <_svfprintf_r+0xae8>
  404826:	4631      	mov	r1, r6
  404828:	08e2      	lsrs	r2, r4, #3
  40482a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40482e:	08e8      	lsrs	r0, r5, #3
  404830:	f004 0307 	and.w	r3, r4, #7
  404834:	4605      	mov	r5, r0
  404836:	4614      	mov	r4, r2
  404838:	3330      	adds	r3, #48	; 0x30
  40483a:	ea54 0205 	orrs.w	r2, r4, r5
  40483e:	f801 3c01 	strb.w	r3, [r1, #-1]
  404842:	f101 36ff 	add.w	r6, r1, #4294967295
  404846:	d1ee      	bne.n	404826 <_svfprintf_r+0xae6>
  404848:	9a07      	ldr	r2, [sp, #28]
  40484a:	07d2      	lsls	r2, r2, #31
  40484c:	f57f adf3 	bpl.w	404436 <_svfprintf_r+0x6f6>
  404850:	2b30      	cmp	r3, #48	; 0x30
  404852:	f43f adf0 	beq.w	404436 <_svfprintf_r+0x6f6>
  404856:	3902      	subs	r1, #2
  404858:	2330      	movs	r3, #48	; 0x30
  40485a:	f806 3c01 	strb.w	r3, [r6, #-1]
  40485e:	eba9 0301 	sub.w	r3, r9, r1
  404862:	930e      	str	r3, [sp, #56]	; 0x38
  404864:	460e      	mov	r6, r1
  404866:	f7ff bb7b 	b.w	403f60 <_svfprintf_r+0x220>
  40486a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40486c:	2900      	cmp	r1, #0
  40486e:	f340 822e 	ble.w	404cce <_svfprintf_r+0xf8e>
  404872:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404874:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  404876:	4293      	cmp	r3, r2
  404878:	bfa8      	it	ge
  40487a:	4613      	movge	r3, r2
  40487c:	2b00      	cmp	r3, #0
  40487e:	461f      	mov	r7, r3
  404880:	dd0d      	ble.n	40489e <_svfprintf_r+0xb5e>
  404882:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404884:	f8c8 6000 	str.w	r6, [r8]
  404888:	3301      	adds	r3, #1
  40488a:	443c      	add	r4, r7
  40488c:	2b07      	cmp	r3, #7
  40488e:	9427      	str	r4, [sp, #156]	; 0x9c
  404890:	f8c8 7004 	str.w	r7, [r8, #4]
  404894:	9326      	str	r3, [sp, #152]	; 0x98
  404896:	f300 831f 	bgt.w	404ed8 <_svfprintf_r+0x1198>
  40489a:	f108 0808 	add.w	r8, r8, #8
  40489e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4048a0:	2f00      	cmp	r7, #0
  4048a2:	bfa8      	it	ge
  4048a4:	1bdb      	subge	r3, r3, r7
  4048a6:	2b00      	cmp	r3, #0
  4048a8:	461f      	mov	r7, r3
  4048aa:	f340 80d6 	ble.w	404a5a <_svfprintf_r+0xd1a>
  4048ae:	2f10      	cmp	r7, #16
  4048b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4048b2:	4d31      	ldr	r5, [pc, #196]	; (404978 <_svfprintf_r+0xc38>)
  4048b4:	f340 81ed 	ble.w	404c92 <_svfprintf_r+0xf52>
  4048b8:	4642      	mov	r2, r8
  4048ba:	4621      	mov	r1, r4
  4048bc:	46b0      	mov	r8, r6
  4048be:	f04f 0b10 	mov.w	fp, #16
  4048c2:	462e      	mov	r6, r5
  4048c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4048c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4048c8:	e004      	b.n	4048d4 <_svfprintf_r+0xb94>
  4048ca:	3208      	adds	r2, #8
  4048cc:	3f10      	subs	r7, #16
  4048ce:	2f10      	cmp	r7, #16
  4048d0:	f340 81db 	ble.w	404c8a <_svfprintf_r+0xf4a>
  4048d4:	3301      	adds	r3, #1
  4048d6:	3110      	adds	r1, #16
  4048d8:	2b07      	cmp	r3, #7
  4048da:	9127      	str	r1, [sp, #156]	; 0x9c
  4048dc:	9326      	str	r3, [sp, #152]	; 0x98
  4048de:	e882 0840 	stmia.w	r2, {r6, fp}
  4048e2:	ddf2      	ble.n	4048ca <_svfprintf_r+0xb8a>
  4048e4:	aa25      	add	r2, sp, #148	; 0x94
  4048e6:	4629      	mov	r1, r5
  4048e8:	4620      	mov	r0, r4
  4048ea:	f002 fc37 	bl	40715c <__ssprint_r>
  4048ee:	2800      	cmp	r0, #0
  4048f0:	f47f aaf8 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4048f4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4048f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4048f8:	464a      	mov	r2, r9
  4048fa:	e7e7      	b.n	4048cc <_svfprintf_r+0xb8c>
  4048fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4048fe:	930e      	str	r3, [sp, #56]	; 0x38
  404900:	464e      	mov	r6, r9
  404902:	f7ff bb2d 	b.w	403f60 <_svfprintf_r+0x220>
  404906:	2d00      	cmp	r5, #0
  404908:	bf08      	it	eq
  40490a:	2c0a      	cmpeq	r4, #10
  40490c:	f0c0 808f 	bcc.w	404a2e <_svfprintf_r+0xcee>
  404910:	464e      	mov	r6, r9
  404912:	4620      	mov	r0, r4
  404914:	4629      	mov	r1, r5
  404916:	220a      	movs	r2, #10
  404918:	2300      	movs	r3, #0
  40491a:	f7fe fd89 	bl	403430 <__aeabi_uldivmod>
  40491e:	3230      	adds	r2, #48	; 0x30
  404920:	f806 2d01 	strb.w	r2, [r6, #-1]!
  404924:	4620      	mov	r0, r4
  404926:	4629      	mov	r1, r5
  404928:	2300      	movs	r3, #0
  40492a:	220a      	movs	r2, #10
  40492c:	f7fe fd80 	bl	403430 <__aeabi_uldivmod>
  404930:	4604      	mov	r4, r0
  404932:	460d      	mov	r5, r1
  404934:	ea54 0305 	orrs.w	r3, r4, r5
  404938:	d1eb      	bne.n	404912 <_svfprintf_r+0xbd2>
  40493a:	eba9 0306 	sub.w	r3, r9, r6
  40493e:	930e      	str	r3, [sp, #56]	; 0x38
  404940:	f7ff bb0e 	b.w	403f60 <_svfprintf_r+0x220>
  404944:	aa25      	add	r2, sp, #148	; 0x94
  404946:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404948:	980c      	ldr	r0, [sp, #48]	; 0x30
  40494a:	f002 fc07 	bl	40715c <__ssprint_r>
  40494e:	2800      	cmp	r0, #0
  404950:	f47f aac8 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404954:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404958:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40495a:	46c8      	mov	r8, r9
  40495c:	f7ff bb5e 	b.w	40401c <_svfprintf_r+0x2dc>
  404960:	1e5e      	subs	r6, r3, #1
  404962:	2e00      	cmp	r6, #0
  404964:	f77f af0a 	ble.w	40477c <_svfprintf_r+0xa3c>
  404968:	2e10      	cmp	r6, #16
  40496a:	4d03      	ldr	r5, [pc, #12]	; (404978 <_svfprintf_r+0xc38>)
  40496c:	dd22      	ble.n	4049b4 <_svfprintf_r+0xc74>
  40496e:	4622      	mov	r2, r4
  404970:	f04f 0b10 	mov.w	fp, #16
  404974:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404976:	e006      	b.n	404986 <_svfprintf_r+0xc46>
  404978:	0040910c 	.word	0x0040910c
  40497c:	3e10      	subs	r6, #16
  40497e:	2e10      	cmp	r6, #16
  404980:	f108 0808 	add.w	r8, r8, #8
  404984:	dd15      	ble.n	4049b2 <_svfprintf_r+0xc72>
  404986:	3701      	adds	r7, #1
  404988:	3210      	adds	r2, #16
  40498a:	2f07      	cmp	r7, #7
  40498c:	9227      	str	r2, [sp, #156]	; 0x9c
  40498e:	9726      	str	r7, [sp, #152]	; 0x98
  404990:	e888 0820 	stmia.w	r8, {r5, fp}
  404994:	ddf2      	ble.n	40497c <_svfprintf_r+0xc3c>
  404996:	aa25      	add	r2, sp, #148	; 0x94
  404998:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40499a:	4620      	mov	r0, r4
  40499c:	f002 fbde 	bl	40715c <__ssprint_r>
  4049a0:	2800      	cmp	r0, #0
  4049a2:	f47f aa9f 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4049a6:	3e10      	subs	r6, #16
  4049a8:	2e10      	cmp	r6, #16
  4049aa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4049ac:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4049ae:	46c8      	mov	r8, r9
  4049b0:	dce9      	bgt.n	404986 <_svfprintf_r+0xc46>
  4049b2:	4614      	mov	r4, r2
  4049b4:	3701      	adds	r7, #1
  4049b6:	4434      	add	r4, r6
  4049b8:	2f07      	cmp	r7, #7
  4049ba:	9427      	str	r4, [sp, #156]	; 0x9c
  4049bc:	9726      	str	r7, [sp, #152]	; 0x98
  4049be:	e888 0060 	stmia.w	r8, {r5, r6}
  4049c2:	f77f aed9 	ble.w	404778 <_svfprintf_r+0xa38>
  4049c6:	aa25      	add	r2, sp, #148	; 0x94
  4049c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049cc:	f002 fbc6 	bl	40715c <__ssprint_r>
  4049d0:	2800      	cmp	r0, #0
  4049d2:	f47f aa87 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  4049d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4049d8:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4049da:	46c8      	mov	r8, r9
  4049dc:	e6ce      	b.n	40477c <_svfprintf_r+0xa3c>
  4049de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4049e0:	6814      	ldr	r4, [r2, #0]
  4049e2:	4613      	mov	r3, r2
  4049e4:	3304      	adds	r3, #4
  4049e6:	17e5      	asrs	r5, r4, #31
  4049e8:	930f      	str	r3, [sp, #60]	; 0x3c
  4049ea:	4622      	mov	r2, r4
  4049ec:	462b      	mov	r3, r5
  4049ee:	e4fa      	b.n	4043e6 <_svfprintf_r+0x6a6>
  4049f0:	3204      	adds	r2, #4
  4049f2:	681c      	ldr	r4, [r3, #0]
  4049f4:	920f      	str	r2, [sp, #60]	; 0x3c
  4049f6:	2301      	movs	r3, #1
  4049f8:	2500      	movs	r5, #0
  4049fa:	f7ff ba94 	b.w	403f26 <_svfprintf_r+0x1e6>
  4049fe:	681c      	ldr	r4, [r3, #0]
  404a00:	3304      	adds	r3, #4
  404a02:	930f      	str	r3, [sp, #60]	; 0x3c
  404a04:	2500      	movs	r5, #0
  404a06:	e421      	b.n	40424c <_svfprintf_r+0x50c>
  404a08:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404a0a:	460a      	mov	r2, r1
  404a0c:	3204      	adds	r2, #4
  404a0e:	680c      	ldr	r4, [r1, #0]
  404a10:	920f      	str	r2, [sp, #60]	; 0x3c
  404a12:	2500      	movs	r5, #0
  404a14:	f7ff ba87 	b.w	403f26 <_svfprintf_r+0x1e6>
  404a18:	4614      	mov	r4, r2
  404a1a:	3301      	adds	r3, #1
  404a1c:	4434      	add	r4, r6
  404a1e:	2b07      	cmp	r3, #7
  404a20:	9427      	str	r4, [sp, #156]	; 0x9c
  404a22:	9326      	str	r3, [sp, #152]	; 0x98
  404a24:	e888 0060 	stmia.w	r8, {r5, r6}
  404a28:	f77f ab68 	ble.w	4040fc <_svfprintf_r+0x3bc>
  404a2c:	e6b3      	b.n	404796 <_svfprintf_r+0xa56>
  404a2e:	f8dd b01c 	ldr.w	fp, [sp, #28]
  404a32:	f8cd b01c 	str.w	fp, [sp, #28]
  404a36:	ae42      	add	r6, sp, #264	; 0x108
  404a38:	3430      	adds	r4, #48	; 0x30
  404a3a:	2301      	movs	r3, #1
  404a3c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  404a40:	930e      	str	r3, [sp, #56]	; 0x38
  404a42:	f7ff ba8d 	b.w	403f60 <_svfprintf_r+0x220>
  404a46:	aa25      	add	r2, sp, #148	; 0x94
  404a48:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404a4a:	980c      	ldr	r0, [sp, #48]	; 0x30
  404a4c:	f002 fb86 	bl	40715c <__ssprint_r>
  404a50:	2800      	cmp	r0, #0
  404a52:	f47f aa47 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404a56:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404a58:	46c8      	mov	r8, r9
  404a5a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404a5c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404a5e:	429a      	cmp	r2, r3
  404a60:	db44      	blt.n	404aec <_svfprintf_r+0xdac>
  404a62:	9b07      	ldr	r3, [sp, #28]
  404a64:	07d9      	lsls	r1, r3, #31
  404a66:	d441      	bmi.n	404aec <_svfprintf_r+0xdac>
  404a68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404a6a:	9812      	ldr	r0, [sp, #72]	; 0x48
  404a6c:	1a9a      	subs	r2, r3, r2
  404a6e:	1a1d      	subs	r5, r3, r0
  404a70:	4295      	cmp	r5, r2
  404a72:	bfa8      	it	ge
  404a74:	4615      	movge	r5, r2
  404a76:	2d00      	cmp	r5, #0
  404a78:	dd0e      	ble.n	404a98 <_svfprintf_r+0xd58>
  404a7a:	9926      	ldr	r1, [sp, #152]	; 0x98
  404a7c:	f8c8 5004 	str.w	r5, [r8, #4]
  404a80:	3101      	adds	r1, #1
  404a82:	4406      	add	r6, r0
  404a84:	442c      	add	r4, r5
  404a86:	2907      	cmp	r1, #7
  404a88:	f8c8 6000 	str.w	r6, [r8]
  404a8c:	9427      	str	r4, [sp, #156]	; 0x9c
  404a8e:	9126      	str	r1, [sp, #152]	; 0x98
  404a90:	f300 823b 	bgt.w	404f0a <_svfprintf_r+0x11ca>
  404a94:	f108 0808 	add.w	r8, r8, #8
  404a98:	2d00      	cmp	r5, #0
  404a9a:	bfac      	ite	ge
  404a9c:	1b56      	subge	r6, r2, r5
  404a9e:	4616      	movlt	r6, r2
  404aa0:	2e00      	cmp	r6, #0
  404aa2:	f77f ab2d 	ble.w	404100 <_svfprintf_r+0x3c0>
  404aa6:	2e10      	cmp	r6, #16
  404aa8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404aaa:	4db0      	ldr	r5, [pc, #704]	; (404d6c <_svfprintf_r+0x102c>)
  404aac:	ddb5      	ble.n	404a1a <_svfprintf_r+0xcda>
  404aae:	4622      	mov	r2, r4
  404ab0:	2710      	movs	r7, #16
  404ab2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404ab6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  404ab8:	e004      	b.n	404ac4 <_svfprintf_r+0xd84>
  404aba:	f108 0808 	add.w	r8, r8, #8
  404abe:	3e10      	subs	r6, #16
  404ac0:	2e10      	cmp	r6, #16
  404ac2:	dda9      	ble.n	404a18 <_svfprintf_r+0xcd8>
  404ac4:	3301      	adds	r3, #1
  404ac6:	3210      	adds	r2, #16
  404ac8:	2b07      	cmp	r3, #7
  404aca:	9227      	str	r2, [sp, #156]	; 0x9c
  404acc:	9326      	str	r3, [sp, #152]	; 0x98
  404ace:	e888 00a0 	stmia.w	r8, {r5, r7}
  404ad2:	ddf2      	ble.n	404aba <_svfprintf_r+0xd7a>
  404ad4:	aa25      	add	r2, sp, #148	; 0x94
  404ad6:	4621      	mov	r1, r4
  404ad8:	4658      	mov	r0, fp
  404ada:	f002 fb3f 	bl	40715c <__ssprint_r>
  404ade:	2800      	cmp	r0, #0
  404ae0:	f47f aa00 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404ae4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404ae6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ae8:	46c8      	mov	r8, r9
  404aea:	e7e8      	b.n	404abe <_svfprintf_r+0xd7e>
  404aec:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404aee:	9819      	ldr	r0, [sp, #100]	; 0x64
  404af0:	991a      	ldr	r1, [sp, #104]	; 0x68
  404af2:	f8c8 1000 	str.w	r1, [r8]
  404af6:	3301      	adds	r3, #1
  404af8:	4404      	add	r4, r0
  404afa:	2b07      	cmp	r3, #7
  404afc:	9427      	str	r4, [sp, #156]	; 0x9c
  404afe:	f8c8 0004 	str.w	r0, [r8, #4]
  404b02:	9326      	str	r3, [sp, #152]	; 0x98
  404b04:	f300 81f5 	bgt.w	404ef2 <_svfprintf_r+0x11b2>
  404b08:	f108 0808 	add.w	r8, r8, #8
  404b0c:	e7ac      	b.n	404a68 <_svfprintf_r+0xd28>
  404b0e:	9b07      	ldr	r3, [sp, #28]
  404b10:	07da      	lsls	r2, r3, #31
  404b12:	f53f adfe 	bmi.w	404712 <_svfprintf_r+0x9d2>
  404b16:	3701      	adds	r7, #1
  404b18:	3401      	adds	r4, #1
  404b1a:	2301      	movs	r3, #1
  404b1c:	2f07      	cmp	r7, #7
  404b1e:	9427      	str	r4, [sp, #156]	; 0x9c
  404b20:	9726      	str	r7, [sp, #152]	; 0x98
  404b22:	f8c8 6000 	str.w	r6, [r8]
  404b26:	f8c8 3004 	str.w	r3, [r8, #4]
  404b2a:	f77f ae25 	ble.w	404778 <_svfprintf_r+0xa38>
  404b2e:	e74a      	b.n	4049c6 <_svfprintf_r+0xc86>
  404b30:	aa25      	add	r2, sp, #148	; 0x94
  404b32:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b34:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b36:	f002 fb11 	bl	40715c <__ssprint_r>
  404b3a:	2800      	cmp	r0, #0
  404b3c:	f47f a9d2 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404b40:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b42:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404b44:	46c8      	mov	r8, r9
  404b46:	e5f2      	b.n	40472e <_svfprintf_r+0x9ee>
  404b48:	aa25      	add	r2, sp, #148	; 0x94
  404b4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b4e:	f002 fb05 	bl	40715c <__ssprint_r>
  404b52:	2800      	cmp	r0, #0
  404b54:	f47f a9c6 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404b58:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b5a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404b5c:	46c8      	mov	r8, r9
  404b5e:	e5f5      	b.n	40474c <_svfprintf_r+0xa0c>
  404b60:	464e      	mov	r6, r9
  404b62:	f7ff b9fd 	b.w	403f60 <_svfprintf_r+0x220>
  404b66:	aa25      	add	r2, sp, #148	; 0x94
  404b68:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b6c:	f002 faf6 	bl	40715c <__ssprint_r>
  404b70:	2800      	cmp	r0, #0
  404b72:	f47f a9b7 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404b76:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b78:	46c8      	mov	r8, r9
  404b7a:	f7ff ba72 	b.w	404062 <_svfprintf_r+0x322>
  404b7e:	9c15      	ldr	r4, [sp, #84]	; 0x54
  404b80:	4622      	mov	r2, r4
  404b82:	4620      	mov	r0, r4
  404b84:	9c14      	ldr	r4, [sp, #80]	; 0x50
  404b86:	4623      	mov	r3, r4
  404b88:	4621      	mov	r1, r4
  404b8a:	f003 fbad 	bl	4082e8 <__aeabi_dcmpun>
  404b8e:	2800      	cmp	r0, #0
  404b90:	f040 8286 	bne.w	4050a0 <_svfprintf_r+0x1360>
  404b94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404b96:	3301      	adds	r3, #1
  404b98:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404b9a:	f023 0320 	bic.w	r3, r3, #32
  404b9e:	930e      	str	r3, [sp, #56]	; 0x38
  404ba0:	f000 81e2 	beq.w	404f68 <_svfprintf_r+0x1228>
  404ba4:	2b47      	cmp	r3, #71	; 0x47
  404ba6:	f000 811e 	beq.w	404de6 <_svfprintf_r+0x10a6>
  404baa:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  404bae:	9307      	str	r3, [sp, #28]
  404bb0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404bb2:	1e1f      	subs	r7, r3, #0
  404bb4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404bb6:	9308      	str	r3, [sp, #32]
  404bb8:	bfbb      	ittet	lt
  404bba:	463b      	movlt	r3, r7
  404bbc:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  404bc0:	2300      	movge	r3, #0
  404bc2:	232d      	movlt	r3, #45	; 0x2d
  404bc4:	9310      	str	r3, [sp, #64]	; 0x40
  404bc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404bc8:	2b66      	cmp	r3, #102	; 0x66
  404bca:	f000 81bb 	beq.w	404f44 <_svfprintf_r+0x1204>
  404bce:	2b46      	cmp	r3, #70	; 0x46
  404bd0:	f000 80df 	beq.w	404d92 <_svfprintf_r+0x1052>
  404bd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404bd6:	9a08      	ldr	r2, [sp, #32]
  404bd8:	2b45      	cmp	r3, #69	; 0x45
  404bda:	bf0c      	ite	eq
  404bdc:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  404bde:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  404be0:	a823      	add	r0, sp, #140	; 0x8c
  404be2:	a920      	add	r1, sp, #128	; 0x80
  404be4:	bf08      	it	eq
  404be6:	1c5d      	addeq	r5, r3, #1
  404be8:	9004      	str	r0, [sp, #16]
  404bea:	9103      	str	r1, [sp, #12]
  404bec:	a81f      	add	r0, sp, #124	; 0x7c
  404bee:	2102      	movs	r1, #2
  404bf0:	463b      	mov	r3, r7
  404bf2:	9002      	str	r0, [sp, #8]
  404bf4:	9501      	str	r5, [sp, #4]
  404bf6:	9100      	str	r1, [sp, #0]
  404bf8:	980c      	ldr	r0, [sp, #48]	; 0x30
  404bfa:	f000 fb75 	bl	4052e8 <_dtoa_r>
  404bfe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404c00:	2b67      	cmp	r3, #103	; 0x67
  404c02:	4606      	mov	r6, r0
  404c04:	f040 81e0 	bne.w	404fc8 <_svfprintf_r+0x1288>
  404c08:	f01b 0f01 	tst.w	fp, #1
  404c0c:	f000 8246 	beq.w	40509c <_svfprintf_r+0x135c>
  404c10:	1974      	adds	r4, r6, r5
  404c12:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404c14:	9808      	ldr	r0, [sp, #32]
  404c16:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404c18:	4639      	mov	r1, r7
  404c1a:	f003 fb33 	bl	408284 <__aeabi_dcmpeq>
  404c1e:	2800      	cmp	r0, #0
  404c20:	f040 8165 	bne.w	404eee <_svfprintf_r+0x11ae>
  404c24:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404c26:	42a3      	cmp	r3, r4
  404c28:	d206      	bcs.n	404c38 <_svfprintf_r+0xef8>
  404c2a:	2130      	movs	r1, #48	; 0x30
  404c2c:	1c5a      	adds	r2, r3, #1
  404c2e:	9223      	str	r2, [sp, #140]	; 0x8c
  404c30:	7019      	strb	r1, [r3, #0]
  404c32:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404c34:	429c      	cmp	r4, r3
  404c36:	d8f9      	bhi.n	404c2c <_svfprintf_r+0xeec>
  404c38:	1b9b      	subs	r3, r3, r6
  404c3a:	9313      	str	r3, [sp, #76]	; 0x4c
  404c3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404c3e:	2b47      	cmp	r3, #71	; 0x47
  404c40:	f000 80e9 	beq.w	404e16 <_svfprintf_r+0x10d6>
  404c44:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404c46:	2b65      	cmp	r3, #101	; 0x65
  404c48:	f340 81cd 	ble.w	404fe6 <_svfprintf_r+0x12a6>
  404c4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404c4e:	2b66      	cmp	r3, #102	; 0x66
  404c50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404c52:	9312      	str	r3, [sp, #72]	; 0x48
  404c54:	f000 819e 	beq.w	404f94 <_svfprintf_r+0x1254>
  404c58:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404c5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404c5c:	4619      	mov	r1, r3
  404c5e:	4291      	cmp	r1, r2
  404c60:	f300 818a 	bgt.w	404f78 <_svfprintf_r+0x1238>
  404c64:	f01b 0f01 	tst.w	fp, #1
  404c68:	f040 8213 	bne.w	405092 <_svfprintf_r+0x1352>
  404c6c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404c70:	9308      	str	r3, [sp, #32]
  404c72:	2367      	movs	r3, #103	; 0x67
  404c74:	920e      	str	r2, [sp, #56]	; 0x38
  404c76:	9311      	str	r3, [sp, #68]	; 0x44
  404c78:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404c7a:	2b00      	cmp	r3, #0
  404c7c:	f040 80c4 	bne.w	404e08 <_svfprintf_r+0x10c8>
  404c80:	930a      	str	r3, [sp, #40]	; 0x28
  404c82:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404c86:	f7ff b973 	b.w	403f70 <_svfprintf_r+0x230>
  404c8a:	4635      	mov	r5, r6
  404c8c:	460c      	mov	r4, r1
  404c8e:	4646      	mov	r6, r8
  404c90:	4690      	mov	r8, r2
  404c92:	3301      	adds	r3, #1
  404c94:	443c      	add	r4, r7
  404c96:	2b07      	cmp	r3, #7
  404c98:	9427      	str	r4, [sp, #156]	; 0x9c
  404c9a:	9326      	str	r3, [sp, #152]	; 0x98
  404c9c:	e888 00a0 	stmia.w	r8, {r5, r7}
  404ca0:	f73f aed1 	bgt.w	404a46 <_svfprintf_r+0xd06>
  404ca4:	f108 0808 	add.w	r8, r8, #8
  404ca8:	e6d7      	b.n	404a5a <_svfprintf_r+0xd1a>
  404caa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404cac:	6813      	ldr	r3, [r2, #0]
  404cae:	3204      	adds	r2, #4
  404cb0:	920f      	str	r2, [sp, #60]	; 0x3c
  404cb2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404cb4:	601a      	str	r2, [r3, #0]
  404cb6:	f7ff b86a 	b.w	403d8e <_svfprintf_r+0x4e>
  404cba:	aa25      	add	r2, sp, #148	; 0x94
  404cbc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404cbe:	980c      	ldr	r0, [sp, #48]	; 0x30
  404cc0:	f002 fa4c 	bl	40715c <__ssprint_r>
  404cc4:	2800      	cmp	r0, #0
  404cc6:	f47f a90d 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404cca:	46c8      	mov	r8, r9
  404ccc:	e48d      	b.n	4045ea <_svfprintf_r+0x8aa>
  404cce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cd0:	4a27      	ldr	r2, [pc, #156]	; (404d70 <_svfprintf_r+0x1030>)
  404cd2:	f8c8 2000 	str.w	r2, [r8]
  404cd6:	3301      	adds	r3, #1
  404cd8:	3401      	adds	r4, #1
  404cda:	2201      	movs	r2, #1
  404cdc:	2b07      	cmp	r3, #7
  404cde:	9427      	str	r4, [sp, #156]	; 0x9c
  404ce0:	9326      	str	r3, [sp, #152]	; 0x98
  404ce2:	f8c8 2004 	str.w	r2, [r8, #4]
  404ce6:	dc72      	bgt.n	404dce <_svfprintf_r+0x108e>
  404ce8:	f108 0808 	add.w	r8, r8, #8
  404cec:	b929      	cbnz	r1, 404cfa <_svfprintf_r+0xfba>
  404cee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404cf0:	b91b      	cbnz	r3, 404cfa <_svfprintf_r+0xfba>
  404cf2:	9b07      	ldr	r3, [sp, #28]
  404cf4:	07d8      	lsls	r0, r3, #31
  404cf6:	f57f aa03 	bpl.w	404100 <_svfprintf_r+0x3c0>
  404cfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cfc:	9819      	ldr	r0, [sp, #100]	; 0x64
  404cfe:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  404d00:	f8c8 2000 	str.w	r2, [r8]
  404d04:	3301      	adds	r3, #1
  404d06:	4602      	mov	r2, r0
  404d08:	4422      	add	r2, r4
  404d0a:	2b07      	cmp	r3, #7
  404d0c:	9227      	str	r2, [sp, #156]	; 0x9c
  404d0e:	f8c8 0004 	str.w	r0, [r8, #4]
  404d12:	9326      	str	r3, [sp, #152]	; 0x98
  404d14:	f300 818d 	bgt.w	405032 <_svfprintf_r+0x12f2>
  404d18:	f108 0808 	add.w	r8, r8, #8
  404d1c:	2900      	cmp	r1, #0
  404d1e:	f2c0 8165 	blt.w	404fec <_svfprintf_r+0x12ac>
  404d22:	9913      	ldr	r1, [sp, #76]	; 0x4c
  404d24:	f8c8 6000 	str.w	r6, [r8]
  404d28:	3301      	adds	r3, #1
  404d2a:	188c      	adds	r4, r1, r2
  404d2c:	2b07      	cmp	r3, #7
  404d2e:	9427      	str	r4, [sp, #156]	; 0x9c
  404d30:	9326      	str	r3, [sp, #152]	; 0x98
  404d32:	f8c8 1004 	str.w	r1, [r8, #4]
  404d36:	f77f a9e1 	ble.w	4040fc <_svfprintf_r+0x3bc>
  404d3a:	e52c      	b.n	404796 <_svfprintf_r+0xa56>
  404d3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404d3e:	9909      	ldr	r1, [sp, #36]	; 0x24
  404d40:	6813      	ldr	r3, [r2, #0]
  404d42:	17cd      	asrs	r5, r1, #31
  404d44:	4608      	mov	r0, r1
  404d46:	3204      	adds	r2, #4
  404d48:	4629      	mov	r1, r5
  404d4a:	920f      	str	r2, [sp, #60]	; 0x3c
  404d4c:	e9c3 0100 	strd	r0, r1, [r3]
  404d50:	f7ff b81d 	b.w	403d8e <_svfprintf_r+0x4e>
  404d54:	aa25      	add	r2, sp, #148	; 0x94
  404d56:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d58:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d5a:	f002 f9ff 	bl	40715c <__ssprint_r>
  404d5e:	2800      	cmp	r0, #0
  404d60:	f47f a8c0 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404d64:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d66:	46c8      	mov	r8, r9
  404d68:	e458      	b.n	40461c <_svfprintf_r+0x8dc>
  404d6a:	bf00      	nop
  404d6c:	0040910c 	.word	0x0040910c
  404d70:	004090f8 	.word	0x004090f8
  404d74:	2140      	movs	r1, #64	; 0x40
  404d76:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d78:	f001 fa0c 	bl	406194 <_malloc_r>
  404d7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404d7e:	6010      	str	r0, [r2, #0]
  404d80:	6110      	str	r0, [r2, #16]
  404d82:	2800      	cmp	r0, #0
  404d84:	f000 81f2 	beq.w	40516c <_svfprintf_r+0x142c>
  404d88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404d8a:	2340      	movs	r3, #64	; 0x40
  404d8c:	6153      	str	r3, [r2, #20]
  404d8e:	f7fe bfee 	b.w	403d6e <_svfprintf_r+0x2e>
  404d92:	a823      	add	r0, sp, #140	; 0x8c
  404d94:	a920      	add	r1, sp, #128	; 0x80
  404d96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  404d98:	9004      	str	r0, [sp, #16]
  404d9a:	9103      	str	r1, [sp, #12]
  404d9c:	a81f      	add	r0, sp, #124	; 0x7c
  404d9e:	2103      	movs	r1, #3
  404da0:	9002      	str	r0, [sp, #8]
  404da2:	9a08      	ldr	r2, [sp, #32]
  404da4:	9401      	str	r4, [sp, #4]
  404da6:	463b      	mov	r3, r7
  404da8:	9100      	str	r1, [sp, #0]
  404daa:	980c      	ldr	r0, [sp, #48]	; 0x30
  404dac:	f000 fa9c 	bl	4052e8 <_dtoa_r>
  404db0:	4625      	mov	r5, r4
  404db2:	4606      	mov	r6, r0
  404db4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404db6:	2b46      	cmp	r3, #70	; 0x46
  404db8:	eb06 0405 	add.w	r4, r6, r5
  404dbc:	f47f af29 	bne.w	404c12 <_svfprintf_r+0xed2>
  404dc0:	7833      	ldrb	r3, [r6, #0]
  404dc2:	2b30      	cmp	r3, #48	; 0x30
  404dc4:	f000 8178 	beq.w	4050b8 <_svfprintf_r+0x1378>
  404dc8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  404dca:	442c      	add	r4, r5
  404dcc:	e721      	b.n	404c12 <_svfprintf_r+0xed2>
  404dce:	aa25      	add	r2, sp, #148	; 0x94
  404dd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404dd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  404dd4:	f002 f9c2 	bl	40715c <__ssprint_r>
  404dd8:	2800      	cmp	r0, #0
  404dda:	f47f a883 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404dde:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404de0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404de2:	46c8      	mov	r8, r9
  404de4:	e782      	b.n	404cec <_svfprintf_r+0xfac>
  404de6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404de8:	2b00      	cmp	r3, #0
  404dea:	bf08      	it	eq
  404dec:	2301      	moveq	r3, #1
  404dee:	930a      	str	r3, [sp, #40]	; 0x28
  404df0:	e6db      	b.n	404baa <_svfprintf_r+0xe6a>
  404df2:	4630      	mov	r0, r6
  404df4:	940a      	str	r4, [sp, #40]	; 0x28
  404df6:	f002 f943 	bl	407080 <strlen>
  404dfa:	950f      	str	r5, [sp, #60]	; 0x3c
  404dfc:	900e      	str	r0, [sp, #56]	; 0x38
  404dfe:	f8cd b01c 	str.w	fp, [sp, #28]
  404e02:	4603      	mov	r3, r0
  404e04:	f7ff b9f9 	b.w	4041fa <_svfprintf_r+0x4ba>
  404e08:	272d      	movs	r7, #45	; 0x2d
  404e0a:	2300      	movs	r3, #0
  404e0c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404e10:	930a      	str	r3, [sp, #40]	; 0x28
  404e12:	f7ff b8ae 	b.w	403f72 <_svfprintf_r+0x232>
  404e16:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404e18:	9312      	str	r3, [sp, #72]	; 0x48
  404e1a:	461a      	mov	r2, r3
  404e1c:	3303      	adds	r3, #3
  404e1e:	db04      	blt.n	404e2a <_svfprintf_r+0x10ea>
  404e20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404e22:	4619      	mov	r1, r3
  404e24:	4291      	cmp	r1, r2
  404e26:	f6bf af17 	bge.w	404c58 <_svfprintf_r+0xf18>
  404e2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e2c:	3b02      	subs	r3, #2
  404e2e:	9311      	str	r3, [sp, #68]	; 0x44
  404e30:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  404e34:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  404e38:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404e3a:	3b01      	subs	r3, #1
  404e3c:	2b00      	cmp	r3, #0
  404e3e:	931f      	str	r3, [sp, #124]	; 0x7c
  404e40:	bfbd      	ittte	lt
  404e42:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  404e44:	f1c3 0301 	rsblt	r3, r3, #1
  404e48:	222d      	movlt	r2, #45	; 0x2d
  404e4a:	222b      	movge	r2, #43	; 0x2b
  404e4c:	2b09      	cmp	r3, #9
  404e4e:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  404e52:	f340 8116 	ble.w	405082 <_svfprintf_r+0x1342>
  404e56:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  404e5a:	4620      	mov	r0, r4
  404e5c:	4dab      	ldr	r5, [pc, #684]	; (40510c <_svfprintf_r+0x13cc>)
  404e5e:	e000      	b.n	404e62 <_svfprintf_r+0x1122>
  404e60:	4610      	mov	r0, r2
  404e62:	fb85 1203 	smull	r1, r2, r5, r3
  404e66:	17d9      	asrs	r1, r3, #31
  404e68:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  404e6c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  404e70:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  404e74:	3230      	adds	r2, #48	; 0x30
  404e76:	2909      	cmp	r1, #9
  404e78:	f800 2c01 	strb.w	r2, [r0, #-1]
  404e7c:	460b      	mov	r3, r1
  404e7e:	f100 32ff 	add.w	r2, r0, #4294967295
  404e82:	dced      	bgt.n	404e60 <_svfprintf_r+0x1120>
  404e84:	3330      	adds	r3, #48	; 0x30
  404e86:	3802      	subs	r0, #2
  404e88:	b2d9      	uxtb	r1, r3
  404e8a:	4284      	cmp	r4, r0
  404e8c:	f802 1c01 	strb.w	r1, [r2, #-1]
  404e90:	f240 8165 	bls.w	40515e <_svfprintf_r+0x141e>
  404e94:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  404e98:	4613      	mov	r3, r2
  404e9a:	e001      	b.n	404ea0 <_svfprintf_r+0x1160>
  404e9c:	f813 1b01 	ldrb.w	r1, [r3], #1
  404ea0:	f800 1b01 	strb.w	r1, [r0], #1
  404ea4:	42a3      	cmp	r3, r4
  404ea6:	d1f9      	bne.n	404e9c <_svfprintf_r+0x115c>
  404ea8:	3301      	adds	r3, #1
  404eaa:	1a9b      	subs	r3, r3, r2
  404eac:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  404eb0:	4413      	add	r3, r2
  404eb2:	aa21      	add	r2, sp, #132	; 0x84
  404eb4:	1a9b      	subs	r3, r3, r2
  404eb6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  404eb8:	931b      	str	r3, [sp, #108]	; 0x6c
  404eba:	2a01      	cmp	r2, #1
  404ebc:	4413      	add	r3, r2
  404ebe:	930e      	str	r3, [sp, #56]	; 0x38
  404ec0:	f340 8119 	ble.w	4050f6 <_svfprintf_r+0x13b6>
  404ec4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404ec6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404ec8:	4413      	add	r3, r2
  404eca:	930e      	str	r3, [sp, #56]	; 0x38
  404ecc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404ed0:	9308      	str	r3, [sp, #32]
  404ed2:	2300      	movs	r3, #0
  404ed4:	9312      	str	r3, [sp, #72]	; 0x48
  404ed6:	e6cf      	b.n	404c78 <_svfprintf_r+0xf38>
  404ed8:	aa25      	add	r2, sp, #148	; 0x94
  404eda:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404edc:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ede:	f002 f93d 	bl	40715c <__ssprint_r>
  404ee2:	2800      	cmp	r0, #0
  404ee4:	f47e affe 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404ee8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404eea:	46c8      	mov	r8, r9
  404eec:	e4d7      	b.n	40489e <_svfprintf_r+0xb5e>
  404eee:	4623      	mov	r3, r4
  404ef0:	e6a2      	b.n	404c38 <_svfprintf_r+0xef8>
  404ef2:	aa25      	add	r2, sp, #148	; 0x94
  404ef4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404ef6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ef8:	f002 f930 	bl	40715c <__ssprint_r>
  404efc:	2800      	cmp	r0, #0
  404efe:	f47e aff1 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404f02:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404f04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404f06:	46c8      	mov	r8, r9
  404f08:	e5ae      	b.n	404a68 <_svfprintf_r+0xd28>
  404f0a:	aa25      	add	r2, sp, #148	; 0x94
  404f0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404f0e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f10:	f002 f924 	bl	40715c <__ssprint_r>
  404f14:	2800      	cmp	r0, #0
  404f16:	f47e afe5 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  404f1a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404f1c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404f1e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404f20:	1a9a      	subs	r2, r3, r2
  404f22:	46c8      	mov	r8, r9
  404f24:	e5b8      	b.n	404a98 <_svfprintf_r+0xd58>
  404f26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404f28:	9612      	str	r6, [sp, #72]	; 0x48
  404f2a:	2b06      	cmp	r3, #6
  404f2c:	bf28      	it	cs
  404f2e:	2306      	movcs	r3, #6
  404f30:	960a      	str	r6, [sp, #40]	; 0x28
  404f32:	4637      	mov	r7, r6
  404f34:	9308      	str	r3, [sp, #32]
  404f36:	950f      	str	r5, [sp, #60]	; 0x3c
  404f38:	f8cd b01c 	str.w	fp, [sp, #28]
  404f3c:	930e      	str	r3, [sp, #56]	; 0x38
  404f3e:	4e74      	ldr	r6, [pc, #464]	; (405110 <_svfprintf_r+0x13d0>)
  404f40:	f7ff b816 	b.w	403f70 <_svfprintf_r+0x230>
  404f44:	a823      	add	r0, sp, #140	; 0x8c
  404f46:	a920      	add	r1, sp, #128	; 0x80
  404f48:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  404f4a:	9004      	str	r0, [sp, #16]
  404f4c:	9103      	str	r1, [sp, #12]
  404f4e:	a81f      	add	r0, sp, #124	; 0x7c
  404f50:	2103      	movs	r1, #3
  404f52:	9002      	str	r0, [sp, #8]
  404f54:	9a08      	ldr	r2, [sp, #32]
  404f56:	9501      	str	r5, [sp, #4]
  404f58:	463b      	mov	r3, r7
  404f5a:	9100      	str	r1, [sp, #0]
  404f5c:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f5e:	f000 f9c3 	bl	4052e8 <_dtoa_r>
  404f62:	4606      	mov	r6, r0
  404f64:	1944      	adds	r4, r0, r5
  404f66:	e72b      	b.n	404dc0 <_svfprintf_r+0x1080>
  404f68:	2306      	movs	r3, #6
  404f6a:	930a      	str	r3, [sp, #40]	; 0x28
  404f6c:	e61d      	b.n	404baa <_svfprintf_r+0xe6a>
  404f6e:	272d      	movs	r7, #45	; 0x2d
  404f70:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404f74:	f7ff bacd 	b.w	404512 <_svfprintf_r+0x7d2>
  404f78:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404f7a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404f7c:	4413      	add	r3, r2
  404f7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404f80:	930e      	str	r3, [sp, #56]	; 0x38
  404f82:	2a00      	cmp	r2, #0
  404f84:	f340 80b0 	ble.w	4050e8 <_svfprintf_r+0x13a8>
  404f88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404f8c:	9308      	str	r3, [sp, #32]
  404f8e:	2367      	movs	r3, #103	; 0x67
  404f90:	9311      	str	r3, [sp, #68]	; 0x44
  404f92:	e671      	b.n	404c78 <_svfprintf_r+0xf38>
  404f94:	2b00      	cmp	r3, #0
  404f96:	f340 80c3 	ble.w	405120 <_svfprintf_r+0x13e0>
  404f9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404f9c:	2a00      	cmp	r2, #0
  404f9e:	f040 8099 	bne.w	4050d4 <_svfprintf_r+0x1394>
  404fa2:	f01b 0f01 	tst.w	fp, #1
  404fa6:	f040 8095 	bne.w	4050d4 <_svfprintf_r+0x1394>
  404faa:	9308      	str	r3, [sp, #32]
  404fac:	930e      	str	r3, [sp, #56]	; 0x38
  404fae:	e663      	b.n	404c78 <_svfprintf_r+0xf38>
  404fb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404fb2:	9308      	str	r3, [sp, #32]
  404fb4:	930e      	str	r3, [sp, #56]	; 0x38
  404fb6:	900a      	str	r0, [sp, #40]	; 0x28
  404fb8:	950f      	str	r5, [sp, #60]	; 0x3c
  404fba:	f8cd b01c 	str.w	fp, [sp, #28]
  404fbe:	9012      	str	r0, [sp, #72]	; 0x48
  404fc0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404fc4:	f7fe bfd4 	b.w	403f70 <_svfprintf_r+0x230>
  404fc8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404fca:	2b47      	cmp	r3, #71	; 0x47
  404fcc:	f47f ae20 	bne.w	404c10 <_svfprintf_r+0xed0>
  404fd0:	f01b 0f01 	tst.w	fp, #1
  404fd4:	f47f aeee 	bne.w	404db4 <_svfprintf_r+0x1074>
  404fd8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404fda:	1b9b      	subs	r3, r3, r6
  404fdc:	9313      	str	r3, [sp, #76]	; 0x4c
  404fde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404fe0:	2b47      	cmp	r3, #71	; 0x47
  404fe2:	f43f af18 	beq.w	404e16 <_svfprintf_r+0x10d6>
  404fe6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404fe8:	9312      	str	r3, [sp, #72]	; 0x48
  404fea:	e721      	b.n	404e30 <_svfprintf_r+0x10f0>
  404fec:	424f      	negs	r7, r1
  404fee:	3110      	adds	r1, #16
  404ff0:	4d48      	ldr	r5, [pc, #288]	; (405114 <_svfprintf_r+0x13d4>)
  404ff2:	da2f      	bge.n	405054 <_svfprintf_r+0x1314>
  404ff4:	2410      	movs	r4, #16
  404ff6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404ffa:	e004      	b.n	405006 <_svfprintf_r+0x12c6>
  404ffc:	f108 0808 	add.w	r8, r8, #8
  405000:	3f10      	subs	r7, #16
  405002:	2f10      	cmp	r7, #16
  405004:	dd26      	ble.n	405054 <_svfprintf_r+0x1314>
  405006:	3301      	adds	r3, #1
  405008:	3210      	adds	r2, #16
  40500a:	2b07      	cmp	r3, #7
  40500c:	9227      	str	r2, [sp, #156]	; 0x9c
  40500e:	9326      	str	r3, [sp, #152]	; 0x98
  405010:	f8c8 5000 	str.w	r5, [r8]
  405014:	f8c8 4004 	str.w	r4, [r8, #4]
  405018:	ddf0      	ble.n	404ffc <_svfprintf_r+0x12bc>
  40501a:	aa25      	add	r2, sp, #148	; 0x94
  40501c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40501e:	4658      	mov	r0, fp
  405020:	f002 f89c 	bl	40715c <__ssprint_r>
  405024:	2800      	cmp	r0, #0
  405026:	f47e af5d 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  40502a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40502c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40502e:	46c8      	mov	r8, r9
  405030:	e7e6      	b.n	405000 <_svfprintf_r+0x12c0>
  405032:	aa25      	add	r2, sp, #148	; 0x94
  405034:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405036:	980c      	ldr	r0, [sp, #48]	; 0x30
  405038:	f002 f890 	bl	40715c <__ssprint_r>
  40503c:	2800      	cmp	r0, #0
  40503e:	f47e af51 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  405042:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405044:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405046:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405048:	46c8      	mov	r8, r9
  40504a:	e667      	b.n	404d1c <_svfprintf_r+0xfdc>
  40504c:	2000      	movs	r0, #0
  40504e:	900a      	str	r0, [sp, #40]	; 0x28
  405050:	f7fe bed0 	b.w	403df4 <_svfprintf_r+0xb4>
  405054:	3301      	adds	r3, #1
  405056:	443a      	add	r2, r7
  405058:	2b07      	cmp	r3, #7
  40505a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40505e:	9227      	str	r2, [sp, #156]	; 0x9c
  405060:	9326      	str	r3, [sp, #152]	; 0x98
  405062:	f108 0808 	add.w	r8, r8, #8
  405066:	f77f ae5c 	ble.w	404d22 <_svfprintf_r+0xfe2>
  40506a:	aa25      	add	r2, sp, #148	; 0x94
  40506c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40506e:	980c      	ldr	r0, [sp, #48]	; 0x30
  405070:	f002 f874 	bl	40715c <__ssprint_r>
  405074:	2800      	cmp	r0, #0
  405076:	f47e af35 	bne.w	403ee4 <_svfprintf_r+0x1a4>
  40507a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40507c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40507e:	46c8      	mov	r8, r9
  405080:	e64f      	b.n	404d22 <_svfprintf_r+0xfe2>
  405082:	3330      	adds	r3, #48	; 0x30
  405084:	2230      	movs	r2, #48	; 0x30
  405086:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  40508a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40508e:	ab22      	add	r3, sp, #136	; 0x88
  405090:	e70f      	b.n	404eb2 <_svfprintf_r+0x1172>
  405092:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405094:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405096:	4413      	add	r3, r2
  405098:	930e      	str	r3, [sp, #56]	; 0x38
  40509a:	e775      	b.n	404f88 <_svfprintf_r+0x1248>
  40509c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40509e:	e5cb      	b.n	404c38 <_svfprintf_r+0xef8>
  4050a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4050a2:	4e1d      	ldr	r6, [pc, #116]	; (405118 <_svfprintf_r+0x13d8>)
  4050a4:	2b00      	cmp	r3, #0
  4050a6:	bfb6      	itet	lt
  4050a8:	272d      	movlt	r7, #45	; 0x2d
  4050aa:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4050ae:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4050b2:	4b1a      	ldr	r3, [pc, #104]	; (40511c <_svfprintf_r+0x13dc>)
  4050b4:	f7ff ba2f 	b.w	404516 <_svfprintf_r+0x7d6>
  4050b8:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4050ba:	9808      	ldr	r0, [sp, #32]
  4050bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4050be:	4639      	mov	r1, r7
  4050c0:	f003 f8e0 	bl	408284 <__aeabi_dcmpeq>
  4050c4:	2800      	cmp	r0, #0
  4050c6:	f47f ae7f 	bne.w	404dc8 <_svfprintf_r+0x1088>
  4050ca:	f1c5 0501 	rsb	r5, r5, #1
  4050ce:	951f      	str	r5, [sp, #124]	; 0x7c
  4050d0:	442c      	add	r4, r5
  4050d2:	e59e      	b.n	404c12 <_svfprintf_r+0xed2>
  4050d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4050d6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4050d8:	4413      	add	r3, r2
  4050da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4050dc:	441a      	add	r2, r3
  4050de:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4050e2:	920e      	str	r2, [sp, #56]	; 0x38
  4050e4:	9308      	str	r3, [sp, #32]
  4050e6:	e5c7      	b.n	404c78 <_svfprintf_r+0xf38>
  4050e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4050ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4050ec:	f1c3 0301 	rsb	r3, r3, #1
  4050f0:	441a      	add	r2, r3
  4050f2:	4613      	mov	r3, r2
  4050f4:	e7d0      	b.n	405098 <_svfprintf_r+0x1358>
  4050f6:	f01b 0301 	ands.w	r3, fp, #1
  4050fa:	9312      	str	r3, [sp, #72]	; 0x48
  4050fc:	f47f aee2 	bne.w	404ec4 <_svfprintf_r+0x1184>
  405100:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405102:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405106:	9308      	str	r3, [sp, #32]
  405108:	e5b6      	b.n	404c78 <_svfprintf_r+0xf38>
  40510a:	bf00      	nop
  40510c:	66666667 	.word	0x66666667
  405110:	004090f0 	.word	0x004090f0
  405114:	0040910c 	.word	0x0040910c
  405118:	004090c4 	.word	0x004090c4
  40511c:	004090c0 	.word	0x004090c0
  405120:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405122:	b913      	cbnz	r3, 40512a <_svfprintf_r+0x13ea>
  405124:	f01b 0f01 	tst.w	fp, #1
  405128:	d002      	beq.n	405130 <_svfprintf_r+0x13f0>
  40512a:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40512c:	3301      	adds	r3, #1
  40512e:	e7d4      	b.n	4050da <_svfprintf_r+0x139a>
  405130:	2301      	movs	r3, #1
  405132:	e73a      	b.n	404faa <_svfprintf_r+0x126a>
  405134:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405136:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40513a:	6828      	ldr	r0, [r5, #0]
  40513c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  405140:	900a      	str	r0, [sp, #40]	; 0x28
  405142:	4628      	mov	r0, r5
  405144:	3004      	adds	r0, #4
  405146:	46a2      	mov	sl, r4
  405148:	900f      	str	r0, [sp, #60]	; 0x3c
  40514a:	f7fe be51 	b.w	403df0 <_svfprintf_r+0xb0>
  40514e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405152:	f7ff b867 	b.w	404224 <_svfprintf_r+0x4e4>
  405156:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40515a:	f7ff ba15 	b.w	404588 <_svfprintf_r+0x848>
  40515e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  405162:	e6a6      	b.n	404eb2 <_svfprintf_r+0x1172>
  405164:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405168:	f7ff b8eb 	b.w	404342 <_svfprintf_r+0x602>
  40516c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40516e:	230c      	movs	r3, #12
  405170:	6013      	str	r3, [r2, #0]
  405172:	f04f 33ff 	mov.w	r3, #4294967295
  405176:	9309      	str	r3, [sp, #36]	; 0x24
  405178:	f7fe bebd 	b.w	403ef6 <_svfprintf_r+0x1b6>
  40517c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405180:	f7ff b99a 	b.w	4044b8 <_svfprintf_r+0x778>
  405184:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405188:	f7ff b976 	b.w	404478 <_svfprintf_r+0x738>
  40518c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405190:	f7ff b959 	b.w	404446 <_svfprintf_r+0x706>
  405194:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405198:	f7ff b912 	b.w	4043c0 <_svfprintf_r+0x680>

0040519c <register_fini>:
  40519c:	4b02      	ldr	r3, [pc, #8]	; (4051a8 <register_fini+0xc>)
  40519e:	b113      	cbz	r3, 4051a6 <register_fini+0xa>
  4051a0:	4802      	ldr	r0, [pc, #8]	; (4051ac <register_fini+0x10>)
  4051a2:	f000 b805 	b.w	4051b0 <atexit>
  4051a6:	4770      	bx	lr
  4051a8:	00000000 	.word	0x00000000
  4051ac:	0040613d 	.word	0x0040613d

004051b0 <atexit>:
  4051b0:	2300      	movs	r3, #0
  4051b2:	4601      	mov	r1, r0
  4051b4:	461a      	mov	r2, r3
  4051b6:	4618      	mov	r0, r3
  4051b8:	f002 b84e 	b.w	407258 <__register_exitproc>

004051bc <quorem>:
  4051bc:	6902      	ldr	r2, [r0, #16]
  4051be:	690b      	ldr	r3, [r1, #16]
  4051c0:	4293      	cmp	r3, r2
  4051c2:	f300 808d 	bgt.w	4052e0 <quorem+0x124>
  4051c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4051ca:	f103 38ff 	add.w	r8, r3, #4294967295
  4051ce:	f101 0714 	add.w	r7, r1, #20
  4051d2:	f100 0b14 	add.w	fp, r0, #20
  4051d6:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4051da:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4051de:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4051e2:	b083      	sub	sp, #12
  4051e4:	3201      	adds	r2, #1
  4051e6:	fbb3 f9f2 	udiv	r9, r3, r2
  4051ea:	eb0b 0304 	add.w	r3, fp, r4
  4051ee:	9400      	str	r4, [sp, #0]
  4051f0:	eb07 0a04 	add.w	sl, r7, r4
  4051f4:	9301      	str	r3, [sp, #4]
  4051f6:	f1b9 0f00 	cmp.w	r9, #0
  4051fa:	d039      	beq.n	405270 <quorem+0xb4>
  4051fc:	2500      	movs	r5, #0
  4051fe:	462e      	mov	r6, r5
  405200:	46bc      	mov	ip, r7
  405202:	46de      	mov	lr, fp
  405204:	f85c 4b04 	ldr.w	r4, [ip], #4
  405208:	f8de 3000 	ldr.w	r3, [lr]
  40520c:	b2a2      	uxth	r2, r4
  40520e:	fb09 5502 	mla	r5, r9, r2, r5
  405212:	0c22      	lsrs	r2, r4, #16
  405214:	0c2c      	lsrs	r4, r5, #16
  405216:	fb09 4202 	mla	r2, r9, r2, r4
  40521a:	b2ad      	uxth	r5, r5
  40521c:	1b75      	subs	r5, r6, r5
  40521e:	b296      	uxth	r6, r2
  405220:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  405224:	fa15 f383 	uxtah	r3, r5, r3
  405228:	eb06 4623 	add.w	r6, r6, r3, asr #16
  40522c:	b29b      	uxth	r3, r3
  40522e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  405232:	45e2      	cmp	sl, ip
  405234:	ea4f 4512 	mov.w	r5, r2, lsr #16
  405238:	f84e 3b04 	str.w	r3, [lr], #4
  40523c:	ea4f 4626 	mov.w	r6, r6, asr #16
  405240:	d2e0      	bcs.n	405204 <quorem+0x48>
  405242:	9b00      	ldr	r3, [sp, #0]
  405244:	f85b 3003 	ldr.w	r3, [fp, r3]
  405248:	b993      	cbnz	r3, 405270 <quorem+0xb4>
  40524a:	9c01      	ldr	r4, [sp, #4]
  40524c:	1f23      	subs	r3, r4, #4
  40524e:	459b      	cmp	fp, r3
  405250:	d20c      	bcs.n	40526c <quorem+0xb0>
  405252:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405256:	b94b      	cbnz	r3, 40526c <quorem+0xb0>
  405258:	f1a4 0308 	sub.w	r3, r4, #8
  40525c:	e002      	b.n	405264 <quorem+0xa8>
  40525e:	681a      	ldr	r2, [r3, #0]
  405260:	3b04      	subs	r3, #4
  405262:	b91a      	cbnz	r2, 40526c <quorem+0xb0>
  405264:	459b      	cmp	fp, r3
  405266:	f108 38ff 	add.w	r8, r8, #4294967295
  40526a:	d3f8      	bcc.n	40525e <quorem+0xa2>
  40526c:	f8c0 8010 	str.w	r8, [r0, #16]
  405270:	4604      	mov	r4, r0
  405272:	f001 fd69 	bl	406d48 <__mcmp>
  405276:	2800      	cmp	r0, #0
  405278:	db2e      	blt.n	4052d8 <quorem+0x11c>
  40527a:	f109 0901 	add.w	r9, r9, #1
  40527e:	465d      	mov	r5, fp
  405280:	2300      	movs	r3, #0
  405282:	f857 1b04 	ldr.w	r1, [r7], #4
  405286:	6828      	ldr	r0, [r5, #0]
  405288:	b28a      	uxth	r2, r1
  40528a:	1a9a      	subs	r2, r3, r2
  40528c:	0c0b      	lsrs	r3, r1, #16
  40528e:	fa12 f280 	uxtah	r2, r2, r0
  405292:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  405296:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40529a:	b292      	uxth	r2, r2
  40529c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4052a0:	45ba      	cmp	sl, r7
  4052a2:	f845 2b04 	str.w	r2, [r5], #4
  4052a6:	ea4f 4323 	mov.w	r3, r3, asr #16
  4052aa:	d2ea      	bcs.n	405282 <quorem+0xc6>
  4052ac:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4052b0:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4052b4:	b982      	cbnz	r2, 4052d8 <quorem+0x11c>
  4052b6:	1f1a      	subs	r2, r3, #4
  4052b8:	4593      	cmp	fp, r2
  4052ba:	d20b      	bcs.n	4052d4 <quorem+0x118>
  4052bc:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4052c0:	b942      	cbnz	r2, 4052d4 <quorem+0x118>
  4052c2:	3b08      	subs	r3, #8
  4052c4:	e002      	b.n	4052cc <quorem+0x110>
  4052c6:	681a      	ldr	r2, [r3, #0]
  4052c8:	3b04      	subs	r3, #4
  4052ca:	b91a      	cbnz	r2, 4052d4 <quorem+0x118>
  4052cc:	459b      	cmp	fp, r3
  4052ce:	f108 38ff 	add.w	r8, r8, #4294967295
  4052d2:	d3f8      	bcc.n	4052c6 <quorem+0x10a>
  4052d4:	f8c4 8010 	str.w	r8, [r4, #16]
  4052d8:	4648      	mov	r0, r9
  4052da:	b003      	add	sp, #12
  4052dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4052e0:	2000      	movs	r0, #0
  4052e2:	4770      	bx	lr
  4052e4:	0000      	movs	r0, r0
	...

004052e8 <_dtoa_r>:
  4052e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4052ec:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4052ee:	b09b      	sub	sp, #108	; 0x6c
  4052f0:	4604      	mov	r4, r0
  4052f2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4052f4:	4692      	mov	sl, r2
  4052f6:	469b      	mov	fp, r3
  4052f8:	b141      	cbz	r1, 40530c <_dtoa_r+0x24>
  4052fa:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4052fc:	604a      	str	r2, [r1, #4]
  4052fe:	2301      	movs	r3, #1
  405300:	4093      	lsls	r3, r2
  405302:	608b      	str	r3, [r1, #8]
  405304:	f001 fb48 	bl	406998 <_Bfree>
  405308:	2300      	movs	r3, #0
  40530a:	6423      	str	r3, [r4, #64]	; 0x40
  40530c:	f1bb 0f00 	cmp.w	fp, #0
  405310:	465d      	mov	r5, fp
  405312:	db35      	blt.n	405380 <_dtoa_r+0x98>
  405314:	2300      	movs	r3, #0
  405316:	6033      	str	r3, [r6, #0]
  405318:	4b9d      	ldr	r3, [pc, #628]	; (405590 <_dtoa_r+0x2a8>)
  40531a:	43ab      	bics	r3, r5
  40531c:	d015      	beq.n	40534a <_dtoa_r+0x62>
  40531e:	4650      	mov	r0, sl
  405320:	4659      	mov	r1, fp
  405322:	2200      	movs	r2, #0
  405324:	2300      	movs	r3, #0
  405326:	f002 ffad 	bl	408284 <__aeabi_dcmpeq>
  40532a:	4680      	mov	r8, r0
  40532c:	2800      	cmp	r0, #0
  40532e:	d02d      	beq.n	40538c <_dtoa_r+0xa4>
  405330:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405332:	2301      	movs	r3, #1
  405334:	6013      	str	r3, [r2, #0]
  405336:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405338:	2b00      	cmp	r3, #0
  40533a:	f000 80bd 	beq.w	4054b8 <_dtoa_r+0x1d0>
  40533e:	4895      	ldr	r0, [pc, #596]	; (405594 <_dtoa_r+0x2ac>)
  405340:	6018      	str	r0, [r3, #0]
  405342:	3801      	subs	r0, #1
  405344:	b01b      	add	sp, #108	; 0x6c
  405346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40534a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40534c:	f242 730f 	movw	r3, #9999	; 0x270f
  405350:	6013      	str	r3, [r2, #0]
  405352:	f1ba 0f00 	cmp.w	sl, #0
  405356:	d10d      	bne.n	405374 <_dtoa_r+0x8c>
  405358:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40535c:	b955      	cbnz	r5, 405374 <_dtoa_r+0x8c>
  40535e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405360:	488d      	ldr	r0, [pc, #564]	; (405598 <_dtoa_r+0x2b0>)
  405362:	2b00      	cmp	r3, #0
  405364:	d0ee      	beq.n	405344 <_dtoa_r+0x5c>
  405366:	f100 0308 	add.w	r3, r0, #8
  40536a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40536c:	6013      	str	r3, [r2, #0]
  40536e:	b01b      	add	sp, #108	; 0x6c
  405370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405374:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405376:	4889      	ldr	r0, [pc, #548]	; (40559c <_dtoa_r+0x2b4>)
  405378:	2b00      	cmp	r3, #0
  40537a:	d0e3      	beq.n	405344 <_dtoa_r+0x5c>
  40537c:	1cc3      	adds	r3, r0, #3
  40537e:	e7f4      	b.n	40536a <_dtoa_r+0x82>
  405380:	2301      	movs	r3, #1
  405382:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  405386:	6033      	str	r3, [r6, #0]
  405388:	46ab      	mov	fp, r5
  40538a:	e7c5      	b.n	405318 <_dtoa_r+0x30>
  40538c:	aa18      	add	r2, sp, #96	; 0x60
  40538e:	ab19      	add	r3, sp, #100	; 0x64
  405390:	9201      	str	r2, [sp, #4]
  405392:	9300      	str	r3, [sp, #0]
  405394:	4652      	mov	r2, sl
  405396:	465b      	mov	r3, fp
  405398:	4620      	mov	r0, r4
  40539a:	f001 fd75 	bl	406e88 <__d2b>
  40539e:	0d2b      	lsrs	r3, r5, #20
  4053a0:	4681      	mov	r9, r0
  4053a2:	d071      	beq.n	405488 <_dtoa_r+0x1a0>
  4053a4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4053a8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4053ac:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4053ae:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4053b2:	4650      	mov	r0, sl
  4053b4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4053b8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4053bc:	2200      	movs	r2, #0
  4053be:	4b78      	ldr	r3, [pc, #480]	; (4055a0 <_dtoa_r+0x2b8>)
  4053c0:	f002 fb44 	bl	407a4c <__aeabi_dsub>
  4053c4:	a36c      	add	r3, pc, #432	; (adr r3, 405578 <_dtoa_r+0x290>)
  4053c6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4053ca:	f002 fcf3 	bl	407db4 <__aeabi_dmul>
  4053ce:	a36c      	add	r3, pc, #432	; (adr r3, 405580 <_dtoa_r+0x298>)
  4053d0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4053d4:	f002 fb3c 	bl	407a50 <__adddf3>
  4053d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4053dc:	4630      	mov	r0, r6
  4053de:	f002 fc83 	bl	407ce8 <__aeabi_i2d>
  4053e2:	a369      	add	r3, pc, #420	; (adr r3, 405588 <_dtoa_r+0x2a0>)
  4053e4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4053e8:	f002 fce4 	bl	407db4 <__aeabi_dmul>
  4053ec:	4602      	mov	r2, r0
  4053ee:	460b      	mov	r3, r1
  4053f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4053f4:	f002 fb2c 	bl	407a50 <__adddf3>
  4053f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4053fc:	f002 ff8a 	bl	408314 <__aeabi_d2iz>
  405400:	2200      	movs	r2, #0
  405402:	9002      	str	r0, [sp, #8]
  405404:	2300      	movs	r3, #0
  405406:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40540a:	f002 ff45 	bl	408298 <__aeabi_dcmplt>
  40540e:	2800      	cmp	r0, #0
  405410:	f040 8173 	bne.w	4056fa <_dtoa_r+0x412>
  405414:	9d02      	ldr	r5, [sp, #8]
  405416:	2d16      	cmp	r5, #22
  405418:	f200 815d 	bhi.w	4056d6 <_dtoa_r+0x3ee>
  40541c:	4b61      	ldr	r3, [pc, #388]	; (4055a4 <_dtoa_r+0x2bc>)
  40541e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  405422:	e9d3 0100 	ldrd	r0, r1, [r3]
  405426:	4652      	mov	r2, sl
  405428:	465b      	mov	r3, fp
  40542a:	f002 ff53 	bl	4082d4 <__aeabi_dcmpgt>
  40542e:	2800      	cmp	r0, #0
  405430:	f000 81c5 	beq.w	4057be <_dtoa_r+0x4d6>
  405434:	1e6b      	subs	r3, r5, #1
  405436:	9302      	str	r3, [sp, #8]
  405438:	2300      	movs	r3, #0
  40543a:	930e      	str	r3, [sp, #56]	; 0x38
  40543c:	1bbf      	subs	r7, r7, r6
  40543e:	1e7b      	subs	r3, r7, #1
  405440:	9306      	str	r3, [sp, #24]
  405442:	f100 8154 	bmi.w	4056ee <_dtoa_r+0x406>
  405446:	2300      	movs	r3, #0
  405448:	9308      	str	r3, [sp, #32]
  40544a:	9b02      	ldr	r3, [sp, #8]
  40544c:	2b00      	cmp	r3, #0
  40544e:	f2c0 8145 	blt.w	4056dc <_dtoa_r+0x3f4>
  405452:	9a06      	ldr	r2, [sp, #24]
  405454:	930d      	str	r3, [sp, #52]	; 0x34
  405456:	4611      	mov	r1, r2
  405458:	4419      	add	r1, r3
  40545a:	2300      	movs	r3, #0
  40545c:	9106      	str	r1, [sp, #24]
  40545e:	930c      	str	r3, [sp, #48]	; 0x30
  405460:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405462:	2b09      	cmp	r3, #9
  405464:	d82a      	bhi.n	4054bc <_dtoa_r+0x1d4>
  405466:	2b05      	cmp	r3, #5
  405468:	f340 865b 	ble.w	406122 <_dtoa_r+0xe3a>
  40546c:	3b04      	subs	r3, #4
  40546e:	9324      	str	r3, [sp, #144]	; 0x90
  405470:	2500      	movs	r5, #0
  405472:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405474:	3b02      	subs	r3, #2
  405476:	2b03      	cmp	r3, #3
  405478:	f200 8642 	bhi.w	406100 <_dtoa_r+0xe18>
  40547c:	e8df f013 	tbh	[pc, r3, lsl #1]
  405480:	02c903d4 	.word	0x02c903d4
  405484:	046103df 	.word	0x046103df
  405488:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40548a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40548c:	443e      	add	r6, r7
  40548e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  405492:	2b20      	cmp	r3, #32
  405494:	f340 818e 	ble.w	4057b4 <_dtoa_r+0x4cc>
  405498:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40549c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4054a0:	409d      	lsls	r5, r3
  4054a2:	fa2a f000 	lsr.w	r0, sl, r0
  4054a6:	4328      	orrs	r0, r5
  4054a8:	f002 fc0e 	bl	407cc8 <__aeabi_ui2d>
  4054ac:	2301      	movs	r3, #1
  4054ae:	3e01      	subs	r6, #1
  4054b0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4054b4:	9314      	str	r3, [sp, #80]	; 0x50
  4054b6:	e781      	b.n	4053bc <_dtoa_r+0xd4>
  4054b8:	483b      	ldr	r0, [pc, #236]	; (4055a8 <_dtoa_r+0x2c0>)
  4054ba:	e743      	b.n	405344 <_dtoa_r+0x5c>
  4054bc:	2100      	movs	r1, #0
  4054be:	6461      	str	r1, [r4, #68]	; 0x44
  4054c0:	4620      	mov	r0, r4
  4054c2:	9125      	str	r1, [sp, #148]	; 0x94
  4054c4:	f001 fa42 	bl	40694c <_Balloc>
  4054c8:	f04f 33ff 	mov.w	r3, #4294967295
  4054cc:	930a      	str	r3, [sp, #40]	; 0x28
  4054ce:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4054d0:	930f      	str	r3, [sp, #60]	; 0x3c
  4054d2:	2301      	movs	r3, #1
  4054d4:	9004      	str	r0, [sp, #16]
  4054d6:	6420      	str	r0, [r4, #64]	; 0x40
  4054d8:	9224      	str	r2, [sp, #144]	; 0x90
  4054da:	930b      	str	r3, [sp, #44]	; 0x2c
  4054dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4054de:	2b00      	cmp	r3, #0
  4054e0:	f2c0 80d9 	blt.w	405696 <_dtoa_r+0x3ae>
  4054e4:	9a02      	ldr	r2, [sp, #8]
  4054e6:	2a0e      	cmp	r2, #14
  4054e8:	f300 80d5 	bgt.w	405696 <_dtoa_r+0x3ae>
  4054ec:	4b2d      	ldr	r3, [pc, #180]	; (4055a4 <_dtoa_r+0x2bc>)
  4054ee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4054f2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4054f6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4054fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4054fc:	2b00      	cmp	r3, #0
  4054fe:	f2c0 83ba 	blt.w	405c76 <_dtoa_r+0x98e>
  405502:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  405506:	4650      	mov	r0, sl
  405508:	462a      	mov	r2, r5
  40550a:	4633      	mov	r3, r6
  40550c:	4659      	mov	r1, fp
  40550e:	f002 fd7b 	bl	408008 <__aeabi_ddiv>
  405512:	f002 feff 	bl	408314 <__aeabi_d2iz>
  405516:	4680      	mov	r8, r0
  405518:	f002 fbe6 	bl	407ce8 <__aeabi_i2d>
  40551c:	462a      	mov	r2, r5
  40551e:	4633      	mov	r3, r6
  405520:	f002 fc48 	bl	407db4 <__aeabi_dmul>
  405524:	460b      	mov	r3, r1
  405526:	4602      	mov	r2, r0
  405528:	4659      	mov	r1, fp
  40552a:	4650      	mov	r0, sl
  40552c:	f002 fa8e 	bl	407a4c <__aeabi_dsub>
  405530:	9d04      	ldr	r5, [sp, #16]
  405532:	f108 0330 	add.w	r3, r8, #48	; 0x30
  405536:	702b      	strb	r3, [r5, #0]
  405538:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40553a:	2b01      	cmp	r3, #1
  40553c:	4606      	mov	r6, r0
  40553e:	460f      	mov	r7, r1
  405540:	f105 0501 	add.w	r5, r5, #1
  405544:	d068      	beq.n	405618 <_dtoa_r+0x330>
  405546:	2200      	movs	r2, #0
  405548:	4b18      	ldr	r3, [pc, #96]	; (4055ac <_dtoa_r+0x2c4>)
  40554a:	f002 fc33 	bl	407db4 <__aeabi_dmul>
  40554e:	2200      	movs	r2, #0
  405550:	2300      	movs	r3, #0
  405552:	4606      	mov	r6, r0
  405554:	460f      	mov	r7, r1
  405556:	f002 fe95 	bl	408284 <__aeabi_dcmpeq>
  40555a:	2800      	cmp	r0, #0
  40555c:	f040 8088 	bne.w	405670 <_dtoa_r+0x388>
  405560:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  405564:	f04f 0a00 	mov.w	sl, #0
  405568:	f8df b040 	ldr.w	fp, [pc, #64]	; 4055ac <_dtoa_r+0x2c4>
  40556c:	940c      	str	r4, [sp, #48]	; 0x30
  40556e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  405572:	e028      	b.n	4055c6 <_dtoa_r+0x2de>
  405574:	f3af 8000 	nop.w
  405578:	636f4361 	.word	0x636f4361
  40557c:	3fd287a7 	.word	0x3fd287a7
  405580:	8b60c8b3 	.word	0x8b60c8b3
  405584:	3fc68a28 	.word	0x3fc68a28
  405588:	509f79fb 	.word	0x509f79fb
  40558c:	3fd34413 	.word	0x3fd34413
  405590:	7ff00000 	.word	0x7ff00000
  405594:	004090f9 	.word	0x004090f9
  405598:	0040911c 	.word	0x0040911c
  40559c:	00409128 	.word	0x00409128
  4055a0:	3ff80000 	.word	0x3ff80000
  4055a4:	00409158 	.word	0x00409158
  4055a8:	004090f8 	.word	0x004090f8
  4055ac:	40240000 	.word	0x40240000
  4055b0:	f002 fc00 	bl	407db4 <__aeabi_dmul>
  4055b4:	2200      	movs	r2, #0
  4055b6:	2300      	movs	r3, #0
  4055b8:	4606      	mov	r6, r0
  4055ba:	460f      	mov	r7, r1
  4055bc:	f002 fe62 	bl	408284 <__aeabi_dcmpeq>
  4055c0:	2800      	cmp	r0, #0
  4055c2:	f040 83c1 	bne.w	405d48 <_dtoa_r+0xa60>
  4055c6:	4642      	mov	r2, r8
  4055c8:	464b      	mov	r3, r9
  4055ca:	4630      	mov	r0, r6
  4055cc:	4639      	mov	r1, r7
  4055ce:	f002 fd1b 	bl	408008 <__aeabi_ddiv>
  4055d2:	f002 fe9f 	bl	408314 <__aeabi_d2iz>
  4055d6:	4604      	mov	r4, r0
  4055d8:	f002 fb86 	bl	407ce8 <__aeabi_i2d>
  4055dc:	4642      	mov	r2, r8
  4055de:	464b      	mov	r3, r9
  4055e0:	f002 fbe8 	bl	407db4 <__aeabi_dmul>
  4055e4:	4602      	mov	r2, r0
  4055e6:	460b      	mov	r3, r1
  4055e8:	4630      	mov	r0, r6
  4055ea:	4639      	mov	r1, r7
  4055ec:	f002 fa2e 	bl	407a4c <__aeabi_dsub>
  4055f0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4055f4:	9e04      	ldr	r6, [sp, #16]
  4055f6:	f805 eb01 	strb.w	lr, [r5], #1
  4055fa:	eba5 0e06 	sub.w	lr, r5, r6
  4055fe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  405600:	45b6      	cmp	lr, r6
  405602:	e9cd 0106 	strd	r0, r1, [sp, #24]
  405606:	4652      	mov	r2, sl
  405608:	465b      	mov	r3, fp
  40560a:	d1d1      	bne.n	4055b0 <_dtoa_r+0x2c8>
  40560c:	46a0      	mov	r8, r4
  40560e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  405612:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405614:	4606      	mov	r6, r0
  405616:	460f      	mov	r7, r1
  405618:	4632      	mov	r2, r6
  40561a:	463b      	mov	r3, r7
  40561c:	4630      	mov	r0, r6
  40561e:	4639      	mov	r1, r7
  405620:	f002 fa16 	bl	407a50 <__adddf3>
  405624:	4606      	mov	r6, r0
  405626:	460f      	mov	r7, r1
  405628:	4602      	mov	r2, r0
  40562a:	460b      	mov	r3, r1
  40562c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405630:	f002 fe32 	bl	408298 <__aeabi_dcmplt>
  405634:	b948      	cbnz	r0, 40564a <_dtoa_r+0x362>
  405636:	4632      	mov	r2, r6
  405638:	463b      	mov	r3, r7
  40563a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40563e:	f002 fe21 	bl	408284 <__aeabi_dcmpeq>
  405642:	b1a8      	cbz	r0, 405670 <_dtoa_r+0x388>
  405644:	f018 0f01 	tst.w	r8, #1
  405648:	d012      	beq.n	405670 <_dtoa_r+0x388>
  40564a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40564e:	9a04      	ldr	r2, [sp, #16]
  405650:	1e6b      	subs	r3, r5, #1
  405652:	e004      	b.n	40565e <_dtoa_r+0x376>
  405654:	429a      	cmp	r2, r3
  405656:	f000 8401 	beq.w	405e5c <_dtoa_r+0xb74>
  40565a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40565e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  405662:	f103 0501 	add.w	r5, r3, #1
  405666:	d0f5      	beq.n	405654 <_dtoa_r+0x36c>
  405668:	f108 0801 	add.w	r8, r8, #1
  40566c:	f883 8000 	strb.w	r8, [r3]
  405670:	4649      	mov	r1, r9
  405672:	4620      	mov	r0, r4
  405674:	f001 f990 	bl	406998 <_Bfree>
  405678:	2200      	movs	r2, #0
  40567a:	9b02      	ldr	r3, [sp, #8]
  40567c:	702a      	strb	r2, [r5, #0]
  40567e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405680:	3301      	adds	r3, #1
  405682:	6013      	str	r3, [r2, #0]
  405684:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405686:	2b00      	cmp	r3, #0
  405688:	f000 839e 	beq.w	405dc8 <_dtoa_r+0xae0>
  40568c:	9804      	ldr	r0, [sp, #16]
  40568e:	601d      	str	r5, [r3, #0]
  405690:	b01b      	add	sp, #108	; 0x6c
  405692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405696:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405698:	2a00      	cmp	r2, #0
  40569a:	d03e      	beq.n	40571a <_dtoa_r+0x432>
  40569c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40569e:	2a01      	cmp	r2, #1
  4056a0:	f340 8311 	ble.w	405cc6 <_dtoa_r+0x9de>
  4056a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4056a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4056a8:	1e5f      	subs	r7, r3, #1
  4056aa:	42ba      	cmp	r2, r7
  4056ac:	f2c0 838f 	blt.w	405dce <_dtoa_r+0xae6>
  4056b0:	1bd7      	subs	r7, r2, r7
  4056b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4056b4:	2b00      	cmp	r3, #0
  4056b6:	f2c0 848b 	blt.w	405fd0 <_dtoa_r+0xce8>
  4056ba:	9d08      	ldr	r5, [sp, #32]
  4056bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4056be:	9a08      	ldr	r2, [sp, #32]
  4056c0:	441a      	add	r2, r3
  4056c2:	9208      	str	r2, [sp, #32]
  4056c4:	9a06      	ldr	r2, [sp, #24]
  4056c6:	2101      	movs	r1, #1
  4056c8:	441a      	add	r2, r3
  4056ca:	4620      	mov	r0, r4
  4056cc:	9206      	str	r2, [sp, #24]
  4056ce:	f001 f9fd 	bl	406acc <__i2b>
  4056d2:	4606      	mov	r6, r0
  4056d4:	e024      	b.n	405720 <_dtoa_r+0x438>
  4056d6:	2301      	movs	r3, #1
  4056d8:	930e      	str	r3, [sp, #56]	; 0x38
  4056da:	e6af      	b.n	40543c <_dtoa_r+0x154>
  4056dc:	9a08      	ldr	r2, [sp, #32]
  4056de:	9b02      	ldr	r3, [sp, #8]
  4056e0:	1ad2      	subs	r2, r2, r3
  4056e2:	425b      	negs	r3, r3
  4056e4:	930c      	str	r3, [sp, #48]	; 0x30
  4056e6:	2300      	movs	r3, #0
  4056e8:	9208      	str	r2, [sp, #32]
  4056ea:	930d      	str	r3, [sp, #52]	; 0x34
  4056ec:	e6b8      	b.n	405460 <_dtoa_r+0x178>
  4056ee:	f1c7 0301 	rsb	r3, r7, #1
  4056f2:	9308      	str	r3, [sp, #32]
  4056f4:	2300      	movs	r3, #0
  4056f6:	9306      	str	r3, [sp, #24]
  4056f8:	e6a7      	b.n	40544a <_dtoa_r+0x162>
  4056fa:	9d02      	ldr	r5, [sp, #8]
  4056fc:	4628      	mov	r0, r5
  4056fe:	f002 faf3 	bl	407ce8 <__aeabi_i2d>
  405702:	4602      	mov	r2, r0
  405704:	460b      	mov	r3, r1
  405706:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40570a:	f002 fdbb 	bl	408284 <__aeabi_dcmpeq>
  40570e:	2800      	cmp	r0, #0
  405710:	f47f ae80 	bne.w	405414 <_dtoa_r+0x12c>
  405714:	1e6b      	subs	r3, r5, #1
  405716:	9302      	str	r3, [sp, #8]
  405718:	e67c      	b.n	405414 <_dtoa_r+0x12c>
  40571a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40571c:	9d08      	ldr	r5, [sp, #32]
  40571e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  405720:	2d00      	cmp	r5, #0
  405722:	dd0c      	ble.n	40573e <_dtoa_r+0x456>
  405724:	9906      	ldr	r1, [sp, #24]
  405726:	2900      	cmp	r1, #0
  405728:	460b      	mov	r3, r1
  40572a:	dd08      	ble.n	40573e <_dtoa_r+0x456>
  40572c:	42a9      	cmp	r1, r5
  40572e:	9a08      	ldr	r2, [sp, #32]
  405730:	bfa8      	it	ge
  405732:	462b      	movge	r3, r5
  405734:	1ad2      	subs	r2, r2, r3
  405736:	1aed      	subs	r5, r5, r3
  405738:	1acb      	subs	r3, r1, r3
  40573a:	9208      	str	r2, [sp, #32]
  40573c:	9306      	str	r3, [sp, #24]
  40573e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405740:	b1d3      	cbz	r3, 405778 <_dtoa_r+0x490>
  405742:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405744:	2b00      	cmp	r3, #0
  405746:	f000 82b7 	beq.w	405cb8 <_dtoa_r+0x9d0>
  40574a:	2f00      	cmp	r7, #0
  40574c:	dd10      	ble.n	405770 <_dtoa_r+0x488>
  40574e:	4631      	mov	r1, r6
  405750:	463a      	mov	r2, r7
  405752:	4620      	mov	r0, r4
  405754:	f001 fa56 	bl	406c04 <__pow5mult>
  405758:	464a      	mov	r2, r9
  40575a:	4601      	mov	r1, r0
  40575c:	4606      	mov	r6, r0
  40575e:	4620      	mov	r0, r4
  405760:	f001 f9be 	bl	406ae0 <__multiply>
  405764:	4649      	mov	r1, r9
  405766:	4680      	mov	r8, r0
  405768:	4620      	mov	r0, r4
  40576a:	f001 f915 	bl	406998 <_Bfree>
  40576e:	46c1      	mov	r9, r8
  405770:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405772:	1bda      	subs	r2, r3, r7
  405774:	f040 82a1 	bne.w	405cba <_dtoa_r+0x9d2>
  405778:	2101      	movs	r1, #1
  40577a:	4620      	mov	r0, r4
  40577c:	f001 f9a6 	bl	406acc <__i2b>
  405780:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  405782:	2b00      	cmp	r3, #0
  405784:	4680      	mov	r8, r0
  405786:	dd1c      	ble.n	4057c2 <_dtoa_r+0x4da>
  405788:	4601      	mov	r1, r0
  40578a:	461a      	mov	r2, r3
  40578c:	4620      	mov	r0, r4
  40578e:	f001 fa39 	bl	406c04 <__pow5mult>
  405792:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405794:	2b01      	cmp	r3, #1
  405796:	4680      	mov	r8, r0
  405798:	f340 8254 	ble.w	405c44 <_dtoa_r+0x95c>
  40579c:	2300      	movs	r3, #0
  40579e:	930c      	str	r3, [sp, #48]	; 0x30
  4057a0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4057a4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4057a8:	6918      	ldr	r0, [r3, #16]
  4057aa:	f001 f93f 	bl	406a2c <__hi0bits>
  4057ae:	f1c0 0020 	rsb	r0, r0, #32
  4057b2:	e010      	b.n	4057d6 <_dtoa_r+0x4ee>
  4057b4:	f1c3 0520 	rsb	r5, r3, #32
  4057b8:	fa0a f005 	lsl.w	r0, sl, r5
  4057bc:	e674      	b.n	4054a8 <_dtoa_r+0x1c0>
  4057be:	900e      	str	r0, [sp, #56]	; 0x38
  4057c0:	e63c      	b.n	40543c <_dtoa_r+0x154>
  4057c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4057c4:	2b01      	cmp	r3, #1
  4057c6:	f340 8287 	ble.w	405cd8 <_dtoa_r+0x9f0>
  4057ca:	2300      	movs	r3, #0
  4057cc:	930c      	str	r3, [sp, #48]	; 0x30
  4057ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4057d0:	2001      	movs	r0, #1
  4057d2:	2b00      	cmp	r3, #0
  4057d4:	d1e4      	bne.n	4057a0 <_dtoa_r+0x4b8>
  4057d6:	9a06      	ldr	r2, [sp, #24]
  4057d8:	4410      	add	r0, r2
  4057da:	f010 001f 	ands.w	r0, r0, #31
  4057de:	f000 80a1 	beq.w	405924 <_dtoa_r+0x63c>
  4057e2:	f1c0 0320 	rsb	r3, r0, #32
  4057e6:	2b04      	cmp	r3, #4
  4057e8:	f340 849e 	ble.w	406128 <_dtoa_r+0xe40>
  4057ec:	9b08      	ldr	r3, [sp, #32]
  4057ee:	f1c0 001c 	rsb	r0, r0, #28
  4057f2:	4403      	add	r3, r0
  4057f4:	9308      	str	r3, [sp, #32]
  4057f6:	4613      	mov	r3, r2
  4057f8:	4403      	add	r3, r0
  4057fa:	4405      	add	r5, r0
  4057fc:	9306      	str	r3, [sp, #24]
  4057fe:	9b08      	ldr	r3, [sp, #32]
  405800:	2b00      	cmp	r3, #0
  405802:	dd05      	ble.n	405810 <_dtoa_r+0x528>
  405804:	4649      	mov	r1, r9
  405806:	461a      	mov	r2, r3
  405808:	4620      	mov	r0, r4
  40580a:	f001 fa4b 	bl	406ca4 <__lshift>
  40580e:	4681      	mov	r9, r0
  405810:	9b06      	ldr	r3, [sp, #24]
  405812:	2b00      	cmp	r3, #0
  405814:	dd05      	ble.n	405822 <_dtoa_r+0x53a>
  405816:	4641      	mov	r1, r8
  405818:	461a      	mov	r2, r3
  40581a:	4620      	mov	r0, r4
  40581c:	f001 fa42 	bl	406ca4 <__lshift>
  405820:	4680      	mov	r8, r0
  405822:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405824:	2b00      	cmp	r3, #0
  405826:	f040 8086 	bne.w	405936 <_dtoa_r+0x64e>
  40582a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40582c:	2b00      	cmp	r3, #0
  40582e:	f340 8266 	ble.w	405cfe <_dtoa_r+0xa16>
  405832:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405834:	2b00      	cmp	r3, #0
  405836:	f000 8098 	beq.w	40596a <_dtoa_r+0x682>
  40583a:	2d00      	cmp	r5, #0
  40583c:	dd05      	ble.n	40584a <_dtoa_r+0x562>
  40583e:	4631      	mov	r1, r6
  405840:	462a      	mov	r2, r5
  405842:	4620      	mov	r0, r4
  405844:	f001 fa2e 	bl	406ca4 <__lshift>
  405848:	4606      	mov	r6, r0
  40584a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40584c:	2b00      	cmp	r3, #0
  40584e:	f040 8337 	bne.w	405ec0 <_dtoa_r+0xbd8>
  405852:	9606      	str	r6, [sp, #24]
  405854:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405856:	9a04      	ldr	r2, [sp, #16]
  405858:	f8dd b018 	ldr.w	fp, [sp, #24]
  40585c:	3b01      	subs	r3, #1
  40585e:	18d3      	adds	r3, r2, r3
  405860:	930b      	str	r3, [sp, #44]	; 0x2c
  405862:	f00a 0301 	and.w	r3, sl, #1
  405866:	930c      	str	r3, [sp, #48]	; 0x30
  405868:	4617      	mov	r7, r2
  40586a:	46c2      	mov	sl, r8
  40586c:	4651      	mov	r1, sl
  40586e:	4648      	mov	r0, r9
  405870:	f7ff fca4 	bl	4051bc <quorem>
  405874:	4631      	mov	r1, r6
  405876:	4605      	mov	r5, r0
  405878:	4648      	mov	r0, r9
  40587a:	f001 fa65 	bl	406d48 <__mcmp>
  40587e:	465a      	mov	r2, fp
  405880:	900a      	str	r0, [sp, #40]	; 0x28
  405882:	4651      	mov	r1, sl
  405884:	4620      	mov	r0, r4
  405886:	f001 fa7b 	bl	406d80 <__mdiff>
  40588a:	68c2      	ldr	r2, [r0, #12]
  40588c:	4680      	mov	r8, r0
  40588e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  405892:	2a00      	cmp	r2, #0
  405894:	f040 822b 	bne.w	405cee <_dtoa_r+0xa06>
  405898:	4601      	mov	r1, r0
  40589a:	4648      	mov	r0, r9
  40589c:	9308      	str	r3, [sp, #32]
  40589e:	f001 fa53 	bl	406d48 <__mcmp>
  4058a2:	4641      	mov	r1, r8
  4058a4:	9006      	str	r0, [sp, #24]
  4058a6:	4620      	mov	r0, r4
  4058a8:	f001 f876 	bl	406998 <_Bfree>
  4058ac:	9a06      	ldr	r2, [sp, #24]
  4058ae:	9b08      	ldr	r3, [sp, #32]
  4058b0:	b932      	cbnz	r2, 4058c0 <_dtoa_r+0x5d8>
  4058b2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4058b4:	b921      	cbnz	r1, 4058c0 <_dtoa_r+0x5d8>
  4058b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4058b8:	2a00      	cmp	r2, #0
  4058ba:	f000 83ef 	beq.w	40609c <_dtoa_r+0xdb4>
  4058be:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4058c0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4058c2:	2900      	cmp	r1, #0
  4058c4:	f2c0 829f 	blt.w	405e06 <_dtoa_r+0xb1e>
  4058c8:	d105      	bne.n	4058d6 <_dtoa_r+0x5ee>
  4058ca:	9924      	ldr	r1, [sp, #144]	; 0x90
  4058cc:	b919      	cbnz	r1, 4058d6 <_dtoa_r+0x5ee>
  4058ce:	990c      	ldr	r1, [sp, #48]	; 0x30
  4058d0:	2900      	cmp	r1, #0
  4058d2:	f000 8298 	beq.w	405e06 <_dtoa_r+0xb1e>
  4058d6:	2a00      	cmp	r2, #0
  4058d8:	f300 8306 	bgt.w	405ee8 <_dtoa_r+0xc00>
  4058dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4058de:	703b      	strb	r3, [r7, #0]
  4058e0:	f107 0801 	add.w	r8, r7, #1
  4058e4:	4297      	cmp	r7, r2
  4058e6:	4645      	mov	r5, r8
  4058e8:	f000 830c 	beq.w	405f04 <_dtoa_r+0xc1c>
  4058ec:	4649      	mov	r1, r9
  4058ee:	2300      	movs	r3, #0
  4058f0:	220a      	movs	r2, #10
  4058f2:	4620      	mov	r0, r4
  4058f4:	f001 f85a 	bl	4069ac <__multadd>
  4058f8:	455e      	cmp	r6, fp
  4058fa:	4681      	mov	r9, r0
  4058fc:	4631      	mov	r1, r6
  4058fe:	f04f 0300 	mov.w	r3, #0
  405902:	f04f 020a 	mov.w	r2, #10
  405906:	4620      	mov	r0, r4
  405908:	f000 81eb 	beq.w	405ce2 <_dtoa_r+0x9fa>
  40590c:	f001 f84e 	bl	4069ac <__multadd>
  405910:	4659      	mov	r1, fp
  405912:	4606      	mov	r6, r0
  405914:	2300      	movs	r3, #0
  405916:	220a      	movs	r2, #10
  405918:	4620      	mov	r0, r4
  40591a:	f001 f847 	bl	4069ac <__multadd>
  40591e:	4647      	mov	r7, r8
  405920:	4683      	mov	fp, r0
  405922:	e7a3      	b.n	40586c <_dtoa_r+0x584>
  405924:	201c      	movs	r0, #28
  405926:	9b08      	ldr	r3, [sp, #32]
  405928:	4403      	add	r3, r0
  40592a:	9308      	str	r3, [sp, #32]
  40592c:	9b06      	ldr	r3, [sp, #24]
  40592e:	4403      	add	r3, r0
  405930:	4405      	add	r5, r0
  405932:	9306      	str	r3, [sp, #24]
  405934:	e763      	b.n	4057fe <_dtoa_r+0x516>
  405936:	4641      	mov	r1, r8
  405938:	4648      	mov	r0, r9
  40593a:	f001 fa05 	bl	406d48 <__mcmp>
  40593e:	2800      	cmp	r0, #0
  405940:	f6bf af73 	bge.w	40582a <_dtoa_r+0x542>
  405944:	9f02      	ldr	r7, [sp, #8]
  405946:	4649      	mov	r1, r9
  405948:	2300      	movs	r3, #0
  40594a:	220a      	movs	r2, #10
  40594c:	4620      	mov	r0, r4
  40594e:	3f01      	subs	r7, #1
  405950:	9702      	str	r7, [sp, #8]
  405952:	f001 f82b 	bl	4069ac <__multadd>
  405956:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405958:	4681      	mov	r9, r0
  40595a:	2b00      	cmp	r3, #0
  40595c:	f040 83b6 	bne.w	4060cc <_dtoa_r+0xde4>
  405960:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405962:	2b00      	cmp	r3, #0
  405964:	f340 83bf 	ble.w	4060e6 <_dtoa_r+0xdfe>
  405968:	930a      	str	r3, [sp, #40]	; 0x28
  40596a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40596e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  405970:	465d      	mov	r5, fp
  405972:	e002      	b.n	40597a <_dtoa_r+0x692>
  405974:	f001 f81a 	bl	4069ac <__multadd>
  405978:	4681      	mov	r9, r0
  40597a:	4641      	mov	r1, r8
  40597c:	4648      	mov	r0, r9
  40597e:	f7ff fc1d 	bl	4051bc <quorem>
  405982:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  405986:	f805 ab01 	strb.w	sl, [r5], #1
  40598a:	eba5 030b 	sub.w	r3, r5, fp
  40598e:	42bb      	cmp	r3, r7
  405990:	f04f 020a 	mov.w	r2, #10
  405994:	f04f 0300 	mov.w	r3, #0
  405998:	4649      	mov	r1, r9
  40599a:	4620      	mov	r0, r4
  40599c:	dbea      	blt.n	405974 <_dtoa_r+0x68c>
  40599e:	9b04      	ldr	r3, [sp, #16]
  4059a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4059a2:	2a01      	cmp	r2, #1
  4059a4:	bfac      	ite	ge
  4059a6:	189b      	addge	r3, r3, r2
  4059a8:	3301      	addlt	r3, #1
  4059aa:	461d      	mov	r5, r3
  4059ac:	f04f 0b00 	mov.w	fp, #0
  4059b0:	4649      	mov	r1, r9
  4059b2:	2201      	movs	r2, #1
  4059b4:	4620      	mov	r0, r4
  4059b6:	f001 f975 	bl	406ca4 <__lshift>
  4059ba:	4641      	mov	r1, r8
  4059bc:	4681      	mov	r9, r0
  4059be:	f001 f9c3 	bl	406d48 <__mcmp>
  4059c2:	2800      	cmp	r0, #0
  4059c4:	f340 823d 	ble.w	405e42 <_dtoa_r+0xb5a>
  4059c8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4059cc:	9904      	ldr	r1, [sp, #16]
  4059ce:	1e6b      	subs	r3, r5, #1
  4059d0:	e004      	b.n	4059dc <_dtoa_r+0x6f4>
  4059d2:	428b      	cmp	r3, r1
  4059d4:	f000 81ae 	beq.w	405d34 <_dtoa_r+0xa4c>
  4059d8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4059dc:	2a39      	cmp	r2, #57	; 0x39
  4059de:	f103 0501 	add.w	r5, r3, #1
  4059e2:	d0f6      	beq.n	4059d2 <_dtoa_r+0x6ea>
  4059e4:	3201      	adds	r2, #1
  4059e6:	701a      	strb	r2, [r3, #0]
  4059e8:	4641      	mov	r1, r8
  4059ea:	4620      	mov	r0, r4
  4059ec:	f000 ffd4 	bl	406998 <_Bfree>
  4059f0:	2e00      	cmp	r6, #0
  4059f2:	f43f ae3d 	beq.w	405670 <_dtoa_r+0x388>
  4059f6:	f1bb 0f00 	cmp.w	fp, #0
  4059fa:	d005      	beq.n	405a08 <_dtoa_r+0x720>
  4059fc:	45b3      	cmp	fp, r6
  4059fe:	d003      	beq.n	405a08 <_dtoa_r+0x720>
  405a00:	4659      	mov	r1, fp
  405a02:	4620      	mov	r0, r4
  405a04:	f000 ffc8 	bl	406998 <_Bfree>
  405a08:	4631      	mov	r1, r6
  405a0a:	4620      	mov	r0, r4
  405a0c:	f000 ffc4 	bl	406998 <_Bfree>
  405a10:	e62e      	b.n	405670 <_dtoa_r+0x388>
  405a12:	2300      	movs	r3, #0
  405a14:	930b      	str	r3, [sp, #44]	; 0x2c
  405a16:	9b02      	ldr	r3, [sp, #8]
  405a18:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405a1a:	4413      	add	r3, r2
  405a1c:	930f      	str	r3, [sp, #60]	; 0x3c
  405a1e:	3301      	adds	r3, #1
  405a20:	2b01      	cmp	r3, #1
  405a22:	461f      	mov	r7, r3
  405a24:	461e      	mov	r6, r3
  405a26:	930a      	str	r3, [sp, #40]	; 0x28
  405a28:	bfb8      	it	lt
  405a2a:	2701      	movlt	r7, #1
  405a2c:	2100      	movs	r1, #0
  405a2e:	2f17      	cmp	r7, #23
  405a30:	6461      	str	r1, [r4, #68]	; 0x44
  405a32:	d90a      	bls.n	405a4a <_dtoa_r+0x762>
  405a34:	2201      	movs	r2, #1
  405a36:	2304      	movs	r3, #4
  405a38:	005b      	lsls	r3, r3, #1
  405a3a:	f103 0014 	add.w	r0, r3, #20
  405a3e:	4287      	cmp	r7, r0
  405a40:	4611      	mov	r1, r2
  405a42:	f102 0201 	add.w	r2, r2, #1
  405a46:	d2f7      	bcs.n	405a38 <_dtoa_r+0x750>
  405a48:	6461      	str	r1, [r4, #68]	; 0x44
  405a4a:	4620      	mov	r0, r4
  405a4c:	f000 ff7e 	bl	40694c <_Balloc>
  405a50:	2e0e      	cmp	r6, #14
  405a52:	9004      	str	r0, [sp, #16]
  405a54:	6420      	str	r0, [r4, #64]	; 0x40
  405a56:	f63f ad41 	bhi.w	4054dc <_dtoa_r+0x1f4>
  405a5a:	2d00      	cmp	r5, #0
  405a5c:	f43f ad3e 	beq.w	4054dc <_dtoa_r+0x1f4>
  405a60:	9902      	ldr	r1, [sp, #8]
  405a62:	2900      	cmp	r1, #0
  405a64:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  405a68:	f340 8202 	ble.w	405e70 <_dtoa_r+0xb88>
  405a6c:	4bb8      	ldr	r3, [pc, #736]	; (405d50 <_dtoa_r+0xa68>)
  405a6e:	f001 020f 	and.w	r2, r1, #15
  405a72:	110d      	asrs	r5, r1, #4
  405a74:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405a78:	06e9      	lsls	r1, r5, #27
  405a7a:	e9d3 6700 	ldrd	r6, r7, [r3]
  405a7e:	f140 81ae 	bpl.w	405dde <_dtoa_r+0xaf6>
  405a82:	4bb4      	ldr	r3, [pc, #720]	; (405d54 <_dtoa_r+0xa6c>)
  405a84:	4650      	mov	r0, sl
  405a86:	4659      	mov	r1, fp
  405a88:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  405a8c:	f002 fabc 	bl	408008 <__aeabi_ddiv>
  405a90:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  405a94:	f005 050f 	and.w	r5, r5, #15
  405a98:	f04f 0a03 	mov.w	sl, #3
  405a9c:	b18d      	cbz	r5, 405ac2 <_dtoa_r+0x7da>
  405a9e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405d54 <_dtoa_r+0xa6c>
  405aa2:	07ea      	lsls	r2, r5, #31
  405aa4:	d509      	bpl.n	405aba <_dtoa_r+0x7d2>
  405aa6:	4630      	mov	r0, r6
  405aa8:	4639      	mov	r1, r7
  405aaa:	e9d8 2300 	ldrd	r2, r3, [r8]
  405aae:	f002 f981 	bl	407db4 <__aeabi_dmul>
  405ab2:	f10a 0a01 	add.w	sl, sl, #1
  405ab6:	4606      	mov	r6, r0
  405ab8:	460f      	mov	r7, r1
  405aba:	106d      	asrs	r5, r5, #1
  405abc:	f108 0808 	add.w	r8, r8, #8
  405ac0:	d1ef      	bne.n	405aa2 <_dtoa_r+0x7ba>
  405ac2:	463b      	mov	r3, r7
  405ac4:	4632      	mov	r2, r6
  405ac6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  405aca:	f002 fa9d 	bl	408008 <__aeabi_ddiv>
  405ace:	4607      	mov	r7, r0
  405ad0:	4688      	mov	r8, r1
  405ad2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405ad4:	b143      	cbz	r3, 405ae8 <_dtoa_r+0x800>
  405ad6:	2200      	movs	r2, #0
  405ad8:	4b9f      	ldr	r3, [pc, #636]	; (405d58 <_dtoa_r+0xa70>)
  405ada:	4638      	mov	r0, r7
  405adc:	4641      	mov	r1, r8
  405ade:	f002 fbdb 	bl	408298 <__aeabi_dcmplt>
  405ae2:	2800      	cmp	r0, #0
  405ae4:	f040 8286 	bne.w	405ff4 <_dtoa_r+0xd0c>
  405ae8:	4650      	mov	r0, sl
  405aea:	f002 f8fd 	bl	407ce8 <__aeabi_i2d>
  405aee:	463a      	mov	r2, r7
  405af0:	4643      	mov	r3, r8
  405af2:	f002 f95f 	bl	407db4 <__aeabi_dmul>
  405af6:	4b99      	ldr	r3, [pc, #612]	; (405d5c <_dtoa_r+0xa74>)
  405af8:	2200      	movs	r2, #0
  405afa:	f001 ffa9 	bl	407a50 <__adddf3>
  405afe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405b00:	4605      	mov	r5, r0
  405b02:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405b06:	2b00      	cmp	r3, #0
  405b08:	f000 813e 	beq.w	405d88 <_dtoa_r+0xaa0>
  405b0c:	9b02      	ldr	r3, [sp, #8]
  405b0e:	9315      	str	r3, [sp, #84]	; 0x54
  405b10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405b12:	9312      	str	r3, [sp, #72]	; 0x48
  405b14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405b16:	2b00      	cmp	r3, #0
  405b18:	f000 81fa 	beq.w	405f10 <_dtoa_r+0xc28>
  405b1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405b1e:	4b8c      	ldr	r3, [pc, #560]	; (405d50 <_dtoa_r+0xa68>)
  405b20:	498f      	ldr	r1, [pc, #572]	; (405d60 <_dtoa_r+0xa78>)
  405b22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405b26:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405b2a:	2000      	movs	r0, #0
  405b2c:	f002 fa6c 	bl	408008 <__aeabi_ddiv>
  405b30:	462a      	mov	r2, r5
  405b32:	4633      	mov	r3, r6
  405b34:	f001 ff8a 	bl	407a4c <__aeabi_dsub>
  405b38:	4682      	mov	sl, r0
  405b3a:	468b      	mov	fp, r1
  405b3c:	4638      	mov	r0, r7
  405b3e:	4641      	mov	r1, r8
  405b40:	f002 fbe8 	bl	408314 <__aeabi_d2iz>
  405b44:	4605      	mov	r5, r0
  405b46:	f002 f8cf 	bl	407ce8 <__aeabi_i2d>
  405b4a:	4602      	mov	r2, r0
  405b4c:	460b      	mov	r3, r1
  405b4e:	4638      	mov	r0, r7
  405b50:	4641      	mov	r1, r8
  405b52:	f001 ff7b 	bl	407a4c <__aeabi_dsub>
  405b56:	3530      	adds	r5, #48	; 0x30
  405b58:	fa5f f885 	uxtb.w	r8, r5
  405b5c:	9d04      	ldr	r5, [sp, #16]
  405b5e:	4606      	mov	r6, r0
  405b60:	460f      	mov	r7, r1
  405b62:	f885 8000 	strb.w	r8, [r5]
  405b66:	4602      	mov	r2, r0
  405b68:	460b      	mov	r3, r1
  405b6a:	4650      	mov	r0, sl
  405b6c:	4659      	mov	r1, fp
  405b6e:	3501      	adds	r5, #1
  405b70:	f002 fbb0 	bl	4082d4 <__aeabi_dcmpgt>
  405b74:	2800      	cmp	r0, #0
  405b76:	d154      	bne.n	405c22 <_dtoa_r+0x93a>
  405b78:	4632      	mov	r2, r6
  405b7a:	463b      	mov	r3, r7
  405b7c:	2000      	movs	r0, #0
  405b7e:	4976      	ldr	r1, [pc, #472]	; (405d58 <_dtoa_r+0xa70>)
  405b80:	f001 ff64 	bl	407a4c <__aeabi_dsub>
  405b84:	4602      	mov	r2, r0
  405b86:	460b      	mov	r3, r1
  405b88:	4650      	mov	r0, sl
  405b8a:	4659      	mov	r1, fp
  405b8c:	f002 fba2 	bl	4082d4 <__aeabi_dcmpgt>
  405b90:	2800      	cmp	r0, #0
  405b92:	f040 8270 	bne.w	406076 <_dtoa_r+0xd8e>
  405b96:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405b98:	2a01      	cmp	r2, #1
  405b9a:	f000 8111 	beq.w	405dc0 <_dtoa_r+0xad8>
  405b9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405ba0:	9a04      	ldr	r2, [sp, #16]
  405ba2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405ba6:	4413      	add	r3, r2
  405ba8:	4699      	mov	r9, r3
  405baa:	e00d      	b.n	405bc8 <_dtoa_r+0x8e0>
  405bac:	2000      	movs	r0, #0
  405bae:	496a      	ldr	r1, [pc, #424]	; (405d58 <_dtoa_r+0xa70>)
  405bb0:	f001 ff4c 	bl	407a4c <__aeabi_dsub>
  405bb4:	4652      	mov	r2, sl
  405bb6:	465b      	mov	r3, fp
  405bb8:	f002 fb6e 	bl	408298 <__aeabi_dcmplt>
  405bbc:	2800      	cmp	r0, #0
  405bbe:	f040 8258 	bne.w	406072 <_dtoa_r+0xd8a>
  405bc2:	454d      	cmp	r5, r9
  405bc4:	f000 80fa 	beq.w	405dbc <_dtoa_r+0xad4>
  405bc8:	4650      	mov	r0, sl
  405bca:	4659      	mov	r1, fp
  405bcc:	2200      	movs	r2, #0
  405bce:	4b65      	ldr	r3, [pc, #404]	; (405d64 <_dtoa_r+0xa7c>)
  405bd0:	f002 f8f0 	bl	407db4 <__aeabi_dmul>
  405bd4:	2200      	movs	r2, #0
  405bd6:	4b63      	ldr	r3, [pc, #396]	; (405d64 <_dtoa_r+0xa7c>)
  405bd8:	4682      	mov	sl, r0
  405bda:	468b      	mov	fp, r1
  405bdc:	4630      	mov	r0, r6
  405bde:	4639      	mov	r1, r7
  405be0:	f002 f8e8 	bl	407db4 <__aeabi_dmul>
  405be4:	460f      	mov	r7, r1
  405be6:	4606      	mov	r6, r0
  405be8:	f002 fb94 	bl	408314 <__aeabi_d2iz>
  405bec:	4680      	mov	r8, r0
  405bee:	f002 f87b 	bl	407ce8 <__aeabi_i2d>
  405bf2:	4602      	mov	r2, r0
  405bf4:	460b      	mov	r3, r1
  405bf6:	4630      	mov	r0, r6
  405bf8:	4639      	mov	r1, r7
  405bfa:	f001 ff27 	bl	407a4c <__aeabi_dsub>
  405bfe:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405c02:	fa5f f888 	uxtb.w	r8, r8
  405c06:	4652      	mov	r2, sl
  405c08:	465b      	mov	r3, fp
  405c0a:	f805 8b01 	strb.w	r8, [r5], #1
  405c0e:	4606      	mov	r6, r0
  405c10:	460f      	mov	r7, r1
  405c12:	f002 fb41 	bl	408298 <__aeabi_dcmplt>
  405c16:	4632      	mov	r2, r6
  405c18:	463b      	mov	r3, r7
  405c1a:	2800      	cmp	r0, #0
  405c1c:	d0c6      	beq.n	405bac <_dtoa_r+0x8c4>
  405c1e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405c22:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405c24:	9302      	str	r3, [sp, #8]
  405c26:	e523      	b.n	405670 <_dtoa_r+0x388>
  405c28:	2300      	movs	r3, #0
  405c2a:	930b      	str	r3, [sp, #44]	; 0x2c
  405c2c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405c2e:	2b00      	cmp	r3, #0
  405c30:	f340 80dc 	ble.w	405dec <_dtoa_r+0xb04>
  405c34:	461f      	mov	r7, r3
  405c36:	461e      	mov	r6, r3
  405c38:	930f      	str	r3, [sp, #60]	; 0x3c
  405c3a:	930a      	str	r3, [sp, #40]	; 0x28
  405c3c:	e6f6      	b.n	405a2c <_dtoa_r+0x744>
  405c3e:	2301      	movs	r3, #1
  405c40:	930b      	str	r3, [sp, #44]	; 0x2c
  405c42:	e7f3      	b.n	405c2c <_dtoa_r+0x944>
  405c44:	f1ba 0f00 	cmp.w	sl, #0
  405c48:	f47f ada8 	bne.w	40579c <_dtoa_r+0x4b4>
  405c4c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  405c50:	2b00      	cmp	r3, #0
  405c52:	f47f adba 	bne.w	4057ca <_dtoa_r+0x4e2>
  405c56:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405c5a:	0d3f      	lsrs	r7, r7, #20
  405c5c:	053f      	lsls	r7, r7, #20
  405c5e:	2f00      	cmp	r7, #0
  405c60:	f000 820d 	beq.w	40607e <_dtoa_r+0xd96>
  405c64:	9b08      	ldr	r3, [sp, #32]
  405c66:	3301      	adds	r3, #1
  405c68:	9308      	str	r3, [sp, #32]
  405c6a:	9b06      	ldr	r3, [sp, #24]
  405c6c:	3301      	adds	r3, #1
  405c6e:	9306      	str	r3, [sp, #24]
  405c70:	2301      	movs	r3, #1
  405c72:	930c      	str	r3, [sp, #48]	; 0x30
  405c74:	e5ab      	b.n	4057ce <_dtoa_r+0x4e6>
  405c76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405c78:	2b00      	cmp	r3, #0
  405c7a:	f73f ac42 	bgt.w	405502 <_dtoa_r+0x21a>
  405c7e:	f040 8221 	bne.w	4060c4 <_dtoa_r+0xddc>
  405c82:	2200      	movs	r2, #0
  405c84:	4b38      	ldr	r3, [pc, #224]	; (405d68 <_dtoa_r+0xa80>)
  405c86:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405c8a:	f002 f893 	bl	407db4 <__aeabi_dmul>
  405c8e:	4652      	mov	r2, sl
  405c90:	465b      	mov	r3, fp
  405c92:	f002 fb15 	bl	4082c0 <__aeabi_dcmpge>
  405c96:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  405c9a:	4646      	mov	r6, r8
  405c9c:	2800      	cmp	r0, #0
  405c9e:	d041      	beq.n	405d24 <_dtoa_r+0xa3c>
  405ca0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405ca2:	9d04      	ldr	r5, [sp, #16]
  405ca4:	43db      	mvns	r3, r3
  405ca6:	9302      	str	r3, [sp, #8]
  405ca8:	4641      	mov	r1, r8
  405caa:	4620      	mov	r0, r4
  405cac:	f000 fe74 	bl	406998 <_Bfree>
  405cb0:	2e00      	cmp	r6, #0
  405cb2:	f43f acdd 	beq.w	405670 <_dtoa_r+0x388>
  405cb6:	e6a7      	b.n	405a08 <_dtoa_r+0x720>
  405cb8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405cba:	4649      	mov	r1, r9
  405cbc:	4620      	mov	r0, r4
  405cbe:	f000 ffa1 	bl	406c04 <__pow5mult>
  405cc2:	4681      	mov	r9, r0
  405cc4:	e558      	b.n	405778 <_dtoa_r+0x490>
  405cc6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405cc8:	2a00      	cmp	r2, #0
  405cca:	f000 8187 	beq.w	405fdc <_dtoa_r+0xcf4>
  405cce:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405cd2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405cd4:	9d08      	ldr	r5, [sp, #32]
  405cd6:	e4f2      	b.n	4056be <_dtoa_r+0x3d6>
  405cd8:	f1ba 0f00 	cmp.w	sl, #0
  405cdc:	f47f ad75 	bne.w	4057ca <_dtoa_r+0x4e2>
  405ce0:	e7b4      	b.n	405c4c <_dtoa_r+0x964>
  405ce2:	f000 fe63 	bl	4069ac <__multadd>
  405ce6:	4647      	mov	r7, r8
  405ce8:	4606      	mov	r6, r0
  405cea:	4683      	mov	fp, r0
  405cec:	e5be      	b.n	40586c <_dtoa_r+0x584>
  405cee:	4601      	mov	r1, r0
  405cf0:	4620      	mov	r0, r4
  405cf2:	9306      	str	r3, [sp, #24]
  405cf4:	f000 fe50 	bl	406998 <_Bfree>
  405cf8:	2201      	movs	r2, #1
  405cfa:	9b06      	ldr	r3, [sp, #24]
  405cfc:	e5e0      	b.n	4058c0 <_dtoa_r+0x5d8>
  405cfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405d00:	2b02      	cmp	r3, #2
  405d02:	f77f ad96 	ble.w	405832 <_dtoa_r+0x54a>
  405d06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d08:	2b00      	cmp	r3, #0
  405d0a:	d1c9      	bne.n	405ca0 <_dtoa_r+0x9b8>
  405d0c:	4641      	mov	r1, r8
  405d0e:	2205      	movs	r2, #5
  405d10:	4620      	mov	r0, r4
  405d12:	f000 fe4b 	bl	4069ac <__multadd>
  405d16:	4601      	mov	r1, r0
  405d18:	4680      	mov	r8, r0
  405d1a:	4648      	mov	r0, r9
  405d1c:	f001 f814 	bl	406d48 <__mcmp>
  405d20:	2800      	cmp	r0, #0
  405d22:	ddbd      	ble.n	405ca0 <_dtoa_r+0x9b8>
  405d24:	9a02      	ldr	r2, [sp, #8]
  405d26:	9904      	ldr	r1, [sp, #16]
  405d28:	2331      	movs	r3, #49	; 0x31
  405d2a:	3201      	adds	r2, #1
  405d2c:	9202      	str	r2, [sp, #8]
  405d2e:	700b      	strb	r3, [r1, #0]
  405d30:	1c4d      	adds	r5, r1, #1
  405d32:	e7b9      	b.n	405ca8 <_dtoa_r+0x9c0>
  405d34:	9a02      	ldr	r2, [sp, #8]
  405d36:	3201      	adds	r2, #1
  405d38:	9202      	str	r2, [sp, #8]
  405d3a:	9a04      	ldr	r2, [sp, #16]
  405d3c:	2331      	movs	r3, #49	; 0x31
  405d3e:	7013      	strb	r3, [r2, #0]
  405d40:	e652      	b.n	4059e8 <_dtoa_r+0x700>
  405d42:	2301      	movs	r3, #1
  405d44:	930b      	str	r3, [sp, #44]	; 0x2c
  405d46:	e666      	b.n	405a16 <_dtoa_r+0x72e>
  405d48:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  405d4c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405d4e:	e48f      	b.n	405670 <_dtoa_r+0x388>
  405d50:	00409158 	.word	0x00409158
  405d54:	00409130 	.word	0x00409130
  405d58:	3ff00000 	.word	0x3ff00000
  405d5c:	401c0000 	.word	0x401c0000
  405d60:	3fe00000 	.word	0x3fe00000
  405d64:	40240000 	.word	0x40240000
  405d68:	40140000 	.word	0x40140000
  405d6c:	4650      	mov	r0, sl
  405d6e:	f001 ffbb 	bl	407ce8 <__aeabi_i2d>
  405d72:	463a      	mov	r2, r7
  405d74:	4643      	mov	r3, r8
  405d76:	f002 f81d 	bl	407db4 <__aeabi_dmul>
  405d7a:	2200      	movs	r2, #0
  405d7c:	4bc1      	ldr	r3, [pc, #772]	; (406084 <_dtoa_r+0xd9c>)
  405d7e:	f001 fe67 	bl	407a50 <__adddf3>
  405d82:	4605      	mov	r5, r0
  405d84:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405d88:	4641      	mov	r1, r8
  405d8a:	2200      	movs	r2, #0
  405d8c:	4bbe      	ldr	r3, [pc, #760]	; (406088 <_dtoa_r+0xda0>)
  405d8e:	4638      	mov	r0, r7
  405d90:	f001 fe5c 	bl	407a4c <__aeabi_dsub>
  405d94:	462a      	mov	r2, r5
  405d96:	4633      	mov	r3, r6
  405d98:	4682      	mov	sl, r0
  405d9a:	468b      	mov	fp, r1
  405d9c:	f002 fa9a 	bl	4082d4 <__aeabi_dcmpgt>
  405da0:	4680      	mov	r8, r0
  405da2:	2800      	cmp	r0, #0
  405da4:	f040 8110 	bne.w	405fc8 <_dtoa_r+0xce0>
  405da8:	462a      	mov	r2, r5
  405daa:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  405dae:	4650      	mov	r0, sl
  405db0:	4659      	mov	r1, fp
  405db2:	f002 fa71 	bl	408298 <__aeabi_dcmplt>
  405db6:	b118      	cbz	r0, 405dc0 <_dtoa_r+0xad8>
  405db8:	4646      	mov	r6, r8
  405dba:	e771      	b.n	405ca0 <_dtoa_r+0x9b8>
  405dbc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405dc0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  405dc4:	f7ff bb8a 	b.w	4054dc <_dtoa_r+0x1f4>
  405dc8:	9804      	ldr	r0, [sp, #16]
  405dca:	f7ff babb 	b.w	405344 <_dtoa_r+0x5c>
  405dce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405dd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405dd2:	970c      	str	r7, [sp, #48]	; 0x30
  405dd4:	1afb      	subs	r3, r7, r3
  405dd6:	441a      	add	r2, r3
  405dd8:	920d      	str	r2, [sp, #52]	; 0x34
  405dda:	2700      	movs	r7, #0
  405ddc:	e469      	b.n	4056b2 <_dtoa_r+0x3ca>
  405dde:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405de2:	f04f 0a02 	mov.w	sl, #2
  405de6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  405dea:	e657      	b.n	405a9c <_dtoa_r+0x7b4>
  405dec:	2100      	movs	r1, #0
  405dee:	2301      	movs	r3, #1
  405df0:	6461      	str	r1, [r4, #68]	; 0x44
  405df2:	4620      	mov	r0, r4
  405df4:	9325      	str	r3, [sp, #148]	; 0x94
  405df6:	f000 fda9 	bl	40694c <_Balloc>
  405dfa:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405dfc:	9004      	str	r0, [sp, #16]
  405dfe:	6420      	str	r0, [r4, #64]	; 0x40
  405e00:	930a      	str	r3, [sp, #40]	; 0x28
  405e02:	930f      	str	r3, [sp, #60]	; 0x3c
  405e04:	e629      	b.n	405a5a <_dtoa_r+0x772>
  405e06:	2a00      	cmp	r2, #0
  405e08:	46d0      	mov	r8, sl
  405e0a:	f8cd b018 	str.w	fp, [sp, #24]
  405e0e:	469a      	mov	sl, r3
  405e10:	dd11      	ble.n	405e36 <_dtoa_r+0xb4e>
  405e12:	4649      	mov	r1, r9
  405e14:	2201      	movs	r2, #1
  405e16:	4620      	mov	r0, r4
  405e18:	f000 ff44 	bl	406ca4 <__lshift>
  405e1c:	4641      	mov	r1, r8
  405e1e:	4681      	mov	r9, r0
  405e20:	f000 ff92 	bl	406d48 <__mcmp>
  405e24:	2800      	cmp	r0, #0
  405e26:	f340 8146 	ble.w	4060b6 <_dtoa_r+0xdce>
  405e2a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  405e2e:	f000 8106 	beq.w	40603e <_dtoa_r+0xd56>
  405e32:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  405e36:	46b3      	mov	fp, r6
  405e38:	f887 a000 	strb.w	sl, [r7]
  405e3c:	1c7d      	adds	r5, r7, #1
  405e3e:	9e06      	ldr	r6, [sp, #24]
  405e40:	e5d2      	b.n	4059e8 <_dtoa_r+0x700>
  405e42:	d104      	bne.n	405e4e <_dtoa_r+0xb66>
  405e44:	f01a 0f01 	tst.w	sl, #1
  405e48:	d001      	beq.n	405e4e <_dtoa_r+0xb66>
  405e4a:	e5bd      	b.n	4059c8 <_dtoa_r+0x6e0>
  405e4c:	4615      	mov	r5, r2
  405e4e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405e52:	2b30      	cmp	r3, #48	; 0x30
  405e54:	f105 32ff 	add.w	r2, r5, #4294967295
  405e58:	d0f8      	beq.n	405e4c <_dtoa_r+0xb64>
  405e5a:	e5c5      	b.n	4059e8 <_dtoa_r+0x700>
  405e5c:	9904      	ldr	r1, [sp, #16]
  405e5e:	2230      	movs	r2, #48	; 0x30
  405e60:	700a      	strb	r2, [r1, #0]
  405e62:	9a02      	ldr	r2, [sp, #8]
  405e64:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405e68:	3201      	adds	r2, #1
  405e6a:	9202      	str	r2, [sp, #8]
  405e6c:	f7ff bbfc 	b.w	405668 <_dtoa_r+0x380>
  405e70:	f000 80bb 	beq.w	405fea <_dtoa_r+0xd02>
  405e74:	9b02      	ldr	r3, [sp, #8]
  405e76:	425d      	negs	r5, r3
  405e78:	4b84      	ldr	r3, [pc, #528]	; (40608c <_dtoa_r+0xda4>)
  405e7a:	f005 020f 	and.w	r2, r5, #15
  405e7e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405e82:	e9d3 2300 	ldrd	r2, r3, [r3]
  405e86:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  405e8a:	f001 ff93 	bl	407db4 <__aeabi_dmul>
  405e8e:	112d      	asrs	r5, r5, #4
  405e90:	4607      	mov	r7, r0
  405e92:	4688      	mov	r8, r1
  405e94:	f000 812c 	beq.w	4060f0 <_dtoa_r+0xe08>
  405e98:	4e7d      	ldr	r6, [pc, #500]	; (406090 <_dtoa_r+0xda8>)
  405e9a:	f04f 0a02 	mov.w	sl, #2
  405e9e:	07eb      	lsls	r3, r5, #31
  405ea0:	d509      	bpl.n	405eb6 <_dtoa_r+0xbce>
  405ea2:	4638      	mov	r0, r7
  405ea4:	4641      	mov	r1, r8
  405ea6:	e9d6 2300 	ldrd	r2, r3, [r6]
  405eaa:	f001 ff83 	bl	407db4 <__aeabi_dmul>
  405eae:	f10a 0a01 	add.w	sl, sl, #1
  405eb2:	4607      	mov	r7, r0
  405eb4:	4688      	mov	r8, r1
  405eb6:	106d      	asrs	r5, r5, #1
  405eb8:	f106 0608 	add.w	r6, r6, #8
  405ebc:	d1ef      	bne.n	405e9e <_dtoa_r+0xbb6>
  405ebe:	e608      	b.n	405ad2 <_dtoa_r+0x7ea>
  405ec0:	6871      	ldr	r1, [r6, #4]
  405ec2:	4620      	mov	r0, r4
  405ec4:	f000 fd42 	bl	40694c <_Balloc>
  405ec8:	6933      	ldr	r3, [r6, #16]
  405eca:	3302      	adds	r3, #2
  405ecc:	009a      	lsls	r2, r3, #2
  405ece:	4605      	mov	r5, r0
  405ed0:	f106 010c 	add.w	r1, r6, #12
  405ed4:	300c      	adds	r0, #12
  405ed6:	f000 fc93 	bl	406800 <memcpy>
  405eda:	4629      	mov	r1, r5
  405edc:	2201      	movs	r2, #1
  405ede:	4620      	mov	r0, r4
  405ee0:	f000 fee0 	bl	406ca4 <__lshift>
  405ee4:	9006      	str	r0, [sp, #24]
  405ee6:	e4b5      	b.n	405854 <_dtoa_r+0x56c>
  405ee8:	2b39      	cmp	r3, #57	; 0x39
  405eea:	f8cd b018 	str.w	fp, [sp, #24]
  405eee:	46d0      	mov	r8, sl
  405ef0:	f000 80a5 	beq.w	40603e <_dtoa_r+0xd56>
  405ef4:	f103 0a01 	add.w	sl, r3, #1
  405ef8:	46b3      	mov	fp, r6
  405efa:	f887 a000 	strb.w	sl, [r7]
  405efe:	1c7d      	adds	r5, r7, #1
  405f00:	9e06      	ldr	r6, [sp, #24]
  405f02:	e571      	b.n	4059e8 <_dtoa_r+0x700>
  405f04:	465a      	mov	r2, fp
  405f06:	46d0      	mov	r8, sl
  405f08:	46b3      	mov	fp, r6
  405f0a:	469a      	mov	sl, r3
  405f0c:	4616      	mov	r6, r2
  405f0e:	e54f      	b.n	4059b0 <_dtoa_r+0x6c8>
  405f10:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405f12:	495e      	ldr	r1, [pc, #376]	; (40608c <_dtoa_r+0xda4>)
  405f14:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  405f18:	462a      	mov	r2, r5
  405f1a:	4633      	mov	r3, r6
  405f1c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  405f20:	f001 ff48 	bl	407db4 <__aeabi_dmul>
  405f24:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  405f28:	4638      	mov	r0, r7
  405f2a:	4641      	mov	r1, r8
  405f2c:	f002 f9f2 	bl	408314 <__aeabi_d2iz>
  405f30:	4605      	mov	r5, r0
  405f32:	f001 fed9 	bl	407ce8 <__aeabi_i2d>
  405f36:	460b      	mov	r3, r1
  405f38:	4602      	mov	r2, r0
  405f3a:	4641      	mov	r1, r8
  405f3c:	4638      	mov	r0, r7
  405f3e:	f001 fd85 	bl	407a4c <__aeabi_dsub>
  405f42:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405f44:	460f      	mov	r7, r1
  405f46:	9904      	ldr	r1, [sp, #16]
  405f48:	3530      	adds	r5, #48	; 0x30
  405f4a:	2b01      	cmp	r3, #1
  405f4c:	700d      	strb	r5, [r1, #0]
  405f4e:	4606      	mov	r6, r0
  405f50:	f101 0501 	add.w	r5, r1, #1
  405f54:	d026      	beq.n	405fa4 <_dtoa_r+0xcbc>
  405f56:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405f58:	9a04      	ldr	r2, [sp, #16]
  405f5a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 406098 <_dtoa_r+0xdb0>
  405f5e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405f62:	4413      	add	r3, r2
  405f64:	f04f 0a00 	mov.w	sl, #0
  405f68:	4699      	mov	r9, r3
  405f6a:	4652      	mov	r2, sl
  405f6c:	465b      	mov	r3, fp
  405f6e:	4630      	mov	r0, r6
  405f70:	4639      	mov	r1, r7
  405f72:	f001 ff1f 	bl	407db4 <__aeabi_dmul>
  405f76:	460f      	mov	r7, r1
  405f78:	4606      	mov	r6, r0
  405f7a:	f002 f9cb 	bl	408314 <__aeabi_d2iz>
  405f7e:	4680      	mov	r8, r0
  405f80:	f001 feb2 	bl	407ce8 <__aeabi_i2d>
  405f84:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405f88:	4602      	mov	r2, r0
  405f8a:	460b      	mov	r3, r1
  405f8c:	4630      	mov	r0, r6
  405f8e:	4639      	mov	r1, r7
  405f90:	f001 fd5c 	bl	407a4c <__aeabi_dsub>
  405f94:	f805 8b01 	strb.w	r8, [r5], #1
  405f98:	454d      	cmp	r5, r9
  405f9a:	4606      	mov	r6, r0
  405f9c:	460f      	mov	r7, r1
  405f9e:	d1e4      	bne.n	405f6a <_dtoa_r+0xc82>
  405fa0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405fa4:	4b3b      	ldr	r3, [pc, #236]	; (406094 <_dtoa_r+0xdac>)
  405fa6:	2200      	movs	r2, #0
  405fa8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  405fac:	f001 fd50 	bl	407a50 <__adddf3>
  405fb0:	4632      	mov	r2, r6
  405fb2:	463b      	mov	r3, r7
  405fb4:	f002 f970 	bl	408298 <__aeabi_dcmplt>
  405fb8:	2800      	cmp	r0, #0
  405fba:	d046      	beq.n	40604a <_dtoa_r+0xd62>
  405fbc:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405fbe:	9302      	str	r3, [sp, #8]
  405fc0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405fc4:	f7ff bb43 	b.w	40564e <_dtoa_r+0x366>
  405fc8:	f04f 0800 	mov.w	r8, #0
  405fcc:	4646      	mov	r6, r8
  405fce:	e6a9      	b.n	405d24 <_dtoa_r+0xa3c>
  405fd0:	9b08      	ldr	r3, [sp, #32]
  405fd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405fd4:	1a9d      	subs	r5, r3, r2
  405fd6:	2300      	movs	r3, #0
  405fd8:	f7ff bb71 	b.w	4056be <_dtoa_r+0x3d6>
  405fdc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  405fde:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405fe0:	9d08      	ldr	r5, [sp, #32]
  405fe2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  405fe6:	f7ff bb6a 	b.w	4056be <_dtoa_r+0x3d6>
  405fea:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  405fee:	f04f 0a02 	mov.w	sl, #2
  405ff2:	e56e      	b.n	405ad2 <_dtoa_r+0x7ea>
  405ff4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405ff6:	2b00      	cmp	r3, #0
  405ff8:	f43f aeb8 	beq.w	405d6c <_dtoa_r+0xa84>
  405ffc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405ffe:	2b00      	cmp	r3, #0
  406000:	f77f aede 	ble.w	405dc0 <_dtoa_r+0xad8>
  406004:	2200      	movs	r2, #0
  406006:	4b24      	ldr	r3, [pc, #144]	; (406098 <_dtoa_r+0xdb0>)
  406008:	4638      	mov	r0, r7
  40600a:	4641      	mov	r1, r8
  40600c:	f001 fed2 	bl	407db4 <__aeabi_dmul>
  406010:	4607      	mov	r7, r0
  406012:	4688      	mov	r8, r1
  406014:	f10a 0001 	add.w	r0, sl, #1
  406018:	f001 fe66 	bl	407ce8 <__aeabi_i2d>
  40601c:	463a      	mov	r2, r7
  40601e:	4643      	mov	r3, r8
  406020:	f001 fec8 	bl	407db4 <__aeabi_dmul>
  406024:	2200      	movs	r2, #0
  406026:	4b17      	ldr	r3, [pc, #92]	; (406084 <_dtoa_r+0xd9c>)
  406028:	f001 fd12 	bl	407a50 <__adddf3>
  40602c:	9a02      	ldr	r2, [sp, #8]
  40602e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406030:	9312      	str	r3, [sp, #72]	; 0x48
  406032:	3a01      	subs	r2, #1
  406034:	4605      	mov	r5, r0
  406036:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40603a:	9215      	str	r2, [sp, #84]	; 0x54
  40603c:	e56a      	b.n	405b14 <_dtoa_r+0x82c>
  40603e:	2239      	movs	r2, #57	; 0x39
  406040:	46b3      	mov	fp, r6
  406042:	703a      	strb	r2, [r7, #0]
  406044:	9e06      	ldr	r6, [sp, #24]
  406046:	1c7d      	adds	r5, r7, #1
  406048:	e4c0      	b.n	4059cc <_dtoa_r+0x6e4>
  40604a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40604e:	2000      	movs	r0, #0
  406050:	4910      	ldr	r1, [pc, #64]	; (406094 <_dtoa_r+0xdac>)
  406052:	f001 fcfb 	bl	407a4c <__aeabi_dsub>
  406056:	4632      	mov	r2, r6
  406058:	463b      	mov	r3, r7
  40605a:	f002 f93b 	bl	4082d4 <__aeabi_dcmpgt>
  40605e:	b908      	cbnz	r0, 406064 <_dtoa_r+0xd7c>
  406060:	e6ae      	b.n	405dc0 <_dtoa_r+0xad8>
  406062:	4615      	mov	r5, r2
  406064:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406068:	2b30      	cmp	r3, #48	; 0x30
  40606a:	f105 32ff 	add.w	r2, r5, #4294967295
  40606e:	d0f8      	beq.n	406062 <_dtoa_r+0xd7a>
  406070:	e5d7      	b.n	405c22 <_dtoa_r+0x93a>
  406072:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406076:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406078:	9302      	str	r3, [sp, #8]
  40607a:	f7ff bae8 	b.w	40564e <_dtoa_r+0x366>
  40607e:	970c      	str	r7, [sp, #48]	; 0x30
  406080:	f7ff bba5 	b.w	4057ce <_dtoa_r+0x4e6>
  406084:	401c0000 	.word	0x401c0000
  406088:	40140000 	.word	0x40140000
  40608c:	00409158 	.word	0x00409158
  406090:	00409130 	.word	0x00409130
  406094:	3fe00000 	.word	0x3fe00000
  406098:	40240000 	.word	0x40240000
  40609c:	2b39      	cmp	r3, #57	; 0x39
  40609e:	f8cd b018 	str.w	fp, [sp, #24]
  4060a2:	46d0      	mov	r8, sl
  4060a4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4060a8:	469a      	mov	sl, r3
  4060aa:	d0c8      	beq.n	40603e <_dtoa_r+0xd56>
  4060ac:	f1bb 0f00 	cmp.w	fp, #0
  4060b0:	f73f aebf 	bgt.w	405e32 <_dtoa_r+0xb4a>
  4060b4:	e6bf      	b.n	405e36 <_dtoa_r+0xb4e>
  4060b6:	f47f aebe 	bne.w	405e36 <_dtoa_r+0xb4e>
  4060ba:	f01a 0f01 	tst.w	sl, #1
  4060be:	f43f aeba 	beq.w	405e36 <_dtoa_r+0xb4e>
  4060c2:	e6b2      	b.n	405e2a <_dtoa_r+0xb42>
  4060c4:	f04f 0800 	mov.w	r8, #0
  4060c8:	4646      	mov	r6, r8
  4060ca:	e5e9      	b.n	405ca0 <_dtoa_r+0x9b8>
  4060cc:	4631      	mov	r1, r6
  4060ce:	2300      	movs	r3, #0
  4060d0:	220a      	movs	r2, #10
  4060d2:	4620      	mov	r0, r4
  4060d4:	f000 fc6a 	bl	4069ac <__multadd>
  4060d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4060da:	2b00      	cmp	r3, #0
  4060dc:	4606      	mov	r6, r0
  4060de:	dd0a      	ble.n	4060f6 <_dtoa_r+0xe0e>
  4060e0:	930a      	str	r3, [sp, #40]	; 0x28
  4060e2:	f7ff bbaa 	b.w	40583a <_dtoa_r+0x552>
  4060e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4060e8:	2b02      	cmp	r3, #2
  4060ea:	dc23      	bgt.n	406134 <_dtoa_r+0xe4c>
  4060ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4060ee:	e43b      	b.n	405968 <_dtoa_r+0x680>
  4060f0:	f04f 0a02 	mov.w	sl, #2
  4060f4:	e4ed      	b.n	405ad2 <_dtoa_r+0x7ea>
  4060f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4060f8:	2b02      	cmp	r3, #2
  4060fa:	dc1b      	bgt.n	406134 <_dtoa_r+0xe4c>
  4060fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4060fe:	e7ef      	b.n	4060e0 <_dtoa_r+0xdf8>
  406100:	2500      	movs	r5, #0
  406102:	6465      	str	r5, [r4, #68]	; 0x44
  406104:	4629      	mov	r1, r5
  406106:	4620      	mov	r0, r4
  406108:	f000 fc20 	bl	40694c <_Balloc>
  40610c:	f04f 33ff 	mov.w	r3, #4294967295
  406110:	930a      	str	r3, [sp, #40]	; 0x28
  406112:	930f      	str	r3, [sp, #60]	; 0x3c
  406114:	2301      	movs	r3, #1
  406116:	9004      	str	r0, [sp, #16]
  406118:	9525      	str	r5, [sp, #148]	; 0x94
  40611a:	6420      	str	r0, [r4, #64]	; 0x40
  40611c:	930b      	str	r3, [sp, #44]	; 0x2c
  40611e:	f7ff b9dd 	b.w	4054dc <_dtoa_r+0x1f4>
  406122:	2501      	movs	r5, #1
  406124:	f7ff b9a5 	b.w	405472 <_dtoa_r+0x18a>
  406128:	f43f ab69 	beq.w	4057fe <_dtoa_r+0x516>
  40612c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406130:	f7ff bbf9 	b.w	405926 <_dtoa_r+0x63e>
  406134:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406136:	930a      	str	r3, [sp, #40]	; 0x28
  406138:	e5e5      	b.n	405d06 <_dtoa_r+0xa1e>
  40613a:	bf00      	nop

0040613c <__libc_fini_array>:
  40613c:	b538      	push	{r3, r4, r5, lr}
  40613e:	4c0a      	ldr	r4, [pc, #40]	; (406168 <__libc_fini_array+0x2c>)
  406140:	4d0a      	ldr	r5, [pc, #40]	; (40616c <__libc_fini_array+0x30>)
  406142:	1b64      	subs	r4, r4, r5
  406144:	10a4      	asrs	r4, r4, #2
  406146:	d00a      	beq.n	40615e <__libc_fini_array+0x22>
  406148:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40614c:	3b01      	subs	r3, #1
  40614e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  406152:	3c01      	subs	r4, #1
  406154:	f855 3904 	ldr.w	r3, [r5], #-4
  406158:	4798      	blx	r3
  40615a:	2c00      	cmp	r4, #0
  40615c:	d1f9      	bne.n	406152 <__libc_fini_array+0x16>
  40615e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  406162:	f003 b8f7 	b.w	409354 <_fini>
  406166:	bf00      	nop
  406168:	00409364 	.word	0x00409364
  40616c:	00409360 	.word	0x00409360

00406170 <_localeconv_r>:
  406170:	4a04      	ldr	r2, [pc, #16]	; (406184 <_localeconv_r+0x14>)
  406172:	4b05      	ldr	r3, [pc, #20]	; (406188 <_localeconv_r+0x18>)
  406174:	6812      	ldr	r2, [r2, #0]
  406176:	6b50      	ldr	r0, [r2, #52]	; 0x34
  406178:	2800      	cmp	r0, #0
  40617a:	bf08      	it	eq
  40617c:	4618      	moveq	r0, r3
  40617e:	30f0      	adds	r0, #240	; 0xf0
  406180:	4770      	bx	lr
  406182:	bf00      	nop
  406184:	20000010 	.word	0x20000010
  406188:	20000854 	.word	0x20000854

0040618c <__retarget_lock_acquire_recursive>:
  40618c:	4770      	bx	lr
  40618e:	bf00      	nop

00406190 <__retarget_lock_release_recursive>:
  406190:	4770      	bx	lr
  406192:	bf00      	nop

00406194 <_malloc_r>:
  406194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406198:	f101 060b 	add.w	r6, r1, #11
  40619c:	2e16      	cmp	r6, #22
  40619e:	b083      	sub	sp, #12
  4061a0:	4605      	mov	r5, r0
  4061a2:	f240 809e 	bls.w	4062e2 <_malloc_r+0x14e>
  4061a6:	f036 0607 	bics.w	r6, r6, #7
  4061aa:	f100 80bd 	bmi.w	406328 <_malloc_r+0x194>
  4061ae:	42b1      	cmp	r1, r6
  4061b0:	f200 80ba 	bhi.w	406328 <_malloc_r+0x194>
  4061b4:	f000 fbbe 	bl	406934 <__malloc_lock>
  4061b8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4061bc:	f0c0 8293 	bcc.w	4066e6 <_malloc_r+0x552>
  4061c0:	0a73      	lsrs	r3, r6, #9
  4061c2:	f000 80b8 	beq.w	406336 <_malloc_r+0x1a2>
  4061c6:	2b04      	cmp	r3, #4
  4061c8:	f200 8179 	bhi.w	4064be <_malloc_r+0x32a>
  4061cc:	09b3      	lsrs	r3, r6, #6
  4061ce:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4061d2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4061d6:	00c3      	lsls	r3, r0, #3
  4061d8:	4fbf      	ldr	r7, [pc, #764]	; (4064d8 <_malloc_r+0x344>)
  4061da:	443b      	add	r3, r7
  4061dc:	f1a3 0108 	sub.w	r1, r3, #8
  4061e0:	685c      	ldr	r4, [r3, #4]
  4061e2:	42a1      	cmp	r1, r4
  4061e4:	d106      	bne.n	4061f4 <_malloc_r+0x60>
  4061e6:	e00c      	b.n	406202 <_malloc_r+0x6e>
  4061e8:	2a00      	cmp	r2, #0
  4061ea:	f280 80aa 	bge.w	406342 <_malloc_r+0x1ae>
  4061ee:	68e4      	ldr	r4, [r4, #12]
  4061f0:	42a1      	cmp	r1, r4
  4061f2:	d006      	beq.n	406202 <_malloc_r+0x6e>
  4061f4:	6863      	ldr	r3, [r4, #4]
  4061f6:	f023 0303 	bic.w	r3, r3, #3
  4061fa:	1b9a      	subs	r2, r3, r6
  4061fc:	2a0f      	cmp	r2, #15
  4061fe:	ddf3      	ble.n	4061e8 <_malloc_r+0x54>
  406200:	4670      	mov	r0, lr
  406202:	693c      	ldr	r4, [r7, #16]
  406204:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4064ec <_malloc_r+0x358>
  406208:	4574      	cmp	r4, lr
  40620a:	f000 81ab 	beq.w	406564 <_malloc_r+0x3d0>
  40620e:	6863      	ldr	r3, [r4, #4]
  406210:	f023 0303 	bic.w	r3, r3, #3
  406214:	1b9a      	subs	r2, r3, r6
  406216:	2a0f      	cmp	r2, #15
  406218:	f300 8190 	bgt.w	40653c <_malloc_r+0x3a8>
  40621c:	2a00      	cmp	r2, #0
  40621e:	f8c7 e014 	str.w	lr, [r7, #20]
  406222:	f8c7 e010 	str.w	lr, [r7, #16]
  406226:	f280 809d 	bge.w	406364 <_malloc_r+0x1d0>
  40622a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40622e:	f080 8161 	bcs.w	4064f4 <_malloc_r+0x360>
  406232:	08db      	lsrs	r3, r3, #3
  406234:	f103 0c01 	add.w	ip, r3, #1
  406238:	1099      	asrs	r1, r3, #2
  40623a:	687a      	ldr	r2, [r7, #4]
  40623c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  406240:	f8c4 8008 	str.w	r8, [r4, #8]
  406244:	2301      	movs	r3, #1
  406246:	408b      	lsls	r3, r1
  406248:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40624c:	4313      	orrs	r3, r2
  40624e:	3908      	subs	r1, #8
  406250:	60e1      	str	r1, [r4, #12]
  406252:	607b      	str	r3, [r7, #4]
  406254:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  406258:	f8c8 400c 	str.w	r4, [r8, #12]
  40625c:	1082      	asrs	r2, r0, #2
  40625e:	2401      	movs	r4, #1
  406260:	4094      	lsls	r4, r2
  406262:	429c      	cmp	r4, r3
  406264:	f200 808b 	bhi.w	40637e <_malloc_r+0x1ea>
  406268:	421c      	tst	r4, r3
  40626a:	d106      	bne.n	40627a <_malloc_r+0xe6>
  40626c:	f020 0003 	bic.w	r0, r0, #3
  406270:	0064      	lsls	r4, r4, #1
  406272:	421c      	tst	r4, r3
  406274:	f100 0004 	add.w	r0, r0, #4
  406278:	d0fa      	beq.n	406270 <_malloc_r+0xdc>
  40627a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40627e:	46cc      	mov	ip, r9
  406280:	4680      	mov	r8, r0
  406282:	f8dc 300c 	ldr.w	r3, [ip, #12]
  406286:	459c      	cmp	ip, r3
  406288:	d107      	bne.n	40629a <_malloc_r+0x106>
  40628a:	e16d      	b.n	406568 <_malloc_r+0x3d4>
  40628c:	2a00      	cmp	r2, #0
  40628e:	f280 817b 	bge.w	406588 <_malloc_r+0x3f4>
  406292:	68db      	ldr	r3, [r3, #12]
  406294:	459c      	cmp	ip, r3
  406296:	f000 8167 	beq.w	406568 <_malloc_r+0x3d4>
  40629a:	6859      	ldr	r1, [r3, #4]
  40629c:	f021 0103 	bic.w	r1, r1, #3
  4062a0:	1b8a      	subs	r2, r1, r6
  4062a2:	2a0f      	cmp	r2, #15
  4062a4:	ddf2      	ble.n	40628c <_malloc_r+0xf8>
  4062a6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4062aa:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4062ae:	9300      	str	r3, [sp, #0]
  4062b0:	199c      	adds	r4, r3, r6
  4062b2:	4628      	mov	r0, r5
  4062b4:	f046 0601 	orr.w	r6, r6, #1
  4062b8:	f042 0501 	orr.w	r5, r2, #1
  4062bc:	605e      	str	r6, [r3, #4]
  4062be:	f8c8 c00c 	str.w	ip, [r8, #12]
  4062c2:	f8cc 8008 	str.w	r8, [ip, #8]
  4062c6:	617c      	str	r4, [r7, #20]
  4062c8:	613c      	str	r4, [r7, #16]
  4062ca:	f8c4 e00c 	str.w	lr, [r4, #12]
  4062ce:	f8c4 e008 	str.w	lr, [r4, #8]
  4062d2:	6065      	str	r5, [r4, #4]
  4062d4:	505a      	str	r2, [r3, r1]
  4062d6:	f000 fb33 	bl	406940 <__malloc_unlock>
  4062da:	9b00      	ldr	r3, [sp, #0]
  4062dc:	f103 0408 	add.w	r4, r3, #8
  4062e0:	e01e      	b.n	406320 <_malloc_r+0x18c>
  4062e2:	2910      	cmp	r1, #16
  4062e4:	d820      	bhi.n	406328 <_malloc_r+0x194>
  4062e6:	f000 fb25 	bl	406934 <__malloc_lock>
  4062ea:	2610      	movs	r6, #16
  4062ec:	2318      	movs	r3, #24
  4062ee:	2002      	movs	r0, #2
  4062f0:	4f79      	ldr	r7, [pc, #484]	; (4064d8 <_malloc_r+0x344>)
  4062f2:	443b      	add	r3, r7
  4062f4:	f1a3 0208 	sub.w	r2, r3, #8
  4062f8:	685c      	ldr	r4, [r3, #4]
  4062fa:	4294      	cmp	r4, r2
  4062fc:	f000 813d 	beq.w	40657a <_malloc_r+0x3e6>
  406300:	6863      	ldr	r3, [r4, #4]
  406302:	68e1      	ldr	r1, [r4, #12]
  406304:	68a6      	ldr	r6, [r4, #8]
  406306:	f023 0303 	bic.w	r3, r3, #3
  40630a:	4423      	add	r3, r4
  40630c:	4628      	mov	r0, r5
  40630e:	685a      	ldr	r2, [r3, #4]
  406310:	60f1      	str	r1, [r6, #12]
  406312:	f042 0201 	orr.w	r2, r2, #1
  406316:	608e      	str	r6, [r1, #8]
  406318:	605a      	str	r2, [r3, #4]
  40631a:	f000 fb11 	bl	406940 <__malloc_unlock>
  40631e:	3408      	adds	r4, #8
  406320:	4620      	mov	r0, r4
  406322:	b003      	add	sp, #12
  406324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406328:	2400      	movs	r4, #0
  40632a:	230c      	movs	r3, #12
  40632c:	4620      	mov	r0, r4
  40632e:	602b      	str	r3, [r5, #0]
  406330:	b003      	add	sp, #12
  406332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406336:	2040      	movs	r0, #64	; 0x40
  406338:	f44f 7300 	mov.w	r3, #512	; 0x200
  40633c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  406340:	e74a      	b.n	4061d8 <_malloc_r+0x44>
  406342:	4423      	add	r3, r4
  406344:	68e1      	ldr	r1, [r4, #12]
  406346:	685a      	ldr	r2, [r3, #4]
  406348:	68a6      	ldr	r6, [r4, #8]
  40634a:	f042 0201 	orr.w	r2, r2, #1
  40634e:	60f1      	str	r1, [r6, #12]
  406350:	4628      	mov	r0, r5
  406352:	608e      	str	r6, [r1, #8]
  406354:	605a      	str	r2, [r3, #4]
  406356:	f000 faf3 	bl	406940 <__malloc_unlock>
  40635a:	3408      	adds	r4, #8
  40635c:	4620      	mov	r0, r4
  40635e:	b003      	add	sp, #12
  406360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406364:	4423      	add	r3, r4
  406366:	4628      	mov	r0, r5
  406368:	685a      	ldr	r2, [r3, #4]
  40636a:	f042 0201 	orr.w	r2, r2, #1
  40636e:	605a      	str	r2, [r3, #4]
  406370:	f000 fae6 	bl	406940 <__malloc_unlock>
  406374:	3408      	adds	r4, #8
  406376:	4620      	mov	r0, r4
  406378:	b003      	add	sp, #12
  40637a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40637e:	68bc      	ldr	r4, [r7, #8]
  406380:	6863      	ldr	r3, [r4, #4]
  406382:	f023 0803 	bic.w	r8, r3, #3
  406386:	45b0      	cmp	r8, r6
  406388:	d304      	bcc.n	406394 <_malloc_r+0x200>
  40638a:	eba8 0306 	sub.w	r3, r8, r6
  40638e:	2b0f      	cmp	r3, #15
  406390:	f300 8085 	bgt.w	40649e <_malloc_r+0x30a>
  406394:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4064f0 <_malloc_r+0x35c>
  406398:	4b50      	ldr	r3, [pc, #320]	; (4064dc <_malloc_r+0x348>)
  40639a:	f8d9 2000 	ldr.w	r2, [r9]
  40639e:	681b      	ldr	r3, [r3, #0]
  4063a0:	3201      	adds	r2, #1
  4063a2:	4433      	add	r3, r6
  4063a4:	eb04 0a08 	add.w	sl, r4, r8
  4063a8:	f000 8155 	beq.w	406656 <_malloc_r+0x4c2>
  4063ac:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4063b0:	330f      	adds	r3, #15
  4063b2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4063b6:	f02b 0b0f 	bic.w	fp, fp, #15
  4063ba:	4659      	mov	r1, fp
  4063bc:	4628      	mov	r0, r5
  4063be:	f000 fdbf 	bl	406f40 <_sbrk_r>
  4063c2:	1c41      	adds	r1, r0, #1
  4063c4:	4602      	mov	r2, r0
  4063c6:	f000 80fc 	beq.w	4065c2 <_malloc_r+0x42e>
  4063ca:	4582      	cmp	sl, r0
  4063cc:	f200 80f7 	bhi.w	4065be <_malloc_r+0x42a>
  4063d0:	4b43      	ldr	r3, [pc, #268]	; (4064e0 <_malloc_r+0x34c>)
  4063d2:	6819      	ldr	r1, [r3, #0]
  4063d4:	4459      	add	r1, fp
  4063d6:	6019      	str	r1, [r3, #0]
  4063d8:	f000 814d 	beq.w	406676 <_malloc_r+0x4e2>
  4063dc:	f8d9 0000 	ldr.w	r0, [r9]
  4063e0:	3001      	adds	r0, #1
  4063e2:	bf1b      	ittet	ne
  4063e4:	eba2 0a0a 	subne.w	sl, r2, sl
  4063e8:	4451      	addne	r1, sl
  4063ea:	f8c9 2000 	streq.w	r2, [r9]
  4063ee:	6019      	strne	r1, [r3, #0]
  4063f0:	f012 0107 	ands.w	r1, r2, #7
  4063f4:	f000 8115 	beq.w	406622 <_malloc_r+0x48e>
  4063f8:	f1c1 0008 	rsb	r0, r1, #8
  4063fc:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  406400:	4402      	add	r2, r0
  406402:	3108      	adds	r1, #8
  406404:	eb02 090b 	add.w	r9, r2, fp
  406408:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40640c:	eba1 0909 	sub.w	r9, r1, r9
  406410:	4649      	mov	r1, r9
  406412:	4628      	mov	r0, r5
  406414:	9301      	str	r3, [sp, #4]
  406416:	9200      	str	r2, [sp, #0]
  406418:	f000 fd92 	bl	406f40 <_sbrk_r>
  40641c:	1c43      	adds	r3, r0, #1
  40641e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406422:	f000 8143 	beq.w	4066ac <_malloc_r+0x518>
  406426:	1a80      	subs	r0, r0, r2
  406428:	4448      	add	r0, r9
  40642a:	f040 0001 	orr.w	r0, r0, #1
  40642e:	6819      	ldr	r1, [r3, #0]
  406430:	60ba      	str	r2, [r7, #8]
  406432:	4449      	add	r1, r9
  406434:	42bc      	cmp	r4, r7
  406436:	6050      	str	r0, [r2, #4]
  406438:	6019      	str	r1, [r3, #0]
  40643a:	d017      	beq.n	40646c <_malloc_r+0x2d8>
  40643c:	f1b8 0f0f 	cmp.w	r8, #15
  406440:	f240 80fb 	bls.w	40663a <_malloc_r+0x4a6>
  406444:	6860      	ldr	r0, [r4, #4]
  406446:	f1a8 020c 	sub.w	r2, r8, #12
  40644a:	f022 0207 	bic.w	r2, r2, #7
  40644e:	eb04 0e02 	add.w	lr, r4, r2
  406452:	f000 0001 	and.w	r0, r0, #1
  406456:	f04f 0c05 	mov.w	ip, #5
  40645a:	4310      	orrs	r0, r2
  40645c:	2a0f      	cmp	r2, #15
  40645e:	6060      	str	r0, [r4, #4]
  406460:	f8ce c004 	str.w	ip, [lr, #4]
  406464:	f8ce c008 	str.w	ip, [lr, #8]
  406468:	f200 8117 	bhi.w	40669a <_malloc_r+0x506>
  40646c:	4b1d      	ldr	r3, [pc, #116]	; (4064e4 <_malloc_r+0x350>)
  40646e:	68bc      	ldr	r4, [r7, #8]
  406470:	681a      	ldr	r2, [r3, #0]
  406472:	4291      	cmp	r1, r2
  406474:	bf88      	it	hi
  406476:	6019      	strhi	r1, [r3, #0]
  406478:	4b1b      	ldr	r3, [pc, #108]	; (4064e8 <_malloc_r+0x354>)
  40647a:	681a      	ldr	r2, [r3, #0]
  40647c:	4291      	cmp	r1, r2
  40647e:	6862      	ldr	r2, [r4, #4]
  406480:	bf88      	it	hi
  406482:	6019      	strhi	r1, [r3, #0]
  406484:	f022 0203 	bic.w	r2, r2, #3
  406488:	4296      	cmp	r6, r2
  40648a:	eba2 0306 	sub.w	r3, r2, r6
  40648e:	d801      	bhi.n	406494 <_malloc_r+0x300>
  406490:	2b0f      	cmp	r3, #15
  406492:	dc04      	bgt.n	40649e <_malloc_r+0x30a>
  406494:	4628      	mov	r0, r5
  406496:	f000 fa53 	bl	406940 <__malloc_unlock>
  40649a:	2400      	movs	r4, #0
  40649c:	e740      	b.n	406320 <_malloc_r+0x18c>
  40649e:	19a2      	adds	r2, r4, r6
  4064a0:	f043 0301 	orr.w	r3, r3, #1
  4064a4:	f046 0601 	orr.w	r6, r6, #1
  4064a8:	6066      	str	r6, [r4, #4]
  4064aa:	4628      	mov	r0, r5
  4064ac:	60ba      	str	r2, [r7, #8]
  4064ae:	6053      	str	r3, [r2, #4]
  4064b0:	f000 fa46 	bl	406940 <__malloc_unlock>
  4064b4:	3408      	adds	r4, #8
  4064b6:	4620      	mov	r0, r4
  4064b8:	b003      	add	sp, #12
  4064ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4064be:	2b14      	cmp	r3, #20
  4064c0:	d971      	bls.n	4065a6 <_malloc_r+0x412>
  4064c2:	2b54      	cmp	r3, #84	; 0x54
  4064c4:	f200 80a3 	bhi.w	40660e <_malloc_r+0x47a>
  4064c8:	0b33      	lsrs	r3, r6, #12
  4064ca:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4064ce:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4064d2:	00c3      	lsls	r3, r0, #3
  4064d4:	e680      	b.n	4061d8 <_malloc_r+0x44>
  4064d6:	bf00      	nop
  4064d8:	20000444 	.word	0x20000444
  4064dc:	20000ab0 	.word	0x20000ab0
  4064e0:	20000a80 	.word	0x20000a80
  4064e4:	20000aa8 	.word	0x20000aa8
  4064e8:	20000aac 	.word	0x20000aac
  4064ec:	2000044c 	.word	0x2000044c
  4064f0:	2000084c 	.word	0x2000084c
  4064f4:	0a5a      	lsrs	r2, r3, #9
  4064f6:	2a04      	cmp	r2, #4
  4064f8:	d95b      	bls.n	4065b2 <_malloc_r+0x41e>
  4064fa:	2a14      	cmp	r2, #20
  4064fc:	f200 80ae 	bhi.w	40665c <_malloc_r+0x4c8>
  406500:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  406504:	00c9      	lsls	r1, r1, #3
  406506:	325b      	adds	r2, #91	; 0x5b
  406508:	eb07 0c01 	add.w	ip, r7, r1
  40650c:	5879      	ldr	r1, [r7, r1]
  40650e:	f1ac 0c08 	sub.w	ip, ip, #8
  406512:	458c      	cmp	ip, r1
  406514:	f000 8088 	beq.w	406628 <_malloc_r+0x494>
  406518:	684a      	ldr	r2, [r1, #4]
  40651a:	f022 0203 	bic.w	r2, r2, #3
  40651e:	4293      	cmp	r3, r2
  406520:	d273      	bcs.n	40660a <_malloc_r+0x476>
  406522:	6889      	ldr	r1, [r1, #8]
  406524:	458c      	cmp	ip, r1
  406526:	d1f7      	bne.n	406518 <_malloc_r+0x384>
  406528:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40652c:	687b      	ldr	r3, [r7, #4]
  40652e:	60e2      	str	r2, [r4, #12]
  406530:	f8c4 c008 	str.w	ip, [r4, #8]
  406534:	6094      	str	r4, [r2, #8]
  406536:	f8cc 400c 	str.w	r4, [ip, #12]
  40653a:	e68f      	b.n	40625c <_malloc_r+0xc8>
  40653c:	19a1      	adds	r1, r4, r6
  40653e:	f046 0c01 	orr.w	ip, r6, #1
  406542:	f042 0601 	orr.w	r6, r2, #1
  406546:	f8c4 c004 	str.w	ip, [r4, #4]
  40654a:	4628      	mov	r0, r5
  40654c:	6179      	str	r1, [r7, #20]
  40654e:	6139      	str	r1, [r7, #16]
  406550:	f8c1 e00c 	str.w	lr, [r1, #12]
  406554:	f8c1 e008 	str.w	lr, [r1, #8]
  406558:	604e      	str	r6, [r1, #4]
  40655a:	50e2      	str	r2, [r4, r3]
  40655c:	f000 f9f0 	bl	406940 <__malloc_unlock>
  406560:	3408      	adds	r4, #8
  406562:	e6dd      	b.n	406320 <_malloc_r+0x18c>
  406564:	687b      	ldr	r3, [r7, #4]
  406566:	e679      	b.n	40625c <_malloc_r+0xc8>
  406568:	f108 0801 	add.w	r8, r8, #1
  40656c:	f018 0f03 	tst.w	r8, #3
  406570:	f10c 0c08 	add.w	ip, ip, #8
  406574:	f47f ae85 	bne.w	406282 <_malloc_r+0xee>
  406578:	e02d      	b.n	4065d6 <_malloc_r+0x442>
  40657a:	68dc      	ldr	r4, [r3, #12]
  40657c:	42a3      	cmp	r3, r4
  40657e:	bf08      	it	eq
  406580:	3002      	addeq	r0, #2
  406582:	f43f ae3e 	beq.w	406202 <_malloc_r+0x6e>
  406586:	e6bb      	b.n	406300 <_malloc_r+0x16c>
  406588:	4419      	add	r1, r3
  40658a:	461c      	mov	r4, r3
  40658c:	684a      	ldr	r2, [r1, #4]
  40658e:	68db      	ldr	r3, [r3, #12]
  406590:	f854 6f08 	ldr.w	r6, [r4, #8]!
  406594:	f042 0201 	orr.w	r2, r2, #1
  406598:	604a      	str	r2, [r1, #4]
  40659a:	4628      	mov	r0, r5
  40659c:	60f3      	str	r3, [r6, #12]
  40659e:	609e      	str	r6, [r3, #8]
  4065a0:	f000 f9ce 	bl	406940 <__malloc_unlock>
  4065a4:	e6bc      	b.n	406320 <_malloc_r+0x18c>
  4065a6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4065aa:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4065ae:	00c3      	lsls	r3, r0, #3
  4065b0:	e612      	b.n	4061d8 <_malloc_r+0x44>
  4065b2:	099a      	lsrs	r2, r3, #6
  4065b4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4065b8:	00c9      	lsls	r1, r1, #3
  4065ba:	3238      	adds	r2, #56	; 0x38
  4065bc:	e7a4      	b.n	406508 <_malloc_r+0x374>
  4065be:	42bc      	cmp	r4, r7
  4065c0:	d054      	beq.n	40666c <_malloc_r+0x4d8>
  4065c2:	68bc      	ldr	r4, [r7, #8]
  4065c4:	6862      	ldr	r2, [r4, #4]
  4065c6:	f022 0203 	bic.w	r2, r2, #3
  4065ca:	e75d      	b.n	406488 <_malloc_r+0x2f4>
  4065cc:	f859 3908 	ldr.w	r3, [r9], #-8
  4065d0:	4599      	cmp	r9, r3
  4065d2:	f040 8086 	bne.w	4066e2 <_malloc_r+0x54e>
  4065d6:	f010 0f03 	tst.w	r0, #3
  4065da:	f100 30ff 	add.w	r0, r0, #4294967295
  4065de:	d1f5      	bne.n	4065cc <_malloc_r+0x438>
  4065e0:	687b      	ldr	r3, [r7, #4]
  4065e2:	ea23 0304 	bic.w	r3, r3, r4
  4065e6:	607b      	str	r3, [r7, #4]
  4065e8:	0064      	lsls	r4, r4, #1
  4065ea:	429c      	cmp	r4, r3
  4065ec:	f63f aec7 	bhi.w	40637e <_malloc_r+0x1ea>
  4065f0:	2c00      	cmp	r4, #0
  4065f2:	f43f aec4 	beq.w	40637e <_malloc_r+0x1ea>
  4065f6:	421c      	tst	r4, r3
  4065f8:	4640      	mov	r0, r8
  4065fa:	f47f ae3e 	bne.w	40627a <_malloc_r+0xe6>
  4065fe:	0064      	lsls	r4, r4, #1
  406600:	421c      	tst	r4, r3
  406602:	f100 0004 	add.w	r0, r0, #4
  406606:	d0fa      	beq.n	4065fe <_malloc_r+0x46a>
  406608:	e637      	b.n	40627a <_malloc_r+0xe6>
  40660a:	468c      	mov	ip, r1
  40660c:	e78c      	b.n	406528 <_malloc_r+0x394>
  40660e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  406612:	d815      	bhi.n	406640 <_malloc_r+0x4ac>
  406614:	0bf3      	lsrs	r3, r6, #15
  406616:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40661a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40661e:	00c3      	lsls	r3, r0, #3
  406620:	e5da      	b.n	4061d8 <_malloc_r+0x44>
  406622:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  406626:	e6ed      	b.n	406404 <_malloc_r+0x270>
  406628:	687b      	ldr	r3, [r7, #4]
  40662a:	1092      	asrs	r2, r2, #2
  40662c:	2101      	movs	r1, #1
  40662e:	fa01 f202 	lsl.w	r2, r1, r2
  406632:	4313      	orrs	r3, r2
  406634:	607b      	str	r3, [r7, #4]
  406636:	4662      	mov	r2, ip
  406638:	e779      	b.n	40652e <_malloc_r+0x39a>
  40663a:	2301      	movs	r3, #1
  40663c:	6053      	str	r3, [r2, #4]
  40663e:	e729      	b.n	406494 <_malloc_r+0x300>
  406640:	f240 5254 	movw	r2, #1364	; 0x554
  406644:	4293      	cmp	r3, r2
  406646:	d822      	bhi.n	40668e <_malloc_r+0x4fa>
  406648:	0cb3      	lsrs	r3, r6, #18
  40664a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40664e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  406652:	00c3      	lsls	r3, r0, #3
  406654:	e5c0      	b.n	4061d8 <_malloc_r+0x44>
  406656:	f103 0b10 	add.w	fp, r3, #16
  40665a:	e6ae      	b.n	4063ba <_malloc_r+0x226>
  40665c:	2a54      	cmp	r2, #84	; 0x54
  40665e:	d829      	bhi.n	4066b4 <_malloc_r+0x520>
  406660:	0b1a      	lsrs	r2, r3, #12
  406662:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  406666:	00c9      	lsls	r1, r1, #3
  406668:	326e      	adds	r2, #110	; 0x6e
  40666a:	e74d      	b.n	406508 <_malloc_r+0x374>
  40666c:	4b20      	ldr	r3, [pc, #128]	; (4066f0 <_malloc_r+0x55c>)
  40666e:	6819      	ldr	r1, [r3, #0]
  406670:	4459      	add	r1, fp
  406672:	6019      	str	r1, [r3, #0]
  406674:	e6b2      	b.n	4063dc <_malloc_r+0x248>
  406676:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40667a:	2800      	cmp	r0, #0
  40667c:	f47f aeae 	bne.w	4063dc <_malloc_r+0x248>
  406680:	eb08 030b 	add.w	r3, r8, fp
  406684:	68ba      	ldr	r2, [r7, #8]
  406686:	f043 0301 	orr.w	r3, r3, #1
  40668a:	6053      	str	r3, [r2, #4]
  40668c:	e6ee      	b.n	40646c <_malloc_r+0x2d8>
  40668e:	207f      	movs	r0, #127	; 0x7f
  406690:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  406694:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  406698:	e59e      	b.n	4061d8 <_malloc_r+0x44>
  40669a:	f104 0108 	add.w	r1, r4, #8
  40669e:	4628      	mov	r0, r5
  4066a0:	9300      	str	r3, [sp, #0]
  4066a2:	f000 febb 	bl	40741c <_free_r>
  4066a6:	9b00      	ldr	r3, [sp, #0]
  4066a8:	6819      	ldr	r1, [r3, #0]
  4066aa:	e6df      	b.n	40646c <_malloc_r+0x2d8>
  4066ac:	2001      	movs	r0, #1
  4066ae:	f04f 0900 	mov.w	r9, #0
  4066b2:	e6bc      	b.n	40642e <_malloc_r+0x29a>
  4066b4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4066b8:	d805      	bhi.n	4066c6 <_malloc_r+0x532>
  4066ba:	0bda      	lsrs	r2, r3, #15
  4066bc:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4066c0:	00c9      	lsls	r1, r1, #3
  4066c2:	3277      	adds	r2, #119	; 0x77
  4066c4:	e720      	b.n	406508 <_malloc_r+0x374>
  4066c6:	f240 5154 	movw	r1, #1364	; 0x554
  4066ca:	428a      	cmp	r2, r1
  4066cc:	d805      	bhi.n	4066da <_malloc_r+0x546>
  4066ce:	0c9a      	lsrs	r2, r3, #18
  4066d0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4066d4:	00c9      	lsls	r1, r1, #3
  4066d6:	327c      	adds	r2, #124	; 0x7c
  4066d8:	e716      	b.n	406508 <_malloc_r+0x374>
  4066da:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4066de:	227e      	movs	r2, #126	; 0x7e
  4066e0:	e712      	b.n	406508 <_malloc_r+0x374>
  4066e2:	687b      	ldr	r3, [r7, #4]
  4066e4:	e780      	b.n	4065e8 <_malloc_r+0x454>
  4066e6:	08f0      	lsrs	r0, r6, #3
  4066e8:	f106 0308 	add.w	r3, r6, #8
  4066ec:	e600      	b.n	4062f0 <_malloc_r+0x15c>
  4066ee:	bf00      	nop
  4066f0:	20000a80 	.word	0x20000a80
	...

00406700 <memchr>:
  406700:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406704:	2a10      	cmp	r2, #16
  406706:	db2b      	blt.n	406760 <memchr+0x60>
  406708:	f010 0f07 	tst.w	r0, #7
  40670c:	d008      	beq.n	406720 <memchr+0x20>
  40670e:	f810 3b01 	ldrb.w	r3, [r0], #1
  406712:	3a01      	subs	r2, #1
  406714:	428b      	cmp	r3, r1
  406716:	d02d      	beq.n	406774 <memchr+0x74>
  406718:	f010 0f07 	tst.w	r0, #7
  40671c:	b342      	cbz	r2, 406770 <memchr+0x70>
  40671e:	d1f6      	bne.n	40670e <memchr+0xe>
  406720:	b4f0      	push	{r4, r5, r6, r7}
  406722:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  406726:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40672a:	f022 0407 	bic.w	r4, r2, #7
  40672e:	f07f 0700 	mvns.w	r7, #0
  406732:	2300      	movs	r3, #0
  406734:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  406738:	3c08      	subs	r4, #8
  40673a:	ea85 0501 	eor.w	r5, r5, r1
  40673e:	ea86 0601 	eor.w	r6, r6, r1
  406742:	fa85 f547 	uadd8	r5, r5, r7
  406746:	faa3 f587 	sel	r5, r3, r7
  40674a:	fa86 f647 	uadd8	r6, r6, r7
  40674e:	faa5 f687 	sel	r6, r5, r7
  406752:	b98e      	cbnz	r6, 406778 <memchr+0x78>
  406754:	d1ee      	bne.n	406734 <memchr+0x34>
  406756:	bcf0      	pop	{r4, r5, r6, r7}
  406758:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40675c:	f002 0207 	and.w	r2, r2, #7
  406760:	b132      	cbz	r2, 406770 <memchr+0x70>
  406762:	f810 3b01 	ldrb.w	r3, [r0], #1
  406766:	3a01      	subs	r2, #1
  406768:	ea83 0301 	eor.w	r3, r3, r1
  40676c:	b113      	cbz	r3, 406774 <memchr+0x74>
  40676e:	d1f8      	bne.n	406762 <memchr+0x62>
  406770:	2000      	movs	r0, #0
  406772:	4770      	bx	lr
  406774:	3801      	subs	r0, #1
  406776:	4770      	bx	lr
  406778:	2d00      	cmp	r5, #0
  40677a:	bf06      	itte	eq
  40677c:	4635      	moveq	r5, r6
  40677e:	3803      	subeq	r0, #3
  406780:	3807      	subne	r0, #7
  406782:	f015 0f01 	tst.w	r5, #1
  406786:	d107      	bne.n	406798 <memchr+0x98>
  406788:	3001      	adds	r0, #1
  40678a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40678e:	bf02      	ittt	eq
  406790:	3001      	addeq	r0, #1
  406792:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  406796:	3001      	addeq	r0, #1
  406798:	bcf0      	pop	{r4, r5, r6, r7}
  40679a:	3801      	subs	r0, #1
  40679c:	4770      	bx	lr
  40679e:	bf00      	nop

004067a0 <memcmp>:
  4067a0:	2a03      	cmp	r2, #3
  4067a2:	b470      	push	{r4, r5, r6}
  4067a4:	d922      	bls.n	4067ec <memcmp+0x4c>
  4067a6:	ea40 0301 	orr.w	r3, r0, r1
  4067aa:	079b      	lsls	r3, r3, #30
  4067ac:	d011      	beq.n	4067d2 <memcmp+0x32>
  4067ae:	7803      	ldrb	r3, [r0, #0]
  4067b0:	780c      	ldrb	r4, [r1, #0]
  4067b2:	42a3      	cmp	r3, r4
  4067b4:	d11d      	bne.n	4067f2 <memcmp+0x52>
  4067b6:	440a      	add	r2, r1
  4067b8:	3101      	adds	r1, #1
  4067ba:	e005      	b.n	4067c8 <memcmp+0x28>
  4067bc:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4067c0:	f811 4b01 	ldrb.w	r4, [r1], #1
  4067c4:	42a3      	cmp	r3, r4
  4067c6:	d114      	bne.n	4067f2 <memcmp+0x52>
  4067c8:	4291      	cmp	r1, r2
  4067ca:	d1f7      	bne.n	4067bc <memcmp+0x1c>
  4067cc:	2000      	movs	r0, #0
  4067ce:	bc70      	pop	{r4, r5, r6}
  4067d0:	4770      	bx	lr
  4067d2:	680d      	ldr	r5, [r1, #0]
  4067d4:	6806      	ldr	r6, [r0, #0]
  4067d6:	42ae      	cmp	r6, r5
  4067d8:	460c      	mov	r4, r1
  4067da:	4603      	mov	r3, r0
  4067dc:	f101 0104 	add.w	r1, r1, #4
  4067e0:	f100 0004 	add.w	r0, r0, #4
  4067e4:	d108      	bne.n	4067f8 <memcmp+0x58>
  4067e6:	3a04      	subs	r2, #4
  4067e8:	2a03      	cmp	r2, #3
  4067ea:	d8f2      	bhi.n	4067d2 <memcmp+0x32>
  4067ec:	2a00      	cmp	r2, #0
  4067ee:	d1de      	bne.n	4067ae <memcmp+0xe>
  4067f0:	e7ec      	b.n	4067cc <memcmp+0x2c>
  4067f2:	1b18      	subs	r0, r3, r4
  4067f4:	bc70      	pop	{r4, r5, r6}
  4067f6:	4770      	bx	lr
  4067f8:	4621      	mov	r1, r4
  4067fa:	4618      	mov	r0, r3
  4067fc:	e7d7      	b.n	4067ae <memcmp+0xe>
  4067fe:	bf00      	nop

00406800 <memcpy>:
  406800:	4684      	mov	ip, r0
  406802:	ea41 0300 	orr.w	r3, r1, r0
  406806:	f013 0303 	ands.w	r3, r3, #3
  40680a:	d16d      	bne.n	4068e8 <memcpy+0xe8>
  40680c:	3a40      	subs	r2, #64	; 0x40
  40680e:	d341      	bcc.n	406894 <memcpy+0x94>
  406810:	f851 3b04 	ldr.w	r3, [r1], #4
  406814:	f840 3b04 	str.w	r3, [r0], #4
  406818:	f851 3b04 	ldr.w	r3, [r1], #4
  40681c:	f840 3b04 	str.w	r3, [r0], #4
  406820:	f851 3b04 	ldr.w	r3, [r1], #4
  406824:	f840 3b04 	str.w	r3, [r0], #4
  406828:	f851 3b04 	ldr.w	r3, [r1], #4
  40682c:	f840 3b04 	str.w	r3, [r0], #4
  406830:	f851 3b04 	ldr.w	r3, [r1], #4
  406834:	f840 3b04 	str.w	r3, [r0], #4
  406838:	f851 3b04 	ldr.w	r3, [r1], #4
  40683c:	f840 3b04 	str.w	r3, [r0], #4
  406840:	f851 3b04 	ldr.w	r3, [r1], #4
  406844:	f840 3b04 	str.w	r3, [r0], #4
  406848:	f851 3b04 	ldr.w	r3, [r1], #4
  40684c:	f840 3b04 	str.w	r3, [r0], #4
  406850:	f851 3b04 	ldr.w	r3, [r1], #4
  406854:	f840 3b04 	str.w	r3, [r0], #4
  406858:	f851 3b04 	ldr.w	r3, [r1], #4
  40685c:	f840 3b04 	str.w	r3, [r0], #4
  406860:	f851 3b04 	ldr.w	r3, [r1], #4
  406864:	f840 3b04 	str.w	r3, [r0], #4
  406868:	f851 3b04 	ldr.w	r3, [r1], #4
  40686c:	f840 3b04 	str.w	r3, [r0], #4
  406870:	f851 3b04 	ldr.w	r3, [r1], #4
  406874:	f840 3b04 	str.w	r3, [r0], #4
  406878:	f851 3b04 	ldr.w	r3, [r1], #4
  40687c:	f840 3b04 	str.w	r3, [r0], #4
  406880:	f851 3b04 	ldr.w	r3, [r1], #4
  406884:	f840 3b04 	str.w	r3, [r0], #4
  406888:	f851 3b04 	ldr.w	r3, [r1], #4
  40688c:	f840 3b04 	str.w	r3, [r0], #4
  406890:	3a40      	subs	r2, #64	; 0x40
  406892:	d2bd      	bcs.n	406810 <memcpy+0x10>
  406894:	3230      	adds	r2, #48	; 0x30
  406896:	d311      	bcc.n	4068bc <memcpy+0xbc>
  406898:	f851 3b04 	ldr.w	r3, [r1], #4
  40689c:	f840 3b04 	str.w	r3, [r0], #4
  4068a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4068a4:	f840 3b04 	str.w	r3, [r0], #4
  4068a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4068ac:	f840 3b04 	str.w	r3, [r0], #4
  4068b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4068b4:	f840 3b04 	str.w	r3, [r0], #4
  4068b8:	3a10      	subs	r2, #16
  4068ba:	d2ed      	bcs.n	406898 <memcpy+0x98>
  4068bc:	320c      	adds	r2, #12
  4068be:	d305      	bcc.n	4068cc <memcpy+0xcc>
  4068c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4068c4:	f840 3b04 	str.w	r3, [r0], #4
  4068c8:	3a04      	subs	r2, #4
  4068ca:	d2f9      	bcs.n	4068c0 <memcpy+0xc0>
  4068cc:	3204      	adds	r2, #4
  4068ce:	d008      	beq.n	4068e2 <memcpy+0xe2>
  4068d0:	07d2      	lsls	r2, r2, #31
  4068d2:	bf1c      	itt	ne
  4068d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4068d8:	f800 3b01 	strbne.w	r3, [r0], #1
  4068dc:	d301      	bcc.n	4068e2 <memcpy+0xe2>
  4068de:	880b      	ldrh	r3, [r1, #0]
  4068e0:	8003      	strh	r3, [r0, #0]
  4068e2:	4660      	mov	r0, ip
  4068e4:	4770      	bx	lr
  4068e6:	bf00      	nop
  4068e8:	2a08      	cmp	r2, #8
  4068ea:	d313      	bcc.n	406914 <memcpy+0x114>
  4068ec:	078b      	lsls	r3, r1, #30
  4068ee:	d08d      	beq.n	40680c <memcpy+0xc>
  4068f0:	f010 0303 	ands.w	r3, r0, #3
  4068f4:	d08a      	beq.n	40680c <memcpy+0xc>
  4068f6:	f1c3 0304 	rsb	r3, r3, #4
  4068fa:	1ad2      	subs	r2, r2, r3
  4068fc:	07db      	lsls	r3, r3, #31
  4068fe:	bf1c      	itt	ne
  406900:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406904:	f800 3b01 	strbne.w	r3, [r0], #1
  406908:	d380      	bcc.n	40680c <memcpy+0xc>
  40690a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40690e:	f820 3b02 	strh.w	r3, [r0], #2
  406912:	e77b      	b.n	40680c <memcpy+0xc>
  406914:	3a04      	subs	r2, #4
  406916:	d3d9      	bcc.n	4068cc <memcpy+0xcc>
  406918:	3a01      	subs	r2, #1
  40691a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40691e:	f800 3b01 	strb.w	r3, [r0], #1
  406922:	d2f9      	bcs.n	406918 <memcpy+0x118>
  406924:	780b      	ldrb	r3, [r1, #0]
  406926:	7003      	strb	r3, [r0, #0]
  406928:	784b      	ldrb	r3, [r1, #1]
  40692a:	7043      	strb	r3, [r0, #1]
  40692c:	788b      	ldrb	r3, [r1, #2]
  40692e:	7083      	strb	r3, [r0, #2]
  406930:	4660      	mov	r0, ip
  406932:	4770      	bx	lr

00406934 <__malloc_lock>:
  406934:	4801      	ldr	r0, [pc, #4]	; (40693c <__malloc_lock+0x8>)
  406936:	f7ff bc29 	b.w	40618c <__retarget_lock_acquire_recursive>
  40693a:	bf00      	nop
  40693c:	2000d20c 	.word	0x2000d20c

00406940 <__malloc_unlock>:
  406940:	4801      	ldr	r0, [pc, #4]	; (406948 <__malloc_unlock+0x8>)
  406942:	f7ff bc25 	b.w	406190 <__retarget_lock_release_recursive>
  406946:	bf00      	nop
  406948:	2000d20c 	.word	0x2000d20c

0040694c <_Balloc>:
  40694c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40694e:	b570      	push	{r4, r5, r6, lr}
  406950:	4605      	mov	r5, r0
  406952:	460c      	mov	r4, r1
  406954:	b14b      	cbz	r3, 40696a <_Balloc+0x1e>
  406956:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40695a:	b180      	cbz	r0, 40697e <_Balloc+0x32>
  40695c:	6802      	ldr	r2, [r0, #0]
  40695e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  406962:	2300      	movs	r3, #0
  406964:	6103      	str	r3, [r0, #16]
  406966:	60c3      	str	r3, [r0, #12]
  406968:	bd70      	pop	{r4, r5, r6, pc}
  40696a:	2221      	movs	r2, #33	; 0x21
  40696c:	2104      	movs	r1, #4
  40696e:	f000 fcd5 	bl	40731c <_calloc_r>
  406972:	64e8      	str	r0, [r5, #76]	; 0x4c
  406974:	4603      	mov	r3, r0
  406976:	2800      	cmp	r0, #0
  406978:	d1ed      	bne.n	406956 <_Balloc+0xa>
  40697a:	2000      	movs	r0, #0
  40697c:	bd70      	pop	{r4, r5, r6, pc}
  40697e:	2101      	movs	r1, #1
  406980:	fa01 f604 	lsl.w	r6, r1, r4
  406984:	1d72      	adds	r2, r6, #5
  406986:	4628      	mov	r0, r5
  406988:	0092      	lsls	r2, r2, #2
  40698a:	f000 fcc7 	bl	40731c <_calloc_r>
  40698e:	2800      	cmp	r0, #0
  406990:	d0f3      	beq.n	40697a <_Balloc+0x2e>
  406992:	6044      	str	r4, [r0, #4]
  406994:	6086      	str	r6, [r0, #8]
  406996:	e7e4      	b.n	406962 <_Balloc+0x16>

00406998 <_Bfree>:
  406998:	b131      	cbz	r1, 4069a8 <_Bfree+0x10>
  40699a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40699c:	684a      	ldr	r2, [r1, #4]
  40699e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4069a2:	6008      	str	r0, [r1, #0]
  4069a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4069a8:	4770      	bx	lr
  4069aa:	bf00      	nop

004069ac <__multadd>:
  4069ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  4069ae:	690c      	ldr	r4, [r1, #16]
  4069b0:	b083      	sub	sp, #12
  4069b2:	460d      	mov	r5, r1
  4069b4:	4606      	mov	r6, r0
  4069b6:	f101 0e14 	add.w	lr, r1, #20
  4069ba:	2700      	movs	r7, #0
  4069bc:	f8de 0000 	ldr.w	r0, [lr]
  4069c0:	b281      	uxth	r1, r0
  4069c2:	fb02 3301 	mla	r3, r2, r1, r3
  4069c6:	0c01      	lsrs	r1, r0, #16
  4069c8:	0c18      	lsrs	r0, r3, #16
  4069ca:	fb02 0101 	mla	r1, r2, r1, r0
  4069ce:	b29b      	uxth	r3, r3
  4069d0:	3701      	adds	r7, #1
  4069d2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4069d6:	42bc      	cmp	r4, r7
  4069d8:	f84e 3b04 	str.w	r3, [lr], #4
  4069dc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4069e0:	dcec      	bgt.n	4069bc <__multadd+0x10>
  4069e2:	b13b      	cbz	r3, 4069f4 <__multadd+0x48>
  4069e4:	68aa      	ldr	r2, [r5, #8]
  4069e6:	4294      	cmp	r4, r2
  4069e8:	da07      	bge.n	4069fa <__multadd+0x4e>
  4069ea:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4069ee:	3401      	adds	r4, #1
  4069f0:	6153      	str	r3, [r2, #20]
  4069f2:	612c      	str	r4, [r5, #16]
  4069f4:	4628      	mov	r0, r5
  4069f6:	b003      	add	sp, #12
  4069f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4069fa:	6869      	ldr	r1, [r5, #4]
  4069fc:	9301      	str	r3, [sp, #4]
  4069fe:	3101      	adds	r1, #1
  406a00:	4630      	mov	r0, r6
  406a02:	f7ff ffa3 	bl	40694c <_Balloc>
  406a06:	692a      	ldr	r2, [r5, #16]
  406a08:	3202      	adds	r2, #2
  406a0a:	f105 010c 	add.w	r1, r5, #12
  406a0e:	4607      	mov	r7, r0
  406a10:	0092      	lsls	r2, r2, #2
  406a12:	300c      	adds	r0, #12
  406a14:	f7ff fef4 	bl	406800 <memcpy>
  406a18:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  406a1a:	6869      	ldr	r1, [r5, #4]
  406a1c:	9b01      	ldr	r3, [sp, #4]
  406a1e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  406a22:	6028      	str	r0, [r5, #0]
  406a24:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  406a28:	463d      	mov	r5, r7
  406a2a:	e7de      	b.n	4069ea <__multadd+0x3e>

00406a2c <__hi0bits>:
  406a2c:	0c02      	lsrs	r2, r0, #16
  406a2e:	0412      	lsls	r2, r2, #16
  406a30:	4603      	mov	r3, r0
  406a32:	b9b2      	cbnz	r2, 406a62 <__hi0bits+0x36>
  406a34:	0403      	lsls	r3, r0, #16
  406a36:	2010      	movs	r0, #16
  406a38:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406a3c:	bf04      	itt	eq
  406a3e:	021b      	lsleq	r3, r3, #8
  406a40:	3008      	addeq	r0, #8
  406a42:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  406a46:	bf04      	itt	eq
  406a48:	011b      	lsleq	r3, r3, #4
  406a4a:	3004      	addeq	r0, #4
  406a4c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406a50:	bf04      	itt	eq
  406a52:	009b      	lsleq	r3, r3, #2
  406a54:	3002      	addeq	r0, #2
  406a56:	2b00      	cmp	r3, #0
  406a58:	db02      	blt.n	406a60 <__hi0bits+0x34>
  406a5a:	005b      	lsls	r3, r3, #1
  406a5c:	d403      	bmi.n	406a66 <__hi0bits+0x3a>
  406a5e:	2020      	movs	r0, #32
  406a60:	4770      	bx	lr
  406a62:	2000      	movs	r0, #0
  406a64:	e7e8      	b.n	406a38 <__hi0bits+0xc>
  406a66:	3001      	adds	r0, #1
  406a68:	4770      	bx	lr
  406a6a:	bf00      	nop

00406a6c <__lo0bits>:
  406a6c:	6803      	ldr	r3, [r0, #0]
  406a6e:	f013 0207 	ands.w	r2, r3, #7
  406a72:	4601      	mov	r1, r0
  406a74:	d007      	beq.n	406a86 <__lo0bits+0x1a>
  406a76:	07da      	lsls	r2, r3, #31
  406a78:	d421      	bmi.n	406abe <__lo0bits+0x52>
  406a7a:	0798      	lsls	r0, r3, #30
  406a7c:	d421      	bmi.n	406ac2 <__lo0bits+0x56>
  406a7e:	089b      	lsrs	r3, r3, #2
  406a80:	600b      	str	r3, [r1, #0]
  406a82:	2002      	movs	r0, #2
  406a84:	4770      	bx	lr
  406a86:	b298      	uxth	r0, r3
  406a88:	b198      	cbz	r0, 406ab2 <__lo0bits+0x46>
  406a8a:	4610      	mov	r0, r2
  406a8c:	f013 0fff 	tst.w	r3, #255	; 0xff
  406a90:	bf04      	itt	eq
  406a92:	0a1b      	lsreq	r3, r3, #8
  406a94:	3008      	addeq	r0, #8
  406a96:	071a      	lsls	r2, r3, #28
  406a98:	bf04      	itt	eq
  406a9a:	091b      	lsreq	r3, r3, #4
  406a9c:	3004      	addeq	r0, #4
  406a9e:	079a      	lsls	r2, r3, #30
  406aa0:	bf04      	itt	eq
  406aa2:	089b      	lsreq	r3, r3, #2
  406aa4:	3002      	addeq	r0, #2
  406aa6:	07da      	lsls	r2, r3, #31
  406aa8:	d407      	bmi.n	406aba <__lo0bits+0x4e>
  406aaa:	085b      	lsrs	r3, r3, #1
  406aac:	d104      	bne.n	406ab8 <__lo0bits+0x4c>
  406aae:	2020      	movs	r0, #32
  406ab0:	4770      	bx	lr
  406ab2:	0c1b      	lsrs	r3, r3, #16
  406ab4:	2010      	movs	r0, #16
  406ab6:	e7e9      	b.n	406a8c <__lo0bits+0x20>
  406ab8:	3001      	adds	r0, #1
  406aba:	600b      	str	r3, [r1, #0]
  406abc:	4770      	bx	lr
  406abe:	2000      	movs	r0, #0
  406ac0:	4770      	bx	lr
  406ac2:	085b      	lsrs	r3, r3, #1
  406ac4:	600b      	str	r3, [r1, #0]
  406ac6:	2001      	movs	r0, #1
  406ac8:	4770      	bx	lr
  406aca:	bf00      	nop

00406acc <__i2b>:
  406acc:	b510      	push	{r4, lr}
  406ace:	460c      	mov	r4, r1
  406ad0:	2101      	movs	r1, #1
  406ad2:	f7ff ff3b 	bl	40694c <_Balloc>
  406ad6:	2201      	movs	r2, #1
  406ad8:	6144      	str	r4, [r0, #20]
  406ada:	6102      	str	r2, [r0, #16]
  406adc:	bd10      	pop	{r4, pc}
  406ade:	bf00      	nop

00406ae0 <__multiply>:
  406ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406ae4:	690c      	ldr	r4, [r1, #16]
  406ae6:	6915      	ldr	r5, [r2, #16]
  406ae8:	42ac      	cmp	r4, r5
  406aea:	b083      	sub	sp, #12
  406aec:	468b      	mov	fp, r1
  406aee:	4616      	mov	r6, r2
  406af0:	da04      	bge.n	406afc <__multiply+0x1c>
  406af2:	4622      	mov	r2, r4
  406af4:	46b3      	mov	fp, r6
  406af6:	462c      	mov	r4, r5
  406af8:	460e      	mov	r6, r1
  406afa:	4615      	mov	r5, r2
  406afc:	f8db 3008 	ldr.w	r3, [fp, #8]
  406b00:	f8db 1004 	ldr.w	r1, [fp, #4]
  406b04:	eb04 0805 	add.w	r8, r4, r5
  406b08:	4598      	cmp	r8, r3
  406b0a:	bfc8      	it	gt
  406b0c:	3101      	addgt	r1, #1
  406b0e:	f7ff ff1d 	bl	40694c <_Balloc>
  406b12:	f100 0914 	add.w	r9, r0, #20
  406b16:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  406b1a:	45d1      	cmp	r9, sl
  406b1c:	9000      	str	r0, [sp, #0]
  406b1e:	d205      	bcs.n	406b2c <__multiply+0x4c>
  406b20:	464b      	mov	r3, r9
  406b22:	2100      	movs	r1, #0
  406b24:	f843 1b04 	str.w	r1, [r3], #4
  406b28:	459a      	cmp	sl, r3
  406b2a:	d8fb      	bhi.n	406b24 <__multiply+0x44>
  406b2c:	f106 0c14 	add.w	ip, r6, #20
  406b30:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  406b34:	f10b 0b14 	add.w	fp, fp, #20
  406b38:	459c      	cmp	ip, r3
  406b3a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406b3e:	d24c      	bcs.n	406bda <__multiply+0xfa>
  406b40:	f8cd a004 	str.w	sl, [sp, #4]
  406b44:	469a      	mov	sl, r3
  406b46:	f8dc 5000 	ldr.w	r5, [ip]
  406b4a:	b2af      	uxth	r7, r5
  406b4c:	b1ef      	cbz	r7, 406b8a <__multiply+0xaa>
  406b4e:	2100      	movs	r1, #0
  406b50:	464d      	mov	r5, r9
  406b52:	465e      	mov	r6, fp
  406b54:	460c      	mov	r4, r1
  406b56:	f856 2b04 	ldr.w	r2, [r6], #4
  406b5a:	6828      	ldr	r0, [r5, #0]
  406b5c:	b293      	uxth	r3, r2
  406b5e:	b281      	uxth	r1, r0
  406b60:	fb07 1303 	mla	r3, r7, r3, r1
  406b64:	0c12      	lsrs	r2, r2, #16
  406b66:	0c01      	lsrs	r1, r0, #16
  406b68:	4423      	add	r3, r4
  406b6a:	fb07 1102 	mla	r1, r7, r2, r1
  406b6e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  406b72:	b29b      	uxth	r3, r3
  406b74:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  406b78:	45b6      	cmp	lr, r6
  406b7a:	f845 3b04 	str.w	r3, [r5], #4
  406b7e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  406b82:	d8e8      	bhi.n	406b56 <__multiply+0x76>
  406b84:	602c      	str	r4, [r5, #0]
  406b86:	f8dc 5000 	ldr.w	r5, [ip]
  406b8a:	0c2d      	lsrs	r5, r5, #16
  406b8c:	d01d      	beq.n	406bca <__multiply+0xea>
  406b8e:	f8d9 3000 	ldr.w	r3, [r9]
  406b92:	4648      	mov	r0, r9
  406b94:	461c      	mov	r4, r3
  406b96:	4659      	mov	r1, fp
  406b98:	2200      	movs	r2, #0
  406b9a:	880e      	ldrh	r6, [r1, #0]
  406b9c:	0c24      	lsrs	r4, r4, #16
  406b9e:	fb05 4406 	mla	r4, r5, r6, r4
  406ba2:	4422      	add	r2, r4
  406ba4:	b29b      	uxth	r3, r3
  406ba6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  406baa:	f840 3b04 	str.w	r3, [r0], #4
  406bae:	f851 3b04 	ldr.w	r3, [r1], #4
  406bb2:	6804      	ldr	r4, [r0, #0]
  406bb4:	0c1b      	lsrs	r3, r3, #16
  406bb6:	b2a6      	uxth	r6, r4
  406bb8:	fb05 6303 	mla	r3, r5, r3, r6
  406bbc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  406bc0:	458e      	cmp	lr, r1
  406bc2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  406bc6:	d8e8      	bhi.n	406b9a <__multiply+0xba>
  406bc8:	6003      	str	r3, [r0, #0]
  406bca:	f10c 0c04 	add.w	ip, ip, #4
  406bce:	45e2      	cmp	sl, ip
  406bd0:	f109 0904 	add.w	r9, r9, #4
  406bd4:	d8b7      	bhi.n	406b46 <__multiply+0x66>
  406bd6:	f8dd a004 	ldr.w	sl, [sp, #4]
  406bda:	f1b8 0f00 	cmp.w	r8, #0
  406bde:	dd0b      	ble.n	406bf8 <__multiply+0x118>
  406be0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  406be4:	f1aa 0a04 	sub.w	sl, sl, #4
  406be8:	b11b      	cbz	r3, 406bf2 <__multiply+0x112>
  406bea:	e005      	b.n	406bf8 <__multiply+0x118>
  406bec:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  406bf0:	b913      	cbnz	r3, 406bf8 <__multiply+0x118>
  406bf2:	f1b8 0801 	subs.w	r8, r8, #1
  406bf6:	d1f9      	bne.n	406bec <__multiply+0x10c>
  406bf8:	9800      	ldr	r0, [sp, #0]
  406bfa:	f8c0 8010 	str.w	r8, [r0, #16]
  406bfe:	b003      	add	sp, #12
  406c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406c04 <__pow5mult>:
  406c04:	f012 0303 	ands.w	r3, r2, #3
  406c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406c0c:	4614      	mov	r4, r2
  406c0e:	4607      	mov	r7, r0
  406c10:	d12e      	bne.n	406c70 <__pow5mult+0x6c>
  406c12:	460d      	mov	r5, r1
  406c14:	10a4      	asrs	r4, r4, #2
  406c16:	d01c      	beq.n	406c52 <__pow5mult+0x4e>
  406c18:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  406c1a:	b396      	cbz	r6, 406c82 <__pow5mult+0x7e>
  406c1c:	07e3      	lsls	r3, r4, #31
  406c1e:	f04f 0800 	mov.w	r8, #0
  406c22:	d406      	bmi.n	406c32 <__pow5mult+0x2e>
  406c24:	1064      	asrs	r4, r4, #1
  406c26:	d014      	beq.n	406c52 <__pow5mult+0x4e>
  406c28:	6830      	ldr	r0, [r6, #0]
  406c2a:	b1a8      	cbz	r0, 406c58 <__pow5mult+0x54>
  406c2c:	4606      	mov	r6, r0
  406c2e:	07e3      	lsls	r3, r4, #31
  406c30:	d5f8      	bpl.n	406c24 <__pow5mult+0x20>
  406c32:	4632      	mov	r2, r6
  406c34:	4629      	mov	r1, r5
  406c36:	4638      	mov	r0, r7
  406c38:	f7ff ff52 	bl	406ae0 <__multiply>
  406c3c:	b1b5      	cbz	r5, 406c6c <__pow5mult+0x68>
  406c3e:	686a      	ldr	r2, [r5, #4]
  406c40:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406c42:	1064      	asrs	r4, r4, #1
  406c44:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406c48:	6029      	str	r1, [r5, #0]
  406c4a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  406c4e:	4605      	mov	r5, r0
  406c50:	d1ea      	bne.n	406c28 <__pow5mult+0x24>
  406c52:	4628      	mov	r0, r5
  406c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406c58:	4632      	mov	r2, r6
  406c5a:	4631      	mov	r1, r6
  406c5c:	4638      	mov	r0, r7
  406c5e:	f7ff ff3f 	bl	406ae0 <__multiply>
  406c62:	6030      	str	r0, [r6, #0]
  406c64:	f8c0 8000 	str.w	r8, [r0]
  406c68:	4606      	mov	r6, r0
  406c6a:	e7e0      	b.n	406c2e <__pow5mult+0x2a>
  406c6c:	4605      	mov	r5, r0
  406c6e:	e7d9      	b.n	406c24 <__pow5mult+0x20>
  406c70:	1e5a      	subs	r2, r3, #1
  406c72:	4d0b      	ldr	r5, [pc, #44]	; (406ca0 <__pow5mult+0x9c>)
  406c74:	2300      	movs	r3, #0
  406c76:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  406c7a:	f7ff fe97 	bl	4069ac <__multadd>
  406c7e:	4605      	mov	r5, r0
  406c80:	e7c8      	b.n	406c14 <__pow5mult+0x10>
  406c82:	2101      	movs	r1, #1
  406c84:	4638      	mov	r0, r7
  406c86:	f7ff fe61 	bl	40694c <_Balloc>
  406c8a:	f240 2171 	movw	r1, #625	; 0x271
  406c8e:	2201      	movs	r2, #1
  406c90:	2300      	movs	r3, #0
  406c92:	6141      	str	r1, [r0, #20]
  406c94:	6102      	str	r2, [r0, #16]
  406c96:	4606      	mov	r6, r0
  406c98:	64b8      	str	r0, [r7, #72]	; 0x48
  406c9a:	6003      	str	r3, [r0, #0]
  406c9c:	e7be      	b.n	406c1c <__pow5mult+0x18>
  406c9e:	bf00      	nop
  406ca0:	00409220 	.word	0x00409220

00406ca4 <__lshift>:
  406ca4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406ca8:	4691      	mov	r9, r2
  406caa:	690a      	ldr	r2, [r1, #16]
  406cac:	688b      	ldr	r3, [r1, #8]
  406cae:	ea4f 1469 	mov.w	r4, r9, asr #5
  406cb2:	eb04 0802 	add.w	r8, r4, r2
  406cb6:	f108 0501 	add.w	r5, r8, #1
  406cba:	429d      	cmp	r5, r3
  406cbc:	460e      	mov	r6, r1
  406cbe:	4607      	mov	r7, r0
  406cc0:	6849      	ldr	r1, [r1, #4]
  406cc2:	dd04      	ble.n	406cce <__lshift+0x2a>
  406cc4:	005b      	lsls	r3, r3, #1
  406cc6:	429d      	cmp	r5, r3
  406cc8:	f101 0101 	add.w	r1, r1, #1
  406ccc:	dcfa      	bgt.n	406cc4 <__lshift+0x20>
  406cce:	4638      	mov	r0, r7
  406cd0:	f7ff fe3c 	bl	40694c <_Balloc>
  406cd4:	2c00      	cmp	r4, #0
  406cd6:	f100 0314 	add.w	r3, r0, #20
  406cda:	dd06      	ble.n	406cea <__lshift+0x46>
  406cdc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  406ce0:	2100      	movs	r1, #0
  406ce2:	f843 1b04 	str.w	r1, [r3], #4
  406ce6:	429a      	cmp	r2, r3
  406ce8:	d1fb      	bne.n	406ce2 <__lshift+0x3e>
  406cea:	6934      	ldr	r4, [r6, #16]
  406cec:	f106 0114 	add.w	r1, r6, #20
  406cf0:	f019 091f 	ands.w	r9, r9, #31
  406cf4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  406cf8:	d01d      	beq.n	406d36 <__lshift+0x92>
  406cfa:	f1c9 0c20 	rsb	ip, r9, #32
  406cfe:	2200      	movs	r2, #0
  406d00:	680c      	ldr	r4, [r1, #0]
  406d02:	fa04 f409 	lsl.w	r4, r4, r9
  406d06:	4314      	orrs	r4, r2
  406d08:	f843 4b04 	str.w	r4, [r3], #4
  406d0c:	f851 2b04 	ldr.w	r2, [r1], #4
  406d10:	458e      	cmp	lr, r1
  406d12:	fa22 f20c 	lsr.w	r2, r2, ip
  406d16:	d8f3      	bhi.n	406d00 <__lshift+0x5c>
  406d18:	601a      	str	r2, [r3, #0]
  406d1a:	b10a      	cbz	r2, 406d20 <__lshift+0x7c>
  406d1c:	f108 0502 	add.w	r5, r8, #2
  406d20:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  406d22:	6872      	ldr	r2, [r6, #4]
  406d24:	3d01      	subs	r5, #1
  406d26:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  406d2a:	6105      	str	r5, [r0, #16]
  406d2c:	6031      	str	r1, [r6, #0]
  406d2e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  406d32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406d36:	3b04      	subs	r3, #4
  406d38:	f851 2b04 	ldr.w	r2, [r1], #4
  406d3c:	f843 2f04 	str.w	r2, [r3, #4]!
  406d40:	458e      	cmp	lr, r1
  406d42:	d8f9      	bhi.n	406d38 <__lshift+0x94>
  406d44:	e7ec      	b.n	406d20 <__lshift+0x7c>
  406d46:	bf00      	nop

00406d48 <__mcmp>:
  406d48:	b430      	push	{r4, r5}
  406d4a:	690b      	ldr	r3, [r1, #16]
  406d4c:	4605      	mov	r5, r0
  406d4e:	6900      	ldr	r0, [r0, #16]
  406d50:	1ac0      	subs	r0, r0, r3
  406d52:	d10f      	bne.n	406d74 <__mcmp+0x2c>
  406d54:	009b      	lsls	r3, r3, #2
  406d56:	3514      	adds	r5, #20
  406d58:	3114      	adds	r1, #20
  406d5a:	4419      	add	r1, r3
  406d5c:	442b      	add	r3, r5
  406d5e:	e001      	b.n	406d64 <__mcmp+0x1c>
  406d60:	429d      	cmp	r5, r3
  406d62:	d207      	bcs.n	406d74 <__mcmp+0x2c>
  406d64:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  406d68:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  406d6c:	4294      	cmp	r4, r2
  406d6e:	d0f7      	beq.n	406d60 <__mcmp+0x18>
  406d70:	d302      	bcc.n	406d78 <__mcmp+0x30>
  406d72:	2001      	movs	r0, #1
  406d74:	bc30      	pop	{r4, r5}
  406d76:	4770      	bx	lr
  406d78:	f04f 30ff 	mov.w	r0, #4294967295
  406d7c:	e7fa      	b.n	406d74 <__mcmp+0x2c>
  406d7e:	bf00      	nop

00406d80 <__mdiff>:
  406d80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406d84:	690f      	ldr	r7, [r1, #16]
  406d86:	460e      	mov	r6, r1
  406d88:	6911      	ldr	r1, [r2, #16]
  406d8a:	1a7f      	subs	r7, r7, r1
  406d8c:	2f00      	cmp	r7, #0
  406d8e:	4690      	mov	r8, r2
  406d90:	d117      	bne.n	406dc2 <__mdiff+0x42>
  406d92:	0089      	lsls	r1, r1, #2
  406d94:	f106 0514 	add.w	r5, r6, #20
  406d98:	f102 0e14 	add.w	lr, r2, #20
  406d9c:	186b      	adds	r3, r5, r1
  406d9e:	4471      	add	r1, lr
  406da0:	e001      	b.n	406da6 <__mdiff+0x26>
  406da2:	429d      	cmp	r5, r3
  406da4:	d25c      	bcs.n	406e60 <__mdiff+0xe0>
  406da6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  406daa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  406dae:	42a2      	cmp	r2, r4
  406db0:	d0f7      	beq.n	406da2 <__mdiff+0x22>
  406db2:	d25e      	bcs.n	406e72 <__mdiff+0xf2>
  406db4:	4633      	mov	r3, r6
  406db6:	462c      	mov	r4, r5
  406db8:	4646      	mov	r6, r8
  406dba:	4675      	mov	r5, lr
  406dbc:	4698      	mov	r8, r3
  406dbe:	2701      	movs	r7, #1
  406dc0:	e005      	b.n	406dce <__mdiff+0x4e>
  406dc2:	db58      	blt.n	406e76 <__mdiff+0xf6>
  406dc4:	f106 0514 	add.w	r5, r6, #20
  406dc8:	f108 0414 	add.w	r4, r8, #20
  406dcc:	2700      	movs	r7, #0
  406dce:	6871      	ldr	r1, [r6, #4]
  406dd0:	f7ff fdbc 	bl	40694c <_Balloc>
  406dd4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  406dd8:	6936      	ldr	r6, [r6, #16]
  406dda:	60c7      	str	r7, [r0, #12]
  406ddc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  406de0:	46a6      	mov	lr, r4
  406de2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  406de6:	f100 0414 	add.w	r4, r0, #20
  406dea:	2300      	movs	r3, #0
  406dec:	f85e 1b04 	ldr.w	r1, [lr], #4
  406df0:	f855 8b04 	ldr.w	r8, [r5], #4
  406df4:	b28a      	uxth	r2, r1
  406df6:	fa13 f388 	uxtah	r3, r3, r8
  406dfa:	0c09      	lsrs	r1, r1, #16
  406dfc:	1a9a      	subs	r2, r3, r2
  406dfe:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  406e02:	eb03 4322 	add.w	r3, r3, r2, asr #16
  406e06:	b292      	uxth	r2, r2
  406e08:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  406e0c:	45f4      	cmp	ip, lr
  406e0e:	f844 2b04 	str.w	r2, [r4], #4
  406e12:	ea4f 4323 	mov.w	r3, r3, asr #16
  406e16:	d8e9      	bhi.n	406dec <__mdiff+0x6c>
  406e18:	42af      	cmp	r7, r5
  406e1a:	d917      	bls.n	406e4c <__mdiff+0xcc>
  406e1c:	46a4      	mov	ip, r4
  406e1e:	46ae      	mov	lr, r5
  406e20:	f85e 2b04 	ldr.w	r2, [lr], #4
  406e24:	fa13 f382 	uxtah	r3, r3, r2
  406e28:	1419      	asrs	r1, r3, #16
  406e2a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  406e2e:	b29b      	uxth	r3, r3
  406e30:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  406e34:	4577      	cmp	r7, lr
  406e36:	f84c 2b04 	str.w	r2, [ip], #4
  406e3a:	ea4f 4321 	mov.w	r3, r1, asr #16
  406e3e:	d8ef      	bhi.n	406e20 <__mdiff+0xa0>
  406e40:	43ed      	mvns	r5, r5
  406e42:	442f      	add	r7, r5
  406e44:	f027 0703 	bic.w	r7, r7, #3
  406e48:	3704      	adds	r7, #4
  406e4a:	443c      	add	r4, r7
  406e4c:	3c04      	subs	r4, #4
  406e4e:	b922      	cbnz	r2, 406e5a <__mdiff+0xda>
  406e50:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  406e54:	3e01      	subs	r6, #1
  406e56:	2b00      	cmp	r3, #0
  406e58:	d0fa      	beq.n	406e50 <__mdiff+0xd0>
  406e5a:	6106      	str	r6, [r0, #16]
  406e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406e60:	2100      	movs	r1, #0
  406e62:	f7ff fd73 	bl	40694c <_Balloc>
  406e66:	2201      	movs	r2, #1
  406e68:	2300      	movs	r3, #0
  406e6a:	6102      	str	r2, [r0, #16]
  406e6c:	6143      	str	r3, [r0, #20]
  406e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406e72:	4674      	mov	r4, lr
  406e74:	e7ab      	b.n	406dce <__mdiff+0x4e>
  406e76:	4633      	mov	r3, r6
  406e78:	f106 0414 	add.w	r4, r6, #20
  406e7c:	f102 0514 	add.w	r5, r2, #20
  406e80:	4616      	mov	r6, r2
  406e82:	2701      	movs	r7, #1
  406e84:	4698      	mov	r8, r3
  406e86:	e7a2      	b.n	406dce <__mdiff+0x4e>

00406e88 <__d2b>:
  406e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406e8c:	b082      	sub	sp, #8
  406e8e:	2101      	movs	r1, #1
  406e90:	461c      	mov	r4, r3
  406e92:	f3c3 570a 	ubfx	r7, r3, #20, #11
  406e96:	4615      	mov	r5, r2
  406e98:	9e08      	ldr	r6, [sp, #32]
  406e9a:	f7ff fd57 	bl	40694c <_Balloc>
  406e9e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  406ea2:	4680      	mov	r8, r0
  406ea4:	b10f      	cbz	r7, 406eaa <__d2b+0x22>
  406ea6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  406eaa:	9401      	str	r4, [sp, #4]
  406eac:	b31d      	cbz	r5, 406ef6 <__d2b+0x6e>
  406eae:	a802      	add	r0, sp, #8
  406eb0:	f840 5d08 	str.w	r5, [r0, #-8]!
  406eb4:	f7ff fdda 	bl	406a6c <__lo0bits>
  406eb8:	2800      	cmp	r0, #0
  406eba:	d134      	bne.n	406f26 <__d2b+0x9e>
  406ebc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  406ec0:	f8c8 2014 	str.w	r2, [r8, #20]
  406ec4:	2b00      	cmp	r3, #0
  406ec6:	bf0c      	ite	eq
  406ec8:	2101      	moveq	r1, #1
  406eca:	2102      	movne	r1, #2
  406ecc:	f8c8 3018 	str.w	r3, [r8, #24]
  406ed0:	f8c8 1010 	str.w	r1, [r8, #16]
  406ed4:	b9df      	cbnz	r7, 406f0e <__d2b+0x86>
  406ed6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  406eda:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406ede:	6030      	str	r0, [r6, #0]
  406ee0:	6918      	ldr	r0, [r3, #16]
  406ee2:	f7ff fda3 	bl	406a2c <__hi0bits>
  406ee6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406ee8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406eec:	6018      	str	r0, [r3, #0]
  406eee:	4640      	mov	r0, r8
  406ef0:	b002      	add	sp, #8
  406ef2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406ef6:	a801      	add	r0, sp, #4
  406ef8:	f7ff fdb8 	bl	406a6c <__lo0bits>
  406efc:	9b01      	ldr	r3, [sp, #4]
  406efe:	f8c8 3014 	str.w	r3, [r8, #20]
  406f02:	2101      	movs	r1, #1
  406f04:	3020      	adds	r0, #32
  406f06:	f8c8 1010 	str.w	r1, [r8, #16]
  406f0a:	2f00      	cmp	r7, #0
  406f0c:	d0e3      	beq.n	406ed6 <__d2b+0x4e>
  406f0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406f10:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  406f14:	4407      	add	r7, r0
  406f16:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  406f1a:	6037      	str	r7, [r6, #0]
  406f1c:	6018      	str	r0, [r3, #0]
  406f1e:	4640      	mov	r0, r8
  406f20:	b002      	add	sp, #8
  406f22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406f26:	e89d 000a 	ldmia.w	sp, {r1, r3}
  406f2a:	f1c0 0220 	rsb	r2, r0, #32
  406f2e:	fa03 f202 	lsl.w	r2, r3, r2
  406f32:	430a      	orrs	r2, r1
  406f34:	40c3      	lsrs	r3, r0
  406f36:	9301      	str	r3, [sp, #4]
  406f38:	f8c8 2014 	str.w	r2, [r8, #20]
  406f3c:	e7c2      	b.n	406ec4 <__d2b+0x3c>
  406f3e:	bf00      	nop

00406f40 <_sbrk_r>:
  406f40:	b538      	push	{r3, r4, r5, lr}
  406f42:	4c07      	ldr	r4, [pc, #28]	; (406f60 <_sbrk_r+0x20>)
  406f44:	2300      	movs	r3, #0
  406f46:	4605      	mov	r5, r0
  406f48:	4608      	mov	r0, r1
  406f4a:	6023      	str	r3, [r4, #0]
  406f4c:	f7fb ff30 	bl	402db0 <_sbrk>
  406f50:	1c43      	adds	r3, r0, #1
  406f52:	d000      	beq.n	406f56 <_sbrk_r+0x16>
  406f54:	bd38      	pop	{r3, r4, r5, pc}
  406f56:	6823      	ldr	r3, [r4, #0]
  406f58:	2b00      	cmp	r3, #0
  406f5a:	d0fb      	beq.n	406f54 <_sbrk_r+0x14>
  406f5c:	602b      	str	r3, [r5, #0]
  406f5e:	bd38      	pop	{r3, r4, r5, pc}
  406f60:	2000d220 	.word	0x2000d220

00406f64 <strchr>:
  406f64:	b2c9      	uxtb	r1, r1
  406f66:	2900      	cmp	r1, #0
  406f68:	d041      	beq.n	406fee <strchr+0x8a>
  406f6a:	0782      	lsls	r2, r0, #30
  406f6c:	b4f0      	push	{r4, r5, r6, r7}
  406f6e:	d067      	beq.n	407040 <strchr+0xdc>
  406f70:	7803      	ldrb	r3, [r0, #0]
  406f72:	2b00      	cmp	r3, #0
  406f74:	d068      	beq.n	407048 <strchr+0xe4>
  406f76:	4299      	cmp	r1, r3
  406f78:	d037      	beq.n	406fea <strchr+0x86>
  406f7a:	1c43      	adds	r3, r0, #1
  406f7c:	e004      	b.n	406f88 <strchr+0x24>
  406f7e:	f813 0b01 	ldrb.w	r0, [r3], #1
  406f82:	b390      	cbz	r0, 406fea <strchr+0x86>
  406f84:	4281      	cmp	r1, r0
  406f86:	d02f      	beq.n	406fe8 <strchr+0x84>
  406f88:	079a      	lsls	r2, r3, #30
  406f8a:	461c      	mov	r4, r3
  406f8c:	d1f7      	bne.n	406f7e <strchr+0x1a>
  406f8e:	6825      	ldr	r5, [r4, #0]
  406f90:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  406f94:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  406f98:	ea83 0605 	eor.w	r6, r3, r5
  406f9c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  406fa0:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  406fa4:	ea20 0006 	bic.w	r0, r0, r6
  406fa8:	ea22 0205 	bic.w	r2, r2, r5
  406fac:	4302      	orrs	r2, r0
  406fae:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  406fb2:	d111      	bne.n	406fd8 <strchr+0x74>
  406fb4:	4620      	mov	r0, r4
  406fb6:	f850 6f04 	ldr.w	r6, [r0, #4]!
  406fba:	ea83 0706 	eor.w	r7, r3, r6
  406fbe:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  406fc2:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  406fc6:	ea25 0507 	bic.w	r5, r5, r7
  406fca:	ea22 0206 	bic.w	r2, r2, r6
  406fce:	432a      	orrs	r2, r5
  406fd0:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  406fd4:	d0ef      	beq.n	406fb6 <strchr+0x52>
  406fd6:	4604      	mov	r4, r0
  406fd8:	7820      	ldrb	r0, [r4, #0]
  406fda:	b918      	cbnz	r0, 406fe4 <strchr+0x80>
  406fdc:	e005      	b.n	406fea <strchr+0x86>
  406fde:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  406fe2:	b110      	cbz	r0, 406fea <strchr+0x86>
  406fe4:	4281      	cmp	r1, r0
  406fe6:	d1fa      	bne.n	406fde <strchr+0x7a>
  406fe8:	4620      	mov	r0, r4
  406fea:	bcf0      	pop	{r4, r5, r6, r7}
  406fec:	4770      	bx	lr
  406fee:	0783      	lsls	r3, r0, #30
  406ff0:	d024      	beq.n	40703c <strchr+0xd8>
  406ff2:	7803      	ldrb	r3, [r0, #0]
  406ff4:	2b00      	cmp	r3, #0
  406ff6:	d0f9      	beq.n	406fec <strchr+0x88>
  406ff8:	1c43      	adds	r3, r0, #1
  406ffa:	e003      	b.n	407004 <strchr+0xa0>
  406ffc:	7802      	ldrb	r2, [r0, #0]
  406ffe:	3301      	adds	r3, #1
  407000:	2a00      	cmp	r2, #0
  407002:	d0f3      	beq.n	406fec <strchr+0x88>
  407004:	0799      	lsls	r1, r3, #30
  407006:	4618      	mov	r0, r3
  407008:	d1f8      	bne.n	406ffc <strchr+0x98>
  40700a:	6819      	ldr	r1, [r3, #0]
  40700c:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  407010:	ea22 0201 	bic.w	r2, r2, r1
  407014:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407018:	d108      	bne.n	40702c <strchr+0xc8>
  40701a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  40701e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  407022:	ea22 0201 	bic.w	r2, r2, r1
  407026:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40702a:	d0f6      	beq.n	40701a <strchr+0xb6>
  40702c:	781a      	ldrb	r2, [r3, #0]
  40702e:	4618      	mov	r0, r3
  407030:	b142      	cbz	r2, 407044 <strchr+0xe0>
  407032:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  407036:	2b00      	cmp	r3, #0
  407038:	d1fb      	bne.n	407032 <strchr+0xce>
  40703a:	4770      	bx	lr
  40703c:	4603      	mov	r3, r0
  40703e:	e7e4      	b.n	40700a <strchr+0xa6>
  407040:	4604      	mov	r4, r0
  407042:	e7a4      	b.n	406f8e <strchr+0x2a>
  407044:	4618      	mov	r0, r3
  407046:	4770      	bx	lr
  407048:	4618      	mov	r0, r3
  40704a:	e7ce      	b.n	406fea <strchr+0x86>
	...

00407080 <strlen>:
  407080:	f890 f000 	pld	[r0]
  407084:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  407088:	f020 0107 	bic.w	r1, r0, #7
  40708c:	f06f 0c00 	mvn.w	ip, #0
  407090:	f010 0407 	ands.w	r4, r0, #7
  407094:	f891 f020 	pld	[r1, #32]
  407098:	f040 8049 	bne.w	40712e <strlen+0xae>
  40709c:	f04f 0400 	mov.w	r4, #0
  4070a0:	f06f 0007 	mvn.w	r0, #7
  4070a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4070a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4070ac:	f100 0008 	add.w	r0, r0, #8
  4070b0:	fa82 f24c 	uadd8	r2, r2, ip
  4070b4:	faa4 f28c 	sel	r2, r4, ip
  4070b8:	fa83 f34c 	uadd8	r3, r3, ip
  4070bc:	faa2 f38c 	sel	r3, r2, ip
  4070c0:	bb4b      	cbnz	r3, 407116 <strlen+0x96>
  4070c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4070c6:	fa82 f24c 	uadd8	r2, r2, ip
  4070ca:	f100 0008 	add.w	r0, r0, #8
  4070ce:	faa4 f28c 	sel	r2, r4, ip
  4070d2:	fa83 f34c 	uadd8	r3, r3, ip
  4070d6:	faa2 f38c 	sel	r3, r2, ip
  4070da:	b9e3      	cbnz	r3, 407116 <strlen+0x96>
  4070dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4070e0:	fa82 f24c 	uadd8	r2, r2, ip
  4070e4:	f100 0008 	add.w	r0, r0, #8
  4070e8:	faa4 f28c 	sel	r2, r4, ip
  4070ec:	fa83 f34c 	uadd8	r3, r3, ip
  4070f0:	faa2 f38c 	sel	r3, r2, ip
  4070f4:	b97b      	cbnz	r3, 407116 <strlen+0x96>
  4070f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4070fa:	f101 0120 	add.w	r1, r1, #32
  4070fe:	fa82 f24c 	uadd8	r2, r2, ip
  407102:	f100 0008 	add.w	r0, r0, #8
  407106:	faa4 f28c 	sel	r2, r4, ip
  40710a:	fa83 f34c 	uadd8	r3, r3, ip
  40710e:	faa2 f38c 	sel	r3, r2, ip
  407112:	2b00      	cmp	r3, #0
  407114:	d0c6      	beq.n	4070a4 <strlen+0x24>
  407116:	2a00      	cmp	r2, #0
  407118:	bf04      	itt	eq
  40711a:	3004      	addeq	r0, #4
  40711c:	461a      	moveq	r2, r3
  40711e:	ba12      	rev	r2, r2
  407120:	fab2 f282 	clz	r2, r2
  407124:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  407128:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40712c:	4770      	bx	lr
  40712e:	e9d1 2300 	ldrd	r2, r3, [r1]
  407132:	f004 0503 	and.w	r5, r4, #3
  407136:	f1c4 0000 	rsb	r0, r4, #0
  40713a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40713e:	f014 0f04 	tst.w	r4, #4
  407142:	f891 f040 	pld	[r1, #64]	; 0x40
  407146:	fa0c f505 	lsl.w	r5, ip, r5
  40714a:	ea62 0205 	orn	r2, r2, r5
  40714e:	bf1c      	itt	ne
  407150:	ea63 0305 	ornne	r3, r3, r5
  407154:	4662      	movne	r2, ip
  407156:	f04f 0400 	mov.w	r4, #0
  40715a:	e7a9      	b.n	4070b0 <strlen+0x30>

0040715c <__ssprint_r>:
  40715c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407160:	6893      	ldr	r3, [r2, #8]
  407162:	b083      	sub	sp, #12
  407164:	4690      	mov	r8, r2
  407166:	2b00      	cmp	r3, #0
  407168:	d070      	beq.n	40724c <__ssprint_r+0xf0>
  40716a:	4682      	mov	sl, r0
  40716c:	460c      	mov	r4, r1
  40716e:	6817      	ldr	r7, [r2, #0]
  407170:	688d      	ldr	r5, [r1, #8]
  407172:	6808      	ldr	r0, [r1, #0]
  407174:	e042      	b.n	4071fc <__ssprint_r+0xa0>
  407176:	89a3      	ldrh	r3, [r4, #12]
  407178:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40717c:	d02e      	beq.n	4071dc <__ssprint_r+0x80>
  40717e:	6965      	ldr	r5, [r4, #20]
  407180:	6921      	ldr	r1, [r4, #16]
  407182:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  407186:	eba0 0b01 	sub.w	fp, r0, r1
  40718a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40718e:	f10b 0001 	add.w	r0, fp, #1
  407192:	106d      	asrs	r5, r5, #1
  407194:	4430      	add	r0, r6
  407196:	42a8      	cmp	r0, r5
  407198:	462a      	mov	r2, r5
  40719a:	bf84      	itt	hi
  40719c:	4605      	movhi	r5, r0
  40719e:	462a      	movhi	r2, r5
  4071a0:	055b      	lsls	r3, r3, #21
  4071a2:	d538      	bpl.n	407216 <__ssprint_r+0xba>
  4071a4:	4611      	mov	r1, r2
  4071a6:	4650      	mov	r0, sl
  4071a8:	f7fe fff4 	bl	406194 <_malloc_r>
  4071ac:	2800      	cmp	r0, #0
  4071ae:	d03c      	beq.n	40722a <__ssprint_r+0xce>
  4071b0:	465a      	mov	r2, fp
  4071b2:	6921      	ldr	r1, [r4, #16]
  4071b4:	9001      	str	r0, [sp, #4]
  4071b6:	f7ff fb23 	bl	406800 <memcpy>
  4071ba:	89a2      	ldrh	r2, [r4, #12]
  4071bc:	9b01      	ldr	r3, [sp, #4]
  4071be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4071c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4071c6:	81a2      	strh	r2, [r4, #12]
  4071c8:	eba5 020b 	sub.w	r2, r5, fp
  4071cc:	eb03 000b 	add.w	r0, r3, fp
  4071d0:	6165      	str	r5, [r4, #20]
  4071d2:	6123      	str	r3, [r4, #16]
  4071d4:	6020      	str	r0, [r4, #0]
  4071d6:	60a2      	str	r2, [r4, #8]
  4071d8:	4635      	mov	r5, r6
  4071da:	46b3      	mov	fp, r6
  4071dc:	465a      	mov	r2, fp
  4071de:	4649      	mov	r1, r9
  4071e0:	f000 fa18 	bl	407614 <memmove>
  4071e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4071e8:	68a2      	ldr	r2, [r4, #8]
  4071ea:	6820      	ldr	r0, [r4, #0]
  4071ec:	1b55      	subs	r5, r2, r5
  4071ee:	4458      	add	r0, fp
  4071f0:	1b9e      	subs	r6, r3, r6
  4071f2:	60a5      	str	r5, [r4, #8]
  4071f4:	6020      	str	r0, [r4, #0]
  4071f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4071fa:	b33e      	cbz	r6, 40724c <__ssprint_r+0xf0>
  4071fc:	687e      	ldr	r6, [r7, #4]
  4071fe:	463b      	mov	r3, r7
  407200:	3708      	adds	r7, #8
  407202:	2e00      	cmp	r6, #0
  407204:	d0fa      	beq.n	4071fc <__ssprint_r+0xa0>
  407206:	42ae      	cmp	r6, r5
  407208:	f8d3 9000 	ldr.w	r9, [r3]
  40720c:	46ab      	mov	fp, r5
  40720e:	d2b2      	bcs.n	407176 <__ssprint_r+0x1a>
  407210:	4635      	mov	r5, r6
  407212:	46b3      	mov	fp, r6
  407214:	e7e2      	b.n	4071dc <__ssprint_r+0x80>
  407216:	4650      	mov	r0, sl
  407218:	f000 fa60 	bl	4076dc <_realloc_r>
  40721c:	4603      	mov	r3, r0
  40721e:	2800      	cmp	r0, #0
  407220:	d1d2      	bne.n	4071c8 <__ssprint_r+0x6c>
  407222:	6921      	ldr	r1, [r4, #16]
  407224:	4650      	mov	r0, sl
  407226:	f000 f8f9 	bl	40741c <_free_r>
  40722a:	230c      	movs	r3, #12
  40722c:	f8ca 3000 	str.w	r3, [sl]
  407230:	89a3      	ldrh	r3, [r4, #12]
  407232:	2200      	movs	r2, #0
  407234:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  407238:	f04f 30ff 	mov.w	r0, #4294967295
  40723c:	81a3      	strh	r3, [r4, #12]
  40723e:	f8c8 2008 	str.w	r2, [r8, #8]
  407242:	f8c8 2004 	str.w	r2, [r8, #4]
  407246:	b003      	add	sp, #12
  407248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40724c:	2000      	movs	r0, #0
  40724e:	f8c8 0004 	str.w	r0, [r8, #4]
  407252:	b003      	add	sp, #12
  407254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407258 <__register_exitproc>:
  407258:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40725c:	4d2c      	ldr	r5, [pc, #176]	; (407310 <__register_exitproc+0xb8>)
  40725e:	4606      	mov	r6, r0
  407260:	6828      	ldr	r0, [r5, #0]
  407262:	4698      	mov	r8, r3
  407264:	460f      	mov	r7, r1
  407266:	4691      	mov	r9, r2
  407268:	f7fe ff90 	bl	40618c <__retarget_lock_acquire_recursive>
  40726c:	4b29      	ldr	r3, [pc, #164]	; (407314 <__register_exitproc+0xbc>)
  40726e:	681c      	ldr	r4, [r3, #0]
  407270:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  407274:	2b00      	cmp	r3, #0
  407276:	d03e      	beq.n	4072f6 <__register_exitproc+0x9e>
  407278:	685a      	ldr	r2, [r3, #4]
  40727a:	2a1f      	cmp	r2, #31
  40727c:	dc1c      	bgt.n	4072b8 <__register_exitproc+0x60>
  40727e:	f102 0e01 	add.w	lr, r2, #1
  407282:	b176      	cbz	r6, 4072a2 <__register_exitproc+0x4a>
  407284:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  407288:	2401      	movs	r4, #1
  40728a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40728e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  407292:	4094      	lsls	r4, r2
  407294:	4320      	orrs	r0, r4
  407296:	2e02      	cmp	r6, #2
  407298:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40729c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4072a0:	d023      	beq.n	4072ea <__register_exitproc+0x92>
  4072a2:	3202      	adds	r2, #2
  4072a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4072a8:	6828      	ldr	r0, [r5, #0]
  4072aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4072ae:	f7fe ff6f 	bl	406190 <__retarget_lock_release_recursive>
  4072b2:	2000      	movs	r0, #0
  4072b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4072b8:	4b17      	ldr	r3, [pc, #92]	; (407318 <__register_exitproc+0xc0>)
  4072ba:	b30b      	cbz	r3, 407300 <__register_exitproc+0xa8>
  4072bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4072c0:	f3af 8000 	nop.w
  4072c4:	4603      	mov	r3, r0
  4072c6:	b1d8      	cbz	r0, 407300 <__register_exitproc+0xa8>
  4072c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4072cc:	6002      	str	r2, [r0, #0]
  4072ce:	2100      	movs	r1, #0
  4072d0:	6041      	str	r1, [r0, #4]
  4072d2:	460a      	mov	r2, r1
  4072d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4072d8:	f04f 0e01 	mov.w	lr, #1
  4072dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4072e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4072e4:	2e00      	cmp	r6, #0
  4072e6:	d0dc      	beq.n	4072a2 <__register_exitproc+0x4a>
  4072e8:	e7cc      	b.n	407284 <__register_exitproc+0x2c>
  4072ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4072ee:	430c      	orrs	r4, r1
  4072f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4072f4:	e7d5      	b.n	4072a2 <__register_exitproc+0x4a>
  4072f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4072fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4072fe:	e7bb      	b.n	407278 <__register_exitproc+0x20>
  407300:	6828      	ldr	r0, [r5, #0]
  407302:	f7fe ff45 	bl	406190 <__retarget_lock_release_recursive>
  407306:	f04f 30ff 	mov.w	r0, #4294967295
  40730a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40730e:	bf00      	nop
  407310:	20000440 	.word	0x20000440
  407314:	004090b4 	.word	0x004090b4
  407318:	00000000 	.word	0x00000000

0040731c <_calloc_r>:
  40731c:	b510      	push	{r4, lr}
  40731e:	fb02 f101 	mul.w	r1, r2, r1
  407322:	f7fe ff37 	bl	406194 <_malloc_r>
  407326:	4604      	mov	r4, r0
  407328:	b1d8      	cbz	r0, 407362 <_calloc_r+0x46>
  40732a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40732e:	f022 0203 	bic.w	r2, r2, #3
  407332:	3a04      	subs	r2, #4
  407334:	2a24      	cmp	r2, #36	; 0x24
  407336:	d818      	bhi.n	40736a <_calloc_r+0x4e>
  407338:	2a13      	cmp	r2, #19
  40733a:	d914      	bls.n	407366 <_calloc_r+0x4a>
  40733c:	2300      	movs	r3, #0
  40733e:	2a1b      	cmp	r2, #27
  407340:	6003      	str	r3, [r0, #0]
  407342:	6043      	str	r3, [r0, #4]
  407344:	d916      	bls.n	407374 <_calloc_r+0x58>
  407346:	2a24      	cmp	r2, #36	; 0x24
  407348:	6083      	str	r3, [r0, #8]
  40734a:	60c3      	str	r3, [r0, #12]
  40734c:	bf11      	iteee	ne
  40734e:	f100 0210 	addne.w	r2, r0, #16
  407352:	6103      	streq	r3, [r0, #16]
  407354:	6143      	streq	r3, [r0, #20]
  407356:	f100 0218 	addeq.w	r2, r0, #24
  40735a:	2300      	movs	r3, #0
  40735c:	6013      	str	r3, [r2, #0]
  40735e:	6053      	str	r3, [r2, #4]
  407360:	6093      	str	r3, [r2, #8]
  407362:	4620      	mov	r0, r4
  407364:	bd10      	pop	{r4, pc}
  407366:	4602      	mov	r2, r0
  407368:	e7f7      	b.n	40735a <_calloc_r+0x3e>
  40736a:	2100      	movs	r1, #0
  40736c:	f7fc fa10 	bl	403790 <memset>
  407370:	4620      	mov	r0, r4
  407372:	bd10      	pop	{r4, pc}
  407374:	f100 0208 	add.w	r2, r0, #8
  407378:	e7ef      	b.n	40735a <_calloc_r+0x3e>
  40737a:	bf00      	nop

0040737c <_malloc_trim_r>:
  40737c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40737e:	4f24      	ldr	r7, [pc, #144]	; (407410 <_malloc_trim_r+0x94>)
  407380:	460c      	mov	r4, r1
  407382:	4606      	mov	r6, r0
  407384:	f7ff fad6 	bl	406934 <__malloc_lock>
  407388:	68bb      	ldr	r3, [r7, #8]
  40738a:	685d      	ldr	r5, [r3, #4]
  40738c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  407390:	310f      	adds	r1, #15
  407392:	f025 0503 	bic.w	r5, r5, #3
  407396:	4429      	add	r1, r5
  407398:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40739c:	f021 010f 	bic.w	r1, r1, #15
  4073a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4073a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4073a8:	db07      	blt.n	4073ba <_malloc_trim_r+0x3e>
  4073aa:	2100      	movs	r1, #0
  4073ac:	4630      	mov	r0, r6
  4073ae:	f7ff fdc7 	bl	406f40 <_sbrk_r>
  4073b2:	68bb      	ldr	r3, [r7, #8]
  4073b4:	442b      	add	r3, r5
  4073b6:	4298      	cmp	r0, r3
  4073b8:	d004      	beq.n	4073c4 <_malloc_trim_r+0x48>
  4073ba:	4630      	mov	r0, r6
  4073bc:	f7ff fac0 	bl	406940 <__malloc_unlock>
  4073c0:	2000      	movs	r0, #0
  4073c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4073c4:	4261      	negs	r1, r4
  4073c6:	4630      	mov	r0, r6
  4073c8:	f7ff fdba 	bl	406f40 <_sbrk_r>
  4073cc:	3001      	adds	r0, #1
  4073ce:	d00d      	beq.n	4073ec <_malloc_trim_r+0x70>
  4073d0:	4b10      	ldr	r3, [pc, #64]	; (407414 <_malloc_trim_r+0x98>)
  4073d2:	68ba      	ldr	r2, [r7, #8]
  4073d4:	6819      	ldr	r1, [r3, #0]
  4073d6:	1b2d      	subs	r5, r5, r4
  4073d8:	f045 0501 	orr.w	r5, r5, #1
  4073dc:	4630      	mov	r0, r6
  4073de:	1b09      	subs	r1, r1, r4
  4073e0:	6055      	str	r5, [r2, #4]
  4073e2:	6019      	str	r1, [r3, #0]
  4073e4:	f7ff faac 	bl	406940 <__malloc_unlock>
  4073e8:	2001      	movs	r0, #1
  4073ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4073ec:	2100      	movs	r1, #0
  4073ee:	4630      	mov	r0, r6
  4073f0:	f7ff fda6 	bl	406f40 <_sbrk_r>
  4073f4:	68ba      	ldr	r2, [r7, #8]
  4073f6:	1a83      	subs	r3, r0, r2
  4073f8:	2b0f      	cmp	r3, #15
  4073fa:	ddde      	ble.n	4073ba <_malloc_trim_r+0x3e>
  4073fc:	4c06      	ldr	r4, [pc, #24]	; (407418 <_malloc_trim_r+0x9c>)
  4073fe:	4905      	ldr	r1, [pc, #20]	; (407414 <_malloc_trim_r+0x98>)
  407400:	6824      	ldr	r4, [r4, #0]
  407402:	f043 0301 	orr.w	r3, r3, #1
  407406:	1b00      	subs	r0, r0, r4
  407408:	6053      	str	r3, [r2, #4]
  40740a:	6008      	str	r0, [r1, #0]
  40740c:	e7d5      	b.n	4073ba <_malloc_trim_r+0x3e>
  40740e:	bf00      	nop
  407410:	20000444 	.word	0x20000444
  407414:	20000a80 	.word	0x20000a80
  407418:	2000084c 	.word	0x2000084c

0040741c <_free_r>:
  40741c:	2900      	cmp	r1, #0
  40741e:	d044      	beq.n	4074aa <_free_r+0x8e>
  407420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407424:	460d      	mov	r5, r1
  407426:	4680      	mov	r8, r0
  407428:	f7ff fa84 	bl	406934 <__malloc_lock>
  40742c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  407430:	4969      	ldr	r1, [pc, #420]	; (4075d8 <_free_r+0x1bc>)
  407432:	f027 0301 	bic.w	r3, r7, #1
  407436:	f1a5 0408 	sub.w	r4, r5, #8
  40743a:	18e2      	adds	r2, r4, r3
  40743c:	688e      	ldr	r6, [r1, #8]
  40743e:	6850      	ldr	r0, [r2, #4]
  407440:	42b2      	cmp	r2, r6
  407442:	f020 0003 	bic.w	r0, r0, #3
  407446:	d05e      	beq.n	407506 <_free_r+0xea>
  407448:	07fe      	lsls	r6, r7, #31
  40744a:	6050      	str	r0, [r2, #4]
  40744c:	d40b      	bmi.n	407466 <_free_r+0x4a>
  40744e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  407452:	1be4      	subs	r4, r4, r7
  407454:	f101 0e08 	add.w	lr, r1, #8
  407458:	68a5      	ldr	r5, [r4, #8]
  40745a:	4575      	cmp	r5, lr
  40745c:	443b      	add	r3, r7
  40745e:	d06d      	beq.n	40753c <_free_r+0x120>
  407460:	68e7      	ldr	r7, [r4, #12]
  407462:	60ef      	str	r7, [r5, #12]
  407464:	60bd      	str	r5, [r7, #8]
  407466:	1815      	adds	r5, r2, r0
  407468:	686d      	ldr	r5, [r5, #4]
  40746a:	07ed      	lsls	r5, r5, #31
  40746c:	d53e      	bpl.n	4074ec <_free_r+0xd0>
  40746e:	f043 0201 	orr.w	r2, r3, #1
  407472:	6062      	str	r2, [r4, #4]
  407474:	50e3      	str	r3, [r4, r3]
  407476:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40747a:	d217      	bcs.n	4074ac <_free_r+0x90>
  40747c:	08db      	lsrs	r3, r3, #3
  40747e:	1c58      	adds	r0, r3, #1
  407480:	109a      	asrs	r2, r3, #2
  407482:	684d      	ldr	r5, [r1, #4]
  407484:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  407488:	60a7      	str	r7, [r4, #8]
  40748a:	2301      	movs	r3, #1
  40748c:	4093      	lsls	r3, r2
  40748e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  407492:	432b      	orrs	r3, r5
  407494:	3a08      	subs	r2, #8
  407496:	60e2      	str	r2, [r4, #12]
  407498:	604b      	str	r3, [r1, #4]
  40749a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40749e:	60fc      	str	r4, [r7, #12]
  4074a0:	4640      	mov	r0, r8
  4074a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4074a6:	f7ff ba4b 	b.w	406940 <__malloc_unlock>
  4074aa:	4770      	bx	lr
  4074ac:	0a5a      	lsrs	r2, r3, #9
  4074ae:	2a04      	cmp	r2, #4
  4074b0:	d852      	bhi.n	407558 <_free_r+0x13c>
  4074b2:	099a      	lsrs	r2, r3, #6
  4074b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4074b8:	00ff      	lsls	r7, r7, #3
  4074ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4074be:	19c8      	adds	r0, r1, r7
  4074c0:	59ca      	ldr	r2, [r1, r7]
  4074c2:	3808      	subs	r0, #8
  4074c4:	4290      	cmp	r0, r2
  4074c6:	d04f      	beq.n	407568 <_free_r+0x14c>
  4074c8:	6851      	ldr	r1, [r2, #4]
  4074ca:	f021 0103 	bic.w	r1, r1, #3
  4074ce:	428b      	cmp	r3, r1
  4074d0:	d232      	bcs.n	407538 <_free_r+0x11c>
  4074d2:	6892      	ldr	r2, [r2, #8]
  4074d4:	4290      	cmp	r0, r2
  4074d6:	d1f7      	bne.n	4074c8 <_free_r+0xac>
  4074d8:	68c3      	ldr	r3, [r0, #12]
  4074da:	60a0      	str	r0, [r4, #8]
  4074dc:	60e3      	str	r3, [r4, #12]
  4074de:	609c      	str	r4, [r3, #8]
  4074e0:	60c4      	str	r4, [r0, #12]
  4074e2:	4640      	mov	r0, r8
  4074e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4074e8:	f7ff ba2a 	b.w	406940 <__malloc_unlock>
  4074ec:	6895      	ldr	r5, [r2, #8]
  4074ee:	4f3b      	ldr	r7, [pc, #236]	; (4075dc <_free_r+0x1c0>)
  4074f0:	42bd      	cmp	r5, r7
  4074f2:	4403      	add	r3, r0
  4074f4:	d040      	beq.n	407578 <_free_r+0x15c>
  4074f6:	68d0      	ldr	r0, [r2, #12]
  4074f8:	60e8      	str	r0, [r5, #12]
  4074fa:	f043 0201 	orr.w	r2, r3, #1
  4074fe:	6085      	str	r5, [r0, #8]
  407500:	6062      	str	r2, [r4, #4]
  407502:	50e3      	str	r3, [r4, r3]
  407504:	e7b7      	b.n	407476 <_free_r+0x5a>
  407506:	07ff      	lsls	r7, r7, #31
  407508:	4403      	add	r3, r0
  40750a:	d407      	bmi.n	40751c <_free_r+0x100>
  40750c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  407510:	1aa4      	subs	r4, r4, r2
  407512:	4413      	add	r3, r2
  407514:	68a0      	ldr	r0, [r4, #8]
  407516:	68e2      	ldr	r2, [r4, #12]
  407518:	60c2      	str	r2, [r0, #12]
  40751a:	6090      	str	r0, [r2, #8]
  40751c:	4a30      	ldr	r2, [pc, #192]	; (4075e0 <_free_r+0x1c4>)
  40751e:	6812      	ldr	r2, [r2, #0]
  407520:	f043 0001 	orr.w	r0, r3, #1
  407524:	4293      	cmp	r3, r2
  407526:	6060      	str	r0, [r4, #4]
  407528:	608c      	str	r4, [r1, #8]
  40752a:	d3b9      	bcc.n	4074a0 <_free_r+0x84>
  40752c:	4b2d      	ldr	r3, [pc, #180]	; (4075e4 <_free_r+0x1c8>)
  40752e:	4640      	mov	r0, r8
  407530:	6819      	ldr	r1, [r3, #0]
  407532:	f7ff ff23 	bl	40737c <_malloc_trim_r>
  407536:	e7b3      	b.n	4074a0 <_free_r+0x84>
  407538:	4610      	mov	r0, r2
  40753a:	e7cd      	b.n	4074d8 <_free_r+0xbc>
  40753c:	1811      	adds	r1, r2, r0
  40753e:	6849      	ldr	r1, [r1, #4]
  407540:	07c9      	lsls	r1, r1, #31
  407542:	d444      	bmi.n	4075ce <_free_r+0x1b2>
  407544:	6891      	ldr	r1, [r2, #8]
  407546:	68d2      	ldr	r2, [r2, #12]
  407548:	60ca      	str	r2, [r1, #12]
  40754a:	4403      	add	r3, r0
  40754c:	f043 0001 	orr.w	r0, r3, #1
  407550:	6091      	str	r1, [r2, #8]
  407552:	6060      	str	r0, [r4, #4]
  407554:	50e3      	str	r3, [r4, r3]
  407556:	e7a3      	b.n	4074a0 <_free_r+0x84>
  407558:	2a14      	cmp	r2, #20
  40755a:	d816      	bhi.n	40758a <_free_r+0x16e>
  40755c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  407560:	00ff      	lsls	r7, r7, #3
  407562:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  407566:	e7aa      	b.n	4074be <_free_r+0xa2>
  407568:	10aa      	asrs	r2, r5, #2
  40756a:	2301      	movs	r3, #1
  40756c:	684d      	ldr	r5, [r1, #4]
  40756e:	4093      	lsls	r3, r2
  407570:	432b      	orrs	r3, r5
  407572:	604b      	str	r3, [r1, #4]
  407574:	4603      	mov	r3, r0
  407576:	e7b0      	b.n	4074da <_free_r+0xbe>
  407578:	f043 0201 	orr.w	r2, r3, #1
  40757c:	614c      	str	r4, [r1, #20]
  40757e:	610c      	str	r4, [r1, #16]
  407580:	60e5      	str	r5, [r4, #12]
  407582:	60a5      	str	r5, [r4, #8]
  407584:	6062      	str	r2, [r4, #4]
  407586:	50e3      	str	r3, [r4, r3]
  407588:	e78a      	b.n	4074a0 <_free_r+0x84>
  40758a:	2a54      	cmp	r2, #84	; 0x54
  40758c:	d806      	bhi.n	40759c <_free_r+0x180>
  40758e:	0b1a      	lsrs	r2, r3, #12
  407590:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  407594:	00ff      	lsls	r7, r7, #3
  407596:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40759a:	e790      	b.n	4074be <_free_r+0xa2>
  40759c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4075a0:	d806      	bhi.n	4075b0 <_free_r+0x194>
  4075a2:	0bda      	lsrs	r2, r3, #15
  4075a4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4075a8:	00ff      	lsls	r7, r7, #3
  4075aa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4075ae:	e786      	b.n	4074be <_free_r+0xa2>
  4075b0:	f240 5054 	movw	r0, #1364	; 0x554
  4075b4:	4282      	cmp	r2, r0
  4075b6:	d806      	bhi.n	4075c6 <_free_r+0x1aa>
  4075b8:	0c9a      	lsrs	r2, r3, #18
  4075ba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4075be:	00ff      	lsls	r7, r7, #3
  4075c0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4075c4:	e77b      	b.n	4074be <_free_r+0xa2>
  4075c6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4075ca:	257e      	movs	r5, #126	; 0x7e
  4075cc:	e777      	b.n	4074be <_free_r+0xa2>
  4075ce:	f043 0101 	orr.w	r1, r3, #1
  4075d2:	6061      	str	r1, [r4, #4]
  4075d4:	6013      	str	r3, [r2, #0]
  4075d6:	e763      	b.n	4074a0 <_free_r+0x84>
  4075d8:	20000444 	.word	0x20000444
  4075dc:	2000044c 	.word	0x2000044c
  4075e0:	20000850 	.word	0x20000850
  4075e4:	20000ab0 	.word	0x20000ab0

004075e8 <__ascii_mbtowc>:
  4075e8:	b082      	sub	sp, #8
  4075ea:	b149      	cbz	r1, 407600 <__ascii_mbtowc+0x18>
  4075ec:	b15a      	cbz	r2, 407606 <__ascii_mbtowc+0x1e>
  4075ee:	b16b      	cbz	r3, 40760c <__ascii_mbtowc+0x24>
  4075f0:	7813      	ldrb	r3, [r2, #0]
  4075f2:	600b      	str	r3, [r1, #0]
  4075f4:	7812      	ldrb	r2, [r2, #0]
  4075f6:	1c10      	adds	r0, r2, #0
  4075f8:	bf18      	it	ne
  4075fa:	2001      	movne	r0, #1
  4075fc:	b002      	add	sp, #8
  4075fe:	4770      	bx	lr
  407600:	a901      	add	r1, sp, #4
  407602:	2a00      	cmp	r2, #0
  407604:	d1f3      	bne.n	4075ee <__ascii_mbtowc+0x6>
  407606:	4610      	mov	r0, r2
  407608:	b002      	add	sp, #8
  40760a:	4770      	bx	lr
  40760c:	f06f 0001 	mvn.w	r0, #1
  407610:	e7f4      	b.n	4075fc <__ascii_mbtowc+0x14>
  407612:	bf00      	nop

00407614 <memmove>:
  407614:	4288      	cmp	r0, r1
  407616:	b5f0      	push	{r4, r5, r6, r7, lr}
  407618:	d90d      	bls.n	407636 <memmove+0x22>
  40761a:	188b      	adds	r3, r1, r2
  40761c:	4298      	cmp	r0, r3
  40761e:	d20a      	bcs.n	407636 <memmove+0x22>
  407620:	1884      	adds	r4, r0, r2
  407622:	2a00      	cmp	r2, #0
  407624:	d051      	beq.n	4076ca <memmove+0xb6>
  407626:	4622      	mov	r2, r4
  407628:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40762c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  407630:	4299      	cmp	r1, r3
  407632:	d1f9      	bne.n	407628 <memmove+0x14>
  407634:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407636:	2a0f      	cmp	r2, #15
  407638:	d948      	bls.n	4076cc <memmove+0xb8>
  40763a:	ea41 0300 	orr.w	r3, r1, r0
  40763e:	079b      	lsls	r3, r3, #30
  407640:	d146      	bne.n	4076d0 <memmove+0xbc>
  407642:	f100 0410 	add.w	r4, r0, #16
  407646:	f101 0310 	add.w	r3, r1, #16
  40764a:	4615      	mov	r5, r2
  40764c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  407650:	f844 6c10 	str.w	r6, [r4, #-16]
  407654:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  407658:	f844 6c0c 	str.w	r6, [r4, #-12]
  40765c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  407660:	f844 6c08 	str.w	r6, [r4, #-8]
  407664:	3d10      	subs	r5, #16
  407666:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40766a:	f844 6c04 	str.w	r6, [r4, #-4]
  40766e:	2d0f      	cmp	r5, #15
  407670:	f103 0310 	add.w	r3, r3, #16
  407674:	f104 0410 	add.w	r4, r4, #16
  407678:	d8e8      	bhi.n	40764c <memmove+0x38>
  40767a:	f1a2 0310 	sub.w	r3, r2, #16
  40767e:	f023 030f 	bic.w	r3, r3, #15
  407682:	f002 0e0f 	and.w	lr, r2, #15
  407686:	3310      	adds	r3, #16
  407688:	f1be 0f03 	cmp.w	lr, #3
  40768c:	4419      	add	r1, r3
  40768e:	4403      	add	r3, r0
  407690:	d921      	bls.n	4076d6 <memmove+0xc2>
  407692:	1f1e      	subs	r6, r3, #4
  407694:	460d      	mov	r5, r1
  407696:	4674      	mov	r4, lr
  407698:	3c04      	subs	r4, #4
  40769a:	f855 7b04 	ldr.w	r7, [r5], #4
  40769e:	f846 7f04 	str.w	r7, [r6, #4]!
  4076a2:	2c03      	cmp	r4, #3
  4076a4:	d8f8      	bhi.n	407698 <memmove+0x84>
  4076a6:	f1ae 0404 	sub.w	r4, lr, #4
  4076aa:	f024 0403 	bic.w	r4, r4, #3
  4076ae:	3404      	adds	r4, #4
  4076b0:	4421      	add	r1, r4
  4076b2:	4423      	add	r3, r4
  4076b4:	f002 0203 	and.w	r2, r2, #3
  4076b8:	b162      	cbz	r2, 4076d4 <memmove+0xc0>
  4076ba:	3b01      	subs	r3, #1
  4076bc:	440a      	add	r2, r1
  4076be:	f811 4b01 	ldrb.w	r4, [r1], #1
  4076c2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4076c6:	428a      	cmp	r2, r1
  4076c8:	d1f9      	bne.n	4076be <memmove+0xaa>
  4076ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4076cc:	4603      	mov	r3, r0
  4076ce:	e7f3      	b.n	4076b8 <memmove+0xa4>
  4076d0:	4603      	mov	r3, r0
  4076d2:	e7f2      	b.n	4076ba <memmove+0xa6>
  4076d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4076d6:	4672      	mov	r2, lr
  4076d8:	e7ee      	b.n	4076b8 <memmove+0xa4>
  4076da:	bf00      	nop

004076dc <_realloc_r>:
  4076dc:	2900      	cmp	r1, #0
  4076de:	f000 8095 	beq.w	40780c <_realloc_r+0x130>
  4076e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4076e6:	460d      	mov	r5, r1
  4076e8:	4616      	mov	r6, r2
  4076ea:	b083      	sub	sp, #12
  4076ec:	4680      	mov	r8, r0
  4076ee:	f106 070b 	add.w	r7, r6, #11
  4076f2:	f7ff f91f 	bl	406934 <__malloc_lock>
  4076f6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4076fa:	2f16      	cmp	r7, #22
  4076fc:	f02e 0403 	bic.w	r4, lr, #3
  407700:	f1a5 0908 	sub.w	r9, r5, #8
  407704:	d83c      	bhi.n	407780 <_realloc_r+0xa4>
  407706:	2210      	movs	r2, #16
  407708:	4617      	mov	r7, r2
  40770a:	42be      	cmp	r6, r7
  40770c:	d83d      	bhi.n	40778a <_realloc_r+0xae>
  40770e:	4294      	cmp	r4, r2
  407710:	da43      	bge.n	40779a <_realloc_r+0xbe>
  407712:	4bc4      	ldr	r3, [pc, #784]	; (407a24 <_realloc_r+0x348>)
  407714:	6899      	ldr	r1, [r3, #8]
  407716:	eb09 0004 	add.w	r0, r9, r4
  40771a:	4288      	cmp	r0, r1
  40771c:	f000 80b4 	beq.w	407888 <_realloc_r+0x1ac>
  407720:	6843      	ldr	r3, [r0, #4]
  407722:	f023 0101 	bic.w	r1, r3, #1
  407726:	4401      	add	r1, r0
  407728:	6849      	ldr	r1, [r1, #4]
  40772a:	07c9      	lsls	r1, r1, #31
  40772c:	d54c      	bpl.n	4077c8 <_realloc_r+0xec>
  40772e:	f01e 0f01 	tst.w	lr, #1
  407732:	f000 809b 	beq.w	40786c <_realloc_r+0x190>
  407736:	4631      	mov	r1, r6
  407738:	4640      	mov	r0, r8
  40773a:	f7fe fd2b 	bl	406194 <_malloc_r>
  40773e:	4606      	mov	r6, r0
  407740:	2800      	cmp	r0, #0
  407742:	d03a      	beq.n	4077ba <_realloc_r+0xde>
  407744:	f855 3c04 	ldr.w	r3, [r5, #-4]
  407748:	f023 0301 	bic.w	r3, r3, #1
  40774c:	444b      	add	r3, r9
  40774e:	f1a0 0208 	sub.w	r2, r0, #8
  407752:	429a      	cmp	r2, r3
  407754:	f000 8121 	beq.w	40799a <_realloc_r+0x2be>
  407758:	1f22      	subs	r2, r4, #4
  40775a:	2a24      	cmp	r2, #36	; 0x24
  40775c:	f200 8107 	bhi.w	40796e <_realloc_r+0x292>
  407760:	2a13      	cmp	r2, #19
  407762:	f200 80db 	bhi.w	40791c <_realloc_r+0x240>
  407766:	4603      	mov	r3, r0
  407768:	462a      	mov	r2, r5
  40776a:	6811      	ldr	r1, [r2, #0]
  40776c:	6019      	str	r1, [r3, #0]
  40776e:	6851      	ldr	r1, [r2, #4]
  407770:	6059      	str	r1, [r3, #4]
  407772:	6892      	ldr	r2, [r2, #8]
  407774:	609a      	str	r2, [r3, #8]
  407776:	4629      	mov	r1, r5
  407778:	4640      	mov	r0, r8
  40777a:	f7ff fe4f 	bl	40741c <_free_r>
  40777e:	e01c      	b.n	4077ba <_realloc_r+0xde>
  407780:	f027 0707 	bic.w	r7, r7, #7
  407784:	2f00      	cmp	r7, #0
  407786:	463a      	mov	r2, r7
  407788:	dabf      	bge.n	40770a <_realloc_r+0x2e>
  40778a:	2600      	movs	r6, #0
  40778c:	230c      	movs	r3, #12
  40778e:	4630      	mov	r0, r6
  407790:	f8c8 3000 	str.w	r3, [r8]
  407794:	b003      	add	sp, #12
  407796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40779a:	462e      	mov	r6, r5
  40779c:	1be3      	subs	r3, r4, r7
  40779e:	2b0f      	cmp	r3, #15
  4077a0:	d81e      	bhi.n	4077e0 <_realloc_r+0x104>
  4077a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4077a6:	f003 0301 	and.w	r3, r3, #1
  4077aa:	4323      	orrs	r3, r4
  4077ac:	444c      	add	r4, r9
  4077ae:	f8c9 3004 	str.w	r3, [r9, #4]
  4077b2:	6863      	ldr	r3, [r4, #4]
  4077b4:	f043 0301 	orr.w	r3, r3, #1
  4077b8:	6063      	str	r3, [r4, #4]
  4077ba:	4640      	mov	r0, r8
  4077bc:	f7ff f8c0 	bl	406940 <__malloc_unlock>
  4077c0:	4630      	mov	r0, r6
  4077c2:	b003      	add	sp, #12
  4077c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4077c8:	f023 0303 	bic.w	r3, r3, #3
  4077cc:	18e1      	adds	r1, r4, r3
  4077ce:	4291      	cmp	r1, r2
  4077d0:	db1f      	blt.n	407812 <_realloc_r+0x136>
  4077d2:	68c3      	ldr	r3, [r0, #12]
  4077d4:	6882      	ldr	r2, [r0, #8]
  4077d6:	462e      	mov	r6, r5
  4077d8:	60d3      	str	r3, [r2, #12]
  4077da:	460c      	mov	r4, r1
  4077dc:	609a      	str	r2, [r3, #8]
  4077de:	e7dd      	b.n	40779c <_realloc_r+0xc0>
  4077e0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4077e4:	eb09 0107 	add.w	r1, r9, r7
  4077e8:	f002 0201 	and.w	r2, r2, #1
  4077ec:	444c      	add	r4, r9
  4077ee:	f043 0301 	orr.w	r3, r3, #1
  4077f2:	4317      	orrs	r7, r2
  4077f4:	f8c9 7004 	str.w	r7, [r9, #4]
  4077f8:	604b      	str	r3, [r1, #4]
  4077fa:	6863      	ldr	r3, [r4, #4]
  4077fc:	f043 0301 	orr.w	r3, r3, #1
  407800:	3108      	adds	r1, #8
  407802:	6063      	str	r3, [r4, #4]
  407804:	4640      	mov	r0, r8
  407806:	f7ff fe09 	bl	40741c <_free_r>
  40780a:	e7d6      	b.n	4077ba <_realloc_r+0xde>
  40780c:	4611      	mov	r1, r2
  40780e:	f7fe bcc1 	b.w	406194 <_malloc_r>
  407812:	f01e 0f01 	tst.w	lr, #1
  407816:	d18e      	bne.n	407736 <_realloc_r+0x5a>
  407818:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40781c:	eba9 0a01 	sub.w	sl, r9, r1
  407820:	f8da 1004 	ldr.w	r1, [sl, #4]
  407824:	f021 0103 	bic.w	r1, r1, #3
  407828:	440b      	add	r3, r1
  40782a:	4423      	add	r3, r4
  40782c:	4293      	cmp	r3, r2
  40782e:	db25      	blt.n	40787c <_realloc_r+0x1a0>
  407830:	68c2      	ldr	r2, [r0, #12]
  407832:	6881      	ldr	r1, [r0, #8]
  407834:	4656      	mov	r6, sl
  407836:	60ca      	str	r2, [r1, #12]
  407838:	6091      	str	r1, [r2, #8]
  40783a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40783e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  407842:	1f22      	subs	r2, r4, #4
  407844:	2a24      	cmp	r2, #36	; 0x24
  407846:	60c1      	str	r1, [r0, #12]
  407848:	6088      	str	r0, [r1, #8]
  40784a:	f200 8094 	bhi.w	407976 <_realloc_r+0x29a>
  40784e:	2a13      	cmp	r2, #19
  407850:	d96f      	bls.n	407932 <_realloc_r+0x256>
  407852:	6829      	ldr	r1, [r5, #0]
  407854:	f8ca 1008 	str.w	r1, [sl, #8]
  407858:	6869      	ldr	r1, [r5, #4]
  40785a:	f8ca 100c 	str.w	r1, [sl, #12]
  40785e:	2a1b      	cmp	r2, #27
  407860:	f200 80a2 	bhi.w	4079a8 <_realloc_r+0x2cc>
  407864:	3508      	adds	r5, #8
  407866:	f10a 0210 	add.w	r2, sl, #16
  40786a:	e063      	b.n	407934 <_realloc_r+0x258>
  40786c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  407870:	eba9 0a03 	sub.w	sl, r9, r3
  407874:	f8da 1004 	ldr.w	r1, [sl, #4]
  407878:	f021 0103 	bic.w	r1, r1, #3
  40787c:	1863      	adds	r3, r4, r1
  40787e:	4293      	cmp	r3, r2
  407880:	f6ff af59 	blt.w	407736 <_realloc_r+0x5a>
  407884:	4656      	mov	r6, sl
  407886:	e7d8      	b.n	40783a <_realloc_r+0x15e>
  407888:	6841      	ldr	r1, [r0, #4]
  40788a:	f021 0b03 	bic.w	fp, r1, #3
  40788e:	44a3      	add	fp, r4
  407890:	f107 0010 	add.w	r0, r7, #16
  407894:	4583      	cmp	fp, r0
  407896:	da56      	bge.n	407946 <_realloc_r+0x26a>
  407898:	f01e 0f01 	tst.w	lr, #1
  40789c:	f47f af4b 	bne.w	407736 <_realloc_r+0x5a>
  4078a0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4078a4:	eba9 0a01 	sub.w	sl, r9, r1
  4078a8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4078ac:	f021 0103 	bic.w	r1, r1, #3
  4078b0:	448b      	add	fp, r1
  4078b2:	4558      	cmp	r0, fp
  4078b4:	dce2      	bgt.n	40787c <_realloc_r+0x1a0>
  4078b6:	4656      	mov	r6, sl
  4078b8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4078bc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4078c0:	1f22      	subs	r2, r4, #4
  4078c2:	2a24      	cmp	r2, #36	; 0x24
  4078c4:	60c1      	str	r1, [r0, #12]
  4078c6:	6088      	str	r0, [r1, #8]
  4078c8:	f200 808f 	bhi.w	4079ea <_realloc_r+0x30e>
  4078cc:	2a13      	cmp	r2, #19
  4078ce:	f240 808a 	bls.w	4079e6 <_realloc_r+0x30a>
  4078d2:	6829      	ldr	r1, [r5, #0]
  4078d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4078d8:	6869      	ldr	r1, [r5, #4]
  4078da:	f8ca 100c 	str.w	r1, [sl, #12]
  4078de:	2a1b      	cmp	r2, #27
  4078e0:	f200 808a 	bhi.w	4079f8 <_realloc_r+0x31c>
  4078e4:	3508      	adds	r5, #8
  4078e6:	f10a 0210 	add.w	r2, sl, #16
  4078ea:	6829      	ldr	r1, [r5, #0]
  4078ec:	6011      	str	r1, [r2, #0]
  4078ee:	6869      	ldr	r1, [r5, #4]
  4078f0:	6051      	str	r1, [r2, #4]
  4078f2:	68a9      	ldr	r1, [r5, #8]
  4078f4:	6091      	str	r1, [r2, #8]
  4078f6:	eb0a 0107 	add.w	r1, sl, r7
  4078fa:	ebab 0207 	sub.w	r2, fp, r7
  4078fe:	f042 0201 	orr.w	r2, r2, #1
  407902:	6099      	str	r1, [r3, #8]
  407904:	604a      	str	r2, [r1, #4]
  407906:	f8da 3004 	ldr.w	r3, [sl, #4]
  40790a:	f003 0301 	and.w	r3, r3, #1
  40790e:	431f      	orrs	r7, r3
  407910:	4640      	mov	r0, r8
  407912:	f8ca 7004 	str.w	r7, [sl, #4]
  407916:	f7ff f813 	bl	406940 <__malloc_unlock>
  40791a:	e751      	b.n	4077c0 <_realloc_r+0xe4>
  40791c:	682b      	ldr	r3, [r5, #0]
  40791e:	6003      	str	r3, [r0, #0]
  407920:	686b      	ldr	r3, [r5, #4]
  407922:	6043      	str	r3, [r0, #4]
  407924:	2a1b      	cmp	r2, #27
  407926:	d82d      	bhi.n	407984 <_realloc_r+0x2a8>
  407928:	f100 0308 	add.w	r3, r0, #8
  40792c:	f105 0208 	add.w	r2, r5, #8
  407930:	e71b      	b.n	40776a <_realloc_r+0x8e>
  407932:	4632      	mov	r2, r6
  407934:	6829      	ldr	r1, [r5, #0]
  407936:	6011      	str	r1, [r2, #0]
  407938:	6869      	ldr	r1, [r5, #4]
  40793a:	6051      	str	r1, [r2, #4]
  40793c:	68a9      	ldr	r1, [r5, #8]
  40793e:	6091      	str	r1, [r2, #8]
  407940:	461c      	mov	r4, r3
  407942:	46d1      	mov	r9, sl
  407944:	e72a      	b.n	40779c <_realloc_r+0xc0>
  407946:	eb09 0107 	add.w	r1, r9, r7
  40794a:	ebab 0b07 	sub.w	fp, fp, r7
  40794e:	f04b 0201 	orr.w	r2, fp, #1
  407952:	6099      	str	r1, [r3, #8]
  407954:	604a      	str	r2, [r1, #4]
  407956:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40795a:	f003 0301 	and.w	r3, r3, #1
  40795e:	431f      	orrs	r7, r3
  407960:	4640      	mov	r0, r8
  407962:	f845 7c04 	str.w	r7, [r5, #-4]
  407966:	f7fe ffeb 	bl	406940 <__malloc_unlock>
  40796a:	462e      	mov	r6, r5
  40796c:	e728      	b.n	4077c0 <_realloc_r+0xe4>
  40796e:	4629      	mov	r1, r5
  407970:	f7ff fe50 	bl	407614 <memmove>
  407974:	e6ff      	b.n	407776 <_realloc_r+0x9a>
  407976:	4629      	mov	r1, r5
  407978:	4630      	mov	r0, r6
  40797a:	461c      	mov	r4, r3
  40797c:	46d1      	mov	r9, sl
  40797e:	f7ff fe49 	bl	407614 <memmove>
  407982:	e70b      	b.n	40779c <_realloc_r+0xc0>
  407984:	68ab      	ldr	r3, [r5, #8]
  407986:	6083      	str	r3, [r0, #8]
  407988:	68eb      	ldr	r3, [r5, #12]
  40798a:	60c3      	str	r3, [r0, #12]
  40798c:	2a24      	cmp	r2, #36	; 0x24
  40798e:	d017      	beq.n	4079c0 <_realloc_r+0x2e4>
  407990:	f100 0310 	add.w	r3, r0, #16
  407994:	f105 0210 	add.w	r2, r5, #16
  407998:	e6e7      	b.n	40776a <_realloc_r+0x8e>
  40799a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40799e:	f023 0303 	bic.w	r3, r3, #3
  4079a2:	441c      	add	r4, r3
  4079a4:	462e      	mov	r6, r5
  4079a6:	e6f9      	b.n	40779c <_realloc_r+0xc0>
  4079a8:	68a9      	ldr	r1, [r5, #8]
  4079aa:	f8ca 1010 	str.w	r1, [sl, #16]
  4079ae:	68e9      	ldr	r1, [r5, #12]
  4079b0:	f8ca 1014 	str.w	r1, [sl, #20]
  4079b4:	2a24      	cmp	r2, #36	; 0x24
  4079b6:	d00c      	beq.n	4079d2 <_realloc_r+0x2f6>
  4079b8:	3510      	adds	r5, #16
  4079ba:	f10a 0218 	add.w	r2, sl, #24
  4079be:	e7b9      	b.n	407934 <_realloc_r+0x258>
  4079c0:	692b      	ldr	r3, [r5, #16]
  4079c2:	6103      	str	r3, [r0, #16]
  4079c4:	696b      	ldr	r3, [r5, #20]
  4079c6:	6143      	str	r3, [r0, #20]
  4079c8:	f105 0218 	add.w	r2, r5, #24
  4079cc:	f100 0318 	add.w	r3, r0, #24
  4079d0:	e6cb      	b.n	40776a <_realloc_r+0x8e>
  4079d2:	692a      	ldr	r2, [r5, #16]
  4079d4:	f8ca 2018 	str.w	r2, [sl, #24]
  4079d8:	696a      	ldr	r2, [r5, #20]
  4079da:	f8ca 201c 	str.w	r2, [sl, #28]
  4079de:	3518      	adds	r5, #24
  4079e0:	f10a 0220 	add.w	r2, sl, #32
  4079e4:	e7a6      	b.n	407934 <_realloc_r+0x258>
  4079e6:	4632      	mov	r2, r6
  4079e8:	e77f      	b.n	4078ea <_realloc_r+0x20e>
  4079ea:	4629      	mov	r1, r5
  4079ec:	4630      	mov	r0, r6
  4079ee:	9301      	str	r3, [sp, #4]
  4079f0:	f7ff fe10 	bl	407614 <memmove>
  4079f4:	9b01      	ldr	r3, [sp, #4]
  4079f6:	e77e      	b.n	4078f6 <_realloc_r+0x21a>
  4079f8:	68a9      	ldr	r1, [r5, #8]
  4079fa:	f8ca 1010 	str.w	r1, [sl, #16]
  4079fe:	68e9      	ldr	r1, [r5, #12]
  407a00:	f8ca 1014 	str.w	r1, [sl, #20]
  407a04:	2a24      	cmp	r2, #36	; 0x24
  407a06:	d003      	beq.n	407a10 <_realloc_r+0x334>
  407a08:	3510      	adds	r5, #16
  407a0a:	f10a 0218 	add.w	r2, sl, #24
  407a0e:	e76c      	b.n	4078ea <_realloc_r+0x20e>
  407a10:	692a      	ldr	r2, [r5, #16]
  407a12:	f8ca 2018 	str.w	r2, [sl, #24]
  407a16:	696a      	ldr	r2, [r5, #20]
  407a18:	f8ca 201c 	str.w	r2, [sl, #28]
  407a1c:	3518      	adds	r5, #24
  407a1e:	f10a 0220 	add.w	r2, sl, #32
  407a22:	e762      	b.n	4078ea <_realloc_r+0x20e>
  407a24:	20000444 	.word	0x20000444

00407a28 <__ascii_wctomb>:
  407a28:	b121      	cbz	r1, 407a34 <__ascii_wctomb+0xc>
  407a2a:	2aff      	cmp	r2, #255	; 0xff
  407a2c:	d804      	bhi.n	407a38 <__ascii_wctomb+0x10>
  407a2e:	700a      	strb	r2, [r1, #0]
  407a30:	2001      	movs	r0, #1
  407a32:	4770      	bx	lr
  407a34:	4608      	mov	r0, r1
  407a36:	4770      	bx	lr
  407a38:	238a      	movs	r3, #138	; 0x8a
  407a3a:	6003      	str	r3, [r0, #0]
  407a3c:	f04f 30ff 	mov.w	r0, #4294967295
  407a40:	4770      	bx	lr
  407a42:	bf00      	nop

00407a44 <__aeabi_drsub>:
  407a44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  407a48:	e002      	b.n	407a50 <__adddf3>
  407a4a:	bf00      	nop

00407a4c <__aeabi_dsub>:
  407a4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00407a50 <__adddf3>:
  407a50:	b530      	push	{r4, r5, lr}
  407a52:	ea4f 0441 	mov.w	r4, r1, lsl #1
  407a56:	ea4f 0543 	mov.w	r5, r3, lsl #1
  407a5a:	ea94 0f05 	teq	r4, r5
  407a5e:	bf08      	it	eq
  407a60:	ea90 0f02 	teqeq	r0, r2
  407a64:	bf1f      	itttt	ne
  407a66:	ea54 0c00 	orrsne.w	ip, r4, r0
  407a6a:	ea55 0c02 	orrsne.w	ip, r5, r2
  407a6e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  407a72:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407a76:	f000 80e2 	beq.w	407c3e <__adddf3+0x1ee>
  407a7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  407a7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  407a82:	bfb8      	it	lt
  407a84:	426d      	neglt	r5, r5
  407a86:	dd0c      	ble.n	407aa2 <__adddf3+0x52>
  407a88:	442c      	add	r4, r5
  407a8a:	ea80 0202 	eor.w	r2, r0, r2
  407a8e:	ea81 0303 	eor.w	r3, r1, r3
  407a92:	ea82 0000 	eor.w	r0, r2, r0
  407a96:	ea83 0101 	eor.w	r1, r3, r1
  407a9a:	ea80 0202 	eor.w	r2, r0, r2
  407a9e:	ea81 0303 	eor.w	r3, r1, r3
  407aa2:	2d36      	cmp	r5, #54	; 0x36
  407aa4:	bf88      	it	hi
  407aa6:	bd30      	pophi	{r4, r5, pc}
  407aa8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407aac:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407ab0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407ab4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407ab8:	d002      	beq.n	407ac0 <__adddf3+0x70>
  407aba:	4240      	negs	r0, r0
  407abc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407ac0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407ac4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407ac8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407acc:	d002      	beq.n	407ad4 <__adddf3+0x84>
  407ace:	4252      	negs	r2, r2
  407ad0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407ad4:	ea94 0f05 	teq	r4, r5
  407ad8:	f000 80a7 	beq.w	407c2a <__adddf3+0x1da>
  407adc:	f1a4 0401 	sub.w	r4, r4, #1
  407ae0:	f1d5 0e20 	rsbs	lr, r5, #32
  407ae4:	db0d      	blt.n	407b02 <__adddf3+0xb2>
  407ae6:	fa02 fc0e 	lsl.w	ip, r2, lr
  407aea:	fa22 f205 	lsr.w	r2, r2, r5
  407aee:	1880      	adds	r0, r0, r2
  407af0:	f141 0100 	adc.w	r1, r1, #0
  407af4:	fa03 f20e 	lsl.w	r2, r3, lr
  407af8:	1880      	adds	r0, r0, r2
  407afa:	fa43 f305 	asr.w	r3, r3, r5
  407afe:	4159      	adcs	r1, r3
  407b00:	e00e      	b.n	407b20 <__adddf3+0xd0>
  407b02:	f1a5 0520 	sub.w	r5, r5, #32
  407b06:	f10e 0e20 	add.w	lr, lr, #32
  407b0a:	2a01      	cmp	r2, #1
  407b0c:	fa03 fc0e 	lsl.w	ip, r3, lr
  407b10:	bf28      	it	cs
  407b12:	f04c 0c02 	orrcs.w	ip, ip, #2
  407b16:	fa43 f305 	asr.w	r3, r3, r5
  407b1a:	18c0      	adds	r0, r0, r3
  407b1c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  407b20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407b24:	d507      	bpl.n	407b36 <__adddf3+0xe6>
  407b26:	f04f 0e00 	mov.w	lr, #0
  407b2a:	f1dc 0c00 	rsbs	ip, ip, #0
  407b2e:	eb7e 0000 	sbcs.w	r0, lr, r0
  407b32:	eb6e 0101 	sbc.w	r1, lr, r1
  407b36:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  407b3a:	d31b      	bcc.n	407b74 <__adddf3+0x124>
  407b3c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  407b40:	d30c      	bcc.n	407b5c <__adddf3+0x10c>
  407b42:	0849      	lsrs	r1, r1, #1
  407b44:	ea5f 0030 	movs.w	r0, r0, rrx
  407b48:	ea4f 0c3c 	mov.w	ip, ip, rrx
  407b4c:	f104 0401 	add.w	r4, r4, #1
  407b50:	ea4f 5244 	mov.w	r2, r4, lsl #21
  407b54:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  407b58:	f080 809a 	bcs.w	407c90 <__adddf3+0x240>
  407b5c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  407b60:	bf08      	it	eq
  407b62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407b66:	f150 0000 	adcs.w	r0, r0, #0
  407b6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407b6e:	ea41 0105 	orr.w	r1, r1, r5
  407b72:	bd30      	pop	{r4, r5, pc}
  407b74:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407b78:	4140      	adcs	r0, r0
  407b7a:	eb41 0101 	adc.w	r1, r1, r1
  407b7e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407b82:	f1a4 0401 	sub.w	r4, r4, #1
  407b86:	d1e9      	bne.n	407b5c <__adddf3+0x10c>
  407b88:	f091 0f00 	teq	r1, #0
  407b8c:	bf04      	itt	eq
  407b8e:	4601      	moveq	r1, r0
  407b90:	2000      	moveq	r0, #0
  407b92:	fab1 f381 	clz	r3, r1
  407b96:	bf08      	it	eq
  407b98:	3320      	addeq	r3, #32
  407b9a:	f1a3 030b 	sub.w	r3, r3, #11
  407b9e:	f1b3 0220 	subs.w	r2, r3, #32
  407ba2:	da0c      	bge.n	407bbe <__adddf3+0x16e>
  407ba4:	320c      	adds	r2, #12
  407ba6:	dd08      	ble.n	407bba <__adddf3+0x16a>
  407ba8:	f102 0c14 	add.w	ip, r2, #20
  407bac:	f1c2 020c 	rsb	r2, r2, #12
  407bb0:	fa01 f00c 	lsl.w	r0, r1, ip
  407bb4:	fa21 f102 	lsr.w	r1, r1, r2
  407bb8:	e00c      	b.n	407bd4 <__adddf3+0x184>
  407bba:	f102 0214 	add.w	r2, r2, #20
  407bbe:	bfd8      	it	le
  407bc0:	f1c2 0c20 	rsble	ip, r2, #32
  407bc4:	fa01 f102 	lsl.w	r1, r1, r2
  407bc8:	fa20 fc0c 	lsr.w	ip, r0, ip
  407bcc:	bfdc      	itt	le
  407bce:	ea41 010c 	orrle.w	r1, r1, ip
  407bd2:	4090      	lslle	r0, r2
  407bd4:	1ae4      	subs	r4, r4, r3
  407bd6:	bfa2      	ittt	ge
  407bd8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407bdc:	4329      	orrge	r1, r5
  407bde:	bd30      	popge	{r4, r5, pc}
  407be0:	ea6f 0404 	mvn.w	r4, r4
  407be4:	3c1f      	subs	r4, #31
  407be6:	da1c      	bge.n	407c22 <__adddf3+0x1d2>
  407be8:	340c      	adds	r4, #12
  407bea:	dc0e      	bgt.n	407c0a <__adddf3+0x1ba>
  407bec:	f104 0414 	add.w	r4, r4, #20
  407bf0:	f1c4 0220 	rsb	r2, r4, #32
  407bf4:	fa20 f004 	lsr.w	r0, r0, r4
  407bf8:	fa01 f302 	lsl.w	r3, r1, r2
  407bfc:	ea40 0003 	orr.w	r0, r0, r3
  407c00:	fa21 f304 	lsr.w	r3, r1, r4
  407c04:	ea45 0103 	orr.w	r1, r5, r3
  407c08:	bd30      	pop	{r4, r5, pc}
  407c0a:	f1c4 040c 	rsb	r4, r4, #12
  407c0e:	f1c4 0220 	rsb	r2, r4, #32
  407c12:	fa20 f002 	lsr.w	r0, r0, r2
  407c16:	fa01 f304 	lsl.w	r3, r1, r4
  407c1a:	ea40 0003 	orr.w	r0, r0, r3
  407c1e:	4629      	mov	r1, r5
  407c20:	bd30      	pop	{r4, r5, pc}
  407c22:	fa21 f004 	lsr.w	r0, r1, r4
  407c26:	4629      	mov	r1, r5
  407c28:	bd30      	pop	{r4, r5, pc}
  407c2a:	f094 0f00 	teq	r4, #0
  407c2e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  407c32:	bf06      	itte	eq
  407c34:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  407c38:	3401      	addeq	r4, #1
  407c3a:	3d01      	subne	r5, #1
  407c3c:	e74e      	b.n	407adc <__adddf3+0x8c>
  407c3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407c42:	bf18      	it	ne
  407c44:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407c48:	d029      	beq.n	407c9e <__adddf3+0x24e>
  407c4a:	ea94 0f05 	teq	r4, r5
  407c4e:	bf08      	it	eq
  407c50:	ea90 0f02 	teqeq	r0, r2
  407c54:	d005      	beq.n	407c62 <__adddf3+0x212>
  407c56:	ea54 0c00 	orrs.w	ip, r4, r0
  407c5a:	bf04      	itt	eq
  407c5c:	4619      	moveq	r1, r3
  407c5e:	4610      	moveq	r0, r2
  407c60:	bd30      	pop	{r4, r5, pc}
  407c62:	ea91 0f03 	teq	r1, r3
  407c66:	bf1e      	ittt	ne
  407c68:	2100      	movne	r1, #0
  407c6a:	2000      	movne	r0, #0
  407c6c:	bd30      	popne	{r4, r5, pc}
  407c6e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  407c72:	d105      	bne.n	407c80 <__adddf3+0x230>
  407c74:	0040      	lsls	r0, r0, #1
  407c76:	4149      	adcs	r1, r1
  407c78:	bf28      	it	cs
  407c7a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  407c7e:	bd30      	pop	{r4, r5, pc}
  407c80:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  407c84:	bf3c      	itt	cc
  407c86:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  407c8a:	bd30      	popcc	{r4, r5, pc}
  407c8c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407c90:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  407c94:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407c98:	f04f 0000 	mov.w	r0, #0
  407c9c:	bd30      	pop	{r4, r5, pc}
  407c9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  407ca2:	bf1a      	itte	ne
  407ca4:	4619      	movne	r1, r3
  407ca6:	4610      	movne	r0, r2
  407ca8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407cac:	bf1c      	itt	ne
  407cae:	460b      	movne	r3, r1
  407cb0:	4602      	movne	r2, r0
  407cb2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407cb6:	bf06      	itte	eq
  407cb8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407cbc:	ea91 0f03 	teqeq	r1, r3
  407cc0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  407cc4:	bd30      	pop	{r4, r5, pc}
  407cc6:	bf00      	nop

00407cc8 <__aeabi_ui2d>:
  407cc8:	f090 0f00 	teq	r0, #0
  407ccc:	bf04      	itt	eq
  407cce:	2100      	moveq	r1, #0
  407cd0:	4770      	bxeq	lr
  407cd2:	b530      	push	{r4, r5, lr}
  407cd4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407cd8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407cdc:	f04f 0500 	mov.w	r5, #0
  407ce0:	f04f 0100 	mov.w	r1, #0
  407ce4:	e750      	b.n	407b88 <__adddf3+0x138>
  407ce6:	bf00      	nop

00407ce8 <__aeabi_i2d>:
  407ce8:	f090 0f00 	teq	r0, #0
  407cec:	bf04      	itt	eq
  407cee:	2100      	moveq	r1, #0
  407cf0:	4770      	bxeq	lr
  407cf2:	b530      	push	{r4, r5, lr}
  407cf4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407cf8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407cfc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407d00:	bf48      	it	mi
  407d02:	4240      	negmi	r0, r0
  407d04:	f04f 0100 	mov.w	r1, #0
  407d08:	e73e      	b.n	407b88 <__adddf3+0x138>
  407d0a:	bf00      	nop

00407d0c <__aeabi_f2d>:
  407d0c:	0042      	lsls	r2, r0, #1
  407d0e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  407d12:	ea4f 0131 	mov.w	r1, r1, rrx
  407d16:	ea4f 7002 	mov.w	r0, r2, lsl #28
  407d1a:	bf1f      	itttt	ne
  407d1c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  407d20:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407d24:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  407d28:	4770      	bxne	lr
  407d2a:	f092 0f00 	teq	r2, #0
  407d2e:	bf14      	ite	ne
  407d30:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  407d34:	4770      	bxeq	lr
  407d36:	b530      	push	{r4, r5, lr}
  407d38:	f44f 7460 	mov.w	r4, #896	; 0x380
  407d3c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407d40:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407d44:	e720      	b.n	407b88 <__adddf3+0x138>
  407d46:	bf00      	nop

00407d48 <__aeabi_ul2d>:
  407d48:	ea50 0201 	orrs.w	r2, r0, r1
  407d4c:	bf08      	it	eq
  407d4e:	4770      	bxeq	lr
  407d50:	b530      	push	{r4, r5, lr}
  407d52:	f04f 0500 	mov.w	r5, #0
  407d56:	e00a      	b.n	407d6e <__aeabi_l2d+0x16>

00407d58 <__aeabi_l2d>:
  407d58:	ea50 0201 	orrs.w	r2, r0, r1
  407d5c:	bf08      	it	eq
  407d5e:	4770      	bxeq	lr
  407d60:	b530      	push	{r4, r5, lr}
  407d62:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  407d66:	d502      	bpl.n	407d6e <__aeabi_l2d+0x16>
  407d68:	4240      	negs	r0, r0
  407d6a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407d6e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407d72:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407d76:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  407d7a:	f43f aedc 	beq.w	407b36 <__adddf3+0xe6>
  407d7e:	f04f 0203 	mov.w	r2, #3
  407d82:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407d86:	bf18      	it	ne
  407d88:	3203      	addne	r2, #3
  407d8a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407d8e:	bf18      	it	ne
  407d90:	3203      	addne	r2, #3
  407d92:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  407d96:	f1c2 0320 	rsb	r3, r2, #32
  407d9a:	fa00 fc03 	lsl.w	ip, r0, r3
  407d9e:	fa20 f002 	lsr.w	r0, r0, r2
  407da2:	fa01 fe03 	lsl.w	lr, r1, r3
  407da6:	ea40 000e 	orr.w	r0, r0, lr
  407daa:	fa21 f102 	lsr.w	r1, r1, r2
  407dae:	4414      	add	r4, r2
  407db0:	e6c1      	b.n	407b36 <__adddf3+0xe6>
  407db2:	bf00      	nop

00407db4 <__aeabi_dmul>:
  407db4:	b570      	push	{r4, r5, r6, lr}
  407db6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407dba:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  407dbe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407dc2:	bf1d      	ittte	ne
  407dc4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407dc8:	ea94 0f0c 	teqne	r4, ip
  407dcc:	ea95 0f0c 	teqne	r5, ip
  407dd0:	f000 f8de 	bleq	407f90 <__aeabi_dmul+0x1dc>
  407dd4:	442c      	add	r4, r5
  407dd6:	ea81 0603 	eor.w	r6, r1, r3
  407dda:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  407dde:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407de2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  407de6:	bf18      	it	ne
  407de8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  407dec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407df0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407df4:	d038      	beq.n	407e68 <__aeabi_dmul+0xb4>
  407df6:	fba0 ce02 	umull	ip, lr, r0, r2
  407dfa:	f04f 0500 	mov.w	r5, #0
  407dfe:	fbe1 e502 	umlal	lr, r5, r1, r2
  407e02:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  407e06:	fbe0 e503 	umlal	lr, r5, r0, r3
  407e0a:	f04f 0600 	mov.w	r6, #0
  407e0e:	fbe1 5603 	umlal	r5, r6, r1, r3
  407e12:	f09c 0f00 	teq	ip, #0
  407e16:	bf18      	it	ne
  407e18:	f04e 0e01 	orrne.w	lr, lr, #1
  407e1c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  407e20:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  407e24:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  407e28:	d204      	bcs.n	407e34 <__aeabi_dmul+0x80>
  407e2a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  407e2e:	416d      	adcs	r5, r5
  407e30:	eb46 0606 	adc.w	r6, r6, r6
  407e34:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  407e38:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  407e3c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  407e40:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  407e44:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  407e48:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  407e4c:	bf88      	it	hi
  407e4e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  407e52:	d81e      	bhi.n	407e92 <__aeabi_dmul+0xde>
  407e54:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  407e58:	bf08      	it	eq
  407e5a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  407e5e:	f150 0000 	adcs.w	r0, r0, #0
  407e62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407e66:	bd70      	pop	{r4, r5, r6, pc}
  407e68:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  407e6c:	ea46 0101 	orr.w	r1, r6, r1
  407e70:	ea40 0002 	orr.w	r0, r0, r2
  407e74:	ea81 0103 	eor.w	r1, r1, r3
  407e78:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  407e7c:	bfc2      	ittt	gt
  407e7e:	ebd4 050c 	rsbsgt	r5, r4, ip
  407e82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407e86:	bd70      	popgt	{r4, r5, r6, pc}
  407e88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407e8c:	f04f 0e00 	mov.w	lr, #0
  407e90:	3c01      	subs	r4, #1
  407e92:	f300 80ab 	bgt.w	407fec <__aeabi_dmul+0x238>
  407e96:	f114 0f36 	cmn.w	r4, #54	; 0x36
  407e9a:	bfde      	ittt	le
  407e9c:	2000      	movle	r0, #0
  407e9e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  407ea2:	bd70      	pople	{r4, r5, r6, pc}
  407ea4:	f1c4 0400 	rsb	r4, r4, #0
  407ea8:	3c20      	subs	r4, #32
  407eaa:	da35      	bge.n	407f18 <__aeabi_dmul+0x164>
  407eac:	340c      	adds	r4, #12
  407eae:	dc1b      	bgt.n	407ee8 <__aeabi_dmul+0x134>
  407eb0:	f104 0414 	add.w	r4, r4, #20
  407eb4:	f1c4 0520 	rsb	r5, r4, #32
  407eb8:	fa00 f305 	lsl.w	r3, r0, r5
  407ebc:	fa20 f004 	lsr.w	r0, r0, r4
  407ec0:	fa01 f205 	lsl.w	r2, r1, r5
  407ec4:	ea40 0002 	orr.w	r0, r0, r2
  407ec8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  407ecc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407ed0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407ed4:	fa21 f604 	lsr.w	r6, r1, r4
  407ed8:	eb42 0106 	adc.w	r1, r2, r6
  407edc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407ee0:	bf08      	it	eq
  407ee2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407ee6:	bd70      	pop	{r4, r5, r6, pc}
  407ee8:	f1c4 040c 	rsb	r4, r4, #12
  407eec:	f1c4 0520 	rsb	r5, r4, #32
  407ef0:	fa00 f304 	lsl.w	r3, r0, r4
  407ef4:	fa20 f005 	lsr.w	r0, r0, r5
  407ef8:	fa01 f204 	lsl.w	r2, r1, r4
  407efc:	ea40 0002 	orr.w	r0, r0, r2
  407f00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407f04:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407f08:	f141 0100 	adc.w	r1, r1, #0
  407f0c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407f10:	bf08      	it	eq
  407f12:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407f16:	bd70      	pop	{r4, r5, r6, pc}
  407f18:	f1c4 0520 	rsb	r5, r4, #32
  407f1c:	fa00 f205 	lsl.w	r2, r0, r5
  407f20:	ea4e 0e02 	orr.w	lr, lr, r2
  407f24:	fa20 f304 	lsr.w	r3, r0, r4
  407f28:	fa01 f205 	lsl.w	r2, r1, r5
  407f2c:	ea43 0302 	orr.w	r3, r3, r2
  407f30:	fa21 f004 	lsr.w	r0, r1, r4
  407f34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407f38:	fa21 f204 	lsr.w	r2, r1, r4
  407f3c:	ea20 0002 	bic.w	r0, r0, r2
  407f40:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  407f44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407f48:	bf08      	it	eq
  407f4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407f4e:	bd70      	pop	{r4, r5, r6, pc}
  407f50:	f094 0f00 	teq	r4, #0
  407f54:	d10f      	bne.n	407f76 <__aeabi_dmul+0x1c2>
  407f56:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  407f5a:	0040      	lsls	r0, r0, #1
  407f5c:	eb41 0101 	adc.w	r1, r1, r1
  407f60:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407f64:	bf08      	it	eq
  407f66:	3c01      	subeq	r4, #1
  407f68:	d0f7      	beq.n	407f5a <__aeabi_dmul+0x1a6>
  407f6a:	ea41 0106 	orr.w	r1, r1, r6
  407f6e:	f095 0f00 	teq	r5, #0
  407f72:	bf18      	it	ne
  407f74:	4770      	bxne	lr
  407f76:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  407f7a:	0052      	lsls	r2, r2, #1
  407f7c:	eb43 0303 	adc.w	r3, r3, r3
  407f80:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  407f84:	bf08      	it	eq
  407f86:	3d01      	subeq	r5, #1
  407f88:	d0f7      	beq.n	407f7a <__aeabi_dmul+0x1c6>
  407f8a:	ea43 0306 	orr.w	r3, r3, r6
  407f8e:	4770      	bx	lr
  407f90:	ea94 0f0c 	teq	r4, ip
  407f94:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407f98:	bf18      	it	ne
  407f9a:	ea95 0f0c 	teqne	r5, ip
  407f9e:	d00c      	beq.n	407fba <__aeabi_dmul+0x206>
  407fa0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407fa4:	bf18      	it	ne
  407fa6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407faa:	d1d1      	bne.n	407f50 <__aeabi_dmul+0x19c>
  407fac:	ea81 0103 	eor.w	r1, r1, r3
  407fb0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407fb4:	f04f 0000 	mov.w	r0, #0
  407fb8:	bd70      	pop	{r4, r5, r6, pc}
  407fba:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407fbe:	bf06      	itte	eq
  407fc0:	4610      	moveq	r0, r2
  407fc2:	4619      	moveq	r1, r3
  407fc4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407fc8:	d019      	beq.n	407ffe <__aeabi_dmul+0x24a>
  407fca:	ea94 0f0c 	teq	r4, ip
  407fce:	d102      	bne.n	407fd6 <__aeabi_dmul+0x222>
  407fd0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  407fd4:	d113      	bne.n	407ffe <__aeabi_dmul+0x24a>
  407fd6:	ea95 0f0c 	teq	r5, ip
  407fda:	d105      	bne.n	407fe8 <__aeabi_dmul+0x234>
  407fdc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407fe0:	bf1c      	itt	ne
  407fe2:	4610      	movne	r0, r2
  407fe4:	4619      	movne	r1, r3
  407fe6:	d10a      	bne.n	407ffe <__aeabi_dmul+0x24a>
  407fe8:	ea81 0103 	eor.w	r1, r1, r3
  407fec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407ff0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407ff4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407ff8:	f04f 0000 	mov.w	r0, #0
  407ffc:	bd70      	pop	{r4, r5, r6, pc}
  407ffe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  408002:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  408006:	bd70      	pop	{r4, r5, r6, pc}

00408008 <__aeabi_ddiv>:
  408008:	b570      	push	{r4, r5, r6, lr}
  40800a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40800e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  408012:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  408016:	bf1d      	ittte	ne
  408018:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40801c:	ea94 0f0c 	teqne	r4, ip
  408020:	ea95 0f0c 	teqne	r5, ip
  408024:	f000 f8a7 	bleq	408176 <__aeabi_ddiv+0x16e>
  408028:	eba4 0405 	sub.w	r4, r4, r5
  40802c:	ea81 0e03 	eor.w	lr, r1, r3
  408030:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  408034:	ea4f 3101 	mov.w	r1, r1, lsl #12
  408038:	f000 8088 	beq.w	40814c <__aeabi_ddiv+0x144>
  40803c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  408040:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  408044:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  408048:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40804c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  408050:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  408054:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  408058:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40805c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  408060:	429d      	cmp	r5, r3
  408062:	bf08      	it	eq
  408064:	4296      	cmpeq	r6, r2
  408066:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40806a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40806e:	d202      	bcs.n	408076 <__aeabi_ddiv+0x6e>
  408070:	085b      	lsrs	r3, r3, #1
  408072:	ea4f 0232 	mov.w	r2, r2, rrx
  408076:	1ab6      	subs	r6, r6, r2
  408078:	eb65 0503 	sbc.w	r5, r5, r3
  40807c:	085b      	lsrs	r3, r3, #1
  40807e:	ea4f 0232 	mov.w	r2, r2, rrx
  408082:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  408086:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40808a:	ebb6 0e02 	subs.w	lr, r6, r2
  40808e:	eb75 0e03 	sbcs.w	lr, r5, r3
  408092:	bf22      	ittt	cs
  408094:	1ab6      	subcs	r6, r6, r2
  408096:	4675      	movcs	r5, lr
  408098:	ea40 000c 	orrcs.w	r0, r0, ip
  40809c:	085b      	lsrs	r3, r3, #1
  40809e:	ea4f 0232 	mov.w	r2, r2, rrx
  4080a2:	ebb6 0e02 	subs.w	lr, r6, r2
  4080a6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4080aa:	bf22      	ittt	cs
  4080ac:	1ab6      	subcs	r6, r6, r2
  4080ae:	4675      	movcs	r5, lr
  4080b0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4080b4:	085b      	lsrs	r3, r3, #1
  4080b6:	ea4f 0232 	mov.w	r2, r2, rrx
  4080ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4080be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4080c2:	bf22      	ittt	cs
  4080c4:	1ab6      	subcs	r6, r6, r2
  4080c6:	4675      	movcs	r5, lr
  4080c8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4080cc:	085b      	lsrs	r3, r3, #1
  4080ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4080d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4080d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4080da:	bf22      	ittt	cs
  4080dc:	1ab6      	subcs	r6, r6, r2
  4080de:	4675      	movcs	r5, lr
  4080e0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4080e4:	ea55 0e06 	orrs.w	lr, r5, r6
  4080e8:	d018      	beq.n	40811c <__aeabi_ddiv+0x114>
  4080ea:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4080ee:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4080f2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4080f6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4080fa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4080fe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  408102:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  408106:	d1c0      	bne.n	40808a <__aeabi_ddiv+0x82>
  408108:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40810c:	d10b      	bne.n	408126 <__aeabi_ddiv+0x11e>
  40810e:	ea41 0100 	orr.w	r1, r1, r0
  408112:	f04f 0000 	mov.w	r0, #0
  408116:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40811a:	e7b6      	b.n	40808a <__aeabi_ddiv+0x82>
  40811c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408120:	bf04      	itt	eq
  408122:	4301      	orreq	r1, r0
  408124:	2000      	moveq	r0, #0
  408126:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40812a:	bf88      	it	hi
  40812c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  408130:	f63f aeaf 	bhi.w	407e92 <__aeabi_dmul+0xde>
  408134:	ebb5 0c03 	subs.w	ip, r5, r3
  408138:	bf04      	itt	eq
  40813a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40813e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  408142:	f150 0000 	adcs.w	r0, r0, #0
  408146:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40814a:	bd70      	pop	{r4, r5, r6, pc}
  40814c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  408150:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  408154:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  408158:	bfc2      	ittt	gt
  40815a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40815e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  408162:	bd70      	popgt	{r4, r5, r6, pc}
  408164:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  408168:	f04f 0e00 	mov.w	lr, #0
  40816c:	3c01      	subs	r4, #1
  40816e:	e690      	b.n	407e92 <__aeabi_dmul+0xde>
  408170:	ea45 0e06 	orr.w	lr, r5, r6
  408174:	e68d      	b.n	407e92 <__aeabi_dmul+0xde>
  408176:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40817a:	ea94 0f0c 	teq	r4, ip
  40817e:	bf08      	it	eq
  408180:	ea95 0f0c 	teqeq	r5, ip
  408184:	f43f af3b 	beq.w	407ffe <__aeabi_dmul+0x24a>
  408188:	ea94 0f0c 	teq	r4, ip
  40818c:	d10a      	bne.n	4081a4 <__aeabi_ddiv+0x19c>
  40818e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  408192:	f47f af34 	bne.w	407ffe <__aeabi_dmul+0x24a>
  408196:	ea95 0f0c 	teq	r5, ip
  40819a:	f47f af25 	bne.w	407fe8 <__aeabi_dmul+0x234>
  40819e:	4610      	mov	r0, r2
  4081a0:	4619      	mov	r1, r3
  4081a2:	e72c      	b.n	407ffe <__aeabi_dmul+0x24a>
  4081a4:	ea95 0f0c 	teq	r5, ip
  4081a8:	d106      	bne.n	4081b8 <__aeabi_ddiv+0x1b0>
  4081aa:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4081ae:	f43f aefd 	beq.w	407fac <__aeabi_dmul+0x1f8>
  4081b2:	4610      	mov	r0, r2
  4081b4:	4619      	mov	r1, r3
  4081b6:	e722      	b.n	407ffe <__aeabi_dmul+0x24a>
  4081b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4081bc:	bf18      	it	ne
  4081be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4081c2:	f47f aec5 	bne.w	407f50 <__aeabi_dmul+0x19c>
  4081c6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4081ca:	f47f af0d 	bne.w	407fe8 <__aeabi_dmul+0x234>
  4081ce:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4081d2:	f47f aeeb 	bne.w	407fac <__aeabi_dmul+0x1f8>
  4081d6:	e712      	b.n	407ffe <__aeabi_dmul+0x24a>

004081d8 <__gedf2>:
  4081d8:	f04f 3cff 	mov.w	ip, #4294967295
  4081dc:	e006      	b.n	4081ec <__cmpdf2+0x4>
  4081de:	bf00      	nop

004081e0 <__ledf2>:
  4081e0:	f04f 0c01 	mov.w	ip, #1
  4081e4:	e002      	b.n	4081ec <__cmpdf2+0x4>
  4081e6:	bf00      	nop

004081e8 <__cmpdf2>:
  4081e8:	f04f 0c01 	mov.w	ip, #1
  4081ec:	f84d cd04 	str.w	ip, [sp, #-4]!
  4081f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4081f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4081f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4081fc:	bf18      	it	ne
  4081fe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  408202:	d01b      	beq.n	40823c <__cmpdf2+0x54>
  408204:	b001      	add	sp, #4
  408206:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40820a:	bf0c      	ite	eq
  40820c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  408210:	ea91 0f03 	teqne	r1, r3
  408214:	bf02      	ittt	eq
  408216:	ea90 0f02 	teqeq	r0, r2
  40821a:	2000      	moveq	r0, #0
  40821c:	4770      	bxeq	lr
  40821e:	f110 0f00 	cmn.w	r0, #0
  408222:	ea91 0f03 	teq	r1, r3
  408226:	bf58      	it	pl
  408228:	4299      	cmppl	r1, r3
  40822a:	bf08      	it	eq
  40822c:	4290      	cmpeq	r0, r2
  40822e:	bf2c      	ite	cs
  408230:	17d8      	asrcs	r0, r3, #31
  408232:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  408236:	f040 0001 	orr.w	r0, r0, #1
  40823a:	4770      	bx	lr
  40823c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408240:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408244:	d102      	bne.n	40824c <__cmpdf2+0x64>
  408246:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40824a:	d107      	bne.n	40825c <__cmpdf2+0x74>
  40824c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408250:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408254:	d1d6      	bne.n	408204 <__cmpdf2+0x1c>
  408256:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40825a:	d0d3      	beq.n	408204 <__cmpdf2+0x1c>
  40825c:	f85d 0b04 	ldr.w	r0, [sp], #4
  408260:	4770      	bx	lr
  408262:	bf00      	nop

00408264 <__aeabi_cdrcmple>:
  408264:	4684      	mov	ip, r0
  408266:	4610      	mov	r0, r2
  408268:	4662      	mov	r2, ip
  40826a:	468c      	mov	ip, r1
  40826c:	4619      	mov	r1, r3
  40826e:	4663      	mov	r3, ip
  408270:	e000      	b.n	408274 <__aeabi_cdcmpeq>
  408272:	bf00      	nop

00408274 <__aeabi_cdcmpeq>:
  408274:	b501      	push	{r0, lr}
  408276:	f7ff ffb7 	bl	4081e8 <__cmpdf2>
  40827a:	2800      	cmp	r0, #0
  40827c:	bf48      	it	mi
  40827e:	f110 0f00 	cmnmi.w	r0, #0
  408282:	bd01      	pop	{r0, pc}

00408284 <__aeabi_dcmpeq>:
  408284:	f84d ed08 	str.w	lr, [sp, #-8]!
  408288:	f7ff fff4 	bl	408274 <__aeabi_cdcmpeq>
  40828c:	bf0c      	ite	eq
  40828e:	2001      	moveq	r0, #1
  408290:	2000      	movne	r0, #0
  408292:	f85d fb08 	ldr.w	pc, [sp], #8
  408296:	bf00      	nop

00408298 <__aeabi_dcmplt>:
  408298:	f84d ed08 	str.w	lr, [sp, #-8]!
  40829c:	f7ff ffea 	bl	408274 <__aeabi_cdcmpeq>
  4082a0:	bf34      	ite	cc
  4082a2:	2001      	movcc	r0, #1
  4082a4:	2000      	movcs	r0, #0
  4082a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4082aa:	bf00      	nop

004082ac <__aeabi_dcmple>:
  4082ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4082b0:	f7ff ffe0 	bl	408274 <__aeabi_cdcmpeq>
  4082b4:	bf94      	ite	ls
  4082b6:	2001      	movls	r0, #1
  4082b8:	2000      	movhi	r0, #0
  4082ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4082be:	bf00      	nop

004082c0 <__aeabi_dcmpge>:
  4082c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4082c4:	f7ff ffce 	bl	408264 <__aeabi_cdrcmple>
  4082c8:	bf94      	ite	ls
  4082ca:	2001      	movls	r0, #1
  4082cc:	2000      	movhi	r0, #0
  4082ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4082d2:	bf00      	nop

004082d4 <__aeabi_dcmpgt>:
  4082d4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4082d8:	f7ff ffc4 	bl	408264 <__aeabi_cdrcmple>
  4082dc:	bf34      	ite	cc
  4082de:	2001      	movcc	r0, #1
  4082e0:	2000      	movcs	r0, #0
  4082e2:	f85d fb08 	ldr.w	pc, [sp], #8
  4082e6:	bf00      	nop

004082e8 <__aeabi_dcmpun>:
  4082e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4082ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4082f0:	d102      	bne.n	4082f8 <__aeabi_dcmpun+0x10>
  4082f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4082f6:	d10a      	bne.n	40830e <__aeabi_dcmpun+0x26>
  4082f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4082fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408300:	d102      	bne.n	408308 <__aeabi_dcmpun+0x20>
  408302:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  408306:	d102      	bne.n	40830e <__aeabi_dcmpun+0x26>
  408308:	f04f 0000 	mov.w	r0, #0
  40830c:	4770      	bx	lr
  40830e:	f04f 0001 	mov.w	r0, #1
  408312:	4770      	bx	lr

00408314 <__aeabi_d2iz>:
  408314:	ea4f 0241 	mov.w	r2, r1, lsl #1
  408318:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40831c:	d215      	bcs.n	40834a <__aeabi_d2iz+0x36>
  40831e:	d511      	bpl.n	408344 <__aeabi_d2iz+0x30>
  408320:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  408324:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  408328:	d912      	bls.n	408350 <__aeabi_d2iz+0x3c>
  40832a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40832e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  408332:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  408336:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40833a:	fa23 f002 	lsr.w	r0, r3, r2
  40833e:	bf18      	it	ne
  408340:	4240      	negne	r0, r0
  408342:	4770      	bx	lr
  408344:	f04f 0000 	mov.w	r0, #0
  408348:	4770      	bx	lr
  40834a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40834e:	d105      	bne.n	40835c <__aeabi_d2iz+0x48>
  408350:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  408354:	bf08      	it	eq
  408356:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40835a:	4770      	bx	lr
  40835c:	f04f 0000 	mov.w	r0, #0
  408360:	4770      	bx	lr
  408362:	bf00      	nop

00408364 <OV2640_JPEG_INIT>:
  408364:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  408374:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  408384:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  408394:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  4083a4:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  4083b4:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  4083c4:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  4083d4:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  4083e4:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  4083f4:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  408404:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  408414:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  408424:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  408434:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  408444:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  408454:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  408464:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  408474:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  408484:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  408494:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  4084a4:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  4084b4:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  4084c4:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  4084d4:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

004084e4 <OV2640_YUV422>:
  4084e4:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  4084f4:	0000 ffff                                   ....

004084f8 <OV2640_JPEG>:
  4084f8:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  408508:	ffff 0000                                   ....

0040850c <OV2640_JPEG_320x240>:
  40850c:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  40851c:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  40852c:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  40853c:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  40854c:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

0040855c <OV2640_JPEG_640x480>:
  40855c:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  40856c:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  40857c:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  40858c:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  40859c:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  4085ac:	ffff 0000                                   ....

004085b0 <OV2640_JPEG_800x600>:
  4085b0:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4085c0:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4085d0:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4085e0:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  4085f0:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  408600:	ffff 0000                                   ....

00408604 <OV2640_JPEG_1024x768>:
  408604:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  408614:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  408624:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  408634:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  408644:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00408654 <OV2640_JPEG_1280x1024>:
  408654:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  408664:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  408674:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  408684:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  408694:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  4086a4:	ffff 0000                                   ....

004086a8 <OV2640_JPEG_1600x1200>:
  4086a8:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4086b8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4086c8:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4086d8:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4086e8:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  4086f8:	ffff 0000                                   ....

004086fc <OV2640_QVGA_YUV422_10FPS>:
  4086fc:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  40870c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  40871c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40872c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40873c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40874c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40875c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40876c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40877c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40878c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40879c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4087ac:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4087bc:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4087cc:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4087dc:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004087ec <OV2640_QVGA_YUV422_15FPS>:
  4087ec:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  4087fc:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  40880c:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40881c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40882c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40883c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40884c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40885c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40886c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40887c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40888c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  40889c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4088ac:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4088bc:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4088cc:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004088dc <OV2640_QVGA_YUV422_20FPS>:
  4088dc:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  4088ec:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4088fc:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  40890c:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  40891c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  40892c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  40893c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  40894c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  40895c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  40896c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  40897c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  40898c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  40899c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4089ac:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4089bc:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004089cc <OV2640_QVGA_YUV422_30FPS>:
  4089cc:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  4089dc:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  4089ec:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  4089fc:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  408a0c:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  408a1c:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  408a2c:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  408a3c:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  408a4c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  408a5c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408a6c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408a7c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408a8c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408a9c:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  408aac:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00408abc <OV2640_QVGA_RGB888>:
  408abc:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  408acc:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  408adc:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  408aec:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  408afc:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  408b0c:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  408b1c:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  408b2c:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  408b3c:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  408b4c:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  408b5c:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  408b6c:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  408b7c:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  408b8c:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  408b9c:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  408bac:	0228 ffff                                   (...

00408bb0 <OV2640_QQVGA_YUV422>:
  408bb0:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  408bc0:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  408bd0:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  408be0:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  408bf0:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  408c00:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  408c10:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  408c20:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  408c30:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  408c40:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408c50:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408c60:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408c70:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408c80:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  408c90:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  408ca0:	00d9 ffff                                   ....

00408ca4 <OV2640_QQVGA_RGB888>:
  408ca4:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  408cb4:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  408cc4:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  408cd4:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  408ce4:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  408cf4:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  408d04:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  408d14:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  408d24:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  408d34:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  408d44:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  408d54:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  408d64:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  408d74:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  408d84:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  408d94:	0228 ffff                                   (...

00408d98 <OV2640_TEST_PATTERN>:
  408d98:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  408da8:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  408db8:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  408dc8:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  408dd8:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  408de8:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  408df8:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  408e08:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  408e18:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  408e28:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  408e38:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  408e48:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  408e58:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  408e68:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  408e78:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  408e88:	0228 ffff                                   (...

00408e8c <OV2640_VGA_YUV422_20FPS>:
  408e8c:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  408e9c:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  408eac:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  408ebc:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  408ecc:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  408edc:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  408eec:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  408efc:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  408f0c:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  408f1c:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  408f2c:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  408f3c:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  408f4c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  408f5c:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  408f6c:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...
  408f7c:	c200 0001 00c0 0000 0800 0000 0000 0000     ................
	...
  408f94:	6d69 6761 5f65 7274 6e61 6673 7265 2520     image_transfer %
  408fa4:	0d64 000a 6f43 706d 656c 6574 0a0d 0000     d...Complete....
  408fb4:	6f4e 656e 0000 0000 6d49 6761 0065 0000     None....Image...
  408fc4:	6573 2074 7973 6320 7020 6f20 6666 0a0d     set sy c p off..
  408fd4:	0000 0000 6573 7574 2070 6577 0d62 000a     ....setup web...
  408fe4:	6573 2074 6175 7472 662e 6f6c 2077 2030     set uart.flow 0 
  408ff4:	6e6f 0d20 000a 0000 6573 2074 7562 2e73     on .....set bus.
  409004:	6f63 6d6d 6e61 2e64 7872 625f 6675 6973     command.rx_bufsi
  409014:	657a 3520 3030 0d30 000a 0000 6573 2074     ze 5000.....set 
  409024:	7973 6920 6720 7720 616c 206e 3032 0a0d     sy i g wlan 20..
  409034:	0000 0000 6573 2074 7973 6920 6720 6e20     ....set sy i g n
  409044:	7465 6f77 6b72 3120 0d39 000a 6573 2074     etwork 19...set 
  409054:	7973 6920 6720 7320 666f 6174 2070 3132     sy i g softap 21
  409064:	0a0d 0000 6573 2074 7973 7473 6d65 632e     ....set system.c
  409074:	646d 672e 6970 206f 3331 0a0d 0000 0000     md.gpio 13......
  409084:	6573 2074 6c77 6e20 6f20 3120 0d34 000a     set wl n o 14...
  409094:	6173 6576 0a0d 0000 6572 6f62 746f 0a0d     save....reboot..
  4090a4:	0000 0000 6f70 6c6c 6120 6c6c 0a0d 0000     ....poll all....

004090b4 <_global_impure_ptr>:
  4090b4:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  4090c4:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  4090d4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  4090e4:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  4090f4:	296c 0000 0030 0000                         l)..0...

004090fc <blanks.7223>:
  4090fc:	2020 2020 2020 2020 2020 2020 2020 2020                     

0040910c <zeroes.7224>:
  40910c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  40911c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  40912c:	0000 0000                                   ....

00409130 <__mprec_bigtens>:
  409130:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  409140:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  409150:	bf3c 7f73 4fdd 7515                         <.s..O.u

00409158 <__mprec_tens>:
  409158:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  409168:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  409178:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  409188:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  409198:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4091a8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  4091b8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  4091c8:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  4091d8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  4091e8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  4091f8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  409208:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  409218:	9db4 79d9 7843 44ea                         ...yCx.D

00409220 <p05.6055>:
  409220:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  409230:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040923c <_ctype_>:
  40923c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40924c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40925c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40926c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40927c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40928c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40929c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4092ac:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  4092bc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00409340 <_init>:
  409340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409342:	bf00      	nop
  409344:	bcf8      	pop	{r3, r4, r5, r6, r7}
  409346:	bc08      	pop	{r3}
  409348:	469e      	mov	lr, r3
  40934a:	4770      	bx	lr

0040934c <__init_array_start>:
  40934c:	0040519d 	.word	0x0040519d

00409350 <__frame_dummy_init_array_entry>:
  409350:	004000f1                                ..@.

00409354 <_fini>:
  409354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409356:	bf00      	nop
  409358:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40935a:	bc08      	pop	{r3}
  40935c:	469e      	mov	lr, r3
  40935e:	4770      	bx	lr

00409360 <__fini_array_start>:
  409360:	004000cd 	.word	0x004000cd
>>>>>>> parent of 8583d8d... Updated write_image to file

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

<<<<<<< HEAD
20000440 <__malloc_av_>:
=======
20000440 <__atexit_recursive_mutex>:
20000440:	d1fc 2000                                   ... 

20000444 <__malloc_av_>:
>>>>>>> parent of 8583d8d... Updated write_image to file
	...
20000448:	0440 2000 0440 2000 0448 2000 0448 2000     @.. @.. H.. H.. 
20000458:	0450 2000 0450 2000 0458 2000 0458 2000     P.. P.. X.. X.. 
20000468:	0460 2000 0460 2000 0468 2000 0468 2000     `.. `.. h.. h.. 
20000478:	0470 2000 0470 2000 0478 2000 0478 2000     p.. p.. x.. x.. 
20000488:	0480 2000 0480 2000 0488 2000 0488 2000     ... ... ... ... 
20000498:	0490 2000 0490 2000 0498 2000 0498 2000     ... ... ... ... 
200004a8:	04a0 2000 04a0 2000 04a8 2000 04a8 2000     ... ... ... ... 
200004b8:	04b0 2000 04b0 2000 04b8 2000 04b8 2000     ... ... ... ... 
200004c8:	04c0 2000 04c0 2000 04c8 2000 04c8 2000     ... ... ... ... 
200004d8:	04d0 2000 04d0 2000 04d8 2000 04d8 2000     ... ... ... ... 
200004e8:	04e0 2000 04e0 2000 04e8 2000 04e8 2000     ... ... ... ... 
200004f8:	04f0 2000 04f0 2000 04f8 2000 04f8 2000     ... ... ... ... 
20000508:	0500 2000 0500 2000 0508 2000 0508 2000     ... ... ... ... 
20000518:	0510 2000 0510 2000 0518 2000 0518 2000     ... ... ... ... 
20000528:	0520 2000 0520 2000 0528 2000 0528 2000      ..  .. (.. (.. 
20000538:	0530 2000 0530 2000 0538 2000 0538 2000     0.. 0.. 8.. 8.. 
20000548:	0540 2000 0540 2000 0548 2000 0548 2000     @.. @.. H.. H.. 
20000558:	0550 2000 0550 2000 0558 2000 0558 2000     P.. P.. X.. X.. 
20000568:	0560 2000 0560 2000 0568 2000 0568 2000     `.. `.. h.. h.. 
20000578:	0570 2000 0570 2000 0578 2000 0578 2000     p.. p.. x.. x.. 
20000588:	0580 2000 0580 2000 0588 2000 0588 2000     ... ... ... ... 
20000598:	0590 2000 0590 2000 0598 2000 0598 2000     ... ... ... ... 
200005a8:	05a0 2000 05a0 2000 05a8 2000 05a8 2000     ... ... ... ... 
200005b8:	05b0 2000 05b0 2000 05b8 2000 05b8 2000     ... ... ... ... 
200005c8:	05c0 2000 05c0 2000 05c8 2000 05c8 2000     ... ... ... ... 
200005d8:	05d0 2000 05d0 2000 05d8 2000 05d8 2000     ... ... ... ... 
200005e8:	05e0 2000 05e0 2000 05e8 2000 05e8 2000     ... ... ... ... 
200005f8:	05f0 2000 05f0 2000 05f8 2000 05f8 2000     ... ... ... ... 
20000608:	0600 2000 0600 2000 0608 2000 0608 2000     ... ... ... ... 
20000618:	0610 2000 0610 2000 0618 2000 0618 2000     ... ... ... ... 
20000628:	0620 2000 0620 2000 0628 2000 0628 2000      ..  .. (.. (.. 
20000638:	0630 2000 0630 2000 0638 2000 0638 2000     0.. 0.. 8.. 8.. 
20000648:	0640 2000 0640 2000 0648 2000 0648 2000     @.. @.. H.. H.. 
20000658:	0650 2000 0650 2000 0658 2000 0658 2000     P.. P.. X.. X.. 
20000668:	0660 2000 0660 2000 0668 2000 0668 2000     `.. `.. h.. h.. 
20000678:	0670 2000 0670 2000 0678 2000 0678 2000     p.. p.. x.. x.. 
20000688:	0680 2000 0680 2000 0688 2000 0688 2000     ... ... ... ... 
20000698:	0690 2000 0690 2000 0698 2000 0698 2000     ... ... ... ... 
200006a8:	06a0 2000 06a0 2000 06a8 2000 06a8 2000     ... ... ... ... 
200006b8:	06b0 2000 06b0 2000 06b8 2000 06b8 2000     ... ... ... ... 
200006c8:	06c0 2000 06c0 2000 06c8 2000 06c8 2000     ... ... ... ... 
200006d8:	06d0 2000 06d0 2000 06d8 2000 06d8 2000     ... ... ... ... 
200006e8:	06e0 2000 06e0 2000 06e8 2000 06e8 2000     ... ... ... ... 
200006f8:	06f0 2000 06f0 2000 06f8 2000 06f8 2000     ... ... ... ... 
20000708:	0700 2000 0700 2000 0708 2000 0708 2000     ... ... ... ... 
20000718:	0710 2000 0710 2000 0718 2000 0718 2000     ... ... ... ... 
20000728:	0720 2000 0720 2000 0728 2000 0728 2000      ..  .. (.. (.. 
20000738:	0730 2000 0730 2000 0738 2000 0738 2000     0.. 0.. 8.. 8.. 
20000748:	0740 2000 0740 2000 0748 2000 0748 2000     @.. @.. H.. H.. 
20000758:	0750 2000 0750 2000 0758 2000 0758 2000     P.. P.. X.. X.. 
20000768:	0760 2000 0760 2000 0768 2000 0768 2000     `.. `.. h.. h.. 
20000778:	0770 2000 0770 2000 0778 2000 0778 2000     p.. p.. x.. x.. 
20000788:	0780 2000 0780 2000 0788 2000 0788 2000     ... ... ... ... 
20000798:	0790 2000 0790 2000 0798 2000 0798 2000     ... ... ... ... 
200007a8:	07a0 2000 07a0 2000 07a8 2000 07a8 2000     ... ... ... ... 
200007b8:	07b0 2000 07b0 2000 07b8 2000 07b8 2000     ... ... ... ... 
200007c8:	07c0 2000 07c0 2000 07c8 2000 07c8 2000     ... ... ... ... 
200007d8:	07d0 2000 07d0 2000 07d8 2000 07d8 2000     ... ... ... ... 
200007e8:	07e0 2000 07e0 2000 07e8 2000 07e8 2000     ... ... ... ... 
200007f8:	07f0 2000 07f0 2000 07f8 2000 07f8 2000     ... ... ... ... 
20000808:	0800 2000 0800 2000 0808 2000 0808 2000     ... ... ... ... 
20000818:	0810 2000 0810 2000 0818 2000 0818 2000     ... ... ... ... 
20000828:	0820 2000 0820 2000 0828 2000 0828 2000      ..  .. (.. (.. 
20000838:	0830 2000 0830 2000 0838 2000 0838 2000     0.. 0.. 8.. 8.. 

20000848 <__malloc_sbrk_base>:
20000848:	ffff ffff                                   ....

2000084c <__malloc_trim_threshold>:
2000084c:	0000 0002                                   ....

20000850 <__global_locale>:
20000850:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000870:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000890:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000910:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
<<<<<<< HEAD
20000930:	7bc9 0040 7789 0040 0000 0000 940c 0040     .{@..w@.......@.
20000940:	9408 0040 92a8 0040 92a8 0040 92a8 0040     ..@...@...@...@.
20000950:	92a8 0040 92a8 0040 92a8 0040 92a8 0040     ..@...@...@...@.
20000960:	92a8 0040 92a8 0040 ffff ffff ffff ffff     ..@...@.........
20000970:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
=======
20000934:	7a29 0040 75e9 0040 0000 0000 923c 0040     )z@..u@.....<.@.
20000944:	9238 0040 90d8 0040 90d8 0040 90d8 0040     8.@...@...@...@.
20000954:	90d8 0040 90d8 0040 90d8 0040 90d8 0040     ..@...@...@...@.
20000964:	90d8 0040 90d8 0040 ffff ffff ffff ffff     ..@...@.........
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
>>>>>>> parent of 8583d8d... Updated write_image to file
	...
20000998:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
