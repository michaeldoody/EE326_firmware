
webcam_firmware2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000076dc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004076dc  004076dc  000176dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009bc  20000000  004076e4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000c840  200009bc  004080a0  000209bc  2**2
                  ALLOC
  4 .stack        00003004  2000d1fc  004148e0  000209bc  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209bc  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  7 .debug_info   00017590  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003503  00000000  00000000  00037fcf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000051e3  00000000  00000000  0003b4d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ac0  00000000  00000000  000406b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a48  00000000  00000000  00041175  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001569a  00000000  00000000  00041bbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e979  00000000  00000000  00057257  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00051c39  00000000  00000000  00065bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002374  00000000  00000000  000b780c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	00 02 01 20 d9 13 40 00 d7 13 40 00 d7 13 40 00     ... ..@...@...@.
  400010:	d7 13 40 00 d7 13 40 00 d7 13 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	d7 13 40 00 d7 13 40 00 00 00 00 00 d7 13 40 00     ..@...@.......@.
  40003c:	d7 13 40 00 d7 13 40 00 d7 13 40 00 d7 13 40 00     ..@...@...@...@.
  40004c:	d7 13 40 00 d7 13 40 00 d7 13 40 00 d7 13 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 d7 13 40 00 d7 13 40 00 00 00 00 00     ......@...@.....
  40006c:	05 05 40 00 19 05 40 00 00 00 00 00 d7 13 40 00     ..@...@.......@.
  40007c:	d7 13 40 00 00 00 00 00 00 00 00 00 d7 13 40 00     ..@...........@.
  40008c:	d7 13 40 00 d7 13 40 00 d7 13 40 00 d7 13 40 00     ..@...@...@...@.
  40009c:	65 10 40 00 d7 13 40 00 d7 13 40 00 00 00 00 00     e.@...@...@.....
	...
  4000b4:	d7 13 40 00 d7 13 40 00 d7 13 40 00 d7 13 40 00     ..@...@...@...@.
  4000c4:	d7 13 40 00 d7 13 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009bc 	.word	0x200009bc
  4000e8:	00000000 	.word	0x00000000
  4000ec:	004076e4 	.word	0x004076e4

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	004076e4 	.word	0x004076e4
  40012c:	200009c0 	.word	0x200009c0
  400130:	004076e4 	.word	0x004076e4
  400134:	00000000 	.word	0x00000000

00400138 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400138:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40013a:	480e      	ldr	r0, [pc, #56]	; (400174 <sysclk_init+0x3c>)
  40013c:	4b0e      	ldr	r3, [pc, #56]	; (400178 <sysclk_init+0x40>)
  40013e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400140:	213e      	movs	r1, #62	; 0x3e
  400142:	2000      	movs	r0, #0
  400144:	4b0d      	ldr	r3, [pc, #52]	; (40017c <sysclk_init+0x44>)
  400146:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400148:	4c0d      	ldr	r4, [pc, #52]	; (400180 <sysclk_init+0x48>)
  40014a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40014c:	2800      	cmp	r0, #0
  40014e:	d0fc      	beq.n	40014a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400150:	4b0c      	ldr	r3, [pc, #48]	; (400184 <sysclk_init+0x4c>)
  400152:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400154:	4a0c      	ldr	r2, [pc, #48]	; (400188 <sysclk_init+0x50>)
  400156:	4b0d      	ldr	r3, [pc, #52]	; (40018c <sysclk_init+0x54>)
  400158:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40015a:	4c0d      	ldr	r4, [pc, #52]	; (400190 <sysclk_init+0x58>)
  40015c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40015e:	2800      	cmp	r0, #0
  400160:	d0fc      	beq.n	40015c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400162:	2010      	movs	r0, #16
  400164:	4b0b      	ldr	r3, [pc, #44]	; (400194 <sysclk_init+0x5c>)
  400166:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400168:	4b0b      	ldr	r3, [pc, #44]	; (400198 <sysclk_init+0x60>)
  40016a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40016c:	4801      	ldr	r0, [pc, #4]	; (400174 <sysclk_init+0x3c>)
  40016e:	4b02      	ldr	r3, [pc, #8]	; (400178 <sysclk_init+0x40>)
  400170:	4798      	blx	r3
  400172:	bd10      	pop	{r4, pc}
  400174:	07270e00 	.word	0x07270e00
  400178:	00401595 	.word	0x00401595
  40017c:	00400591 	.word	0x00400591
  400180:	004005e5 	.word	0x004005e5
  400184:	004005f5 	.word	0x004005f5
  400188:	20133f01 	.word	0x20133f01
  40018c:	400e0400 	.word	0x400e0400
  400190:	00400605 	.word	0x00400605
  400194:	0040052d 	.word	0x0040052d
  400198:	00401485 	.word	0x00401485

0040019c <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  40019c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  4001a0:	0053      	lsls	r3, r2, #1
  4001a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4001a6:	fbb2 f2f3 	udiv	r2, r2, r3
  4001aa:	3a01      	subs	r2, #1
  4001ac:	f3c2 020d 	ubfx	r2, r2, #0, #14
  4001b0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  4001b4:	4770      	bx	lr

004001b6 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4001b6:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4001b8:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4001bc:	d039      	beq.n	400232 <pio_set_peripheral+0x7c>
  4001be:	d813      	bhi.n	4001e8 <pio_set_peripheral+0x32>
  4001c0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4001c4:	d025      	beq.n	400212 <pio_set_peripheral+0x5c>
  4001c6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4001ca:	d10a      	bne.n	4001e2 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001cc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4001d2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4001d4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4001d6:	400b      	ands	r3, r1
  4001d8:	ea23 0302 	bic.w	r3, r3, r2
  4001dc:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4001de:	6042      	str	r2, [r0, #4]
  4001e0:	4770      	bx	lr
	switch (ul_type) {
  4001e2:	2900      	cmp	r1, #0
  4001e4:	d1fb      	bne.n	4001de <pio_set_peripheral+0x28>
  4001e6:	4770      	bx	lr
  4001e8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4001ec:	d020      	beq.n	400230 <pio_set_peripheral+0x7a>
  4001ee:	d809      	bhi.n	400204 <pio_set_peripheral+0x4e>
  4001f0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4001f4:	d1f3      	bne.n	4001de <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  4001f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4001f8:	4313      	orrs	r3, r2
  4001fa:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  4001fc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4001fe:	4313      	orrs	r3, r2
  400200:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400202:	e7ec      	b.n	4001de <pio_set_peripheral+0x28>
	switch (ul_type) {
  400204:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400208:	d012      	beq.n	400230 <pio_set_peripheral+0x7a>
  40020a:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40020e:	d00f      	beq.n	400230 <pio_set_peripheral+0x7a>
  400210:	e7e5      	b.n	4001de <pio_set_peripheral+0x28>
{
  400212:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400214:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400216:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400218:	43d3      	mvns	r3, r2
  40021a:	4021      	ands	r1, r4
  40021c:	461c      	mov	r4, r3
  40021e:	4019      	ands	r1, r3
  400220:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400222:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400224:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400226:	400b      	ands	r3, r1
  400228:	4023      	ands	r3, r4
  40022a:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40022c:	6042      	str	r2, [r0, #4]
}
  40022e:	bc10      	pop	{r4}
  400230:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400232:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400234:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400236:	400b      	ands	r3, r1
  400238:	ea23 0302 	bic.w	r3, r3, r2
  40023c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40023e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400240:	4313      	orrs	r3, r2
  400242:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400244:	e7cb      	b.n	4001de <pio_set_peripheral+0x28>

00400246 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400246:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400248:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  40024c:	bf14      	ite	ne
  40024e:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400250:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400252:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400256:	bf14      	ite	ne
  400258:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  40025a:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  40025c:	f012 0f02 	tst.w	r2, #2
  400260:	d107      	bne.n	400272 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400262:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400266:	bf18      	it	ne
  400268:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
  40026c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  40026e:	6001      	str	r1, [r0, #0]
  400270:	4770      	bx	lr
		p_pio->PIO_IFSCDR = ul_mask;
  400272:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400276:	e7f9      	b.n	40026c <pio_set_input+0x26>

00400278 <pio_set_output>:
{
  400278:	b410      	push	{r4}
  40027a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  40027c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40027e:	b944      	cbnz	r4, 400292 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  400280:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400282:	b143      	cbz	r3, 400296 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  400284:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400286:	b942      	cbnz	r2, 40029a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  400288:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40028a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40028c:	6001      	str	r1, [r0, #0]
}
  40028e:	bc10      	pop	{r4}
  400290:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400292:	6641      	str	r1, [r0, #100]	; 0x64
  400294:	e7f5      	b.n	400282 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400296:	6541      	str	r1, [r0, #84]	; 0x54
  400298:	e7f5      	b.n	400286 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40029a:	6301      	str	r1, [r0, #48]	; 0x30
  40029c:	e7f5      	b.n	40028a <pio_set_output+0x12>

0040029e <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  40029e:	f012 0f10 	tst.w	r2, #16
  4002a2:	d010      	beq.n	4002c6 <pio_configure_interrupt+0x28>
		p_pio->PIO_AIMER = ul_mask;
  4002a4:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4002a8:	f012 0f20 	tst.w	r2, #32
			p_pio->PIO_REHLSR = ul_mask;
  4002ac:	bf14      	ite	ne
  4002ae:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
			p_pio->PIO_FELLSR = ul_mask;
  4002b2:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		if (ul_attr & PIO_IT_EDGE) {
  4002b6:	f012 0f40 	tst.w	r2, #64	; 0x40
			p_pio->PIO_ESR = ul_mask;
  4002ba:	bf14      	ite	ne
  4002bc:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
			p_pio->PIO_LSR = ul_mask;
  4002c0:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  4002c4:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  4002c6:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4002ca:	4770      	bx	lr

004002cc <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  4002cc:	6401      	str	r1, [r0, #64]	; 0x40
  4002ce:	4770      	bx	lr

004002d0 <pio_disable_interrupt>:
	p_pio->PIO_IDR = ul_mask;
  4002d0:	6441      	str	r1, [r0, #68]	; 0x44
  4002d2:	4770      	bx	lr

004002d4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  4002d4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  4002d6:	4770      	bx	lr

004002d8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  4002d8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  4002da:	4770      	bx	lr

004002dc <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  4002dc:	b570      	push	{r4, r5, r6, lr}
  4002de:	b082      	sub	sp, #8
  4002e0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4002e2:	0943      	lsrs	r3, r0, #5
  4002e4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  4002e8:	f203 7307 	addw	r3, r3, #1799	; 0x707
  4002ec:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4002ee:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4002f2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4002f6:	d053      	beq.n	4003a0 <pio_configure_pin+0xc4>
  4002f8:	d80a      	bhi.n	400310 <pio_configure_pin+0x34>
  4002fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4002fe:	d02d      	beq.n	40035c <pio_configure_pin+0x80>
  400300:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  400304:	d03b      	beq.n	40037e <pio_configure_pin+0xa2>
  400306:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  40030a:	d015      	beq.n	400338 <pio_configure_pin+0x5c>
		return 0;
  40030c:	2000      	movs	r0, #0
  40030e:	e023      	b.n	400358 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
  400310:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  400314:	d055      	beq.n	4003c2 <pio_configure_pin+0xe6>
  400316:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  40031a:	d052      	beq.n	4003c2 <pio_configure_pin+0xe6>
  40031c:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  400320:	d1f4      	bne.n	40030c <pio_configure_pin+0x30>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400322:	f000 011f 	and.w	r1, r0, #31
  400326:	2601      	movs	r6, #1
  400328:	462a      	mov	r2, r5
  40032a:	fa06 f101 	lsl.w	r1, r6, r1
  40032e:	4620      	mov	r0, r4
  400330:	4b2f      	ldr	r3, [pc, #188]	; (4003f0 <pio_configure_pin+0x114>)
  400332:	4798      	blx	r3
	return 1;
  400334:	4630      	mov	r0, r6
		break;
  400336:	e00f      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400338:	f000 001f 	and.w	r0, r0, #31
  40033c:	2601      	movs	r6, #1
  40033e:	4086      	lsls	r6, r0
  400340:	4632      	mov	r2, r6
  400342:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400346:	4620      	mov	r0, r4
  400348:	4b2a      	ldr	r3, [pc, #168]	; (4003f4 <pio_configure_pin+0x118>)
  40034a:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40034c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400350:	bf14      	ite	ne
  400352:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400354:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  400356:	2001      	movs	r0, #1
}
  400358:	b002      	add	sp, #8
  40035a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40035c:	f000 001f 	and.w	r0, r0, #31
  400360:	2601      	movs	r6, #1
  400362:	4086      	lsls	r6, r0
  400364:	4632      	mov	r2, r6
  400366:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40036a:	4620      	mov	r0, r4
  40036c:	4b21      	ldr	r3, [pc, #132]	; (4003f4 <pio_configure_pin+0x118>)
  40036e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400370:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400374:	bf14      	ite	ne
  400376:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  400378:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40037a:	2001      	movs	r0, #1
  40037c:	e7ec      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  40037e:	f000 001f 	and.w	r0, r0, #31
  400382:	2601      	movs	r6, #1
  400384:	4086      	lsls	r6, r0
  400386:	4632      	mov	r2, r6
  400388:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40038c:	4620      	mov	r0, r4
  40038e:	4b19      	ldr	r3, [pc, #100]	; (4003f4 <pio_configure_pin+0x118>)
  400390:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400392:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400396:	bf14      	ite	ne
  400398:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40039a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  40039c:	2001      	movs	r0, #1
  40039e:	e7db      	b.n	400358 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  4003a0:	f000 001f 	and.w	r0, r0, #31
  4003a4:	2601      	movs	r6, #1
  4003a6:	4086      	lsls	r6, r0
  4003a8:	4632      	mov	r2, r6
  4003aa:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4003ae:	4620      	mov	r0, r4
  4003b0:	4b10      	ldr	r3, [pc, #64]	; (4003f4 <pio_configure_pin+0x118>)
  4003b2:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4003b4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  4003b8:	bf14      	ite	ne
  4003ba:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  4003bc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  4003be:	2001      	movs	r0, #1
  4003c0:	e7ca      	b.n	400358 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4003c2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4003c6:	f000 011f 	and.w	r1, r0, #31
  4003ca:	2601      	movs	r6, #1
  4003cc:	ea05 0306 	and.w	r3, r5, r6
  4003d0:	9300      	str	r3, [sp, #0]
  4003d2:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4003d6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4003da:	bf14      	ite	ne
  4003dc:	2200      	movne	r2, #0
  4003de:	2201      	moveq	r2, #1
  4003e0:	fa06 f101 	lsl.w	r1, r6, r1
  4003e4:	4620      	mov	r0, r4
  4003e6:	4c04      	ldr	r4, [pc, #16]	; (4003f8 <pio_configure_pin+0x11c>)
  4003e8:	47a0      	blx	r4
	return 1;
  4003ea:	4630      	mov	r0, r6
		break;
  4003ec:	e7b4      	b.n	400358 <pio_configure_pin+0x7c>
  4003ee:	bf00      	nop
  4003f0:	00400247 	.word	0x00400247
  4003f4:	004001b7 	.word	0x004001b7
  4003f8:	00400279 	.word	0x00400279

004003fc <pio_capture_enable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_enable(Pio *p_pio)
{
	p_pio->PIO_PCMR |= PIO_PCMR_PCEN;
  4003fc:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400400:	f043 0301 	orr.w	r3, r3, #1
  400404:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = true;
  400408:	2201      	movs	r2, #1
  40040a:	4b01      	ldr	r3, [pc, #4]	; (400410 <pio_capture_enable+0x14>)
  40040c:	601a      	str	r2, [r3, #0]
  40040e:	4770      	bx	lr
  400410:	20000ab0 	.word	0x20000ab0

00400414 <pio_capture_disable>:
 *
 * \param p_pio Pointer to a PIO instance.
 */
void pio_capture_disable(Pio *p_pio)
{
	p_pio->PIO_PCMR &= (~PIO_PCMR_PCEN);
  400414:	f8d0 3150 	ldr.w	r3, [r0, #336]	; 0x150
  400418:	f023 0301 	bic.w	r3, r3, #1
  40041c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
	pio_capture_enable_flag = false;
  400420:	2200      	movs	r2, #0
  400422:	4b01      	ldr	r3, [pc, #4]	; (400428 <pio_capture_disable+0x14>)
  400424:	601a      	str	r2, [r3, #0]
  400426:	4770      	bx	lr
  400428:	20000ab0 	.word	0x20000ab0

0040042c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  40042c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400430:	4681      	mov	r9, r0
  400432:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400434:	4b12      	ldr	r3, [pc, #72]	; (400480 <pio_handler_process+0x54>)
  400436:	4798      	blx	r3
  400438:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40043a:	4648      	mov	r0, r9
  40043c:	4b11      	ldr	r3, [pc, #68]	; (400484 <pio_handler_process+0x58>)
  40043e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400440:	4005      	ands	r5, r0
  400442:	d013      	beq.n	40046c <pio_handler_process+0x40>
  400444:	4c10      	ldr	r4, [pc, #64]	; (400488 <pio_handler_process+0x5c>)
  400446:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40044a:	e003      	b.n	400454 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40044c:	42b4      	cmp	r4, r6
  40044e:	d00d      	beq.n	40046c <pio_handler_process+0x40>
  400450:	3410      	adds	r4, #16
		while (status != 0) {
  400452:	b15d      	cbz	r5, 40046c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400454:	6820      	ldr	r0, [r4, #0]
  400456:	42b8      	cmp	r0, r7
  400458:	d1f8      	bne.n	40044c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40045a:	6861      	ldr	r1, [r4, #4]
  40045c:	4229      	tst	r1, r5
  40045e:	d0f5      	beq.n	40044c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400460:	68e3      	ldr	r3, [r4, #12]
  400462:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400464:	6863      	ldr	r3, [r4, #4]
  400466:	ea25 0503 	bic.w	r5, r5, r3
  40046a:	e7ef      	b.n	40044c <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  40046c:	4b07      	ldr	r3, [pc, #28]	; (40048c <pio_handler_process+0x60>)
  40046e:	681b      	ldr	r3, [r3, #0]
  400470:	b123      	cbz	r3, 40047c <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400472:	4b07      	ldr	r3, [pc, #28]	; (400490 <pio_handler_process+0x64>)
  400474:	681b      	ldr	r3, [r3, #0]
  400476:	b10b      	cbz	r3, 40047c <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400478:	4648      	mov	r0, r9
  40047a:	4798      	blx	r3
  40047c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400480:	004002d5 	.word	0x004002d5
  400484:	004002d9 	.word	0x004002d9
  400488:	200009d8 	.word	0x200009d8
  40048c:	20000ab0 	.word	0x20000ab0
  400490:	20000a4c 	.word	0x20000a4c

00400494 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400496:	4c18      	ldr	r4, [pc, #96]	; (4004f8 <pio_handler_set+0x64>)
  400498:	6826      	ldr	r6, [r4, #0]
  40049a:	2e06      	cmp	r6, #6
  40049c:	d829      	bhi.n	4004f2 <pio_handler_set+0x5e>
  40049e:	f04f 0c00 	mov.w	ip, #0
  4004a2:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004a4:	4f15      	ldr	r7, [pc, #84]	; (4004fc <pio_handler_set+0x68>)
  4004a6:	e004      	b.n	4004b2 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  4004a8:	3401      	adds	r4, #1
  4004aa:	b2e4      	uxtb	r4, r4
  4004ac:	46a4      	mov	ip, r4
  4004ae:	42a6      	cmp	r6, r4
  4004b0:	d309      	bcc.n	4004c6 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  4004b2:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  4004b4:	0125      	lsls	r5, r4, #4
  4004b6:	597d      	ldr	r5, [r7, r5]
  4004b8:	428d      	cmp	r5, r1
  4004ba:	d1f5      	bne.n	4004a8 <pio_handler_set+0x14>
  4004bc:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  4004c0:	686d      	ldr	r5, [r5, #4]
  4004c2:	4295      	cmp	r5, r2
  4004c4:	d1f0      	bne.n	4004a8 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  4004c6:	4d0d      	ldr	r5, [pc, #52]	; (4004fc <pio_handler_set+0x68>)
  4004c8:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  4004cc:	eb05 040e 	add.w	r4, r5, lr
  4004d0:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  4004d4:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  4004d6:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  4004d8:	9906      	ldr	r1, [sp, #24]
  4004da:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  4004dc:	3601      	adds	r6, #1
  4004de:	4566      	cmp	r6, ip
		gs_ul_nb_sources++;
  4004e0:	bf04      	itt	eq
  4004e2:	4905      	ldreq	r1, [pc, #20]	; (4004f8 <pio_handler_set+0x64>)
  4004e4:	600e      	streq	r6, [r1, #0]
  4004e6:	4611      	mov	r1, r2
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  4004e8:	461a      	mov	r2, r3
  4004ea:	4b05      	ldr	r3, [pc, #20]	; (400500 <pio_handler_set+0x6c>)
  4004ec:	4798      	blx	r3

	return 0;
  4004ee:	2000      	movs	r0, #0
  4004f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return 1;
  4004f2:	2001      	movs	r0, #1
}
  4004f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4004f6:	bf00      	nop
  4004f8:	20000a48 	.word	0x20000a48
  4004fc:	200009d8 	.word	0x200009d8
  400500:	0040029f 	.word	0x0040029f

00400504 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400504:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400506:	210b      	movs	r1, #11
  400508:	4801      	ldr	r0, [pc, #4]	; (400510 <PIOA_Handler+0xc>)
  40050a:	4b02      	ldr	r3, [pc, #8]	; (400514 <PIOA_Handler+0x10>)
  40050c:	4798      	blx	r3
  40050e:	bd08      	pop	{r3, pc}
  400510:	400e0e00 	.word	0x400e0e00
  400514:	0040042d 	.word	0x0040042d

00400518 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400518:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  40051a:	210c      	movs	r1, #12
  40051c:	4801      	ldr	r0, [pc, #4]	; (400524 <PIOB_Handler+0xc>)
  40051e:	4b02      	ldr	r3, [pc, #8]	; (400528 <PIOB_Handler+0x10>)
  400520:	4798      	blx	r3
  400522:	bd08      	pop	{r3, pc}
  400524:	400e1000 	.word	0x400e1000
  400528:	0040042d 	.word	0x0040042d

0040052c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40052c:	4a17      	ldr	r2, [pc, #92]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  40052e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400530:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400534:	4318      	orrs	r0, r3
  400536:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400538:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40053a:	f013 0f08 	tst.w	r3, #8
  40053e:	d10a      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
  400540:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400544:	4911      	ldr	r1, [pc, #68]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400546:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400548:	f012 0f08 	tst.w	r2, #8
  40054c:	d103      	bne.n	400556 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40054e:	3b01      	subs	r3, #1
  400550:	d1f9      	bne.n	400546 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400552:	2001      	movs	r0, #1
  400554:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400556:	4a0d      	ldr	r2, [pc, #52]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400558:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40055a:	f023 0303 	bic.w	r3, r3, #3
  40055e:	f043 0302 	orr.w	r3, r3, #2
  400562:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400564:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400566:	f013 0f08 	tst.w	r3, #8
  40056a:	d10a      	bne.n	400582 <pmc_switch_mck_to_pllack+0x56>
  40056c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400570:	4906      	ldr	r1, [pc, #24]	; (40058c <pmc_switch_mck_to_pllack+0x60>)
  400572:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400574:	f012 0f08 	tst.w	r2, #8
  400578:	d105      	bne.n	400586 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40057a:	3b01      	subs	r3, #1
  40057c:	d1f9      	bne.n	400572 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40057e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400580:	4770      	bx	lr
	return 0;
  400582:	2000      	movs	r0, #0
  400584:	4770      	bx	lr
  400586:	2000      	movs	r0, #0
  400588:	4770      	bx	lr
  40058a:	bf00      	nop
  40058c:	400e0400 	.word	0x400e0400

00400590 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400590:	b9c8      	cbnz	r0, 4005c6 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400592:	4a11      	ldr	r2, [pc, #68]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  400594:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400596:	0209      	lsls	r1, r1, #8
  400598:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40059a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40059e:	f023 0303 	bic.w	r3, r3, #3
  4005a2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4005a6:	f043 0301 	orr.w	r3, r3, #1
  4005aa:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4005ac:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4005ae:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4005b0:	f013 0f01 	tst.w	r3, #1
  4005b4:	d0fb      	beq.n	4005ae <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4005b6:	4a08      	ldr	r2, [pc, #32]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005b8:	6a13      	ldr	r3, [r2, #32]
  4005ba:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  4005be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4005c2:	6213      	str	r3, [r2, #32]
  4005c4:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005c6:	4904      	ldr	r1, [pc, #16]	; (4005d8 <pmc_switch_mainck_to_xtal+0x48>)
  4005c8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4005ca:	4a04      	ldr	r2, [pc, #16]	; (4005dc <pmc_switch_mainck_to_xtal+0x4c>)
  4005cc:	401a      	ands	r2, r3
  4005ce:	4b04      	ldr	r3, [pc, #16]	; (4005e0 <pmc_switch_mainck_to_xtal+0x50>)
  4005d0:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4005d2:	620b      	str	r3, [r1, #32]
  4005d4:	4770      	bx	lr
  4005d6:	bf00      	nop
  4005d8:	400e0400 	.word	0x400e0400
  4005dc:	fec8fffc 	.word	0xfec8fffc
  4005e0:	01370002 	.word	0x01370002

004005e4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4005e4:	4b02      	ldr	r3, [pc, #8]	; (4005f0 <pmc_osc_is_ready_mainck+0xc>)
  4005e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4005e8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4005ec:	4770      	bx	lr
  4005ee:	bf00      	nop
  4005f0:	400e0400 	.word	0x400e0400

004005f4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4005f4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005f8:	4b01      	ldr	r3, [pc, #4]	; (400600 <pmc_disable_pllack+0xc>)
  4005fa:	629a      	str	r2, [r3, #40]	; 0x28
  4005fc:	4770      	bx	lr
  4005fe:	bf00      	nop
  400600:	400e0400 	.word	0x400e0400

00400604 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400604:	4b02      	ldr	r3, [pc, #8]	; (400610 <pmc_is_locked_pllack+0xc>)
  400606:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400608:	f000 0002 	and.w	r0, r0, #2
  40060c:	4770      	bx	lr
  40060e:	bf00      	nop
  400610:	400e0400 	.word	0x400e0400

00400614 <pmc_enable_pllbck>:
 * \param mulb PLLB multiplier.
 * \param pllbcount PLLB counter.
 * \param divb Divider.
 */
void pmc_enable_pllbck(uint32_t mulb, uint32_t pllbcount, uint32_t divb)
{
  400614:	b410      	push	{r4}
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  400616:	4c0a      	ldr	r4, [pc, #40]	; (400640 <pmc_enable_pllbck+0x2c>)
  400618:	2300      	movs	r3, #0
  40061a:	62e3      	str	r3, [r4, #44]	; 0x2c
			CKGR_PLLBR_DIVB(divb) | CKGR_PLLBR_PLLBCOUNT(pllbcount)
  40061c:	0209      	lsls	r1, r1, #8
  40061e:	f401 517c 	and.w	r1, r1, #16128	; 0x3f00
  400622:	b2d2      	uxtb	r2, r2
  400624:	4311      	orrs	r1, r2
			| CKGR_PLLBR_MULB(mulb);
  400626:	4b07      	ldr	r3, [pc, #28]	; (400644 <pmc_enable_pllbck+0x30>)
  400628:	ea03 4000 	and.w	r0, r3, r0, lsl #16
  40062c:	4301      	orrs	r1, r0
	PMC->CKGR_PLLBR =
  40062e:	62e1      	str	r1, [r4, #44]	; 0x2c
	while ((PMC->PMC_SR & PMC_SR_LOCKB) == 0);
  400630:	4622      	mov	r2, r4
  400632:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400634:	f013 0f04 	tst.w	r3, #4
  400638:	d0fb      	beq.n	400632 <pmc_enable_pllbck+0x1e>
}
  40063a:	bc10      	pop	{r4}
  40063c:	4770      	bx	lr
  40063e:	bf00      	nop
  400640:	400e0400 	.word	0x400e0400
  400644:	07ff0000 	.word	0x07ff0000

00400648 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  400648:	2822      	cmp	r0, #34	; 0x22
  40064a:	d81e      	bhi.n	40068a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40064c:	281f      	cmp	r0, #31
  40064e:	d80c      	bhi.n	40066a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400650:	4b11      	ldr	r3, [pc, #68]	; (400698 <pmc_enable_periph_clk+0x50>)
  400652:	699a      	ldr	r2, [r3, #24]
  400654:	2301      	movs	r3, #1
  400656:	4083      	lsls	r3, r0
  400658:	4393      	bics	r3, r2
  40065a:	d018      	beq.n	40068e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40065c:	2301      	movs	r3, #1
  40065e:	fa03 f000 	lsl.w	r0, r3, r0
  400662:	4b0d      	ldr	r3, [pc, #52]	; (400698 <pmc_enable_periph_clk+0x50>)
  400664:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400666:	2000      	movs	r0, #0
  400668:	4770      	bx	lr
		ul_id -= 32;
  40066a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40066c:	4b0a      	ldr	r3, [pc, #40]	; (400698 <pmc_enable_periph_clk+0x50>)
  40066e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400672:	2301      	movs	r3, #1
  400674:	4083      	lsls	r3, r0
  400676:	4393      	bics	r3, r2
  400678:	d00b      	beq.n	400692 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40067a:	2301      	movs	r3, #1
  40067c:	fa03 f000 	lsl.w	r0, r3, r0
  400680:	4b05      	ldr	r3, [pc, #20]	; (400698 <pmc_enable_periph_clk+0x50>)
  400682:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400686:	2000      	movs	r0, #0
  400688:	4770      	bx	lr
		return 1;
  40068a:	2001      	movs	r0, #1
  40068c:	4770      	bx	lr
	return 0;
  40068e:	2000      	movs	r0, #0
  400690:	4770      	bx	lr
  400692:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  400694:	4770      	bx	lr
  400696:	bf00      	nop
  400698:	400e0400 	.word	0x400e0400

0040069c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  40069c:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40069e:	0189      	lsls	r1, r1, #6
  4006a0:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4006a2:	2402      	movs	r4, #2
  4006a4:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4006a6:	f04f 31ff 	mov.w	r1, #4294967295
  4006aa:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4006ac:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4006ae:	605a      	str	r2, [r3, #4]
}
  4006b0:	bc10      	pop	{r4}
  4006b2:	4770      	bx	lr

004006b4 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4006b4:	0189      	lsls	r1, r1, #6
  4006b6:	2305      	movs	r3, #5
  4006b8:	5043      	str	r3, [r0, r1]
  4006ba:	4770      	bx	lr

004006bc <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4006bc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4006c0:	61ca      	str	r2, [r1, #28]
  4006c2:	4770      	bx	lr

004006c4 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006c4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4006c8:	624a      	str	r2, [r1, #36]	; 0x24
  4006ca:	4770      	bx	lr

004006cc <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4006cc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4006d0:	6a08      	ldr	r0, [r1, #32]
}
  4006d2:	4770      	bx	lr

004006d4 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4006d4:	b4f0      	push	{r4, r5, r6, r7}
  4006d6:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006d8:	2402      	movs	r4, #2
  4006da:	9401      	str	r4, [sp, #4]
  4006dc:	2408      	movs	r4, #8
  4006de:	9402      	str	r4, [sp, #8]
  4006e0:	2420      	movs	r4, #32
  4006e2:	9403      	str	r4, [sp, #12]
  4006e4:	2480      	movs	r4, #128	; 0x80
  4006e6:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  4006e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4006ea:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  4006ec:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  4006ee:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  4006f2:	d814      	bhi.n	40071e <tc_find_mck_divisor+0x4a>
  4006f4:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  4006f6:	42a0      	cmp	r0, r4
  4006f8:	d217      	bcs.n	40072a <tc_find_mck_divisor+0x56>
  4006fa:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  4006fc:	af01      	add	r7, sp, #4
  4006fe:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  400702:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400706:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400708:	4284      	cmp	r4, r0
  40070a:	d30a      	bcc.n	400722 <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  40070c:	4286      	cmp	r6, r0
  40070e:	d90d      	bls.n	40072c <tc_find_mck_divisor+0x58>
			ul_index++) {
  400710:	3501      	adds	r5, #1
	for (ul_index = 0;
  400712:	2d05      	cmp	r5, #5
  400714:	d1f3      	bne.n	4006fe <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400716:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400718:	b006      	add	sp, #24
  40071a:	bcf0      	pop	{r4, r5, r6, r7}
  40071c:	4770      	bx	lr
			return 0;
  40071e:	2000      	movs	r0, #0
  400720:	e7fa      	b.n	400718 <tc_find_mck_divisor+0x44>
  400722:	2000      	movs	r0, #0
  400724:	e7f8      	b.n	400718 <tc_find_mck_divisor+0x44>
	return 1;
  400726:	2001      	movs	r0, #1
  400728:	e7f6      	b.n	400718 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  40072a:	2500      	movs	r5, #0
	if (p_uldiv) {
  40072c:	b12a      	cbz	r2, 40073a <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  40072e:	a906      	add	r1, sp, #24
  400730:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400734:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400738:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  40073a:	2b00      	cmp	r3, #0
  40073c:	d0f3      	beq.n	400726 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  40073e:	601d      	str	r5, [r3, #0]
	return 1;
  400740:	2001      	movs	r0, #1
  400742:	e7e9      	b.n	400718 <tc_find_mck_divisor+0x44>

00400744 <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  400744:	4b2a      	ldr	r3, [pc, #168]	; (4007f0 <twi_set_speed+0xac>)
  400746:	4299      	cmp	r1, r3
  400748:	d849      	bhi.n	4007de <twi_set_speed+0x9a>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  40074a:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  40074e:	4299      	cmp	r1, r3
  400750:	d92b      	bls.n	4007aa <twi_set_speed+0x66>
{
  400752:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  400754:	4c27      	ldr	r4, [pc, #156]	; (4007f4 <twi_set_speed+0xb0>)
  400756:	fba4 3402 	umull	r3, r4, r4, r2
  40075a:	0ba4      	lsrs	r4, r4, #14
  40075c:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  40075e:	4b26      	ldr	r3, [pc, #152]	; (4007f8 <twi_set_speed+0xb4>)
  400760:	440b      	add	r3, r1
  400762:	009b      	lsls	r3, r3, #2
  400764:	fbb2 f2f3 	udiv	r2, r2, r3
  400768:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  40076a:	2cff      	cmp	r4, #255	; 0xff
  40076c:	d939      	bls.n	4007e2 <twi_set_speed+0x9e>
  40076e:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  400770:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  400772:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400774:	2cff      	cmp	r4, #255	; 0xff
  400776:	d90d      	bls.n	400794 <twi_set_speed+0x50>
  400778:	2907      	cmp	r1, #7
  40077a:	d1f9      	bne.n	400770 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  40077c:	0213      	lsls	r3, r2, #8
  40077e:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  400780:	0409      	lsls	r1, r1, #16
  400782:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  400786:	430b      	orrs	r3, r1
  400788:	b2e4      	uxtb	r4, r4
  40078a:	4323      	orrs	r3, r4
		p_twi->TWI_CWGR =
  40078c:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  40078e:	2000      	movs	r0, #0
}
  400790:	bc10      	pop	{r4}
  400792:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  400794:	2aff      	cmp	r2, #255	; 0xff
  400796:	d9f1      	bls.n	40077c <twi_set_speed+0x38>
  400798:	2906      	cmp	r1, #6
  40079a:	d8ef      	bhi.n	40077c <twi_set_speed+0x38>
			ckdiv++;
  40079c:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  40079e:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007a0:	2aff      	cmp	r2, #255	; 0xff
  4007a2:	d9eb      	bls.n	40077c <twi_set_speed+0x38>
  4007a4:	2906      	cmp	r1, #6
  4007a6:	d9f9      	bls.n	40079c <twi_set_speed+0x58>
  4007a8:	e7e8      	b.n	40077c <twi_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  4007aa:	0049      	lsls	r1, r1, #1
  4007ac:	fbb2 f2f1 	udiv	r2, r2, r1
  4007b0:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007b2:	2aff      	cmp	r2, #255	; 0xff
  4007b4:	d911      	bls.n	4007da <twi_set_speed+0x96>
  4007b6:	2300      	movs	r3, #0
			ckdiv++;
  4007b8:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  4007ba:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007bc:	2aff      	cmp	r2, #255	; 0xff
  4007be:	d901      	bls.n	4007c4 <twi_set_speed+0x80>
  4007c0:	2b07      	cmp	r3, #7
  4007c2:	d1f9      	bne.n	4007b8 <twi_set_speed+0x74>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007c4:	0211      	lsls	r1, r2, #8
  4007c6:	b289      	uxth	r1, r1
				TWI_CWGR_CKDIV(ckdiv);
  4007c8:	041b      	lsls	r3, r3, #16
  4007ca:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  4007ce:	430b      	orrs	r3, r1
  4007d0:	b2d2      	uxtb	r2, r2
  4007d2:	431a      	orrs	r2, r3
		p_twi->TWI_CWGR =
  4007d4:	6102      	str	r2, [r0, #16]
	return PASS;
  4007d6:	2000      	movs	r0, #0
  4007d8:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4007da:	2300      	movs	r3, #0
  4007dc:	e7f2      	b.n	4007c4 <twi_set_speed+0x80>
		return FAIL;
  4007de:	2001      	movs	r0, #1
  4007e0:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007e2:	2aff      	cmp	r2, #255	; 0xff
	uint32_t ckdiv = 0;
  4007e4:	bf88      	it	hi
  4007e6:	2100      	movhi	r1, #0
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  4007e8:	d8d8      	bhi.n	40079c <twi_set_speed+0x58>
	uint32_t ckdiv = 0;
  4007ea:	2100      	movs	r1, #0
  4007ec:	e7c6      	b.n	40077c <twi_set_speed+0x38>
  4007ee:	bf00      	nop
  4007f0:	00061a80 	.word	0x00061a80
  4007f4:	057619f1 	.word	0x057619f1
  4007f8:	3ffd1200 	.word	0x3ffd1200

004007fc <twi_master_init>:
{
  4007fc:	b538      	push	{r3, r4, r5, lr}
  4007fe:	4604      	mov	r4, r0
  400800:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  400802:	f04f 33ff 	mov.w	r3, #4294967295
  400806:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  400808:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  40080a:	2380      	movs	r3, #128	; 0x80
  40080c:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  40080e:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  400810:	2308      	movs	r3, #8
  400812:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  400814:	2320      	movs	r3, #32
  400816:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  400818:	2304      	movs	r3, #4
  40081a:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  40081c:	680a      	ldr	r2, [r1, #0]
  40081e:	6849      	ldr	r1, [r1, #4]
  400820:	4b05      	ldr	r3, [pc, #20]	; (400838 <twi_master_init+0x3c>)
  400822:	4798      	blx	r3
  400824:	2801      	cmp	r0, #1
  400826:	bf14      	ite	ne
  400828:	2000      	movne	r0, #0
  40082a:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  40082c:	7a6b      	ldrb	r3, [r5, #9]
  40082e:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  400830:	bf04      	itt	eq
  400832:	2340      	moveq	r3, #64	; 0x40
  400834:	6023      	streq	r3, [r4, #0]
}
  400836:	bd38      	pop	{r3, r4, r5, pc}
  400838:	00400745 	.word	0x00400745

0040083c <twi_mk_addr>:
	if (len == 0)
  40083c:	460a      	mov	r2, r1
  40083e:	b159      	cbz	r1, 400858 <twi_mk_addr+0x1c>
	val = addr[0];
  400840:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  400842:	2901      	cmp	r1, #1
		val |= addr[1];
  400844:	bfc4      	itt	gt
  400846:	7841      	ldrbgt	r1, [r0, #1]
  400848:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  40084c:	2a02      	cmp	r2, #2
  40084e:	dd04      	ble.n	40085a <twi_mk_addr+0x1e>
		val |= addr[2];
  400850:	7882      	ldrb	r2, [r0, #2]
  400852:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  400856:	e000      	b.n	40085a <twi_mk_addr+0x1e>
		return 0;
  400858:	2300      	movs	r3, #0
}
  40085a:	4618      	mov	r0, r3
  40085c:	4770      	bx	lr
	...

00400860 <twi_master_read>:
{
  400860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  400862:	68cc      	ldr	r4, [r1, #12]
	if (cnt == 0) {
  400864:	2c00      	cmp	r4, #0
  400866:	d04f      	beq.n	400908 <twi_master_read+0xa8>
  400868:	460b      	mov	r3, r1
  40086a:	4605      	mov	r5, r0
	uint8_t *buffer = p_packet->buffer;
  40086c:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  40086e:	2000      	movs	r0, #0
  400870:	6068      	str	r0, [r5, #4]
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  400872:	684a      	ldr	r2, [r1, #4]
  400874:	0212      	lsls	r2, r2, #8
  400876:	f402 7240 	and.w	r2, r2, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  40087a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  40087e:	7c09      	ldrb	r1, [r1, #16]
  400880:	0409      	lsls	r1, r1, #16
  400882:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  400886:	430a      	orrs	r2, r1
  400888:	606a      	str	r2, [r5, #4]
	p_twi->TWI_IADR = 0;
  40088a:	60e8      	str	r0, [r5, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  40088c:	6859      	ldr	r1, [r3, #4]
  40088e:	4618      	mov	r0, r3
  400890:	4b22      	ldr	r3, [pc, #136]	; (40091c <twi_master_read+0xbc>)
  400892:	4798      	blx	r3
  400894:	60e8      	str	r0, [r5, #12]
	if (cnt == 1) {
  400896:	2c01      	cmp	r4, #1
  400898:	d00f      	beq.n	4008ba <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  40089a:	2301      	movs	r3, #1
  40089c:	602b      	str	r3, [r5, #0]
		stop_sent = 0;
  40089e:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  4008a0:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  4008a2:	f413 7f80 	tst.w	r3, #256	; 0x100
  4008a6:	d136      	bne.n	400916 <twi_master_read+0xb6>
  4008a8:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  4008ac:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  4008b0:	f04f 0e01 	mov.w	lr, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  4008b4:	f04f 0c02 	mov.w	ip, #2
  4008b8:	e019      	b.n	4008ee <twi_master_read+0x8e>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  4008ba:	2303      	movs	r3, #3
  4008bc:	602b      	str	r3, [r5, #0]
		stop_sent = 1;
  4008be:	2001      	movs	r0, #1
  4008c0:	e7ee      	b.n	4008a0 <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  4008c2:	460a      	mov	r2, r1
  4008c4:	4670      	mov	r0, lr
  4008c6:	e00c      	b.n	4008e2 <twi_master_read+0x82>
		if (cnt == 1  && !stop_sent) {
  4008c8:	b908      	cbnz	r0, 4008ce <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  4008ca:	f8c5 c000 	str.w	ip, [r5]
		if (!(status & TWI_SR_RXRDY)) {
  4008ce:	f013 0f02 	tst.w	r3, #2
  4008d2:	d0f6      	beq.n	4008c2 <twi_master_read+0x62>
  4008d4:	4670      	mov	r0, lr
		*buffer++ = p_twi->TWI_RHR;
  4008d6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4008d8:	7033      	strb	r3, [r6, #0]
		cnt--;
  4008da:	3c01      	subs	r4, #1
		*buffer++ = p_twi->TWI_RHR;
  4008dc:	3601      	adds	r6, #1
		timeout = TWI_TIMEOUT;
  4008de:	463a      	mov	r2, r7
	while (cnt > 0) {
  4008e0:	b164      	cbz	r4, 4008fc <twi_master_read+0x9c>
		status = p_twi->TWI_SR;
  4008e2:	6a2b      	ldr	r3, [r5, #32]
		if (status & TWI_SR_NACK) {
  4008e4:	f413 7f80 	tst.w	r3, #256	; 0x100
  4008e8:	d111      	bne.n	40090e <twi_master_read+0xae>
		if (!timeout--) {
  4008ea:	1e51      	subs	r1, r2, #1
  4008ec:	b18a      	cbz	r2, 400912 <twi_master_read+0xb2>
		if (cnt == 1  && !stop_sent) {
  4008ee:	2c01      	cmp	r4, #1
  4008f0:	d0ea      	beq.n	4008c8 <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  4008f2:	f013 0f02 	tst.w	r3, #2
  4008f6:	d1ee      	bne.n	4008d6 <twi_master_read+0x76>
  4008f8:	460a      	mov	r2, r1
  4008fa:	e7f1      	b.n	4008e0 <twi_master_read+0x80>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  4008fc:	6a2b      	ldr	r3, [r5, #32]
  4008fe:	f013 0f01 	tst.w	r3, #1
  400902:	d0fb      	beq.n	4008fc <twi_master_read+0x9c>
	p_twi->TWI_SR;
  400904:	6a2b      	ldr	r3, [r5, #32]
	return TWI_SUCCESS;
  400906:	e000      	b.n	40090a <twi_master_read+0xaa>
		return TWI_INVALID_ARGUMENT;
  400908:	2401      	movs	r4, #1
}
  40090a:	4620      	mov	r0, r4
  40090c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  40090e:	2405      	movs	r4, #5
  400910:	e7fb      	b.n	40090a <twi_master_read+0xaa>
			return TWI_ERROR_TIMEOUT;
  400912:	2409      	movs	r4, #9
  400914:	e7f9      	b.n	40090a <twi_master_read+0xaa>
			return TWI_RECEIVE_NACK;
  400916:	2405      	movs	r4, #5
  400918:	e7f7      	b.n	40090a <twi_master_read+0xaa>
  40091a:	bf00      	nop
  40091c:	0040083d 	.word	0x0040083d

00400920 <twi_master_write>:
{
  400920:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  400922:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  400924:	2d00      	cmp	r5, #0
  400926:	d035      	beq.n	400994 <twi_master_write+0x74>
  400928:	460b      	mov	r3, r1
  40092a:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  40092c:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  40092e:	2000      	movs	r0, #0
  400930:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400932:	7c0a      	ldrb	r2, [r1, #16]
  400934:	0412      	lsls	r2, r2, #16
  400936:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  40093a:	6849      	ldr	r1, [r1, #4]
  40093c:	0209      	lsls	r1, r1, #8
  40093e:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  400942:	430a      	orrs	r2, r1
  400944:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  400946:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  400948:	6859      	ldr	r1, [r3, #4]
  40094a:	4618      	mov	r0, r3
  40094c:	4b15      	ldr	r3, [pc, #84]	; (4009a4 <twi_master_write+0x84>)
  40094e:	4798      	blx	r3
  400950:	60e0      	str	r0, [r4, #12]
		status = p_twi->TWI_SR;
  400952:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400954:	f413 7f80 	tst.w	r3, #256	; 0x100
  400958:	d006      	beq.n	400968 <twi_master_write+0x48>
			return TWI_RECEIVE_NACK;
  40095a:	2505      	movs	r5, #5
  40095c:	e01b      	b.n	400996 <twi_master_write+0x76>
	while (cnt > 0) {
  40095e:	b15d      	cbz	r5, 400978 <twi_master_write+0x58>
		status = p_twi->TWI_SR;
  400960:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  400962:	f413 7f80 	tst.w	r3, #256	; 0x100
  400966:	d118      	bne.n	40099a <twi_master_write+0x7a>
		if (!(status & TWI_SR_TXRDY)) {
  400968:	f013 0f04 	tst.w	r3, #4
  40096c:	d0f7      	beq.n	40095e <twi_master_write+0x3e>
		p_twi->TWI_THR = *buffer++;
  40096e:	7833      	ldrb	r3, [r6, #0]
  400970:	6363      	str	r3, [r4, #52]	; 0x34
		cnt--;
  400972:	3d01      	subs	r5, #1
		p_twi->TWI_THR = *buffer++;
  400974:	3601      	adds	r6, #1
  400976:	e7f2      	b.n	40095e <twi_master_write+0x3e>
		status = p_twi->TWI_SR;
  400978:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  40097a:	f413 7f80 	tst.w	r3, #256	; 0x100
  40097e:	d10e      	bne.n	40099e <twi_master_write+0x7e>
		if (status & TWI_SR_TXRDY) {
  400980:	f013 0f04 	tst.w	r3, #4
  400984:	d0f8      	beq.n	400978 <twi_master_write+0x58>
	p_twi->TWI_CR = TWI_CR_STOP;
  400986:	2302      	movs	r3, #2
  400988:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  40098a:	6a23      	ldr	r3, [r4, #32]
  40098c:	f013 0f01 	tst.w	r3, #1
  400990:	d0fb      	beq.n	40098a <twi_master_write+0x6a>
  400992:	e000      	b.n	400996 <twi_master_write+0x76>
		return TWI_INVALID_ARGUMENT;
  400994:	2501      	movs	r5, #1
}
  400996:	4628      	mov	r0, r5
  400998:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  40099a:	2505      	movs	r5, #5
  40099c:	e7fb      	b.n	400996 <twi_master_write+0x76>
			return TWI_RECEIVE_NACK;
  40099e:	2505      	movs	r5, #5
  4009a0:	e7f9      	b.n	400996 <twi_master_write+0x76>
  4009a2:	bf00      	nop
  4009a4:	0040083d 	.word	0x0040083d

004009a8 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4009a8:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4009aa:	010b      	lsls	r3, r1, #4
  4009ac:	4293      	cmp	r3, r2
  4009ae:	d914      	bls.n	4009da <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4009b0:	00c9      	lsls	r1, r1, #3
  4009b2:	084b      	lsrs	r3, r1, #1
  4009b4:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4009b8:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4009bc:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4009be:	1e5c      	subs	r4, r3, #1
  4009c0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4009c4:	428c      	cmp	r4, r1
  4009c6:	d901      	bls.n	4009cc <usart_set_async_baudrate+0x24>
		return 1;
  4009c8:	2001      	movs	r0, #1
  4009ca:	e017      	b.n	4009fc <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4009cc:	6841      	ldr	r1, [r0, #4]
  4009ce:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4009d2:	6041      	str	r1, [r0, #4]
  4009d4:	e00c      	b.n	4009f0 <usart_set_async_baudrate+0x48>
		return 1;
  4009d6:	2001      	movs	r0, #1
  4009d8:	e010      	b.n	4009fc <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4009da:	0859      	lsrs	r1, r3, #1
  4009dc:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  4009e0:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  4009e4:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4009e6:	1e5c      	subs	r4, r3, #1
  4009e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4009ec:	428c      	cmp	r4, r1
  4009ee:	d8f2      	bhi.n	4009d6 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  4009f0:	0412      	lsls	r2, r2, #16
  4009f2:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  4009f6:	431a      	orrs	r2, r3
  4009f8:	6202      	str	r2, [r0, #32]

	return 0;
  4009fa:	2000      	movs	r0, #0
}
  4009fc:	bc10      	pop	{r4}
  4009fe:	4770      	bx	lr

00400a00 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400a00:	4b0a      	ldr	r3, [pc, #40]	; (400a2c <usart_reset+0x2c>)
  400a02:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400a06:	2300      	movs	r3, #0
  400a08:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400a0a:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400a0c:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400a0e:	2388      	movs	r3, #136	; 0x88
  400a10:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  400a12:	2324      	movs	r3, #36	; 0x24
  400a14:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400a16:	f44f 7380 	mov.w	r3, #256	; 0x100
  400a1a:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400a1c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  400a20:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
  400a22:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  400a26:	6003      	str	r3, [r0, #0]
  400a28:	4770      	bx	lr
  400a2a:	bf00      	nop
  400a2c:	55534100 	.word	0x55534100

00400a30 <usart_init_rs232>:
{
  400a30:	b570      	push	{r4, r5, r6, lr}
  400a32:	4605      	mov	r5, r0
  400a34:	460c      	mov	r4, r1
  400a36:	4616      	mov	r6, r2
	usart_reset(p_usart);
  400a38:	4b0f      	ldr	r3, [pc, #60]	; (400a78 <usart_init_rs232+0x48>)
  400a3a:	4798      	blx	r3
	ul_reg_val = 0;
  400a3c:	2200      	movs	r2, #0
  400a3e:	4b0f      	ldr	r3, [pc, #60]	; (400a7c <usart_init_rs232+0x4c>)
  400a40:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400a42:	b1a4      	cbz	r4, 400a6e <usart_init_rs232+0x3e>
  400a44:	4632      	mov	r2, r6
  400a46:	6821      	ldr	r1, [r4, #0]
  400a48:	4628      	mov	r0, r5
  400a4a:	4b0d      	ldr	r3, [pc, #52]	; (400a80 <usart_init_rs232+0x50>)
  400a4c:	4798      	blx	r3
  400a4e:	4602      	mov	r2, r0
  400a50:	b978      	cbnz	r0, 400a72 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400a52:	6863      	ldr	r3, [r4, #4]
  400a54:	68a1      	ldr	r1, [r4, #8]
  400a56:	430b      	orrs	r3, r1
  400a58:	6921      	ldr	r1, [r4, #16]
  400a5a:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400a5c:	68e1      	ldr	r1, [r4, #12]
  400a5e:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400a60:	4906      	ldr	r1, [pc, #24]	; (400a7c <usart_init_rs232+0x4c>)
  400a62:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400a64:	6869      	ldr	r1, [r5, #4]
  400a66:	430b      	orrs	r3, r1
  400a68:	606b      	str	r3, [r5, #4]
}
  400a6a:	4610      	mov	r0, r2
  400a6c:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400a6e:	2201      	movs	r2, #1
  400a70:	e7fb      	b.n	400a6a <usart_init_rs232+0x3a>
  400a72:	2201      	movs	r2, #1
  400a74:	e7f9      	b.n	400a6a <usart_init_rs232+0x3a>
  400a76:	bf00      	nop
  400a78:	00400a01 	.word	0x00400a01
  400a7c:	20000a50 	.word	0x20000a50
  400a80:	004009a9 	.word	0x004009a9

00400a84 <usart_init_hw_handshaking>:
{
  400a84:	b510      	push	{r4, lr}
  400a86:	4604      	mov	r4, r0
	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
  400a88:	4b06      	ldr	r3, [pc, #24]	; (400aa4 <usart_init_hw_handshaking+0x20>)
  400a8a:	4798      	blx	r3
  400a8c:	b940      	cbnz	r0, 400aa0 <usart_init_hw_handshaking+0x1c>
  400a8e:	4602      	mov	r2, r0
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400a90:	6863      	ldr	r3, [r4, #4]
  400a92:	f023 030f 	bic.w	r3, r3, #15
  400a96:	f043 0302 	orr.w	r3, r3, #2
  400a9a:	6063      	str	r3, [r4, #4]
}
  400a9c:	4610      	mov	r0, r2
  400a9e:	bd10      	pop	{r4, pc}
		return 1;
  400aa0:	2201      	movs	r2, #1
  400aa2:	e7fb      	b.n	400a9c <usart_init_hw_handshaking+0x18>
  400aa4:	00400a31 	.word	0x00400a31

00400aa8 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  400aa8:	2340      	movs	r3, #64	; 0x40
  400aaa:	6003      	str	r3, [r0, #0]
  400aac:	4770      	bx	lr

00400aae <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  400aae:	2310      	movs	r3, #16
  400ab0:	6003      	str	r3, [r0, #0]
  400ab2:	4770      	bx	lr

00400ab4 <usart_enable_interrupt>:
	p_usart->US_IER = ul_sources;
  400ab4:	6081      	str	r1, [r0, #8]
  400ab6:	4770      	bx	lr

00400ab8 <usart_disable_interrupt>:
	p_usart->US_IDR = ul_sources;
  400ab8:	60c1      	str	r1, [r0, #12]
  400aba:	4770      	bx	lr

00400abc <usart_putchar>:
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400abc:	6943      	ldr	r3, [r0, #20]
  400abe:	f013 0f02 	tst.w	r3, #2
  400ac2:	d0fb      	beq.n	400abc <usart_putchar>
	p_usart->US_THR = US_THR_TXCHR(c);
  400ac4:	f3c1 0108 	ubfx	r1, r1, #0, #9
  400ac8:	61c1      	str	r1, [r0, #28]
}
  400aca:	2000      	movs	r0, #0
  400acc:	4770      	bx	lr
	...

00400ad0 <usart_write_line>:
{
  400ad0:	b570      	push	{r4, r5, r6, lr}
  400ad2:	460c      	mov	r4, r1
	while (*string != '\0') {
  400ad4:	7809      	ldrb	r1, [r1, #0]
  400ad6:	b139      	cbz	r1, 400ae8 <usart_write_line+0x18>
  400ad8:	4605      	mov	r5, r0
		usart_putchar(p_usart, *string++);
  400ada:	4e04      	ldr	r6, [pc, #16]	; (400aec <usart_write_line+0x1c>)
  400adc:	4628      	mov	r0, r5
  400ade:	47b0      	blx	r6
	while (*string != '\0') {
  400ae0:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  400ae4:	2900      	cmp	r1, #0
  400ae6:	d1f9      	bne.n	400adc <usart_write_line+0xc>
  400ae8:	bd70      	pop	{r4, r5, r6, pc}
  400aea:	bf00      	nop
  400aec:	00400abd 	.word	0x00400abd

00400af0 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  400af0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400af4:	6043      	str	r3, [r0, #4]
  400af6:	4770      	bx	lr

00400af8 <vsync_handler>:
void vsync_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);

	g_ul_vsync_flag = true;
  400af8:	2201      	movs	r2, #1
  400afa:	4b01      	ldr	r3, [pc, #4]	; (400b00 <vsync_handler+0x8>)
  400afc:	601a      	str	r2, [r3, #0]
  400afe:	4770      	bx	lr
  400b00:	20000a54 	.word	0x20000a54

00400b04 <init_vsync_interrupts>:
}

void init_vsync_interrupts(void)
{
  400b04:	b530      	push	{r4, r5, lr}
  400b06:	b083      	sub	sp, #12
	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(OV2640_VSYNC_PIO, OV2640_VSYNC_ID, OV2640_VSYNC_MASK,
  400b08:	4c0a      	ldr	r4, [pc, #40]	; (400b34 <init_vsync_interrupts+0x30>)
  400b0a:	4b0b      	ldr	r3, [pc, #44]	; (400b38 <init_vsync_interrupts+0x34>)
  400b0c:	9300      	str	r3, [sp, #0]
  400b0e:	2301      	movs	r3, #1
  400b10:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b14:	210b      	movs	r1, #11
  400b16:	4620      	mov	r0, r4
  400b18:	4d08      	ldr	r5, [pc, #32]	; (400b3c <init_vsync_interrupts+0x38>)
  400b1a:	47a8      	blx	r5
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b1c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400b20:	4b07      	ldr	r3, [pc, #28]	; (400b40 <init_vsync_interrupts+0x3c>)
  400b22:	601a      	str	r2, [r3, #0]
			OV2640_VSYNC_TYPE, vsync_handler);

	/* Enable PIO controller IRQs */
	NVIC_EnableIRQ((IRQn_Type)OV2640_VSYNC_ID);
	
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400b24:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400b28:	4620      	mov	r0, r4
  400b2a:	4b06      	ldr	r3, [pc, #24]	; (400b44 <init_vsync_interrupts+0x40>)
  400b2c:	4798      	blx	r3
}
  400b2e:	b003      	add	sp, #12
  400b30:	bd30      	pop	{r4, r5, pc}
  400b32:	bf00      	nop
  400b34:	400e0e00 	.word	0x400e0e00
  400b38:	00400af9 	.word	0x00400af9
  400b3c:	00400495 	.word	0x00400495
  400b40:	e000e100 	.word	0xe000e100
  400b44:	004002cd 	.word	0x004002cd

00400b48 <configure_twi>:

void configure_twi(void)
{
  400b48:	b500      	push	{lr}
  400b4a:	b085      	sub	sp, #20
	twi_options_t opt;
	
	/* Enable TWI peripheral */
	pmc_enable_periph_clk(ID_BOARD_TWI);
  400b4c:	2013      	movs	r0, #19
  400b4e:	4b0e      	ldr	r3, [pc, #56]	; (400b88 <configure_twi+0x40>)
  400b50:	4798      	blx	r3

	/* Init TWI peripheral */
	opt.master_clk = sysclk_get_cpu_hz();
  400b52:	4b0e      	ldr	r3, [pc, #56]	; (400b8c <configure_twi+0x44>)
  400b54:	9301      	str	r3, [sp, #4]
	opt.speed      = TWI_CLK;
  400b56:	4b0e      	ldr	r3, [pc, #56]	; (400b90 <configure_twi+0x48>)
  400b58:	9302      	str	r3, [sp, #8]
	twi_master_init(BOARD_TWI, &opt);
  400b5a:	a901      	add	r1, sp, #4
  400b5c:	480d      	ldr	r0, [pc, #52]	; (400b94 <configure_twi+0x4c>)
  400b5e:	4b0e      	ldr	r3, [pc, #56]	; (400b98 <configure_twi+0x50>)
  400b60:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b62:	4b0e      	ldr	r3, [pc, #56]	; (400b9c <configure_twi+0x54>)
  400b64:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400b68:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400b6c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400b70:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b74:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  400b78:	2100      	movs	r1, #0
  400b7a:	f883 1313 	strb.w	r1, [r3, #787]	; 0x313
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400b7e:	601a      	str	r2, [r3, #0]
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
	
}
  400b80:	b005      	add	sp, #20
  400b82:	f85d fb04 	ldr.w	pc, [sp], #4
  400b86:	bf00      	nop
  400b88:	00400649 	.word	0x00400649
  400b8c:	07270e00 	.word	0x07270e00
  400b90:	00061a80 	.word	0x00061a80
  400b94:	40018000 	.word	0x40018000
  400b98:	004007fd 	.word	0x004007fd
  400b9c:	e000e100 	.word	0xe000e100

00400ba0 <pio_capture_init>:



void pio_capture_init(Pio *p_pio, uint32_t ul_id)
{
  400ba0:	b510      	push	{r4, lr}
  400ba2:	4604      	mov	r4, r0
	/* Enable peripheral clock */
	pmc_enable_periph_clk(ul_id);
  400ba4:	4608      	mov	r0, r1
  400ba6:	4b13      	ldr	r3, [pc, #76]	; (400bf4 <pio_capture_init+0x54>)
  400ba8:	4798      	blx	r3

	/* Disable pio capture */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_PCEN);
  400baa:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bae:	f023 0301 	bic.w	r3, r3, #1
  400bb2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Disable rxbuff interrupt */
	p_pio->PIO_PCIDR |= PIO_PCIDR_RXBUFF;
  400bb6:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
  400bba:	f043 0308 	orr.w	r3, r3, #8
  400bbe:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158

	/* 32bit width*/
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_DSIZE_Msk);
  400bc2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bc6:	f023 0330 	bic.w	r3, r3, #48	; 0x30
  400bca:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR |= PIO_PCMR_DSIZE_WORD;
  400bce:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bd2:	f043 0320 	orr.w	r3, r3, #32
  400bd6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150

	/* Only HSYNC and VSYNC enabled */
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_ALWYS);
  400bda:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bde:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  400be2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
	p_pio->PIO_PCMR &= ~((uint32_t)PIO_PCMR_HALFS);
  400be6:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
  400bea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  400bee:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
  400bf2:	bd10      	pop	{r4, pc}
  400bf4:	00400649 	.word	0x00400649

00400bf8 <init_camera>:
	}
}


void init_camera(void)
{
  400bf8:	b538      	push	{r3, r4, r5, lr}
	gpio_configure_pin(OV_RST_GPIO, OV_RST_FLAGS);
  400bfa:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400bfe:	2014      	movs	r0, #20
  400c00:	4c21      	ldr	r4, [pc, #132]	; (400c88 <init_camera+0x90>)
  400c02:	47a0      	blx	r4
	gpio_configure_pin(OV_HSYNC_GPIO, OV_HSYNC_FLAGS);
  400c04:	2171      	movs	r1, #113	; 0x71
  400c06:	2010      	movs	r0, #16
  400c08:	47a0      	blx	r4
	gpio_configure_pin(OV_VSYNC_MASK, OV2640_VSYNC_TYPE);
  400c0a:	2101      	movs	r1, #1
  400c0c:	200f      	movs	r0, #15
  400c0e:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D0, OV_DATA_BUS_FLAGS);
  400c10:	4d1e      	ldr	r5, [pc, #120]	; (400c8c <init_camera+0x94>)
  400c12:	4629      	mov	r1, r5
  400c14:	2018      	movs	r0, #24
  400c16:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D1, OV_DATA_BUS_FLAGS);
  400c18:	4629      	mov	r1, r5
  400c1a:	2019      	movs	r0, #25
  400c1c:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  400c1e:	4629      	mov	r1, r5
  400c20:	201a      	movs	r0, #26
  400c22:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  400c24:	4629      	mov	r1, r5
  400c26:	201b      	movs	r0, #27
  400c28:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  400c2a:	4629      	mov	r1, r5
  400c2c:	201c      	movs	r0, #28
  400c2e:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  400c30:	4629      	mov	r1, r5
  400c32:	201d      	movs	r0, #29
  400c34:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  400c36:	4629      	mov	r1, r5
  400c38:	201e      	movs	r0, #30
  400c3a:	47a0      	blx	r4
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  400c3c:	4629      	mov	r1, r5
  400c3e:	201f      	movs	r0, #31
  400c40:	47a0      	blx	r4
	
	pmc_enable_pllbck(7, 0x1, 1);
  400c42:	2201      	movs	r2, #1
  400c44:	4611      	mov	r1, r2
  400c46:	2007      	movs	r0, #7
  400c48:	4b11      	ldr	r3, [pc, #68]	; (400c90 <init_camera+0x98>)
  400c4a:	4798      	blx	r3
	
	
		
	/* Init Vsync handler*/
	init_vsync_interrupts();
  400c4c:	4b11      	ldr	r3, [pc, #68]	; (400c94 <init_camera+0x9c>)
  400c4e:	4798      	blx	r3
	pio_disable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400c50:	4c11      	ldr	r4, [pc, #68]	; (400c98 <init_camera+0xa0>)
  400c52:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400c56:	4620      	mov	r0, r4
  400c58:	4b10      	ldr	r3, [pc, #64]	; (400c9c <init_camera+0xa4>)
  400c5a:	4798      	blx	r3
	vsync_flag = false;
  400c5c:	2200      	movs	r2, #0
  400c5e:	4b10      	ldr	r3, [pc, #64]	; (400ca0 <init_camera+0xa8>)
  400c60:	601a      	str	r2, [r3, #0]

	/* Init PIO capture*/
	pio_capture_init(OV_DATA_BUS_PIO, OV_DATA_BUS_ID);
  400c62:	210b      	movs	r1, #11
  400c64:	4620      	mov	r0, r4
  400c66:	4b0f      	ldr	r3, [pc, #60]	; (400ca4 <init_camera+0xac>)
  400c68:	4798      	blx	r3



	/* Init PCK1 to work at 24 Mhz */
	/* 96/4=24 Mhz */
	PMC->PMC_PCK[0] = (PMC_PCK_PRES_CLK_4 | PMC_PCK_CSS_PLLB_CLK);
  400c6a:	4b0f      	ldr	r3, [pc, #60]	; (400ca8 <init_camera+0xb0>)
  400c6c:	2223      	movs	r2, #35	; 0x23
  400c6e:	641a      	str	r2, [r3, #64]	; 0x40
	PMC->PMC_SCER = PMC_SCER_PCK0;
  400c70:	f44f 7280 	mov.w	r2, #256	; 0x100
  400c74:	601a      	str	r2, [r3, #0]
	while (!(PMC->PMC_SCSR & PMC_SCSR_PCK0)) {
  400c76:	461a      	mov	r2, r3
  400c78:	6893      	ldr	r3, [r2, #8]
  400c7a:	f413 7f80 	tst.w	r3, #256	; 0x100
  400c7e:	d0fb      	beq.n	400c78 <init_camera+0x80>
	}
	
	configure_twi();
  400c80:	4b0a      	ldr	r3, [pc, #40]	; (400cac <init_camera+0xb4>)
  400c82:	4798      	blx	r3
  400c84:	bd38      	pop	{r3, r4, r5, pc}
  400c86:	bf00      	nop
  400c88:	004002dd 	.word	0x004002dd
  400c8c:	28000001 	.word	0x28000001
  400c90:	00400615 	.word	0x00400615
  400c94:	00400b05 	.word	0x00400b05
  400c98:	400e0e00 	.word	0x400e0e00
  400c9c:	004002d1 	.word	0x004002d1
  400ca0:	20000ab8 	.word	0x20000ab8
  400ca4:	00400ba1 	.word	0x00400ba1
  400ca8:	400e0400 	.word	0x400e0400
  400cac:	00400b49 	.word	0x00400b49

00400cb0 <configure_camera>:
	
}

void configure_camera(void)
{
  400cb0:	b538      	push	{r3, r4, r5, lr}
	/* ov7740 Initialization */
	while (ov_init(BOARD_TWI) == 1) {
  400cb2:	4d0c      	ldr	r5, [pc, #48]	; (400ce4 <configure_camera+0x34>)
  400cb4:	4c0c      	ldr	r4, [pc, #48]	; (400ce8 <configure_camera+0x38>)
  400cb6:	4628      	mov	r0, r5
  400cb8:	47a0      	blx	r4
  400cba:	2801      	cmp	r0, #1
  400cbc:	d0fb      	beq.n	400cb6 <configure_camera+0x6>
	}

	/* ov7740 configuration */
	ov_configure(BOARD_TWI,JPEG_INIT);
  400cbe:	4d09      	ldr	r5, [pc, #36]	; (400ce4 <configure_camera+0x34>)
  400cc0:	2100      	movs	r1, #0
  400cc2:	4628      	mov	r0, r5
  400cc4:	4c09      	ldr	r4, [pc, #36]	; (400cec <configure_camera+0x3c>)
  400cc6:	47a0      	blx	r4
	ov_configure(BOARD_TWI, YUV422);
  400cc8:	2101      	movs	r1, #1
  400cca:	4628      	mov	r0, r5
  400ccc:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG);
  400cce:	2102      	movs	r1, #2
  400cd0:	4628      	mov	r0, r5
  400cd2:	47a0      	blx	r4
	ov_configure(BOARD_TWI, JPEG_640x480);
  400cd4:	2104      	movs	r1, #4
  400cd6:	4628      	mov	r0, r5
  400cd8:	47a0      	blx	r4

	/* Wait 3 seconds to let the image sensor to adapt to environment */
	delay_ms(3000);
  400cda:	4805      	ldr	r0, [pc, #20]	; (400cf0 <configure_camera+0x40>)
  400cdc:	4b05      	ldr	r3, [pc, #20]	; (400cf4 <configure_camera+0x44>)
  400cde:	4798      	blx	r3
  400ce0:	bd38      	pop	{r3, r4, r5, pc}
  400ce2:	bf00      	nop
  400ce4:	40018000 	.word	0x40018000
  400ce8:	00400e6d 	.word	0x00400e6d
  400cec:	00400fa9 	.word	0x00400fa9
  400cf0:	01885e6e 	.word	0x01885e6e
  400cf4:	20000001 	.word	0x20000001

00400cf8 <find_image_len>:
	uint8_t val = find_image_len();
	return val;
}


uint8_t find_image_len(void){
  400cf8:	b4f0      	push	{r4, r5, r6, r7}
		uint8_t start_exists = 0;
		uint32_t arrSize = 0;
		start_of_image = 0;
  400cfa:	2000      	movs	r0, #0
  400cfc:	4b12      	ldr	r3, [pc, #72]	; (400d48 <find_image_len+0x50>)
  400cfe:	6018      	str	r0, [r3, #0]
		end_of_image = 0;
  400d00:	4b12      	ldr	r3, [pc, #72]	; (400d4c <find_image_len+0x54>)
  400d02:	6018      	str	r0, [r3, #0]
  400d04:	4c12      	ldr	r4, [pc, #72]	; (400d50 <find_image_len+0x58>)
  400d06:	4d13      	ldr	r5, [pc, #76]	; (400d54 <find_image_len+0x5c>)
  400d08:	4623      	mov	r3, r4
		while( arrSize+1 < IMAGE_MAX){
			if(image_buffer[arrSize] == 0xff && image_buffer[arrSize+1] == 0xd8){
				start_of_image = arrSize;
  400d0a:	4f0f      	ldr	r7, [pc, #60]	; (400d48 <find_image_len+0x50>)
				start_exists = 1;
  400d0c:	2601      	movs	r6, #1
  400d0e:	e00f      	b.n	400d30 <find_image_len+0x38>
			}
			if(image_buffer[arrSize] == 0xff && image_buffer[arrSize+1] == 0xd9 && start_exists == 1){
  400d10:	b160      	cbz	r0, 400d2c <find_image_len+0x34>
				end_of_image = arrSize+2;
  400d12:	3102      	adds	r1, #2
  400d14:	4b0d      	ldr	r3, [pc, #52]	; (400d4c <find_image_len+0x54>)
  400d16:	6019      	str	r1, [r3, #0]
				return 1;
  400d18:	e004      	b.n	400d24 <find_image_len+0x2c>
			}
			arrSize = arrSize + 1;
		}
		start_of_image = 0;
  400d1a:	2000      	movs	r0, #0
  400d1c:	4b0a      	ldr	r3, [pc, #40]	; (400d48 <find_image_len+0x50>)
  400d1e:	6018      	str	r0, [r3, #0]
		end_of_image = 0;
  400d20:	4b0a      	ldr	r3, [pc, #40]	; (400d4c <find_image_len+0x54>)
  400d22:	6018      	str	r0, [r3, #0]
		
		return 0;
}
  400d24:	bcf0      	pop	{r4, r5, r6, r7}
  400d26:	4770      	bx	lr
			if(image_buffer[arrSize] == 0xff && image_buffer[arrSize+1] == 0xd9 && start_exists == 1){
  400d28:	2ad9      	cmp	r2, #217	; 0xd9
  400d2a:	d0f1      	beq.n	400d10 <find_image_len+0x18>
		while( arrSize+1 < IMAGE_MAX){
  400d2c:	42ab      	cmp	r3, r5
  400d2e:	d0f4      	beq.n	400d1a <find_image_len+0x22>
  400d30:	1b19      	subs	r1, r3, r4
			if(image_buffer[arrSize] == 0xff && image_buffer[arrSize+1] == 0xd8){
  400d32:	f813 2b01 	ldrb.w	r2, [r3], #1
  400d36:	2aff      	cmp	r2, #255	; 0xff
  400d38:	d1f8      	bne.n	400d2c <find_image_len+0x34>
  400d3a:	781a      	ldrb	r2, [r3, #0]
  400d3c:	2ad8      	cmp	r2, #216	; 0xd8
  400d3e:	d1f3      	bne.n	400d28 <find_image_len+0x30>
				start_of_image = arrSize;
  400d40:	6039      	str	r1, [r7, #0]
				start_exists = 1;
  400d42:	4630      	mov	r0, r6
  400d44:	e7f2      	b.n	400d2c <find_image_len+0x34>
  400d46:	bf00      	nop
  400d48:	20000ab4 	.word	0x20000ab4
  400d4c:	20000abc 	.word	0x20000abc
  400d50:	20000ac0 	.word	0x20000ac0
  400d54:	2000ce0f 	.word	0x2000ce0f

00400d58 <start_capture>:
{
  400d58:	b510      	push	{r4, lr}
	pio_enable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d5a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d5e:	481e      	ldr	r0, [pc, #120]	; (400dd8 <start_capture+0x80>)
  400d60:	4b1e      	ldr	r3, [pc, #120]	; (400ddc <start_capture+0x84>)
  400d62:	4798      	blx	r3
	while (!g_ul_vsync_flag) {
  400d64:	4a1e      	ldr	r2, [pc, #120]	; (400de0 <start_capture+0x88>)
  400d66:	6813      	ldr	r3, [r2, #0]
  400d68:	2b00      	cmp	r3, #0
  400d6a:	d0fc      	beq.n	400d66 <start_capture+0xe>
	pio_disable_interrupt(OV2640_VSYNC_PIO, OV2640_VSYNC_MASK);
  400d6c:	4c1a      	ldr	r4, [pc, #104]	; (400dd8 <start_capture+0x80>)
  400d6e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
  400d72:	4620      	mov	r0, r4
  400d74:	4b1b      	ldr	r3, [pc, #108]	; (400de4 <start_capture+0x8c>)
  400d76:	4798      	blx	r3
	pio_capture_enable(OV_DATA_BUS_PIO);
  400d78:	4620      	mov	r0, r4
  400d7a:	4b1b      	ldr	r3, [pc, #108]	; (400de8 <start_capture+0x90>)
  400d7c:	4798      	blx	r3
	if ((p_pio->PIO_RCR == 0) && (p_pio->PIO_RNCR == 0)) {
  400d7e:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
  400d82:	b913      	cbnz	r3, 400d8a <start_capture+0x32>
  400d84:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
  400d88:	b1d3      	cbz	r3, 400dc0 <start_capture+0x68>
		} else if (p_pio->PIO_RNCR == 0) {
  400d8a:	4b13      	ldr	r3, [pc, #76]	; (400dd8 <start_capture+0x80>)
  400d8c:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
  400d90:	b93b      	cbnz	r3, 400da2 <start_capture+0x4a>
		p_pio->PIO_RNPR = (uint32_t)uc_buf;
  400d92:	4b11      	ldr	r3, [pc, #68]	; (400dd8 <start_capture+0x80>)
  400d94:	4a15      	ldr	r2, [pc, #84]	; (400dec <start_capture+0x94>)
  400d96:	f8c3 2178 	str.w	r2, [r3, #376]	; 0x178
		p_pio->PIO_RNCR = ul_size;
  400d9a:	f243 02d4 	movw	r2, #12500	; 0x30d4
  400d9e:	f8c3 217c 	str.w	r2, [r3, #380]	; 0x17c
	while (!((OV_DATA_BUS_PIO->PIO_PCISR & PIO_PCIMR_RXBUFF) ==
  400da2:	4a0d      	ldr	r2, [pc, #52]	; (400dd8 <start_capture+0x80>)
  400da4:	f8d2 3160 	ldr.w	r3, [r2, #352]	; 0x160
  400da8:	f013 0f08 	tst.w	r3, #8
  400dac:	d0fa      	beq.n	400da4 <start_capture+0x4c>
	pio_capture_disable(OV_DATA_BUS_PIO);
  400dae:	480a      	ldr	r0, [pc, #40]	; (400dd8 <start_capture+0x80>)
  400db0:	4b0f      	ldr	r3, [pc, #60]	; (400df0 <start_capture+0x98>)
  400db2:	4798      	blx	r3
	g_ul_vsync_flag = false;
  400db4:	2200      	movs	r2, #0
  400db6:	4b0a      	ldr	r3, [pc, #40]	; (400de0 <start_capture+0x88>)
  400db8:	601a      	str	r2, [r3, #0]
	uint8_t val = find_image_len();
  400dba:	4b0e      	ldr	r3, [pc, #56]	; (400df4 <start_capture+0x9c>)
  400dbc:	4798      	blx	r3
}
  400dbe:	bd10      	pop	{r4, pc}
		p_pio->PIO_RPR = (uint32_t)uc_buf;
  400dc0:	4a0a      	ldr	r2, [pc, #40]	; (400dec <start_capture+0x94>)
  400dc2:	f8c4 2168 	str.w	r2, [r4, #360]	; 0x168
		p_pio->PIO_RCR = ul_size;
  400dc6:	f243 02d4 	movw	r2, #12500	; 0x30d4
  400dca:	f8c4 216c 	str.w	r2, [r4, #364]	; 0x16c
		p_pio->PIO_PTCR = PIO_PTCR_RXTEN;
  400dce:	2201      	movs	r2, #1
  400dd0:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
  400dd4:	e7e5      	b.n	400da2 <start_capture+0x4a>
  400dd6:	bf00      	nop
  400dd8:	400e0e00 	.word	0x400e0e00
  400ddc:	004002cd 	.word	0x004002cd
  400de0:	20000a54 	.word	0x20000a54
  400de4:	004002d1 	.word	0x004002d1
  400de8:	004003fd 	.word	0x004003fd
  400dec:	20000ac0 	.word	0x20000ac0
  400df0:	00400415 	.word	0x00400415
  400df4:	00400cf9 	.word	0x00400cf9

00400df8 <ov_read_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_read_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400df8:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_read(p_twi, p_packet);
  400dfa:	4b01      	ldr	r3, [pc, #4]	; (400e00 <ov_read_reg+0x8>)
  400dfc:	4798      	blx	r3

	return ul_status;
}
  400dfe:	bd08      	pop	{r3, pc}
  400e00:	00400861 	.word	0x00400861

00400e04 <ov_write_reg>:
 * \param p_twi TWI interface.
 * \param p_packet TWI packet.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_reg(Twi* const p_twi, twi_packet_t* const p_packet)
{
  400e04:	b508      	push	{r3, lr}
	uint32_t ul_status;

	ul_status = twi_master_write(p_twi, p_packet);
  400e06:	4b01      	ldr	r3, [pc, #4]	; (400e0c <ov_write_reg+0x8>)
  400e08:	4798      	blx	r3

	return ul_status;
}
  400e0a:	bd08      	pop	{r3, pc}
  400e0c:	00400921 	.word	0x00400921

00400e10 <ov_write_regs>:
 * \param p_twi TWI interface.
 * \param p_reg_list Register list to be written.
 * \return 0 on success, TWID_ERROR_BUSY otherwise.
 */
uint32_t ov_write_regs(Twi* const p_twi, const ov_reg *p_reg_list)
{
  400e10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e14:	b086      	sub	sp, #24
  400e16:	4607      	mov	r7, r0
  400e18:	1c4c      	adds	r4, r1, #1
			(p_next->val == OV_VAL_TERM))) {
		if (p_next->reg == 0xFE) {
			delay_ms(5);
		} else {
			twi_packet_regs.addr[0] = p_next->reg;
			twi_packet_regs.addr_length = 1;
  400e1a:	2501      	movs	r5, #1
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
			twi_packet_regs.length = 1;
			twi_packet_regs.buffer = &(p_next->val);

			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e1c:	4e11      	ldr	r6, [pc, #68]	; (400e64 <ov_write_regs+0x54>)
			delay_ms(5);
  400e1e:	f8df 8048 	ldr.w	r8, [pc, #72]	; 400e68 <ov_write_regs+0x58>
	while (!((p_next->reg == OV_REG_TERM) &&
  400e22:	e010      	b.n	400e46 <ov_write_regs+0x36>
  400e24:	7821      	ldrb	r1, [r4, #0]
  400e26:	29ff      	cmp	r1, #255	; 0xff
  400e28:	d018      	beq.n	400e5c <ov_write_regs+0x4c>
			twi_packet_regs.addr[0] = p_next->reg;
  400e2a:	f88d 3004 	strb.w	r3, [sp, #4]
			twi_packet_regs.addr_length = 1;
  400e2e:	9502      	str	r5, [sp, #8]
			twi_packet_regs.chip = OV_I2C_SENSOR_ADDRESS;
  400e30:	2330      	movs	r3, #48	; 0x30
  400e32:	f88d 3014 	strb.w	r3, [sp, #20]
			twi_packet_regs.length = 1;
  400e36:	9504      	str	r5, [sp, #16]
			twi_packet_regs.buffer = &(p_next->val);
  400e38:	9203      	str	r2, [sp, #12]
			ul_err = ov_write_reg(p_twi, &twi_packet_regs);
  400e3a:	a901      	add	r1, sp, #4
  400e3c:	4638      	mov	r0, r7
  400e3e:	47b0      	blx	r6
			ul_size++;

			if (ul_err == TWI_BUSY) {
  400e40:	2808      	cmp	r0, #8
  400e42:	d00c      	beq.n	400e5e <ov_write_regs+0x4e>
  400e44:	3402      	adds	r4, #2
  400e46:	4622      	mov	r2, r4
	while (!((p_next->reg == OV_REG_TERM) &&
  400e48:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  400e4c:	2bff      	cmp	r3, #255	; 0xff
  400e4e:	d0e9      	beq.n	400e24 <ov_write_regs+0x14>
		if (p_next->reg == 0xFE) {
  400e50:	2bfe      	cmp	r3, #254	; 0xfe
  400e52:	d1ea      	bne.n	400e2a <ov_write_regs+0x1a>
			delay_ms(5);
  400e54:	f24a 706a 	movw	r0, #42858	; 0xa76a
  400e58:	47c0      	blx	r8
  400e5a:	e7f3      	b.n	400e44 <ov_write_regs+0x34>
			}
		}

		p_next++;
	}
	return 0;
  400e5c:	2000      	movs	r0, #0
}
  400e5e:	b006      	add	sp, #24
  400e60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e64:	00400e05 	.word	0x00400e05
  400e68:	20000001 	.word	0x20000001

00400e6c <ov_init>:
 *
 * \param p_twi TWI interface.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_init(Twi* const p_twi)
{
  400e6c:	b5f0      	push	{r4, r5, r6, r7, lr}
  400e6e:	b093      	sub	sp, #76	; 0x4c
  400e70:	4607      	mov	r7, r0
	const uint8_t cont_reg_val = 1;
  400e72:	2401      	movs	r4, #1
  400e74:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
	twi_packet_t init_packet = {
  400e78:	2500      	movs	r5, #0
  400e7a:	950c      	str	r5, [sp, #48]	; 0x30
  400e7c:	9510      	str	r5, [sp, #64]	; 0x40
  400e7e:	23ff      	movs	r3, #255	; 0xff
  400e80:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  400e84:	940d      	str	r4, [sp, #52]	; 0x34
  400e86:	f10d 0347 	add.w	r3, sp, #71	; 0x47
  400e8a:	930e      	str	r3, [sp, #56]	; 0x38
  400e8c:	940f      	str	r4, [sp, #60]	; 0x3c
  400e8e:	2630      	movs	r6, #48	; 0x30
  400e90:	f88d 6040 	strb.w	r6, [sp, #64]	; 0x40
		.addr_length  = 1, //sizeof (uint16_t),    // TWI slave memory address data size
		.chip         = OV_I2C_SENSOR_ADDRESS,      // TWI slave bus address
		.buffer       = &cont_reg_val,        // transfer data destination buffer
		.length       = 1                    // transfer data size (bytes)
	};
	ov_write_reg(p_twi, &init_packet);
  400e94:	eb0d 0106 	add.w	r1, sp, r6
  400e98:	4b41      	ldr	r3, [pc, #260]	; (400fa0 <ov_init+0x134>)
  400e9a:	4798      	blx	r3
	uint32_t ul_id = 0;
  400e9c:	9500      	str	r5, [sp, #0]
	uint32_t ul_ver = 0;
  400e9e:	9501      	str	r5, [sp, #4]
	packet_pid.chip = OV_I2C_SENSOR_ADDRESS;
  400ea0:	f88d 6018 	strb.w	r6, [sp, #24]
	packet_pid.addr[0] = OV2640_PIDH;
  400ea4:	230a      	movs	r3, #10
  400ea6:	f88d 3008 	strb.w	r3, [sp, #8]
	packet_pid.addr_length = 1;
  400eaa:	9403      	str	r4, [sp, #12]
	packet_pid.buffer = &ul_id;
  400eac:	f8cd d010 	str.w	sp, [sp, #16]
	packet_pid.length = 1;
  400eb0:	9405      	str	r4, [sp, #20]
	ov_read_reg(p_twi, &packet_pid);
  400eb2:	a902      	add	r1, sp, #8
  400eb4:	4638      	mov	r0, r7
  400eb6:	4d3b      	ldr	r5, [pc, #236]	; (400fa4 <ov_init+0x138>)
  400eb8:	47a8      	blx	r5
	packet_ver.chip = OV_I2C_SENSOR_ADDRESS;
  400eba:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	packet_ver.addr[0] = OV2640_PIDL;
  400ebe:	230b      	movs	r3, #11
  400ec0:	f88d 301c 	strb.w	r3, [sp, #28]
	packet_ver.addr_length = 1;
  400ec4:	9408      	str	r4, [sp, #32]
	packet_ver.buffer = &ul_ver;
  400ec6:	ab01      	add	r3, sp, #4
  400ec8:	9309      	str	r3, [sp, #36]	; 0x24
	packet_ver.length = 1;
  400eca:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &packet_ver);
  400ecc:	a907      	add	r1, sp, #28
  400ece:	4638      	mov	r0, r7
  400ed0:	47a8      	blx	r5
	return ((uint32_t)(ul_id << 8) | ul_ver);
  400ed2:	9b01      	ldr	r3, [sp, #4]
  400ed4:	9a00      	ldr	r2, [sp, #0]
  400ed6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
	
	uint32_t ul_id = 0;

	ul_id = ov_id( p_twi );

	if (((ul_id >> 8)&0xff)  == OV2640_PIDH_DEFAULT) {
  400eda:	f3c3 2307 	ubfx	r3, r3, #8, #8
  400ede:	2b26      	cmp	r3, #38	; 0x26
  400ee0:	d002      	beq.n	400ee8 <ov_init+0x7c>
				return 0;
			}
		}
	}

	return 1;
  400ee2:	2001      	movs	r0, #1
}
  400ee4:	b013      	add	sp, #76	; 0x4c
  400ee6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	uint32_t ul_midh = 0;
  400ee8:	2300      	movs	r3, #0
  400eea:	9301      	str	r3, [sp, #4]
	uint32_t ul_midl = 0;
  400eec:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = OV2640_MIDH;
  400eee:	231c      	movs	r3, #28
  400ef0:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400ef4:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400ef6:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midh;
  400efa:	ab01      	add	r3, sp, #4
  400efc:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400efe:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400f00:	a907      	add	r1, sp, #28
  400f02:	4638      	mov	r0, r7
  400f04:	47a8      	blx	r5
	twi_packet.addr[0] = OV2640_MIDL;
  400f06:	231d      	movs	r3, #29
  400f08:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400f0c:	9408      	str	r4, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f0e:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
	twi_packet.buffer = &ul_midl;
  400f12:	ab02      	add	r3, sp, #8
  400f14:	9309      	str	r3, [sp, #36]	; 0x24
	twi_packet.length = 1;
  400f16:	940a      	str	r4, [sp, #40]	; 0x28
	ov_read_reg(p_twi, &twi_packet);
  400f18:	a907      	add	r1, sp, #28
  400f1a:	4638      	mov	r0, r7
  400f1c:	47a8      	blx	r5
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f1e:	9b01      	ldr	r3, [sp, #4]
  400f20:	2b7f      	cmp	r3, #127	; 0x7f
  400f22:	d001      	beq.n	400f28 <ov_init+0xbc>
	return 1;
  400f24:	2001      	movs	r0, #1
  400f26:	e7dd      	b.n	400ee4 <ov_init+0x78>
	if ((ul_midh == OV2640_MIDH_DEFAULT) && (ul_midl == OV2640_MIDL_DEFAULT)) {
  400f28:	9b02      	ldr	r3, [sp, #8]
  400f2a:	2ba2      	cmp	r3, #162	; 0xa2
  400f2c:	d1fa      	bne.n	400f24 <ov_init+0xb8>
	uint32_t ul_value = 0;
  400f2e:	2300      	movs	r3, #0
  400f30:	9300      	str	r3, [sp, #0]
	uint32_t ul_oldvalue = 0;
  400f32:	9301      	str	r3, [sp, #4]
	uint32_t ul_entervalue = 0;
  400f34:	9302      	str	r3, [sp, #8]
	twi_packet.addr[0] = 0x01;
  400f36:	2301      	movs	r3, #1
  400f38:	f88d 301c 	strb.w	r3, [sp, #28]
	twi_packet.addr_length = 1;
  400f3c:	9308      	str	r3, [sp, #32]
	twi_packet.chip = OV_I2C_SENSOR_ADDRESS;
  400f3e:	2230      	movs	r2, #48	; 0x30
  400f40:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
	twi_packet.length = 1;
  400f44:	930a      	str	r3, [sp, #40]	; 0x28
	twi_packet.buffer = &ul_oldvalue;
  400f46:	ab01      	add	r3, sp, #4
  400f48:	9309      	str	r3, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f4a:	a907      	add	r1, sp, #28
  400f4c:	4638      	mov	r0, r7
  400f4e:	4c15      	ldr	r4, [pc, #84]	; (400fa4 <ov_init+0x138>)
  400f50:	47a0      	blx	r4
	ul_entervalue = 0xAD;
  400f52:	ab12      	add	r3, sp, #72	; 0x48
  400f54:	22ad      	movs	r2, #173	; 0xad
  400f56:	f843 2d40 	str.w	r2, [r3, #-64]!
	twi_packet.buffer = &ul_entervalue;
  400f5a:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f5c:	a907      	add	r1, sp, #28
  400f5e:	4638      	mov	r0, r7
  400f60:	4b0f      	ldr	r3, [pc, #60]	; (400fa0 <ov_init+0x134>)
  400f62:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f64:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f68:	a907      	add	r1, sp, #28
  400f6a:	4638      	mov	r0, r7
  400f6c:	47a0      	blx	r4
	if (ul_value != ul_entervalue) {
  400f6e:	9b02      	ldr	r3, [sp, #8]
  400f70:	9a00      	ldr	r2, [sp, #0]
  400f72:	429a      	cmp	r2, r3
  400f74:	d001      	beq.n	400f7a <ov_init+0x10e>
		return 1;
  400f76:	2001      	movs	r0, #1
  400f78:	e7b4      	b.n	400ee4 <ov_init+0x78>
	twi_packet.buffer = &ul_oldvalue;
  400f7a:	ab01      	add	r3, sp, #4
  400f7c:	9309      	str	r3, [sp, #36]	; 0x24
	ov_write_reg(p_twi, &twi_packet);
  400f7e:	a907      	add	r1, sp, #28
  400f80:	4638      	mov	r0, r7
  400f82:	4b07      	ldr	r3, [pc, #28]	; (400fa0 <ov_init+0x134>)
  400f84:	4798      	blx	r3
	twi_packet.buffer = &ul_value;
  400f86:	f8cd d024 	str.w	sp, [sp, #36]	; 0x24
	ov_read_reg(p_twi, &twi_packet);
  400f8a:	a907      	add	r1, sp, #28
  400f8c:	4638      	mov	r0, r7
  400f8e:	4b05      	ldr	r3, [pc, #20]	; (400fa4 <ov_init+0x138>)
  400f90:	4798      	blx	r3
	if (ul_value != ul_oldvalue) {
  400f92:	9b01      	ldr	r3, [sp, #4]
  400f94:	9800      	ldr	r0, [sp, #0]
  400f96:	1ac0      	subs	r0, r0, r3
  400f98:	bf18      	it	ne
  400f9a:	2001      	movne	r0, #1
  400f9c:	e7a2      	b.n	400ee4 <ov_init+0x78>
  400f9e:	bf00      	nop
  400fa0:	00400e05 	.word	0x00400e05
  400fa4:	00400df9 	.word	0x00400df9

00400fa8 <ov_configure>:
 * \param p_twi TWI interface.
 * \param format Specific format to configure.
 * \return 0 on success, 1 otherwise.
 */
uint32_t ov_configure(Twi* const p_twi, const e_OV2640_format format)
{
  400fa8:	b508      	push	{r3, lr}
	const ov_reg *p_regs_conf = NULL;

	/* Common register initialization */
	switch (format) {
  400faa:	2911      	cmp	r1, #17
  400fac:	d82a      	bhi.n	401004 <ov_configure+0x5c>
  400fae:	e8df f001 	tbb	[pc, r1]
  400fb2:	092b      	.short	0x092b
  400fb4:	0f0d0b2d 	.word	0x0f0d0b2d
  400fb8:	17151311 	.word	0x17151311
  400fbc:	1f1d1b19 	.word	0x1f1d1b19
  400fc0:	27252321 	.word	0x27252321
	case JPEG_INIT:
		p_regs_conf = OV2640_JPEG_INIT;
		break;
		
	case YUV422:
		p_regs_conf = OV2640_YUV422;
  400fc4:	4914      	ldr	r1, [pc, #80]	; (401018 <ov_configure+0x70>)
  400fc6:	e022      	b.n	40100e <ov_configure+0x66>
	case JPEG:
		p_regs_conf = OV2640_JPEG;
		break;
		
	case JPEG_320x240:
		p_regs_conf = OV2640_JPEG_320x240;
  400fc8:	4914      	ldr	r1, [pc, #80]	; (40101c <ov_configure+0x74>)
		break;
  400fca:	e020      	b.n	40100e <ov_configure+0x66>
		
	case JPEG_640x480:
		p_regs_conf = OV2640_JPEG_640x480;
  400fcc:	4914      	ldr	r1, [pc, #80]	; (401020 <ov_configure+0x78>)
		break;
  400fce:	e01e      	b.n	40100e <ov_configure+0x66>
		
	case JPEG_800x600:
		p_regs_conf = OV2640_JPEG_800x600;
  400fd0:	4914      	ldr	r1, [pc, #80]	; (401024 <ov_configure+0x7c>)
		break;
  400fd2:	e01c      	b.n	40100e <ov_configure+0x66>
		
	case JPEG_1024x768:
		p_regs_conf = OV2640_JPEG_1024x768;
  400fd4:	4914      	ldr	r1, [pc, #80]	; (401028 <ov_configure+0x80>)
		break;
  400fd6:	e01a      	b.n	40100e <ov_configure+0x66>
		
	case JPEG_1280x1024:
		p_regs_conf = OV2640_JPEG_1280x1024;
  400fd8:	4914      	ldr	r1, [pc, #80]	; (40102c <ov_configure+0x84>)
		break;
  400fda:	e018      	b.n	40100e <ov_configure+0x66>
		
	case JPEG_1600x1200:
		p_regs_conf = OV2640_JPEG_1600x1200;
  400fdc:	4914      	ldr	r1, [pc, #80]	; (401030 <ov_configure+0x88>)
		break;
  400fde:	e016      	b.n	40100e <ov_configure+0x66>
		
	case QVGA_YUV422_10FPS:
		p_regs_conf = OV2640_QVGA_YUV422_10FPS;
  400fe0:	4914      	ldr	r1, [pc, #80]	; (401034 <ov_configure+0x8c>)
		break;
  400fe2:	e014      	b.n	40100e <ov_configure+0x66>

	case QVGA_YUV422_15FPS:
		p_regs_conf = OV2640_QVGA_YUV422_15FPS;
  400fe4:	4914      	ldr	r1, [pc, #80]	; (401038 <ov_configure+0x90>)
		break;
  400fe6:	e012      	b.n	40100e <ov_configure+0x66>

	case QVGA_YUV422_20FPS:
		p_regs_conf = OV2640_QVGA_YUV422_20FPS;
  400fe8:	4914      	ldr	r1, [pc, #80]	; (40103c <ov_configure+0x94>)
		break;
  400fea:	e010      	b.n	40100e <ov_configure+0x66>

	case QVGA_YUV422_30FPS:
		p_regs_conf = OV2640_QVGA_YUV422_30FPS;
  400fec:	4914      	ldr	r1, [pc, #80]	; (401040 <ov_configure+0x98>)
		break;
  400fee:	e00e      	b.n	40100e <ov_configure+0x66>

	case QVGA_RGB888:
		p_regs_conf = OV2640_QVGA_RGB888;
  400ff0:	4914      	ldr	r1, [pc, #80]	; (401044 <ov_configure+0x9c>)
		break;
  400ff2:	e00c      	b.n	40100e <ov_configure+0x66>

	case QQVGA_YUV422:
		p_regs_conf = OV2640_QQVGA_YUV422;
  400ff4:	4914      	ldr	r1, [pc, #80]	; (401048 <ov_configure+0xa0>)
		break;
  400ff6:	e00a      	b.n	40100e <ov_configure+0x66>

	case QQVGA_RGB888:
		p_regs_conf = OV2640_QQVGA_RGB888;
  400ff8:	4914      	ldr	r1, [pc, #80]	; (40104c <ov_configure+0xa4>)
		break;
  400ffa:	e008      	b.n	40100e <ov_configure+0x66>

	case TEST_PATTERN:
		p_regs_conf = OV2640_TEST_PATTERN;
  400ffc:	4914      	ldr	r1, [pc, #80]	; (401050 <ov_configure+0xa8>)
		break;
  400ffe:	e006      	b.n	40100e <ov_configure+0x66>

	case VGA_YUV422_20FPS:
		p_regs_conf = OV2640_VGA_YUV422_20FPS;
  401000:	4914      	ldr	r1, [pc, #80]	; (401054 <ov_configure+0xac>)
		break;
  401002:	e004      	b.n	40100e <ov_configure+0x66>
	if (p_regs_conf != NULL) {
		ov_write_regs( p_twi, p_regs_conf );
		return 0;
	}

	return 1;
  401004:	2001      	movs	r0, #1
  401006:	bd08      	pop	{r3, pc}
		p_regs_conf = OV2640_JPEG_INIT;
  401008:	4913      	ldr	r1, [pc, #76]	; (401058 <ov_configure+0xb0>)
  40100a:	e000      	b.n	40100e <ov_configure+0x66>
		p_regs_conf = OV2640_JPEG;
  40100c:	4913      	ldr	r1, [pc, #76]	; (40105c <ov_configure+0xb4>)
		ov_write_regs( p_twi, p_regs_conf );
  40100e:	4b14      	ldr	r3, [pc, #80]	; (401060 <ov_configure+0xb8>)
  401010:	4798      	blx	r3
		return 0;
  401012:	2000      	movs	r0, #0
}
  401014:	bd08      	pop	{r3, pc}
  401016:	bf00      	nop
  401018:	004072d8 	.word	0x004072d8
  40101c:	004067e0 	.word	0x004067e0
  401020:	00406830 	.word	0x00406830
  401024:	00406884 	.word	0x00406884
  401028:	004066e8 	.word	0x004066e8
  40102c:	00406738 	.word	0x00406738
  401030:	0040678c 	.word	0x0040678c
  401034:	00406d34 	.word	0x00406d34
  401038:	00406e24 	.word	0x00406e24
  40103c:	00406f14 	.word	0x00406f14
  401040:	00407004 	.word	0x00407004
  401044:	00406c40 	.word	0x00406c40
  401048:	00406b4c 	.word	0x00406b4c
  40104c:	00406a58 	.word	0x00406a58
  401050:	004070f4 	.word	0x004070f4
  401054:	004071e8 	.word	0x004071e8
  401058:	004068d8 	.word	0x004068d8
  40105c:	004066d4 	.word	0x004066d4
  401060:	00400e11 	.word	0x00400e11

00401064 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  401064:	b508      	push	{r3, lr}
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  401066:	2100      	movs	r1, #0
  401068:	4805      	ldr	r0, [pc, #20]	; (401080 <TC0_Handler+0x1c>)
  40106a:	4b06      	ldr	r3, [pc, #24]	; (401084 <TC0_Handler+0x20>)
  40106c:	4798      	blx	r3

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  40106e:	f010 0f10 	tst.w	r0, #16
  401072:	d004      	beq.n	40107e <TC0_Handler+0x1a>
		counts++;
  401074:	4a04      	ldr	r2, [pc, #16]	; (401088 <TC0_Handler+0x24>)
  401076:	7813      	ldrb	r3, [r2, #0]
  401078:	3301      	adds	r3, #1
  40107a:	b2db      	uxtb	r3, r3
  40107c:	7013      	strb	r3, [r2, #0]
  40107e:	bd08      	pop	{r3, pc}
  401080:	40010000 	.word	0x40010000
  401084:	004006cd 	.word	0x004006cd
  401088:	20000a58 	.word	0x20000a58

0040108c <configure_tc>:
	}
}

void configure_tc(void)
{
  40108c:	b530      	push	{r4, r5, lr}
  40108e:	b085      	sub	sp, #20

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  401090:	2017      	movs	r0, #23
  401092:	4b14      	ldr	r3, [pc, #80]	; (4010e4 <configure_tc+0x58>)
  401094:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401096:	4d14      	ldr	r5, [pc, #80]	; (4010e8 <configure_tc+0x5c>)
  401098:	9500      	str	r5, [sp, #0]
  40109a:	ab02      	add	r3, sp, #8
  40109c:	aa03      	add	r2, sp, #12
  40109e:	4629      	mov	r1, r5
  4010a0:	2001      	movs	r0, #1
  4010a2:	4c12      	ldr	r4, [pc, #72]	; (4010ec <configure_tc+0x60>)
  4010a4:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  4010a6:	4c12      	ldr	r4, [pc, #72]	; (4010f0 <configure_tc+0x64>)
  4010a8:	9a02      	ldr	r2, [sp, #8]
  4010aa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4010ae:	2100      	movs	r1, #0
  4010b0:	4620      	mov	r0, r4
  4010b2:	4b10      	ldr	r3, [pc, #64]	; (4010f4 <configure_tc+0x68>)
  4010b4:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  4010b6:	9a03      	ldr	r2, [sp, #12]
  4010b8:	fbb5 f2f2 	udiv	r2, r5, r2
  4010bc:	2100      	movs	r1, #0
  4010be:	4620      	mov	r0, r4
  4010c0:	4b0d      	ldr	r3, [pc, #52]	; (4010f8 <configure_tc+0x6c>)
  4010c2:	4798      	blx	r3
  4010c4:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4010c8:	4b0c      	ldr	r3, [pc, #48]	; (4010fc <configure_tc+0x70>)
  4010ca:	601a      	str	r2, [r3, #0]

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4010cc:	2210      	movs	r2, #16
  4010ce:	2100      	movs	r1, #0
  4010d0:	4620      	mov	r0, r4
  4010d2:	4b0b      	ldr	r3, [pc, #44]	; (401100 <configure_tc+0x74>)
  4010d4:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4010d6:	2100      	movs	r1, #0
  4010d8:	4620      	mov	r0, r4
  4010da:	4b0a      	ldr	r3, [pc, #40]	; (401104 <configure_tc+0x78>)
  4010dc:	4798      	blx	r3
  4010de:	b005      	add	sp, #20
  4010e0:	bd30      	pop	{r4, r5, pc}
  4010e2:	bf00      	nop
  4010e4:	00400649 	.word	0x00400649
  4010e8:	07270e00 	.word	0x07270e00
  4010ec:	004006d5 	.word	0x004006d5
  4010f0:	40010000 	.word	0x40010000
  4010f4:	0040069d 	.word	0x0040069d
  4010f8:	004006bd 	.word	0x004006bd
  4010fc:	e000e100 	.word	0xe000e100
  401100:	004006c5 	.word	0x004006c5
  401104:	004006b5 	.word	0x004006b5

00401108 <wifi_web_setup_handler>:
void wifi_web_setup_handler(uint32_t ul_id, uint32_t ul_mask)
{
	unused(ul_id);
	unused(ul_mask);
	
	wifi_setup_button_flag = true;
  401108:	2201      	movs	r2, #1
  40110a:	4b01      	ldr	r3, [pc, #4]	; (401110 <wifi_web_setup_handler+0x8>)
  40110c:	601a      	str	r2, [r3, #0]
  40110e:	4770      	bx	lr
  401110:	20000a74 	.word	0x20000a74

00401114 <configure_usart_wifi>:
}

void configure_usart_wifi(void)
{
  401114:	b530      	push	{r4, r5, lr}
  401116:	b087      	sub	sp, #28
	gpio_configure_pin(PIN_USART1_RXD_IDX, PIN_USART1_RXD_FLAGS);
  401118:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40111c:	2005      	movs	r0, #5
  40111e:	4c19      	ldr	r4, [pc, #100]	; (401184 <configure_usart_wifi+0x70>)
  401120:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_TXD_IDX, PIN_USART1_TXD_FLAGS);
  401122:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401126:	2006      	movs	r0, #6
  401128:	47a0      	blx	r4
	gpio_configure_pin(PIN_USART1_CTS_IDX, PIN_USART1_CTS_FLAGS);
  40112a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40112e:	2008      	movs	r0, #8
  401130:	47a0      	blx	r4
	//gpio_configure_pin(PIN_USART1_RTS_IDX, PIN_USART1_RTS_FLAGS);

	static uint32_t ul_sysclk;
	const sam_usart_opt_t usart_console_settings = {
  401132:	466c      	mov	r4, sp
  401134:	4d14      	ldr	r5, [pc, #80]	; (401188 <configure_usart_wifi+0x74>)
  401136:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  401138:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  40113a:	e895 0003 	ldmia.w	r5, {r0, r1}
  40113e:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};

	/* Get peripheral clock. */
	ul_sysclk = sysclk_get_peripheral_hz();
  401142:	4d12      	ldr	r5, [pc, #72]	; (40118c <configure_usart_wifi+0x78>)
  401144:	4b12      	ldr	r3, [pc, #72]	; (401190 <configure_usart_wifi+0x7c>)
  401146:	602b      	str	r3, [r5, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  401148:	200e      	movs	r0, #14
  40114a:	4b12      	ldr	r3, [pc, #72]	; (401194 <configure_usart_wifi+0x80>)
  40114c:	4798      	blx	r3

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(BOARD_ID_USART);

	/* Configure USART. */
	usart_init_hw_handshaking(WIFI_USART, &usart_console_settings, ul_sysclk);
  40114e:	4c12      	ldr	r4, [pc, #72]	; (401198 <configure_usart_wifi+0x84>)
  401150:	682a      	ldr	r2, [r5, #0]
  401152:	4669      	mov	r1, sp
  401154:	4620      	mov	r0, r4
  401156:	4b11      	ldr	r3, [pc, #68]	; (40119c <configure_usart_wifi+0x88>)
  401158:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(WIFI_USART, ALL_INTERRUPT_MASK);
  40115a:	f04f 31ff 	mov.w	r1, #4294967295
  40115e:	4620      	mov	r0, r4
  401160:	4b0f      	ldr	r3, [pc, #60]	; (4011a0 <configure_usart_wifi+0x8c>)
  401162:	4798      	blx	r3

	/* Enable TX & RX function. */
	usart_enable_tx(WIFI_USART);
  401164:	4620      	mov	r0, r4
  401166:	4b0f      	ldr	r3, [pc, #60]	; (4011a4 <configure_usart_wifi+0x90>)
  401168:	4798      	blx	r3
	usart_enable_rx(WIFI_USART);
  40116a:	4620      	mov	r0, r4
  40116c:	4b0e      	ldr	r3, [pc, #56]	; (4011a8 <configure_usart_wifi+0x94>)
  40116e:	4798      	blx	r3

	usart_enable_interrupt(WIFI_USART, US_IER_RXRDY);
  401170:	2101      	movs	r1, #1
  401172:	4620      	mov	r0, r4
  401174:	4b0d      	ldr	r3, [pc, #52]	; (4011ac <configure_usart_wifi+0x98>)
  401176:	4798      	blx	r3
  401178:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  40117c:	4b0c      	ldr	r3, [pc, #48]	; (4011b0 <configure_usart_wifi+0x9c>)
  40117e:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(USART_IRQn);
}
  401180:	b007      	add	sp, #28
  401182:	bd30      	pop	{r4, r5, pc}
  401184:	004002dd 	.word	0x004002dd
  401188:	004072ec 	.word	0x004072ec
  40118c:	20000a68 	.word	0x20000a68
  401190:	07270e00 	.word	0x07270e00
  401194:	00400649 	.word	0x00400649
  401198:	40024000 	.word	0x40024000
  40119c:	00400a85 	.word	0x00400a85
  4011a0:	00400ab9 	.word	0x00400ab9
  4011a4:	00400aa9 	.word	0x00400aa9
  4011a8:	00400aaf 	.word	0x00400aaf
  4011ac:	00400ab5 	.word	0x00400ab5
  4011b0:	e000e100 	.word	0xe000e100

004011b4 <configure_wifi_command_pin>:

void configure_wifi_command_pin(void)
{
  4011b4:	b530      	push	{r4, r5, lr}
  4011b6:	b083      	sub	sp, #12
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_COMM_ID);
  4011b8:	200c      	movs	r0, #12
  4011ba:	4b0e      	ldr	r3, [pc, #56]	; (4011f4 <configure_wifi_command_pin+0x40>)
  4011bc:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WIFI_COMM_PIO, WIFI_COMM_PIN_MSK, 10);
  4011be:	4c0e      	ldr	r4, [pc, #56]	; (4011f8 <configure_wifi_command_pin+0x44>)
  4011c0:	220a      	movs	r2, #10
  4011c2:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4011c6:	4620      	mov	r0, r4
  4011c8:	4b0c      	ldr	r3, [pc, #48]	; (4011fc <configure_wifi_command_pin+0x48>)
  4011ca:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_MSK,
  4011cc:	4b0c      	ldr	r3, [pc, #48]	; (401200 <configure_wifi_command_pin+0x4c>)
  4011ce:	9300      	str	r3, [sp, #0]
  4011d0:	2370      	movs	r3, #112	; 0x70
  4011d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4011d6:	210c      	movs	r1, #12
  4011d8:	4620      	mov	r0, r4
  4011da:	4d0a      	ldr	r5, [pc, #40]	; (401204 <configure_wifi_command_pin+0x50>)
  4011dc:	47a8      	blx	r5
  4011de:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4011e2:	4b09      	ldr	r3, [pc, #36]	; (401208 <configure_wifi_command_pin+0x54>)
  4011e4:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_MSK);
  4011e6:	f44f 6180 	mov.w	r1, #1024	; 0x400
  4011ea:	4620      	mov	r0, r4
  4011ec:	4b07      	ldr	r3, [pc, #28]	; (40120c <configure_wifi_command_pin+0x58>)
  4011ee:	4798      	blx	r3
}
  4011f0:	b003      	add	sp, #12
  4011f2:	bd30      	pop	{r4, r5, pc}
  4011f4:	00400649 	.word	0x00400649
  4011f8:	400e1000 	.word	0x400e1000
  4011fc:	0040019d 	.word	0x0040019d
  401200:	004013a1 	.word	0x004013a1
  401204:	00400495 	.word	0x00400495
  401208:	e000e100 	.word	0xe000e100
  40120c:	004002cd 	.word	0x004002cd

00401210 <configure_wifi_web_setup_pin>:

void configure_wifi_web_setup_pin(void)
{
  401210:	b530      	push	{r4, r5, lr}
  401212:	b083      	sub	sp, #12
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WEB_SETUP_BUTTON_ID);
  401214:	200b      	movs	r0, #11
  401216:	4b0e      	ldr	r3, [pc, #56]	; (401250 <configure_wifi_web_setup_pin+0x40>)
  401218:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WEB_SETUP_BUTTON_PIO, WEB_SETUP_BUTTON_PIN_MSK, 10);
  40121a:	4c0e      	ldr	r4, [pc, #56]	; (401254 <configure_wifi_web_setup_pin+0x44>)
  40121c:	220a      	movs	r2, #10
  40121e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  401222:	4620      	mov	r0, r4
  401224:	4b0c      	ldr	r3, [pc, #48]	; (401258 <configure_wifi_web_setup_pin+0x48>)
  401226:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h
	**/
	pio_handler_set(WEB_SETUP_BUTTON_PIO, WEB_SETUP_BUTTON_ID, WEB_SETUP_BUTTON_PIN_MSK,
  401228:	4b0c      	ldr	r3, [pc, #48]	; (40125c <configure_wifi_web_setup_pin+0x4c>)
  40122a:	9300      	str	r3, [sp, #0]
  40122c:	2370      	movs	r3, #112	; 0x70
  40122e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  401232:	210b      	movs	r1, #11
  401234:	4620      	mov	r0, r4
  401236:	4d0a      	ldr	r5, [pc, #40]	; (401260 <configure_wifi_web_setup_pin+0x50>)
  401238:	47a8      	blx	r5
  40123a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  40123e:	4b09      	ldr	r3, [pc, #36]	; (401264 <configure_wifi_web_setup_pin+0x54>)
  401240:	601a      	str	r2, [r3, #0]

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WEB_SETUP_BUTTON_ID);

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WEB_SETUP_BUTTON_PIO, WEB_SETUP_BUTTON_PIN_MSK);
  401242:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  401246:	4620      	mov	r0, r4
  401248:	4b07      	ldr	r3, [pc, #28]	; (401268 <configure_wifi_web_setup_pin+0x58>)
  40124a:	4798      	blx	r3
}
  40124c:	b003      	add	sp, #12
  40124e:	bd30      	pop	{r4, r5, pc}
  401250:	00400649 	.word	0x00400649
  401254:	400e0e00 	.word	0x400e0e00
  401258:	0040019d 	.word	0x0040019d
  40125c:	00401109 	.word	0x00401109
  401260:	00400495 	.word	0x00400495
  401264:	e000e100 	.word	0xe000e100
  401268:	004002cd 	.word	0x004002cd

0040126c <write_wifi_command>:

void write_wifi_command(char* comm, uint8_t cnt)
{
  40126c:	b510      	push	{r4, lr}
  40126e:	460c      	mov	r4, r1
	//Write command to the AMW136
	usart_write_line(WIFI_USART, comm);
  401270:	4601      	mov	r1, r0
  401272:	4809      	ldr	r0, [pc, #36]	; (401298 <write_wifi_command+0x2c>)
  401274:	4b09      	ldr	r3, [pc, #36]	; (40129c <write_wifi_command+0x30>)
  401276:	4798      	blx	r3
	
	//Wait for either an acknowledgment or a timeout
	counts = 0;
  401278:	2200      	movs	r2, #0
  40127a:	4b09      	ldr	r3, [pc, #36]	; (4012a0 <write_wifi_command+0x34>)
  40127c:	601a      	str	r2, [r3, #0]
	while (counts < cnt)
  40127e:	461a      	mov	r2, r3
	{
		if (wifi_comm_success==true)
  401280:	4908      	ldr	r1, [pc, #32]	; (4012a4 <write_wifi_command+0x38>)
	while (counts < cnt)
  401282:	6813      	ldr	r3, [r2, #0]
  401284:	429c      	cmp	r4, r3
  401286:	d906      	bls.n	401296 <write_wifi_command+0x2a>
		if (wifi_comm_success==true)
  401288:	680b      	ldr	r3, [r1, #0]
  40128a:	2b01      	cmp	r3, #1
  40128c:	d1f9      	bne.n	401282 <write_wifi_command+0x16>
		{
			wifi_comm_success = false;
  40128e:	2200      	movs	r2, #0
  401290:	4b04      	ldr	r3, [pc, #16]	; (4012a4 <write_wifi_command+0x38>)
  401292:	601a      	str	r2, [r3, #0]
			return;
  401294:	bd10      	pop	{r4, pc}
  401296:	bd10      	pop	{r4, pc}
  401298:	40024000 	.word	0x40024000
  40129c:	00400ad1 	.word	0x00400ad1
  4012a0:	20000a58 	.word	0x20000a58
  4012a4:	20000a70 	.word	0x20000a70

004012a8 <write_image_to_file>:
	}
	return;
}

void write_image_to_file(void)
{
  4012a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4012ac:	b08e      	sub	sp, #56	; 0x38
	if (find_image_len()==0)
  4012ae:	4b1d      	ldr	r3, [pc, #116]	; (401324 <write_image_to_file+0x7c>)
  4012b0:	4798      	blx	r3
  4012b2:	b910      	cbnz	r0, 4012ba <write_image_to_file+0x12>
	}
	
	usart_write_line(WIFI_USART, "Complete\r\n");
	delay_s(2);
	
}
  4012b4:	b00e      	add	sp, #56	; 0x38
  4012b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	image_length = end_of_image - start_of_image;
  4012ba:	4b1b      	ldr	r3, [pc, #108]	; (401328 <write_image_to_file+0x80>)
  4012bc:	681b      	ldr	r3, [r3, #0]
  4012be:	4a1b      	ldr	r2, [pc, #108]	; (40132c <write_image_to_file+0x84>)
  4012c0:	6812      	ldr	r2, [r2, #0]
  4012c2:	1a9b      	subs	r3, r3, r2
  4012c4:	4c1a      	ldr	r4, [pc, #104]	; (401330 <write_image_to_file+0x88>)
  4012c6:	6023      	str	r3, [r4, #0]
	char string[50] = {0};
  4012c8:	2232      	movs	r2, #50	; 0x32
  4012ca:	2100      	movs	r1, #0
  4012cc:	a801      	add	r0, sp, #4
  4012ce:	4b19      	ldr	r3, [pc, #100]	; (401334 <write_image_to_file+0x8c>)
  4012d0:	4798      	blx	r3
	sprintf(string,"image_transfer %d\r\n", image_length);
  4012d2:	6822      	ldr	r2, [r4, #0]
  4012d4:	4918      	ldr	r1, [pc, #96]	; (401338 <write_image_to_file+0x90>)
  4012d6:	a801      	add	r0, sp, #4
  4012d8:	4b18      	ldr	r3, [pc, #96]	; (40133c <write_image_to_file+0x94>)
  4012da:	4798      	blx	r3
	write_wifi_command(string, 20);
  4012dc:	2114      	movs	r1, #20
  4012de:	a801      	add	r0, sp, #4
  4012e0:	4b17      	ldr	r3, [pc, #92]	; (401340 <write_image_to_file+0x98>)
  4012e2:	4798      	blx	r3
	while(!wifi_comm_success)
  4012e4:	4a17      	ldr	r2, [pc, #92]	; (401344 <write_image_to_file+0x9c>)
  4012e6:	6813      	ldr	r3, [r2, #0]
  4012e8:	2b00      	cmp	r3, #0
  4012ea:	d0fc      	beq.n	4012e6 <write_image_to_file+0x3e>
	uint32_t img = start_of_image;
  4012ec:	4b0f      	ldr	r3, [pc, #60]	; (40132c <write_image_to_file+0x84>)
  4012ee:	681c      	ldr	r4, [r3, #0]
	while (img < end_of_image)
  4012f0:	4b0d      	ldr	r3, [pc, #52]	; (401328 <write_image_to_file+0x80>)
  4012f2:	681b      	ldr	r3, [r3, #0]
  4012f4:	429c      	cmp	r4, r3
  4012f6:	d20d      	bcs.n	401314 <write_image_to_file+0x6c>
  4012f8:	4d13      	ldr	r5, [pc, #76]	; (401348 <write_image_to_file+0xa0>)
  4012fa:	4425      	add	r5, r4
		usart_putchar(WIFI_USART, image_buffer[img]);
  4012fc:	f8df 8054 	ldr.w	r8, [pc, #84]	; 401354 <write_image_to_file+0xac>
  401300:	4f12      	ldr	r7, [pc, #72]	; (40134c <write_image_to_file+0xa4>)
	while (img < end_of_image)
  401302:	4e09      	ldr	r6, [pc, #36]	; (401328 <write_image_to_file+0x80>)
		usart_putchar(WIFI_USART, image_buffer[img]);
  401304:	f815 1f01 	ldrb.w	r1, [r5, #1]!
  401308:	4640      	mov	r0, r8
  40130a:	47b8      	blx	r7
		img++;
  40130c:	3401      	adds	r4, #1
	while (img < end_of_image)
  40130e:	6833      	ldr	r3, [r6, #0]
  401310:	42a3      	cmp	r3, r4
  401312:	d8f7      	bhi.n	401304 <write_image_to_file+0x5c>
	usart_write_line(WIFI_USART, "Complete\r\n");
  401314:	490e      	ldr	r1, [pc, #56]	; (401350 <write_image_to_file+0xa8>)
  401316:	480f      	ldr	r0, [pc, #60]	; (401354 <write_image_to_file+0xac>)
  401318:	4b0f      	ldr	r3, [pc, #60]	; (401358 <write_image_to_file+0xb0>)
  40131a:	4798      	blx	r3
	delay_s(2);
  40131c:	480f      	ldr	r0, [pc, #60]	; (40135c <write_image_to_file+0xb4>)
  40131e:	4b10      	ldr	r3, [pc, #64]	; (401360 <write_image_to_file+0xb8>)
  401320:	4798      	blx	r3
  401322:	e7c7      	b.n	4012b4 <write_image_to_file+0xc>
  401324:	00400cf9 	.word	0x00400cf9
  401328:	20000abc 	.word	0x20000abc
  40132c:	20000ab4 	.word	0x20000ab4
  401330:	20000a5c 	.word	0x20000a5c
  401334:	00401841 	.word	0x00401841
  401338:	00407314 	.word	0x00407314
  40133c:	004018dd 	.word	0x004018dd
  401340:	0040126d 	.word	0x0040126d
  401344:	20000a70 	.word	0x20000a70
  401348:	20000abf 	.word	0x20000abf
  40134c:	00400abd 	.word	0x00400abd
  401350:	00407328 	.word	0x00407328
  401354:	40024000 	.word	0x40024000
  401358:	00400ad1 	.word	0x00400ad1
  40135c:	0105944a 	.word	0x0105944a
  401360:	20000001 	.word	0x20000001

00401364 <process_data_wifi>:
void process_incoming_byte_wifi(uint8_t in_byte) {
	
	input_line_wifi[input_pos_wifi++ ] = in_byte;
}

void process_data_wifi(void) {
  401364:	b508      	push	{r3, lr}
	
	if (strstr(input_line_wifi, "None")) {
  401366:	4908      	ldr	r1, [pc, #32]	; (401388 <process_data_wifi+0x24>)
  401368:	4808      	ldr	r0, [pc, #32]	; (40138c <process_data_wifi+0x28>)
  40136a:	4b09      	ldr	r3, [pc, #36]	; (401390 <process_data_wifi+0x2c>)
  40136c:	4798      	blx	r3
  40136e:	b110      	cbz	r0, 401376 <process_data_wifi+0x12>
		wait_flag = 1;
  401370:	2201      	movs	r2, #1
  401372:	4b08      	ldr	r3, [pc, #32]	; (401394 <process_data_wifi+0x30>)
  401374:	601a      	str	r2, [r3, #0]
	} 
	if (strstr(input_line_wifi, "Image")){
  401376:	4908      	ldr	r1, [pc, #32]	; (401398 <process_data_wifi+0x34>)
  401378:	4804      	ldr	r0, [pc, #16]	; (40138c <process_data_wifi+0x28>)
  40137a:	4b05      	ldr	r3, [pc, #20]	; (401390 <process_data_wifi+0x2c>)
  40137c:	4798      	blx	r3
  40137e:	b110      	cbz	r0, 401386 <process_data_wifi+0x22>
		start_image_transfer = 1;
  401380:	2201      	movs	r2, #1
  401382:	4b06      	ldr	r3, [pc, #24]	; (40139c <process_data_wifi+0x38>)
  401384:	601a      	str	r2, [r3, #0]
  401386:	bd08      	pop	{r3, pc}
  401388:	00407304 	.word	0x00407304
  40138c:	2000ce10 	.word	0x2000ce10
  401390:	00401bd9 	.word	0x00401bd9
  401394:	20000a6c 	.word	0x20000a6c
  401398:	0040730c 	.word	0x0040730c
  40139c:	20000a64 	.word	0x20000a64

004013a0 <wifi_command_response_handler>:
{
  4013a0:	b508      	push	{r3, lr}
	wifi_comm_success = true;
  4013a2:	2201      	movs	r2, #1
  4013a4:	4b07      	ldr	r3, [pc, #28]	; (4013c4 <wifi_command_response_handler+0x24>)
  4013a6:	601a      	str	r2, [r3, #0]
	process_data_wifi();
  4013a8:	4b07      	ldr	r3, [pc, #28]	; (4013c8 <wifi_command_response_handler+0x28>)
  4013aa:	4798      	blx	r3
	for (int jj = 0;jj<1000;jj++) input_line_wifi[jj] = 0;
  4013ac:	2300      	movs	r3, #0
  4013ae:	4907      	ldr	r1, [pc, #28]	; (4013cc <wifi_command_response_handler+0x2c>)
  4013b0:	461a      	mov	r2, r3
  4013b2:	54ca      	strb	r2, [r1, r3]
  4013b4:	3301      	adds	r3, #1
  4013b6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  4013ba:	d1fa      	bne.n	4013b2 <wifi_command_response_handler+0x12>
	input_pos_wifi = 0;
  4013bc:	2200      	movs	r2, #0
  4013be:	4b04      	ldr	r3, [pc, #16]	; (4013d0 <wifi_command_response_handler+0x30>)
  4013c0:	601a      	str	r2, [r3, #0]
  4013c2:	bd08      	pop	{r3, pc}
  4013c4:	20000a70 	.word	0x20000a70
  4013c8:	00401365 	.word	0x00401365
  4013cc:	2000ce10 	.word	0x2000ce10
  4013d0:	20000a60 	.word	0x20000a60

004013d4 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  4013d4:	4770      	bx	lr

004013d6 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4013d6:	e7fe      	b.n	4013d6 <Dummy_Handler>

004013d8 <Reset_Handler>:
{
  4013d8:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  4013da:	4b21      	ldr	r3, [pc, #132]	; (401460 <Reset_Handler+0x88>)
  4013dc:	4a21      	ldr	r2, [pc, #132]	; (401464 <Reset_Handler+0x8c>)
  4013de:	429a      	cmp	r2, r3
  4013e0:	d928      	bls.n	401434 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  4013e2:	4b21      	ldr	r3, [pc, #132]	; (401468 <Reset_Handler+0x90>)
  4013e4:	4a1e      	ldr	r2, [pc, #120]	; (401460 <Reset_Handler+0x88>)
  4013e6:	429a      	cmp	r2, r3
  4013e8:	d20c      	bcs.n	401404 <Reset_Handler+0x2c>
  4013ea:	3b01      	subs	r3, #1
  4013ec:	1a9b      	subs	r3, r3, r2
  4013ee:	f023 0303 	bic.w	r3, r3, #3
  4013f2:	3304      	adds	r3, #4
  4013f4:	4413      	add	r3, r2
  4013f6:	491b      	ldr	r1, [pc, #108]	; (401464 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  4013f8:	f851 0b04 	ldr.w	r0, [r1], #4
  4013fc:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  401400:	429a      	cmp	r2, r3
  401402:	d1f9      	bne.n	4013f8 <Reset_Handler+0x20>
	__NOP();
  401404:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  401406:	4b19      	ldr	r3, [pc, #100]	; (40146c <Reset_Handler+0x94>)
  401408:	4a19      	ldr	r2, [pc, #100]	; (401470 <Reset_Handler+0x98>)
  40140a:	429a      	cmp	r2, r3
  40140c:	d20a      	bcs.n	401424 <Reset_Handler+0x4c>
  40140e:	3b01      	subs	r3, #1
  401410:	1a9b      	subs	r3, r3, r2
  401412:	f023 0303 	bic.w	r3, r3, #3
  401416:	3304      	adds	r3, #4
  401418:	4413      	add	r3, r2
		*pDest++ = 0;
  40141a:	2100      	movs	r1, #0
  40141c:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  401420:	429a      	cmp	r2, r3
  401422:	d1fb      	bne.n	40141c <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  401424:	4b13      	ldr	r3, [pc, #76]	; (401474 <Reset_Handler+0x9c>)
  401426:	4a14      	ldr	r2, [pc, #80]	; (401478 <Reset_Handler+0xa0>)
  401428:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40142a:	4b14      	ldr	r3, [pc, #80]	; (40147c <Reset_Handler+0xa4>)
  40142c:	4798      	blx	r3
	main();
  40142e:	4b14      	ldr	r3, [pc, #80]	; (401480 <Reset_Handler+0xa8>)
  401430:	4798      	blx	r3
  401432:	e7fe      	b.n	401432 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  401434:	4b0a      	ldr	r3, [pc, #40]	; (401460 <Reset_Handler+0x88>)
  401436:	4a0b      	ldr	r2, [pc, #44]	; (401464 <Reset_Handler+0x8c>)
  401438:	429a      	cmp	r2, r3
  40143a:	d2e3      	bcs.n	401404 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  40143c:	4b0a      	ldr	r3, [pc, #40]	; (401468 <Reset_Handler+0x90>)
  40143e:	4808      	ldr	r0, [pc, #32]	; (401460 <Reset_Handler+0x88>)
  401440:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  401442:	4611      	mov	r1, r2
  401444:	3a04      	subs	r2, #4
  401446:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  401448:	2800      	cmp	r0, #0
  40144a:	d0db      	beq.n	401404 <Reset_Handler+0x2c>
  40144c:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  401450:	f852 0904 	ldr.w	r0, [r2], #-4
  401454:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  401458:	42ca      	cmn	r2, r1
  40145a:	d1f9      	bne.n	401450 <Reset_Handler+0x78>
  40145c:	e7d2      	b.n	401404 <Reset_Handler+0x2c>
  40145e:	bf00      	nop
  401460:	20000000 	.word	0x20000000
  401464:	004076e4 	.word	0x004076e4
  401468:	200009bc 	.word	0x200009bc
  40146c:	2000d1fc 	.word	0x2000d1fc
  401470:	200009bc 	.word	0x200009bc
  401474:	e000ed00 	.word	0xe000ed00
  401478:	00400000 	.word	0x00400000
  40147c:	004017f1 	.word	0x004017f1
  401480:	00401641 	.word	0x00401641

00401484 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401484:	4b3c      	ldr	r3, [pc, #240]	; (401578 <SystemCoreClockUpdate+0xf4>)
  401486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401488:	f003 0303 	and.w	r3, r3, #3
  40148c:	2b03      	cmp	r3, #3
  40148e:	d80e      	bhi.n	4014ae <SystemCoreClockUpdate+0x2a>
  401490:	e8df f003 	tbb	[pc, r3]
  401494:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401498:	4b38      	ldr	r3, [pc, #224]	; (40157c <SystemCoreClockUpdate+0xf8>)
  40149a:	695b      	ldr	r3, [r3, #20]
  40149c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4014a0:	bf14      	ite	ne
  4014a2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4014a6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4014aa:	4b35      	ldr	r3, [pc, #212]	; (401580 <SystemCoreClockUpdate+0xfc>)
  4014ac:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  4014ae:	4b32      	ldr	r3, [pc, #200]	; (401578 <SystemCoreClockUpdate+0xf4>)
  4014b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014b2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014b6:	2b70      	cmp	r3, #112	; 0x70
  4014b8:	d055      	beq.n	401566 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014ba:	4b2f      	ldr	r3, [pc, #188]	; (401578 <SystemCoreClockUpdate+0xf4>)
  4014bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  4014be:	4930      	ldr	r1, [pc, #192]	; (401580 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014c0:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  4014c4:	680b      	ldr	r3, [r1, #0]
  4014c6:	40d3      	lsrs	r3, r2
  4014c8:	600b      	str	r3, [r1, #0]
  4014ca:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4014cc:	4b2a      	ldr	r3, [pc, #168]	; (401578 <SystemCoreClockUpdate+0xf4>)
  4014ce:	6a1b      	ldr	r3, [r3, #32]
  4014d0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014d4:	d003      	beq.n	4014de <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4014d6:	4a2b      	ldr	r2, [pc, #172]	; (401584 <SystemCoreClockUpdate+0x100>)
  4014d8:	4b29      	ldr	r3, [pc, #164]	; (401580 <SystemCoreClockUpdate+0xfc>)
  4014da:	601a      	str	r2, [r3, #0]
  4014dc:	e7e7      	b.n	4014ae <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4014de:	4a2a      	ldr	r2, [pc, #168]	; (401588 <SystemCoreClockUpdate+0x104>)
  4014e0:	4b27      	ldr	r3, [pc, #156]	; (401580 <SystemCoreClockUpdate+0xfc>)
  4014e2:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4014e4:	4b24      	ldr	r3, [pc, #144]	; (401578 <SystemCoreClockUpdate+0xf4>)
  4014e6:	6a1b      	ldr	r3, [r3, #32]
  4014e8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014ec:	2b10      	cmp	r3, #16
  4014ee:	d005      	beq.n	4014fc <SystemCoreClockUpdate+0x78>
  4014f0:	2b20      	cmp	r3, #32
  4014f2:	d1dc      	bne.n	4014ae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4014f4:	4a23      	ldr	r2, [pc, #140]	; (401584 <SystemCoreClockUpdate+0x100>)
  4014f6:	4b22      	ldr	r3, [pc, #136]	; (401580 <SystemCoreClockUpdate+0xfc>)
  4014f8:	601a      	str	r2, [r3, #0]
			break;
  4014fa:	e7d8      	b.n	4014ae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4014fc:	4a23      	ldr	r2, [pc, #140]	; (40158c <SystemCoreClockUpdate+0x108>)
  4014fe:	4b20      	ldr	r3, [pc, #128]	; (401580 <SystemCoreClockUpdate+0xfc>)
  401500:	601a      	str	r2, [r3, #0]
			break;
  401502:	e7d4      	b.n	4014ae <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401504:	4b1c      	ldr	r3, [pc, #112]	; (401578 <SystemCoreClockUpdate+0xf4>)
  401506:	6a1b      	ldr	r3, [r3, #32]
  401508:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40150c:	d018      	beq.n	401540 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40150e:	4a1d      	ldr	r2, [pc, #116]	; (401584 <SystemCoreClockUpdate+0x100>)
  401510:	4b1b      	ldr	r3, [pc, #108]	; (401580 <SystemCoreClockUpdate+0xfc>)
  401512:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401514:	4b18      	ldr	r3, [pc, #96]	; (401578 <SystemCoreClockUpdate+0xf4>)
  401516:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401518:	f003 0303 	and.w	r3, r3, #3
  40151c:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40151e:	4a16      	ldr	r2, [pc, #88]	; (401578 <SystemCoreClockUpdate+0xf4>)
  401520:	bf07      	ittee	eq
  401522:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401524:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401526:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401528:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  40152a:	4815      	ldr	r0, [pc, #84]	; (401580 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  40152c:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401530:	6803      	ldr	r3, [r0, #0]
  401532:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  401536:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401538:	fbb3 f3f2 	udiv	r3, r3, r2
  40153c:	6003      	str	r3, [r0, #0]
  40153e:	e7b6      	b.n	4014ae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401540:	4a11      	ldr	r2, [pc, #68]	; (401588 <SystemCoreClockUpdate+0x104>)
  401542:	4b0f      	ldr	r3, [pc, #60]	; (401580 <SystemCoreClockUpdate+0xfc>)
  401544:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401546:	4b0c      	ldr	r3, [pc, #48]	; (401578 <SystemCoreClockUpdate+0xf4>)
  401548:	6a1b      	ldr	r3, [r3, #32]
  40154a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40154e:	2b10      	cmp	r3, #16
  401550:	d005      	beq.n	40155e <SystemCoreClockUpdate+0xda>
  401552:	2b20      	cmp	r3, #32
  401554:	d1de      	bne.n	401514 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401556:	4a0b      	ldr	r2, [pc, #44]	; (401584 <SystemCoreClockUpdate+0x100>)
  401558:	4b09      	ldr	r3, [pc, #36]	; (401580 <SystemCoreClockUpdate+0xfc>)
  40155a:	601a      	str	r2, [r3, #0]
					break;
  40155c:	e7da      	b.n	401514 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40155e:	4a0b      	ldr	r2, [pc, #44]	; (40158c <SystemCoreClockUpdate+0x108>)
  401560:	4b07      	ldr	r3, [pc, #28]	; (401580 <SystemCoreClockUpdate+0xfc>)
  401562:	601a      	str	r2, [r3, #0]
					break;
  401564:	e7d6      	b.n	401514 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  401566:	4a06      	ldr	r2, [pc, #24]	; (401580 <SystemCoreClockUpdate+0xfc>)
  401568:	6813      	ldr	r3, [r2, #0]
  40156a:	4909      	ldr	r1, [pc, #36]	; (401590 <SystemCoreClockUpdate+0x10c>)
  40156c:	fba1 1303 	umull	r1, r3, r1, r3
  401570:	085b      	lsrs	r3, r3, #1
  401572:	6013      	str	r3, [r2, #0]
  401574:	4770      	bx	lr
  401576:	bf00      	nop
  401578:	400e0400 	.word	0x400e0400
  40157c:	400e1410 	.word	0x400e1410
  401580:	2000000c 	.word	0x2000000c
  401584:	00b71b00 	.word	0x00b71b00
  401588:	003d0900 	.word	0x003d0900
  40158c:	007a1200 	.word	0x007a1200
  401590:	aaaaaaab 	.word	0xaaaaaaab

00401594 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  401594:	4b12      	ldr	r3, [pc, #72]	; (4015e0 <system_init_flash+0x4c>)
  401596:	4298      	cmp	r0, r3
  401598:	d911      	bls.n	4015be <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  40159a:	4b12      	ldr	r3, [pc, #72]	; (4015e4 <system_init_flash+0x50>)
  40159c:	4298      	cmp	r0, r3
  40159e:	d913      	bls.n	4015c8 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  4015a0:	4b11      	ldr	r3, [pc, #68]	; (4015e8 <system_init_flash+0x54>)
  4015a2:	4298      	cmp	r0, r3
  4015a4:	d914      	bls.n	4015d0 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  4015a6:	4b11      	ldr	r3, [pc, #68]	; (4015ec <system_init_flash+0x58>)
  4015a8:	4298      	cmp	r0, r3
  4015aa:	d915      	bls.n	4015d8 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  4015ac:	4b10      	ldr	r3, [pc, #64]	; (4015f0 <system_init_flash+0x5c>)
  4015ae:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4015b0:	bf94      	ite	ls
  4015b2:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015b6:	4a0f      	ldrhi	r2, [pc, #60]	; (4015f4 <system_init_flash+0x60>)
  4015b8:	4b0f      	ldr	r3, [pc, #60]	; (4015f8 <system_init_flash+0x64>)
  4015ba:	601a      	str	r2, [r3, #0]
  4015bc:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4015be:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4015c2:	4b0d      	ldr	r3, [pc, #52]	; (4015f8 <system_init_flash+0x64>)
  4015c4:	601a      	str	r2, [r3, #0]
  4015c6:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4015c8:	4a0c      	ldr	r2, [pc, #48]	; (4015fc <system_init_flash+0x68>)
  4015ca:	4b0b      	ldr	r3, [pc, #44]	; (4015f8 <system_init_flash+0x64>)
  4015cc:	601a      	str	r2, [r3, #0]
  4015ce:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4015d0:	4a0b      	ldr	r2, [pc, #44]	; (401600 <system_init_flash+0x6c>)
  4015d2:	4b09      	ldr	r3, [pc, #36]	; (4015f8 <system_init_flash+0x64>)
  4015d4:	601a      	str	r2, [r3, #0]
  4015d6:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4015d8:	4a0a      	ldr	r2, [pc, #40]	; (401604 <system_init_flash+0x70>)
  4015da:	4b07      	ldr	r3, [pc, #28]	; (4015f8 <system_init_flash+0x64>)
  4015dc:	601a      	str	r2, [r3, #0]
  4015de:	4770      	bx	lr
  4015e0:	01312cff 	.word	0x01312cff
  4015e4:	026259ff 	.word	0x026259ff
  4015e8:	039386ff 	.word	0x039386ff
  4015ec:	04c4b3ff 	.word	0x04c4b3ff
  4015f0:	05f5e0ff 	.word	0x05f5e0ff
  4015f4:	04000500 	.word	0x04000500
  4015f8:	400e0a00 	.word	0x400e0a00
  4015fc:	04000100 	.word	0x04000100
  401600:	04000200 	.word	0x04000200
  401604:	04000300 	.word	0x04000300

00401608 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401608:	4b0a      	ldr	r3, [pc, #40]	; (401634 <_sbrk+0x2c>)
  40160a:	681b      	ldr	r3, [r3, #0]
  40160c:	b153      	cbz	r3, 401624 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40160e:	4b09      	ldr	r3, [pc, #36]	; (401634 <_sbrk+0x2c>)
  401610:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401612:	181a      	adds	r2, r3, r0
  401614:	4908      	ldr	r1, [pc, #32]	; (401638 <_sbrk+0x30>)
  401616:	4291      	cmp	r1, r2
  401618:	db08      	blt.n	40162c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40161a:	4610      	mov	r0, r2
  40161c:	4a05      	ldr	r2, [pc, #20]	; (401634 <_sbrk+0x2c>)
  40161e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401620:	4618      	mov	r0, r3
  401622:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401624:	4a05      	ldr	r2, [pc, #20]	; (40163c <_sbrk+0x34>)
  401626:	4b03      	ldr	r3, [pc, #12]	; (401634 <_sbrk+0x2c>)
  401628:	601a      	str	r2, [r3, #0]
  40162a:	e7f0      	b.n	40160e <_sbrk+0x6>
		return (caddr_t) -1;	
  40162c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401630:	4770      	bx	lr
  401632:	bf00      	nop
  401634:	20000a78 	.word	0x20000a78
  401638:	2001fffc 	.word	0x2001fffc
  40163c:	20010200 	.word	0x20010200

00401640 <main>:
#include "conf_board.h"
#include "conf_clock.h"
#include "timer_interface.h"

int main (void)
{
  401640:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	//Initialize clock and board definitions
	sysclk_init();
  401644:	4b49      	ldr	r3, [pc, #292]	; (40176c <main+0x12c>)
  401646:	4798      	blx	r3
	wdt_disable(WDT);
  401648:	4849      	ldr	r0, [pc, #292]	; (401770 <main+0x130>)
  40164a:	4b4a      	ldr	r3, [pc, #296]	; (401774 <main+0x134>)
  40164c:	4798      	blx	r3
	board_init();
  40164e:	4b4a      	ldr	r3, [pc, #296]	; (401778 <main+0x138>)
  401650:	4798      	blx	r3

	//Configure and start the Timer
	configure_tc();
  401652:	4b4a      	ldr	r3, [pc, #296]	; (40177c <main+0x13c>)
  401654:	4798      	blx	r3
	
	//Configure the WiFi USART, Command pin, and Web Setup pin
	configure_usart_wifi();
  401656:	4b4a      	ldr	r3, [pc, #296]	; (401780 <main+0x140>)
  401658:	4798      	blx	r3
	configure_wifi_command_pin();
  40165a:	4b4a      	ldr	r3, [pc, #296]	; (401784 <main+0x144>)
  40165c:	4798      	blx	r3
	configure_wifi_web_setup_pin();
  40165e:	4b4a      	ldr	r3, [pc, #296]	; (401788 <main+0x148>)
  401660:	4798      	blx	r3
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401662:	4c4a      	ldr	r4, [pc, #296]	; (40178c <main+0x14c>)
  401664:	2501      	movs	r5, #1
  401666:	6365      	str	r5, [r4, #52]	; 0x34
	
	//Reset wiFi module
	ioport_set_pin_level(WIFI_RESET_PIN, 0);
	delay_ms(100);
  401668:	4849      	ldr	r0, [pc, #292]	; (401790 <main+0x150>)
  40166a:	4b4a      	ldr	r3, [pc, #296]	; (401794 <main+0x154>)
  40166c:	4798      	blx	r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40166e:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(WIFI_RESET_PIN, 1);
	
	//Initialize and configure the camera
	init_camera();
  401670:	4b49      	ldr	r3, [pc, #292]	; (401798 <main+0x158>)
  401672:	4798      	blx	r3
	configure_camera();
  401674:	4b49      	ldr	r3, [pc, #292]	; (40179c <main+0x15c>)
  401676:	4798      	blx	r3


	write_wifi_command("set uart.flow 0 on \r\n", 5);
  401678:	2105      	movs	r1, #5
  40167a:	4849      	ldr	r0, [pc, #292]	; (4017a0 <main+0x160>)
  40167c:	4c49      	ldr	r4, [pc, #292]	; (4017a4 <main+0x164>)
  40167e:	47a0      	blx	r4
	write_wifi_command("set bus.command.rx_bufsize 5000\r\n", 5);
  401680:	2105      	movs	r1, #5
  401682:	4849      	ldr	r0, [pc, #292]	; (4017a8 <main+0x168>)
  401684:	47a0      	blx	r4
	write_wifi_command("set sy i g wlan 20\r\n", 5);
  401686:	2105      	movs	r1, #5
  401688:	4848      	ldr	r0, [pc, #288]	; (4017ac <main+0x16c>)
  40168a:	47a0      	blx	r4
	write_wifi_command("set sy i g network 19\r\n", 5);
  40168c:	2105      	movs	r1, #5
  40168e:	4848      	ldr	r0, [pc, #288]	; (4017b0 <main+0x170>)
  401690:	47a0      	blx	r4
	write_wifi_command("set sy i g softap 21\r\n" ,5);
  401692:	2105      	movs	r1, #5
  401694:	4847      	ldr	r0, [pc, #284]	; (4017b4 <main+0x174>)
  401696:	47a0      	blx	r4
	write_wifi_command("set system.cmd.gpio 13\r\n", 5);
  401698:	2105      	movs	r1, #5
  40169a:	4847      	ldr	r0, [pc, #284]	; (4017b8 <main+0x178>)
  40169c:	47a0      	blx	r4
	write_wifi_command("set wl n o 14\r\n", 5);
  40169e:	2105      	movs	r1, #5
  4016a0:	4846      	ldr	r0, [pc, #280]	; (4017bc <main+0x17c>)
  4016a2:	47a0      	blx	r4
	write_wifi_command("save\r\n", 5);
  4016a4:	2105      	movs	r1, #5
  4016a6:	4846      	ldr	r0, [pc, #280]	; (4017c0 <main+0x180>)
  4016a8:	47a0      	blx	r4
	write_wifi_command("reboot\r\n", 5);
  4016aa:	2105      	movs	r1, #5
  4016ac:	4845      	ldr	r0, [pc, #276]	; (4017c4 <main+0x184>)
  4016ae:	47a0      	blx	r4
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  4016b0:	4d36      	ldr	r5, [pc, #216]	; (40178c <main+0x14c>)
	
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
		if (wifi_setup_button_flag){
  4016b2:	4c45      	ldr	r4, [pc, #276]	; (4017c8 <main+0x188>)
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  4016b4:	e001      	b.n	4016ba <main+0x7a>
		if (wifi_setup_button_flag){
  4016b6:	6823      	ldr	r3, [r4, #0]
  4016b8:	b973      	cbnz	r3, 4016d8 <main+0x98>
  4016ba:	6beb      	ldr	r3, [r5, #60]	; 0x3c
	while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  4016bc:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  4016c0:	d0f9      	beq.n	4016b6 <main+0x76>

	// tell wifi to turn off command prompt and echo
	
	
	
	write_wifi_command("set sy c p off\r\n", 2);
  4016c2:	2102      	movs	r1, #2
  4016c4:	4841      	ldr	r0, [pc, #260]	; (4017cc <main+0x18c>)
  4016c6:	4b37      	ldr	r3, [pc, #220]	; (4017a4 <main+0x164>)
  4016c8:	4798      	blx	r3
	
	
	// tell Wifi to turn off command prompt and echo

	while(1) {
		if(wifi_setup_button_flag){
  4016ca:	4e3f      	ldr	r6, [pc, #252]	; (4017c8 <main+0x188>)
			write_wifi_command("web setup", 5);
  4016cc:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 4017a4 <main+0x164>
  4016d0:	4c2e      	ldr	r4, [pc, #184]	; (40178c <main+0x14c>)
		}
		while(ioport_get_pin_level(WIFI_STATUS)==0){
			ioport_set_pin_level(WIFI_RESET_PIN, 0);
			delay_ms(100);
			ioport_set_pin_level(WIFI_RESET_PIN, 1);
			delay_ms(500);
  4016d2:	f8df 8118 	ldr.w	r8, [pc, #280]	; 4017ec <main+0x1ac>
  4016d6:	e029      	b.n	40172c <main+0xec>
			write_wifi_command("setup web\r\n", 20);
  4016d8:	2114      	movs	r1, #20
  4016da:	483d      	ldr	r0, [pc, #244]	; (4017d0 <main+0x190>)
  4016dc:	4b31      	ldr	r3, [pc, #196]	; (4017a4 <main+0x164>)
  4016de:	4798      	blx	r3
			delay_ms(100);
  4016e0:	482b      	ldr	r0, [pc, #172]	; (401790 <main+0x150>)
  4016e2:	4b2c      	ldr	r3, [pc, #176]	; (401794 <main+0x154>)
  4016e4:	4798      	blx	r3
			wifi_setup_button_flag = 0;
  4016e6:	2300      	movs	r3, #0
  4016e8:	6023      	str	r3, [r4, #0]
  4016ea:	e7e6      	b.n	4016ba <main+0x7a>
  4016ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		while(ioport_get_pin_level(WIFI_STATUS)==0){
  4016ee:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  4016f2:	d10f      	bne.n	401714 <main+0xd4>
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4016f4:	2701      	movs	r7, #1
  4016f6:	46bb      	mov	fp, r7
			delay_ms(100);
  4016f8:	f8df a094 	ldr.w	sl, [pc, #148]	; 401790 <main+0x150>
  4016fc:	4d25      	ldr	r5, [pc, #148]	; (401794 <main+0x154>)
  4016fe:	f8c4 b034 	str.w	fp, [r4, #52]	; 0x34
  401702:	4650      	mov	r0, sl
  401704:	47a8      	blx	r5
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401706:	6327      	str	r7, [r4, #48]	; 0x30
			delay_ms(500);
  401708:	4640      	mov	r0, r8
  40170a:	47a8      	blx	r5
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  40170c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		while(ioport_get_pin_level(WIFI_STATUS)==0){
  40170e:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  401712:	d0f4      	beq.n	4016fe <main+0xbe>
		}
		write_wifi_command("poll all\r\n", 5);
  401714:	2105      	movs	r1, #5
  401716:	482f      	ldr	r0, [pc, #188]	; (4017d4 <main+0x194>)
  401718:	47c8      	blx	r9
		if(wait_flag){
  40171a:	4b2f      	ldr	r3, [pc, #188]	; (4017d8 <main+0x198>)
  40171c:	681b      	ldr	r3, [r3, #0]
  40171e:	b303      	cbz	r3, 401762 <main+0x122>
			delay_ms(1000);
  401720:	482e      	ldr	r0, [pc, #184]	; (4017dc <main+0x19c>)
  401722:	4b1c      	ldr	r3, [pc, #112]	; (401794 <main+0x154>)
  401724:	4798      	blx	r3
			wait_flag=0;
  401726:	2200      	movs	r2, #0
  401728:	4b2b      	ldr	r3, [pc, #172]	; (4017d8 <main+0x198>)
  40172a:	601a      	str	r2, [r3, #0]
		if(wifi_setup_button_flag){
  40172c:	6833      	ldr	r3, [r6, #0]
  40172e:	2b00      	cmp	r3, #0
  401730:	d0dc      	beq.n	4016ec <main+0xac>
			write_wifi_command("web setup", 5);
  401732:	2105      	movs	r1, #5
  401734:	482a      	ldr	r0, [pc, #168]	; (4017e0 <main+0x1a0>)
  401736:	47c8      	blx	r9
			delay_ms(100);
  401738:	4815      	ldr	r0, [pc, #84]	; (401790 <main+0x150>)
  40173a:	4b16      	ldr	r3, [pc, #88]	; (401794 <main+0x154>)
  40173c:	4798      	blx	r3
			wifi_setup_button_flag=0;
  40173e:	2300      	movs	r3, #0
  401740:	6033      	str	r3, [r6, #0]
  401742:	6be3      	ldr	r3, [r4, #60]	; 0x3c
			while (ioport_get_pin_level(WIFI_STATUS)==0) { //wait for network connection
  401744:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  401748:	d1d0      	bne.n	4016ec <main+0xac>
				if (wifi_setup_button_flag){
  40174a:	6833      	ldr	r3, [r6, #0]
  40174c:	2b00      	cmp	r3, #0
  40174e:	d0f8      	beq.n	401742 <main+0x102>
					write_wifi_command("web setup", 5);
  401750:	2105      	movs	r1, #5
  401752:	4823      	ldr	r0, [pc, #140]	; (4017e0 <main+0x1a0>)
  401754:	47c8      	blx	r9
					delay_ms(100);
  401756:	480e      	ldr	r0, [pc, #56]	; (401790 <main+0x150>)
  401758:	4b0e      	ldr	r3, [pc, #56]	; (401794 <main+0x154>)
  40175a:	4798      	blx	r3
					wifi_setup_button_flag = 0;
  40175c:	2300      	movs	r3, #0
  40175e:	6033      	str	r3, [r6, #0]
  401760:	e7ef      	b.n	401742 <main+0x102>
			} else {
			uint8_t get_image = start_capture();
  401762:	4b20      	ldr	r3, [pc, #128]	; (4017e4 <main+0x1a4>)
  401764:	4798      	blx	r3
			write_image_to_file();
  401766:	4b20      	ldr	r3, [pc, #128]	; (4017e8 <main+0x1a8>)
  401768:	4798      	blx	r3
  40176a:	e7df      	b.n	40172c <main+0xec>
  40176c:	00400139 	.word	0x00400139
  401770:	400e1450 	.word	0x400e1450
  401774:	00400af1 	.word	0x00400af1
  401778:	004013d5 	.word	0x004013d5
  40177c:	0040108d 	.word	0x0040108d
  401780:	00401115 	.word	0x00401115
  401784:	004011b5 	.word	0x004011b5
  401788:	00401211 	.word	0x00401211
  40178c:	400e1000 	.word	0x400e1000
  401790:	000d1437 	.word	0x000d1437
  401794:	20000001 	.word	0x20000001
  401798:	00400bf9 	.word	0x00400bf9
  40179c:	00400cb1 	.word	0x00400cb1
  4017a0:	00407334 	.word	0x00407334
  4017a4:	0040126d 	.word	0x0040126d
  4017a8:	0040734c 	.word	0x0040734c
  4017ac:	00407370 	.word	0x00407370
  4017b0:	00407388 	.word	0x00407388
  4017b4:	004073a0 	.word	0x004073a0
  4017b8:	004073b8 	.word	0x004073b8
  4017bc:	004073d4 	.word	0x004073d4
  4017c0:	004073e4 	.word	0x004073e4
  4017c4:	004073ec 	.word	0x004073ec
  4017c8:	20000a74 	.word	0x20000a74
  4017cc:	00407404 	.word	0x00407404
  4017d0:	004073f8 	.word	0x004073f8
  4017d4:	00407424 	.word	0x00407424
  4017d8:	20000a6c 	.word	0x20000a6c
  4017dc:	0082ca25 	.word	0x0082ca25
  4017e0:	00407418 	.word	0x00407418
  4017e4:	00400d59 	.word	0x00400d59
  4017e8:	004012a9 	.word	0x004012a9
  4017ec:	00416513 	.word	0x00416513

004017f0 <__libc_init_array>:
  4017f0:	b570      	push	{r4, r5, r6, lr}
  4017f2:	4e0f      	ldr	r6, [pc, #60]	; (401830 <__libc_init_array+0x40>)
  4017f4:	4d0f      	ldr	r5, [pc, #60]	; (401834 <__libc_init_array+0x44>)
  4017f6:	1b76      	subs	r6, r6, r5
  4017f8:	10b6      	asrs	r6, r6, #2
  4017fa:	bf18      	it	ne
  4017fc:	2400      	movne	r4, #0
  4017fe:	d005      	beq.n	40180c <__libc_init_array+0x1c>
  401800:	3401      	adds	r4, #1
  401802:	f855 3b04 	ldr.w	r3, [r5], #4
  401806:	4798      	blx	r3
  401808:	42a6      	cmp	r6, r4
  40180a:	d1f9      	bne.n	401800 <__libc_init_array+0x10>
  40180c:	4e0a      	ldr	r6, [pc, #40]	; (401838 <__libc_init_array+0x48>)
  40180e:	4d0b      	ldr	r5, [pc, #44]	; (40183c <__libc_init_array+0x4c>)
  401810:	1b76      	subs	r6, r6, r5
  401812:	f005 ff51 	bl	4076b8 <_init>
  401816:	10b6      	asrs	r6, r6, #2
  401818:	bf18      	it	ne
  40181a:	2400      	movne	r4, #0
  40181c:	d006      	beq.n	40182c <__libc_init_array+0x3c>
  40181e:	3401      	adds	r4, #1
  401820:	f855 3b04 	ldr.w	r3, [r5], #4
  401824:	4798      	blx	r3
  401826:	42a6      	cmp	r6, r4
  401828:	d1f9      	bne.n	40181e <__libc_init_array+0x2e>
  40182a:	bd70      	pop	{r4, r5, r6, pc}
  40182c:	bd70      	pop	{r4, r5, r6, pc}
  40182e:	bf00      	nop
  401830:	004076c4 	.word	0x004076c4
  401834:	004076c4 	.word	0x004076c4
  401838:	004076cc 	.word	0x004076cc
  40183c:	004076c4 	.word	0x004076c4

00401840 <memset>:
  401840:	b470      	push	{r4, r5, r6}
  401842:	0786      	lsls	r6, r0, #30
  401844:	d046      	beq.n	4018d4 <memset+0x94>
  401846:	1e54      	subs	r4, r2, #1
  401848:	2a00      	cmp	r2, #0
  40184a:	d041      	beq.n	4018d0 <memset+0x90>
  40184c:	b2ca      	uxtb	r2, r1
  40184e:	4603      	mov	r3, r0
  401850:	e002      	b.n	401858 <memset+0x18>
  401852:	f114 34ff 	adds.w	r4, r4, #4294967295
  401856:	d33b      	bcc.n	4018d0 <memset+0x90>
  401858:	f803 2b01 	strb.w	r2, [r3], #1
  40185c:	079d      	lsls	r5, r3, #30
  40185e:	d1f8      	bne.n	401852 <memset+0x12>
  401860:	2c03      	cmp	r4, #3
  401862:	d92e      	bls.n	4018c2 <memset+0x82>
  401864:	b2cd      	uxtb	r5, r1
  401866:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40186a:	2c0f      	cmp	r4, #15
  40186c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401870:	d919      	bls.n	4018a6 <memset+0x66>
  401872:	f103 0210 	add.w	r2, r3, #16
  401876:	4626      	mov	r6, r4
  401878:	3e10      	subs	r6, #16
  40187a:	2e0f      	cmp	r6, #15
  40187c:	f842 5c10 	str.w	r5, [r2, #-16]
  401880:	f842 5c0c 	str.w	r5, [r2, #-12]
  401884:	f842 5c08 	str.w	r5, [r2, #-8]
  401888:	f842 5c04 	str.w	r5, [r2, #-4]
  40188c:	f102 0210 	add.w	r2, r2, #16
  401890:	d8f2      	bhi.n	401878 <memset+0x38>
  401892:	f1a4 0210 	sub.w	r2, r4, #16
  401896:	f022 020f 	bic.w	r2, r2, #15
  40189a:	f004 040f 	and.w	r4, r4, #15
  40189e:	3210      	adds	r2, #16
  4018a0:	2c03      	cmp	r4, #3
  4018a2:	4413      	add	r3, r2
  4018a4:	d90d      	bls.n	4018c2 <memset+0x82>
  4018a6:	461e      	mov	r6, r3
  4018a8:	4622      	mov	r2, r4
  4018aa:	3a04      	subs	r2, #4
  4018ac:	2a03      	cmp	r2, #3
  4018ae:	f846 5b04 	str.w	r5, [r6], #4
  4018b2:	d8fa      	bhi.n	4018aa <memset+0x6a>
  4018b4:	1f22      	subs	r2, r4, #4
  4018b6:	f022 0203 	bic.w	r2, r2, #3
  4018ba:	3204      	adds	r2, #4
  4018bc:	4413      	add	r3, r2
  4018be:	f004 0403 	and.w	r4, r4, #3
  4018c2:	b12c      	cbz	r4, 4018d0 <memset+0x90>
  4018c4:	b2c9      	uxtb	r1, r1
  4018c6:	441c      	add	r4, r3
  4018c8:	f803 1b01 	strb.w	r1, [r3], #1
  4018cc:	429c      	cmp	r4, r3
  4018ce:	d1fb      	bne.n	4018c8 <memset+0x88>
  4018d0:	bc70      	pop	{r4, r5, r6}
  4018d2:	4770      	bx	lr
  4018d4:	4614      	mov	r4, r2
  4018d6:	4603      	mov	r3, r0
  4018d8:	e7c2      	b.n	401860 <memset+0x20>
  4018da:	bf00      	nop

004018dc <sprintf>:
  4018dc:	b40e      	push	{r1, r2, r3}
  4018de:	b5f0      	push	{r4, r5, r6, r7, lr}
  4018e0:	b09c      	sub	sp, #112	; 0x70
  4018e2:	ab21      	add	r3, sp, #132	; 0x84
  4018e4:	490f      	ldr	r1, [pc, #60]	; (401924 <sprintf+0x48>)
  4018e6:	f853 2b04 	ldr.w	r2, [r3], #4
  4018ea:	9301      	str	r3, [sp, #4]
  4018ec:	4605      	mov	r5, r0
  4018ee:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4018f2:	6808      	ldr	r0, [r1, #0]
  4018f4:	9502      	str	r5, [sp, #8]
  4018f6:	f44f 7702 	mov.w	r7, #520	; 0x208
  4018fa:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4018fe:	a902      	add	r1, sp, #8
  401900:	9506      	str	r5, [sp, #24]
  401902:	f8ad 7014 	strh.w	r7, [sp, #20]
  401906:	9404      	str	r4, [sp, #16]
  401908:	9407      	str	r4, [sp, #28]
  40190a:	f8ad 6016 	strh.w	r6, [sp, #22]
  40190e:	f000 fa6f 	bl	401df0 <_svfprintf_r>
  401912:	9b02      	ldr	r3, [sp, #8]
  401914:	2200      	movs	r2, #0
  401916:	701a      	strb	r2, [r3, #0]
  401918:	b01c      	add	sp, #112	; 0x70
  40191a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40191e:	b003      	add	sp, #12
  401920:	4770      	bx	lr
  401922:	bf00      	nop
  401924:	20000010 	.word	0x20000010

00401928 <critical_factorization>:
  401928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40192c:	f04f 0e01 	mov.w	lr, #1
  401930:	4674      	mov	r4, lr
  401932:	2500      	movs	r5, #0
  401934:	f04f 36ff 	mov.w	r6, #4294967295
  401938:	192b      	adds	r3, r5, r4
  40193a:	428b      	cmp	r3, r1
  40193c:	eb00 0706 	add.w	r7, r0, r6
  401940:	d20d      	bcs.n	40195e <critical_factorization+0x36>
  401942:	5d3f      	ldrb	r7, [r7, r4]
  401944:	f810 c003 	ldrb.w	ip, [r0, r3]
  401948:	45bc      	cmp	ip, r7
  40194a:	d22d      	bcs.n	4019a8 <critical_factorization+0x80>
  40194c:	461d      	mov	r5, r3
  40194e:	2401      	movs	r4, #1
  401950:	eba3 0e06 	sub.w	lr, r3, r6
  401954:	192b      	adds	r3, r5, r4
  401956:	428b      	cmp	r3, r1
  401958:	eb00 0706 	add.w	r7, r0, r6
  40195c:	d3f1      	bcc.n	401942 <critical_factorization+0x1a>
  40195e:	f04f 0801 	mov.w	r8, #1
  401962:	f8c2 e000 	str.w	lr, [r2]
  401966:	4644      	mov	r4, r8
  401968:	2500      	movs	r5, #0
  40196a:	f04f 37ff 	mov.w	r7, #4294967295
  40196e:	192b      	adds	r3, r5, r4
  401970:	4299      	cmp	r1, r3
  401972:	eb00 0e07 	add.w	lr, r0, r7
  401976:	d90e      	bls.n	401996 <critical_factorization+0x6e>
  401978:	f81e e004 	ldrb.w	lr, [lr, r4]
  40197c:	f810 c003 	ldrb.w	ip, [r0, r3]
  401980:	45f4      	cmp	ip, lr
  401982:	d918      	bls.n	4019b6 <critical_factorization+0x8e>
  401984:	461d      	mov	r5, r3
  401986:	2401      	movs	r4, #1
  401988:	eba3 0807 	sub.w	r8, r3, r7
  40198c:	192b      	adds	r3, r5, r4
  40198e:	4299      	cmp	r1, r3
  401990:	eb00 0e07 	add.w	lr, r0, r7
  401994:	d8f0      	bhi.n	401978 <critical_factorization+0x50>
  401996:	3701      	adds	r7, #1
  401998:	1c70      	adds	r0, r6, #1
  40199a:	4287      	cmp	r7, r0
  40199c:	bf24      	itt	cs
  40199e:	f8c2 8000 	strcs.w	r8, [r2]
  4019a2:	4638      	movcs	r0, r7
  4019a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4019a8:	d00c      	beq.n	4019c4 <critical_factorization+0x9c>
  4019aa:	f04f 0e01 	mov.w	lr, #1
  4019ae:	462e      	mov	r6, r5
  4019b0:	4674      	mov	r4, lr
  4019b2:	4475      	add	r5, lr
  4019b4:	e7c0      	b.n	401938 <critical_factorization+0x10>
  4019b6:	d00b      	beq.n	4019d0 <critical_factorization+0xa8>
  4019b8:	f04f 0801 	mov.w	r8, #1
  4019bc:	462f      	mov	r7, r5
  4019be:	4644      	mov	r4, r8
  4019c0:	4445      	add	r5, r8
  4019c2:	e7d4      	b.n	40196e <critical_factorization+0x46>
  4019c4:	4574      	cmp	r4, lr
  4019c6:	bf12      	itee	ne
  4019c8:	3401      	addne	r4, #1
  4019ca:	461d      	moveq	r5, r3
  4019cc:	2401      	moveq	r4, #1
  4019ce:	e7b3      	b.n	401938 <critical_factorization+0x10>
  4019d0:	4544      	cmp	r4, r8
  4019d2:	bf12      	itee	ne
  4019d4:	3401      	addne	r4, #1
  4019d6:	461d      	moveq	r5, r3
  4019d8:	2401      	moveq	r4, #1
  4019da:	e7c8      	b.n	40196e <critical_factorization+0x46>

004019dc <two_way_long_needle>:
  4019dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4019e0:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  4019e4:	4616      	mov	r6, r2
  4019e6:	4605      	mov	r5, r0
  4019e8:	468b      	mov	fp, r1
  4019ea:	4610      	mov	r0, r2
  4019ec:	4619      	mov	r1, r3
  4019ee:	aa03      	add	r2, sp, #12
  4019f0:	461c      	mov	r4, r3
  4019f2:	f7ff ff99 	bl	401928 <critical_factorization>
  4019f6:	ab03      	add	r3, sp, #12
  4019f8:	4681      	mov	r9, r0
  4019fa:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  4019fe:	f843 4f04 	str.w	r4, [r3, #4]!
  401a02:	4293      	cmp	r3, r2
  401a04:	d1fb      	bne.n	4019fe <two_way_long_needle+0x22>
  401a06:	b14c      	cbz	r4, 401a1c <two_way_long_needle+0x40>
  401a08:	1e63      	subs	r3, r4, #1
  401a0a:	1e72      	subs	r2, r6, #1
  401a0c:	a804      	add	r0, sp, #16
  401a0e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401a12:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  401a16:	f113 33ff 	adds.w	r3, r3, #4294967295
  401a1a:	d2f8      	bcs.n	401a0e <two_way_long_needle+0x32>
  401a1c:	9903      	ldr	r1, [sp, #12]
  401a1e:	464a      	mov	r2, r9
  401a20:	4431      	add	r1, r6
  401a22:	4630      	mov	r0, r6
  401a24:	f002 ff04 	bl	404830 <memcmp>
  401a28:	2800      	cmp	r0, #0
  401a2a:	d16f      	bne.n	401b0c <two_way_long_needle+0x130>
  401a2c:	f109 33ff 	add.w	r3, r9, #4294967295
  401a30:	9300      	str	r3, [sp, #0]
  401a32:	18f3      	adds	r3, r6, r3
  401a34:	4682      	mov	sl, r0
  401a36:	9301      	str	r3, [sp, #4]
  401a38:	4623      	mov	r3, r4
  401a3a:	4680      	mov	r8, r0
  401a3c:	4654      	mov	r4, sl
  401a3e:	4658      	mov	r0, fp
  401a40:	469a      	mov	sl, r3
  401a42:	eb08 070a 	add.w	r7, r8, sl
  401a46:	1a3a      	subs	r2, r7, r0
  401a48:	2100      	movs	r1, #0
  401a4a:	4428      	add	r0, r5
  401a4c:	f002 fea0 	bl	404790 <memchr>
  401a50:	2800      	cmp	r0, #0
  401a52:	d156      	bne.n	401b02 <two_way_long_needle+0x126>
  401a54:	2f00      	cmp	r7, #0
  401a56:	d054      	beq.n	401b02 <two_way_long_needle+0x126>
  401a58:	19eb      	adds	r3, r5, r7
  401a5a:	aa04      	add	r2, sp, #16
  401a5c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401a60:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401a64:	b14b      	cbz	r3, 401a7a <two_way_long_needle+0x9e>
  401a66:	b124      	cbz	r4, 401a72 <two_way_long_needle+0x96>
  401a68:	9a03      	ldr	r2, [sp, #12]
  401a6a:	4293      	cmp	r3, r2
  401a6c:	d201      	bcs.n	401a72 <two_way_long_needle+0x96>
  401a6e:	ebaa 0302 	sub.w	r3, sl, r2
  401a72:	4498      	add	r8, r3
  401a74:	2400      	movs	r4, #0
  401a76:	4638      	mov	r0, r7
  401a78:	e7e3      	b.n	401a42 <two_way_long_needle+0x66>
  401a7a:	454c      	cmp	r4, r9
  401a7c:	4623      	mov	r3, r4
  401a7e:	f10a 3eff 	add.w	lr, sl, #4294967295
  401a82:	bf38      	it	cc
  401a84:	464b      	movcc	r3, r9
  401a86:	4573      	cmp	r3, lr
  401a88:	d213      	bcs.n	401ab2 <two_way_long_needle+0xd6>
  401a8a:	eb08 0203 	add.w	r2, r8, r3
  401a8e:	f816 c003 	ldrb.w	ip, [r6, r3]
  401a92:	5ca8      	ldrb	r0, [r5, r2]
  401a94:	4584      	cmp	ip, r0
  401a96:	442a      	add	r2, r5
  401a98:	eb06 0103 	add.w	r1, r6, r3
  401a9c:	d006      	beq.n	401aac <two_way_long_needle+0xd0>
  401a9e:	e02c      	b.n	401afa <two_way_long_needle+0x11e>
  401aa0:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  401aa4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401aa8:	4584      	cmp	ip, r0
  401aaa:	d126      	bne.n	401afa <two_way_long_needle+0x11e>
  401aac:	3301      	adds	r3, #1
  401aae:	4573      	cmp	r3, lr
  401ab0:	d3f6      	bcc.n	401aa0 <two_way_long_needle+0xc4>
  401ab2:	454c      	cmp	r4, r9
  401ab4:	9900      	ldr	r1, [sp, #0]
  401ab6:	f080 8089 	bcs.w	401bcc <two_way_long_needle+0x1f0>
  401aba:	9b00      	ldr	r3, [sp, #0]
  401abc:	eb08 0203 	add.w	r2, r8, r3
  401ac0:	9b01      	ldr	r3, [sp, #4]
  401ac2:	5ca8      	ldrb	r0, [r5, r2]
  401ac4:	781b      	ldrb	r3, [r3, #0]
  401ac6:	4298      	cmp	r0, r3
  401ac8:	442a      	add	r2, r5
  401aca:	d17f      	bne.n	401bcc <two_way_long_needle+0x1f0>
  401acc:	9801      	ldr	r0, [sp, #4]
  401ace:	f104 3bff 	add.w	fp, r4, #4294967295
  401ad2:	e006      	b.n	401ae2 <two_way_long_needle+0x106>
  401ad4:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401ad8:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401adc:	45f4      	cmp	ip, lr
  401ade:	d103      	bne.n	401ae8 <two_way_long_needle+0x10c>
  401ae0:	4619      	mov	r1, r3
  401ae2:	1e4b      	subs	r3, r1, #1
  401ae4:	459b      	cmp	fp, r3
  401ae6:	d1f5      	bne.n	401ad4 <two_way_long_needle+0xf8>
  401ae8:	3401      	adds	r4, #1
  401aea:	428c      	cmp	r4, r1
  401aec:	d870      	bhi.n	401bd0 <two_way_long_needle+0x1f4>
  401aee:	9c03      	ldr	r4, [sp, #12]
  401af0:	4638      	mov	r0, r7
  401af2:	44a0      	add	r8, r4
  401af4:	ebaa 0404 	sub.w	r4, sl, r4
  401af8:	e7a3      	b.n	401a42 <two_way_long_needle+0x66>
  401afa:	f1c9 0201 	rsb	r2, r9, #1
  401afe:	4490      	add	r8, r2
  401b00:	e7b7      	b.n	401a72 <two_way_long_needle+0x96>
  401b02:	2000      	movs	r0, #0
  401b04:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b0c:	eba4 0309 	sub.w	r3, r4, r9
  401b10:	454b      	cmp	r3, r9
  401b12:	bf38      	it	cc
  401b14:	464b      	movcc	r3, r9
  401b16:	3301      	adds	r3, #1
  401b18:	f109 38ff 	add.w	r8, r9, #4294967295
  401b1c:	9303      	str	r3, [sp, #12]
  401b1e:	eb06 0308 	add.w	r3, r6, r8
  401b22:	4658      	mov	r0, fp
  401b24:	f04f 0a00 	mov.w	sl, #0
  401b28:	46cb      	mov	fp, r9
  401b2a:	4699      	mov	r9, r3
  401b2c:	eb0a 0704 	add.w	r7, sl, r4
  401b30:	1a3a      	subs	r2, r7, r0
  401b32:	2100      	movs	r1, #0
  401b34:	4428      	add	r0, r5
  401b36:	f002 fe2b 	bl	404790 <memchr>
  401b3a:	2800      	cmp	r0, #0
  401b3c:	d1e1      	bne.n	401b02 <two_way_long_needle+0x126>
  401b3e:	2f00      	cmp	r7, #0
  401b40:	d0df      	beq.n	401b02 <two_way_long_needle+0x126>
  401b42:	19eb      	adds	r3, r5, r7
  401b44:	aa04      	add	r2, sp, #16
  401b46:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  401b4a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  401b4e:	bba3      	cbnz	r3, 401bba <two_way_long_needle+0x1de>
  401b50:	1e61      	subs	r1, r4, #1
  401b52:	458b      	cmp	fp, r1
  401b54:	d215      	bcs.n	401b82 <two_way_long_needle+0x1a6>
  401b56:	eb0a 020b 	add.w	r2, sl, fp
  401b5a:	f816 300b 	ldrb.w	r3, [r6, fp]
  401b5e:	f815 e002 	ldrb.w	lr, [r5, r2]
  401b62:	459e      	cmp	lr, r3
  401b64:	442a      	add	r2, r5
  401b66:	eb06 000b 	add.w	r0, r6, fp
  401b6a:	465b      	mov	r3, fp
  401b6c:	d006      	beq.n	401b7c <two_way_long_needle+0x1a0>
  401b6e:	e027      	b.n	401bc0 <two_way_long_needle+0x1e4>
  401b70:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  401b74:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  401b78:	45f4      	cmp	ip, lr
  401b7a:	d121      	bne.n	401bc0 <two_way_long_needle+0x1e4>
  401b7c:	3301      	adds	r3, #1
  401b7e:	428b      	cmp	r3, r1
  401b80:	d3f6      	bcc.n	401b70 <two_way_long_needle+0x194>
  401b82:	f1b8 3fff 	cmp.w	r8, #4294967295
  401b86:	d011      	beq.n	401bac <two_way_long_needle+0x1d0>
  401b88:	eb0a 0208 	add.w	r2, sl, r8
  401b8c:	f899 1000 	ldrb.w	r1, [r9]
  401b90:	5cab      	ldrb	r3, [r5, r2]
  401b92:	4299      	cmp	r1, r3
  401b94:	442a      	add	r2, r5
  401b96:	d10f      	bne.n	401bb8 <two_way_long_needle+0x1dc>
  401b98:	464b      	mov	r3, r9
  401b9a:	e005      	b.n	401ba8 <two_way_long_needle+0x1cc>
  401b9c:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401ba0:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401ba4:	4288      	cmp	r0, r1
  401ba6:	d107      	bne.n	401bb8 <two_way_long_needle+0x1dc>
  401ba8:	42b3      	cmp	r3, r6
  401baa:	d1f7      	bne.n	401b9c <two_way_long_needle+0x1c0>
  401bac:	eb05 000a 	add.w	r0, r5, sl
  401bb0:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  401bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401bb8:	9b03      	ldr	r3, [sp, #12]
  401bba:	449a      	add	sl, r3
  401bbc:	4638      	mov	r0, r7
  401bbe:	e7b5      	b.n	401b2c <two_way_long_needle+0x150>
  401bc0:	f1cb 0201 	rsb	r2, fp, #1
  401bc4:	4492      	add	sl, r2
  401bc6:	449a      	add	sl, r3
  401bc8:	4638      	mov	r0, r7
  401bca:	e7af      	b.n	401b2c <two_way_long_needle+0x150>
  401bcc:	4649      	mov	r1, r9
  401bce:	e78b      	b.n	401ae8 <two_way_long_needle+0x10c>
  401bd0:	eb05 0008 	add.w	r0, r5, r8
  401bd4:	e796      	b.n	401b04 <two_way_long_needle+0x128>
  401bd6:	bf00      	nop

00401bd8 <strstr>:
  401bd8:	7802      	ldrb	r2, [r0, #0]
  401bda:	2a00      	cmp	r2, #0
  401bdc:	f000 8101 	beq.w	401de2 <strstr+0x20a>
  401be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401be4:	f891 8000 	ldrb.w	r8, [r1]
  401be8:	b085      	sub	sp, #20
  401bea:	4644      	mov	r4, r8
  401bec:	f1b8 0f00 	cmp.w	r8, #0
  401bf0:	d016      	beq.n	401c20 <strstr+0x48>
  401bf2:	4686      	mov	lr, r0
  401bf4:	f101 0c01 	add.w	ip, r1, #1
  401bf8:	2701      	movs	r7, #1
  401bfa:	e003      	b.n	401c04 <strstr+0x2c>
  401bfc:	f813 4b01 	ldrb.w	r4, [r3], #1
  401c00:	b16c      	cbz	r4, 401c1e <strstr+0x46>
  401c02:	469c      	mov	ip, r3
  401c04:	42a2      	cmp	r2, r4
  401c06:	bf14      	ite	ne
  401c08:	2700      	movne	r7, #0
  401c0a:	f007 0701 	andeq.w	r7, r7, #1
  401c0e:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  401c12:	4663      	mov	r3, ip
  401c14:	2a00      	cmp	r2, #0
  401c16:	d1f1      	bne.n	401bfc <strstr+0x24>
  401c18:	f89c 3000 	ldrb.w	r3, [ip]
  401c1c:	b9fb      	cbnz	r3, 401c5e <strstr+0x86>
  401c1e:	b117      	cbz	r7, 401c26 <strstr+0x4e>
  401c20:	b005      	add	sp, #20
  401c22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c26:	460e      	mov	r6, r1
  401c28:	4605      	mov	r5, r0
  401c2a:	4641      	mov	r1, r8
  401c2c:	3001      	adds	r0, #1
  401c2e:	ebac 0406 	sub.w	r4, ip, r6
  401c32:	f003 f9d7 	bl	404fe4 <strchr>
  401c36:	4607      	mov	r7, r0
  401c38:	b188      	cbz	r0, 401c5e <strstr+0x86>
  401c3a:	2c01      	cmp	r4, #1
  401c3c:	d0f0      	beq.n	401c20 <strstr+0x48>
  401c3e:	1928      	adds	r0, r5, r4
  401c40:	4287      	cmp	r7, r0
  401c42:	bf94      	ite	ls
  401c44:	1bc1      	subls	r1, r0, r7
  401c46:	2101      	movhi	r1, #1
  401c48:	2c1f      	cmp	r4, #31
  401c4a:	468b      	mov	fp, r1
  401c4c:	d90b      	bls.n	401c66 <strstr+0x8e>
  401c4e:	4623      	mov	r3, r4
  401c50:	4632      	mov	r2, r6
  401c52:	4638      	mov	r0, r7
  401c54:	f7ff fec2 	bl	4019dc <two_way_long_needle>
  401c58:	b005      	add	sp, #20
  401c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c5e:	2000      	movs	r0, #0
  401c60:	b005      	add	sp, #20
  401c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401c66:	aa03      	add	r2, sp, #12
  401c68:	4621      	mov	r1, r4
  401c6a:	4630      	mov	r0, r6
  401c6c:	f7ff fe5c 	bl	401928 <critical_factorization>
  401c70:	9903      	ldr	r1, [sp, #12]
  401c72:	4680      	mov	r8, r0
  401c74:	4602      	mov	r2, r0
  401c76:	4431      	add	r1, r6
  401c78:	4630      	mov	r0, r6
  401c7a:	f002 fdd9 	bl	404830 <memcmp>
  401c7e:	2800      	cmp	r0, #0
  401c80:	d157      	bne.n	401d32 <strstr+0x15a>
  401c82:	f108 33ff 	add.w	r3, r8, #4294967295
  401c86:	9300      	str	r3, [sp, #0]
  401c88:	18f3      	adds	r3, r6, r3
  401c8a:	4681      	mov	r9, r0
  401c8c:	4605      	mov	r5, r0
  401c8e:	9301      	str	r3, [sp, #4]
  401c90:	4658      	mov	r0, fp
  401c92:	46b2      	mov	sl, r6
  401c94:	1966      	adds	r6, r4, r5
  401c96:	1a32      	subs	r2, r6, r0
  401c98:	2100      	movs	r1, #0
  401c9a:	4438      	add	r0, r7
  401c9c:	f002 fd78 	bl	404790 <memchr>
  401ca0:	2800      	cmp	r0, #0
  401ca2:	d1dc      	bne.n	401c5e <strstr+0x86>
  401ca4:	2e00      	cmp	r6, #0
  401ca6:	d0da      	beq.n	401c5e <strstr+0x86>
  401ca8:	45c8      	cmp	r8, r9
  401caa:	4643      	mov	r3, r8
  401cac:	bf38      	it	cc
  401cae:	464b      	movcc	r3, r9
  401cb0:	429c      	cmp	r4, r3
  401cb2:	d912      	bls.n	401cda <strstr+0x102>
  401cb4:	195a      	adds	r2, r3, r5
  401cb6:	f81a 1003 	ldrb.w	r1, [sl, r3]
  401cba:	5cb8      	ldrb	r0, [r7, r2]
  401cbc:	4281      	cmp	r1, r0
  401cbe:	443a      	add	r2, r7
  401cc0:	eb0a 0e03 	add.w	lr, sl, r3
  401cc4:	d006      	beq.n	401cd4 <strstr+0xfc>
  401cc6:	e02c      	b.n	401d22 <strstr+0x14a>
  401cc8:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  401ccc:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  401cd0:	4288      	cmp	r0, r1
  401cd2:	d126      	bne.n	401d22 <strstr+0x14a>
  401cd4:	3301      	adds	r3, #1
  401cd6:	429c      	cmp	r4, r3
  401cd8:	d1f6      	bne.n	401cc8 <strstr+0xf0>
  401cda:	45c8      	cmp	r8, r9
  401cdc:	9900      	ldr	r1, [sp, #0]
  401cde:	f240 8083 	bls.w	401de8 <strstr+0x210>
  401ce2:	9b00      	ldr	r3, [sp, #0]
  401ce4:	18ea      	adds	r2, r5, r3
  401ce6:	9b01      	ldr	r3, [sp, #4]
  401ce8:	5cb8      	ldrb	r0, [r7, r2]
  401cea:	781b      	ldrb	r3, [r3, #0]
  401cec:	4298      	cmp	r0, r3
  401cee:	443a      	add	r2, r7
  401cf0:	d17a      	bne.n	401de8 <strstr+0x210>
  401cf2:	9801      	ldr	r0, [sp, #4]
  401cf4:	f109 3bff 	add.w	fp, r9, #4294967295
  401cf8:	e006      	b.n	401d08 <strstr+0x130>
  401cfa:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  401cfe:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  401d02:	45f4      	cmp	ip, lr
  401d04:	d103      	bne.n	401d0e <strstr+0x136>
  401d06:	4619      	mov	r1, r3
  401d08:	1e4b      	subs	r3, r1, #1
  401d0a:	455b      	cmp	r3, fp
  401d0c:	d1f5      	bne.n	401cfa <strstr+0x122>
  401d0e:	f109 0901 	add.w	r9, r9, #1
  401d12:	4589      	cmp	r9, r1
  401d14:	d857      	bhi.n	401dc6 <strstr+0x1ee>
  401d16:	9b03      	ldr	r3, [sp, #12]
  401d18:	4630      	mov	r0, r6
  401d1a:	441d      	add	r5, r3
  401d1c:	eba4 0903 	sub.w	r9, r4, r3
  401d20:	e7b8      	b.n	401c94 <strstr+0xbc>
  401d22:	f1c8 0201 	rsb	r2, r8, #1
  401d26:	4415      	add	r5, r2
  401d28:	441d      	add	r5, r3
  401d2a:	f04f 0900 	mov.w	r9, #0
  401d2e:	4630      	mov	r0, r6
  401d30:	e7b0      	b.n	401c94 <strstr+0xbc>
  401d32:	eba4 0308 	sub.w	r3, r4, r8
  401d36:	4543      	cmp	r3, r8
  401d38:	bf38      	it	cc
  401d3a:	4643      	movcc	r3, r8
  401d3c:	3301      	adds	r3, #1
  401d3e:	f108 39ff 	add.w	r9, r8, #4294967295
  401d42:	9303      	str	r3, [sp, #12]
  401d44:	eb06 0309 	add.w	r3, r6, r9
  401d48:	4658      	mov	r0, fp
  401d4a:	2500      	movs	r5, #0
  401d4c:	46bb      	mov	fp, r7
  401d4e:	469a      	mov	sl, r3
  401d50:	1967      	adds	r7, r4, r5
  401d52:	1a3a      	subs	r2, r7, r0
  401d54:	2100      	movs	r1, #0
  401d56:	4458      	add	r0, fp
  401d58:	f002 fd1a 	bl	404790 <memchr>
  401d5c:	2800      	cmp	r0, #0
  401d5e:	f47f af7e 	bne.w	401c5e <strstr+0x86>
  401d62:	2f00      	cmp	r7, #0
  401d64:	f43f af7b 	beq.w	401c5e <strstr+0x86>
  401d68:	4544      	cmp	r4, r8
  401d6a:	d915      	bls.n	401d98 <strstr+0x1c0>
  401d6c:	eb08 0205 	add.w	r2, r8, r5
  401d70:	f816 3008 	ldrb.w	r3, [r6, r8]
  401d74:	f81b 0002 	ldrb.w	r0, [fp, r2]
  401d78:	4298      	cmp	r0, r3
  401d7a:	445a      	add	r2, fp
  401d7c:	eb06 0108 	add.w	r1, r6, r8
  401d80:	4643      	mov	r3, r8
  401d82:	d006      	beq.n	401d92 <strstr+0x1ba>
  401d84:	e023      	b.n	401dce <strstr+0x1f6>
  401d86:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  401d8a:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  401d8e:	4586      	cmp	lr, r0
  401d90:	d11d      	bne.n	401dce <strstr+0x1f6>
  401d92:	3301      	adds	r3, #1
  401d94:	429c      	cmp	r4, r3
  401d96:	d1f6      	bne.n	401d86 <strstr+0x1ae>
  401d98:	f1b9 3fff 	cmp.w	r9, #4294967295
  401d9c:	d012      	beq.n	401dc4 <strstr+0x1ec>
  401d9e:	eb05 0209 	add.w	r2, r5, r9
  401da2:	f89a 3000 	ldrb.w	r3, [sl]
  401da6:	f81b 1002 	ldrb.w	r1, [fp, r2]
  401daa:	4299      	cmp	r1, r3
  401dac:	445a      	add	r2, fp
  401dae:	d114      	bne.n	401dda <strstr+0x202>
  401db0:	4653      	mov	r3, sl
  401db2:	e005      	b.n	401dc0 <strstr+0x1e8>
  401db4:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  401db8:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  401dbc:	4288      	cmp	r0, r1
  401dbe:	d10c      	bne.n	401dda <strstr+0x202>
  401dc0:	42b3      	cmp	r3, r6
  401dc2:	d1f7      	bne.n	401db4 <strstr+0x1dc>
  401dc4:	465f      	mov	r7, fp
  401dc6:	1978      	adds	r0, r7, r5
  401dc8:	b005      	add	sp, #20
  401dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401dce:	f1c8 0201 	rsb	r2, r8, #1
  401dd2:	4415      	add	r5, r2
  401dd4:	441d      	add	r5, r3
  401dd6:	4638      	mov	r0, r7
  401dd8:	e7ba      	b.n	401d50 <strstr+0x178>
  401dda:	9b03      	ldr	r3, [sp, #12]
  401ddc:	4638      	mov	r0, r7
  401dde:	441d      	add	r5, r3
  401de0:	e7b6      	b.n	401d50 <strstr+0x178>
  401de2:	780b      	ldrb	r3, [r1, #0]
  401de4:	b913      	cbnz	r3, 401dec <strstr+0x214>
  401de6:	4770      	bx	lr
  401de8:	4641      	mov	r1, r8
  401dea:	e790      	b.n	401d0e <strstr+0x136>
  401dec:	2000      	movs	r0, #0
  401dee:	4770      	bx	lr

00401df0 <_svfprintf_r>:
  401df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401df4:	b0c3      	sub	sp, #268	; 0x10c
  401df6:	460c      	mov	r4, r1
  401df8:	910b      	str	r1, [sp, #44]	; 0x2c
  401dfa:	4692      	mov	sl, r2
  401dfc:	930f      	str	r3, [sp, #60]	; 0x3c
  401dfe:	900c      	str	r0, [sp, #48]	; 0x30
  401e00:	f002 fa06 	bl	404210 <_localeconv_r>
  401e04:	6803      	ldr	r3, [r0, #0]
  401e06:	931a      	str	r3, [sp, #104]	; 0x68
  401e08:	4618      	mov	r0, r3
  401e0a:	f003 f979 	bl	405100 <strlen>
  401e0e:	89a3      	ldrh	r3, [r4, #12]
  401e10:	9019      	str	r0, [sp, #100]	; 0x64
  401e12:	0619      	lsls	r1, r3, #24
  401e14:	d503      	bpl.n	401e1e <_svfprintf_r+0x2e>
  401e16:	6923      	ldr	r3, [r4, #16]
  401e18:	2b00      	cmp	r3, #0
  401e1a:	f001 8001 	beq.w	402e20 <_svfprintf_r+0x1030>
  401e1e:	2300      	movs	r3, #0
  401e20:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401e24:	9313      	str	r3, [sp, #76]	; 0x4c
  401e26:	9314      	str	r3, [sp, #80]	; 0x50
  401e28:	9315      	str	r3, [sp, #84]	; 0x54
  401e2a:	9327      	str	r3, [sp, #156]	; 0x9c
  401e2c:	9326      	str	r3, [sp, #152]	; 0x98
  401e2e:	9318      	str	r3, [sp, #96]	; 0x60
  401e30:	931b      	str	r3, [sp, #108]	; 0x6c
  401e32:	9309      	str	r3, [sp, #36]	; 0x24
  401e34:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401e38:	46c8      	mov	r8, r9
  401e3a:	9316      	str	r3, [sp, #88]	; 0x58
  401e3c:	9317      	str	r3, [sp, #92]	; 0x5c
  401e3e:	f89a 3000 	ldrb.w	r3, [sl]
  401e42:	4654      	mov	r4, sl
  401e44:	b1e3      	cbz	r3, 401e80 <_svfprintf_r+0x90>
  401e46:	2b25      	cmp	r3, #37	; 0x25
  401e48:	d102      	bne.n	401e50 <_svfprintf_r+0x60>
  401e4a:	e019      	b.n	401e80 <_svfprintf_r+0x90>
  401e4c:	2b25      	cmp	r3, #37	; 0x25
  401e4e:	d003      	beq.n	401e58 <_svfprintf_r+0x68>
  401e50:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401e54:	2b00      	cmp	r3, #0
  401e56:	d1f9      	bne.n	401e4c <_svfprintf_r+0x5c>
  401e58:	eba4 050a 	sub.w	r5, r4, sl
  401e5c:	b185      	cbz	r5, 401e80 <_svfprintf_r+0x90>
  401e5e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e60:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401e62:	f8c8 a000 	str.w	sl, [r8]
  401e66:	3301      	adds	r3, #1
  401e68:	442a      	add	r2, r5
  401e6a:	2b07      	cmp	r3, #7
  401e6c:	f8c8 5004 	str.w	r5, [r8, #4]
  401e70:	9227      	str	r2, [sp, #156]	; 0x9c
  401e72:	9326      	str	r3, [sp, #152]	; 0x98
  401e74:	dc7f      	bgt.n	401f76 <_svfprintf_r+0x186>
  401e76:	f108 0808 	add.w	r8, r8, #8
  401e7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401e7c:	442b      	add	r3, r5
  401e7e:	9309      	str	r3, [sp, #36]	; 0x24
  401e80:	7823      	ldrb	r3, [r4, #0]
  401e82:	2b00      	cmp	r3, #0
  401e84:	d07f      	beq.n	401f86 <_svfprintf_r+0x196>
  401e86:	2300      	movs	r3, #0
  401e88:	461a      	mov	r2, r3
  401e8a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401e8e:	4619      	mov	r1, r3
  401e90:	930d      	str	r3, [sp, #52]	; 0x34
  401e92:	469b      	mov	fp, r3
  401e94:	f04f 30ff 	mov.w	r0, #4294967295
  401e98:	7863      	ldrb	r3, [r4, #1]
  401e9a:	900a      	str	r0, [sp, #40]	; 0x28
  401e9c:	f104 0a01 	add.w	sl, r4, #1
  401ea0:	f10a 0a01 	add.w	sl, sl, #1
  401ea4:	f1a3 0020 	sub.w	r0, r3, #32
  401ea8:	2858      	cmp	r0, #88	; 0x58
  401eaa:	f200 83c0 	bhi.w	40262e <_svfprintf_r+0x83e>
  401eae:	e8df f010 	tbh	[pc, r0, lsl #1]
  401eb2:	0238      	.short	0x0238
  401eb4:	03be03be 	.word	0x03be03be
  401eb8:	03be0240 	.word	0x03be0240
  401ebc:	03be03be 	.word	0x03be03be
  401ec0:	03be03be 	.word	0x03be03be
  401ec4:	024503be 	.word	0x024503be
  401ec8:	03be0203 	.word	0x03be0203
  401ecc:	026b005d 	.word	0x026b005d
  401ed0:	028603be 	.word	0x028603be
  401ed4:	039c039c 	.word	0x039c039c
  401ed8:	039c039c 	.word	0x039c039c
  401edc:	039c039c 	.word	0x039c039c
  401ee0:	039c039c 	.word	0x039c039c
  401ee4:	03be039c 	.word	0x03be039c
  401ee8:	03be03be 	.word	0x03be03be
  401eec:	03be03be 	.word	0x03be03be
  401ef0:	03be03be 	.word	0x03be03be
  401ef4:	03be03be 	.word	0x03be03be
  401ef8:	033703be 	.word	0x033703be
  401efc:	03be0357 	.word	0x03be0357
  401f00:	03be0357 	.word	0x03be0357
  401f04:	03be03be 	.word	0x03be03be
  401f08:	039703be 	.word	0x039703be
  401f0c:	03be03be 	.word	0x03be03be
  401f10:	03be03ac 	.word	0x03be03ac
  401f14:	03be03be 	.word	0x03be03be
  401f18:	03be03be 	.word	0x03be03be
  401f1c:	03be0259 	.word	0x03be0259
  401f20:	031e03be 	.word	0x031e03be
  401f24:	03be03be 	.word	0x03be03be
  401f28:	03be03be 	.word	0x03be03be
  401f2c:	03be03be 	.word	0x03be03be
  401f30:	03be03be 	.word	0x03be03be
  401f34:	03be03be 	.word	0x03be03be
  401f38:	02db02c6 	.word	0x02db02c6
  401f3c:	03570357 	.word	0x03570357
  401f40:	028b0357 	.word	0x028b0357
  401f44:	03be02db 	.word	0x03be02db
  401f48:	029003be 	.word	0x029003be
  401f4c:	029d03be 	.word	0x029d03be
  401f50:	02b401cc 	.word	0x02b401cc
  401f54:	03be0208 	.word	0x03be0208
  401f58:	03be01e1 	.word	0x03be01e1
  401f5c:	03be007e 	.word	0x03be007e
  401f60:	020d03be 	.word	0x020d03be
  401f64:	980d      	ldr	r0, [sp, #52]	; 0x34
  401f66:	930f      	str	r3, [sp, #60]	; 0x3c
  401f68:	4240      	negs	r0, r0
  401f6a:	900d      	str	r0, [sp, #52]	; 0x34
  401f6c:	f04b 0b04 	orr.w	fp, fp, #4
  401f70:	f89a 3000 	ldrb.w	r3, [sl]
  401f74:	e794      	b.n	401ea0 <_svfprintf_r+0xb0>
  401f76:	aa25      	add	r2, sp, #148	; 0x94
  401f78:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f7a:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f7c:	f003 f92e 	bl	4051dc <__ssprint_r>
  401f80:	b940      	cbnz	r0, 401f94 <_svfprintf_r+0x1a4>
  401f82:	46c8      	mov	r8, r9
  401f84:	e779      	b.n	401e7a <_svfprintf_r+0x8a>
  401f86:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401f88:	b123      	cbz	r3, 401f94 <_svfprintf_r+0x1a4>
  401f8a:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f8c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f8e:	aa25      	add	r2, sp, #148	; 0x94
  401f90:	f003 f924 	bl	4051dc <__ssprint_r>
  401f94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401f96:	899b      	ldrh	r3, [r3, #12]
  401f98:	f013 0f40 	tst.w	r3, #64	; 0x40
  401f9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f9e:	bf18      	it	ne
  401fa0:	f04f 33ff 	movne.w	r3, #4294967295
  401fa4:	9309      	str	r3, [sp, #36]	; 0x24
  401fa6:	9809      	ldr	r0, [sp, #36]	; 0x24
  401fa8:	b043      	add	sp, #268	; 0x10c
  401faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401fae:	f01b 0f20 	tst.w	fp, #32
  401fb2:	9311      	str	r3, [sp, #68]	; 0x44
  401fb4:	f040 81dd 	bne.w	402372 <_svfprintf_r+0x582>
  401fb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401fba:	f01b 0f10 	tst.w	fp, #16
  401fbe:	4613      	mov	r3, r2
  401fc0:	f040 856c 	bne.w	402a9c <_svfprintf_r+0xcac>
  401fc4:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401fc8:	f000 8568 	beq.w	402a9c <_svfprintf_r+0xcac>
  401fcc:	8814      	ldrh	r4, [r2, #0]
  401fce:	3204      	adds	r2, #4
  401fd0:	2500      	movs	r5, #0
  401fd2:	2301      	movs	r3, #1
  401fd4:	920f      	str	r2, [sp, #60]	; 0x3c
  401fd6:	2700      	movs	r7, #0
  401fd8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401fdc:	990a      	ldr	r1, [sp, #40]	; 0x28
  401fde:	1c4a      	adds	r2, r1, #1
  401fe0:	f000 8265 	beq.w	4024ae <_svfprintf_r+0x6be>
  401fe4:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401fe8:	9207      	str	r2, [sp, #28]
  401fea:	ea54 0205 	orrs.w	r2, r4, r5
  401fee:	f040 8264 	bne.w	4024ba <_svfprintf_r+0x6ca>
  401ff2:	2900      	cmp	r1, #0
  401ff4:	f040 8439 	bne.w	40286a <_svfprintf_r+0xa7a>
  401ff8:	2b00      	cmp	r3, #0
  401ffa:	f040 84d4 	bne.w	4029a6 <_svfprintf_r+0xbb6>
  401ffe:	f01b 0301 	ands.w	r3, fp, #1
  402002:	930e      	str	r3, [sp, #56]	; 0x38
  402004:	f000 8602 	beq.w	402c0c <_svfprintf_r+0xe1c>
  402008:	ae42      	add	r6, sp, #264	; 0x108
  40200a:	2330      	movs	r3, #48	; 0x30
  40200c:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402010:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402012:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402014:	4293      	cmp	r3, r2
  402016:	bfb8      	it	lt
  402018:	4613      	movlt	r3, r2
  40201a:	9308      	str	r3, [sp, #32]
  40201c:	2300      	movs	r3, #0
  40201e:	9312      	str	r3, [sp, #72]	; 0x48
  402020:	b117      	cbz	r7, 402028 <_svfprintf_r+0x238>
  402022:	9b08      	ldr	r3, [sp, #32]
  402024:	3301      	adds	r3, #1
  402026:	9308      	str	r3, [sp, #32]
  402028:	9b07      	ldr	r3, [sp, #28]
  40202a:	f013 0302 	ands.w	r3, r3, #2
  40202e:	9310      	str	r3, [sp, #64]	; 0x40
  402030:	d002      	beq.n	402038 <_svfprintf_r+0x248>
  402032:	9b08      	ldr	r3, [sp, #32]
  402034:	3302      	adds	r3, #2
  402036:	9308      	str	r3, [sp, #32]
  402038:	9b07      	ldr	r3, [sp, #28]
  40203a:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40203e:	f040 830d 	bne.w	40265c <_svfprintf_r+0x86c>
  402042:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402044:	9a08      	ldr	r2, [sp, #32]
  402046:	eba3 0b02 	sub.w	fp, r3, r2
  40204a:	f1bb 0f00 	cmp.w	fp, #0
  40204e:	f340 8305 	ble.w	40265c <_svfprintf_r+0x86c>
  402052:	f1bb 0f10 	cmp.w	fp, #16
  402056:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402058:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40205a:	dd29      	ble.n	4020b0 <_svfprintf_r+0x2c0>
  40205c:	4643      	mov	r3, r8
  40205e:	4621      	mov	r1, r4
  402060:	46a8      	mov	r8, r5
  402062:	2710      	movs	r7, #16
  402064:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402066:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402068:	e006      	b.n	402078 <_svfprintf_r+0x288>
  40206a:	f1ab 0b10 	sub.w	fp, fp, #16
  40206e:	f1bb 0f10 	cmp.w	fp, #16
  402072:	f103 0308 	add.w	r3, r3, #8
  402076:	dd18      	ble.n	4020aa <_svfprintf_r+0x2ba>
  402078:	3201      	adds	r2, #1
  40207a:	48b7      	ldr	r0, [pc, #732]	; (402358 <_svfprintf_r+0x568>)
  40207c:	9226      	str	r2, [sp, #152]	; 0x98
  40207e:	3110      	adds	r1, #16
  402080:	2a07      	cmp	r2, #7
  402082:	9127      	str	r1, [sp, #156]	; 0x9c
  402084:	e883 0081 	stmia.w	r3, {r0, r7}
  402088:	ddef      	ble.n	40206a <_svfprintf_r+0x27a>
  40208a:	aa25      	add	r2, sp, #148	; 0x94
  40208c:	4629      	mov	r1, r5
  40208e:	4620      	mov	r0, r4
  402090:	f003 f8a4 	bl	4051dc <__ssprint_r>
  402094:	2800      	cmp	r0, #0
  402096:	f47f af7d 	bne.w	401f94 <_svfprintf_r+0x1a4>
  40209a:	f1ab 0b10 	sub.w	fp, fp, #16
  40209e:	f1bb 0f10 	cmp.w	fp, #16
  4020a2:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4020a4:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4020a6:	464b      	mov	r3, r9
  4020a8:	dce6      	bgt.n	402078 <_svfprintf_r+0x288>
  4020aa:	4645      	mov	r5, r8
  4020ac:	460c      	mov	r4, r1
  4020ae:	4698      	mov	r8, r3
  4020b0:	3201      	adds	r2, #1
  4020b2:	4ba9      	ldr	r3, [pc, #676]	; (402358 <_svfprintf_r+0x568>)
  4020b4:	9226      	str	r2, [sp, #152]	; 0x98
  4020b6:	445c      	add	r4, fp
  4020b8:	2a07      	cmp	r2, #7
  4020ba:	9427      	str	r4, [sp, #156]	; 0x9c
  4020bc:	e888 0808 	stmia.w	r8, {r3, fp}
  4020c0:	f300 8495 	bgt.w	4029ee <_svfprintf_r+0xbfe>
  4020c4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4020c8:	f108 0808 	add.w	r8, r8, #8
  4020cc:	b177      	cbz	r7, 4020ec <_svfprintf_r+0x2fc>
  4020ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020d0:	3301      	adds	r3, #1
  4020d2:	3401      	adds	r4, #1
  4020d4:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4020d8:	2201      	movs	r2, #1
  4020da:	2b07      	cmp	r3, #7
  4020dc:	9427      	str	r4, [sp, #156]	; 0x9c
  4020de:	9326      	str	r3, [sp, #152]	; 0x98
  4020e0:	e888 0006 	stmia.w	r8, {r1, r2}
  4020e4:	f300 83d8 	bgt.w	402898 <_svfprintf_r+0xaa8>
  4020e8:	f108 0808 	add.w	r8, r8, #8
  4020ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4020ee:	b16b      	cbz	r3, 40210c <_svfprintf_r+0x31c>
  4020f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4020f2:	3301      	adds	r3, #1
  4020f4:	3402      	adds	r4, #2
  4020f6:	a91e      	add	r1, sp, #120	; 0x78
  4020f8:	2202      	movs	r2, #2
  4020fa:	2b07      	cmp	r3, #7
  4020fc:	9427      	str	r4, [sp, #156]	; 0x9c
  4020fe:	9326      	str	r3, [sp, #152]	; 0x98
  402100:	e888 0006 	stmia.w	r8, {r1, r2}
  402104:	f300 83d3 	bgt.w	4028ae <_svfprintf_r+0xabe>
  402108:	f108 0808 	add.w	r8, r8, #8
  40210c:	2d80      	cmp	r5, #128	; 0x80
  40210e:	f000 8313 	beq.w	402738 <_svfprintf_r+0x948>
  402112:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402114:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402116:	1a9f      	subs	r7, r3, r2
  402118:	2f00      	cmp	r7, #0
  40211a:	dd36      	ble.n	40218a <_svfprintf_r+0x39a>
  40211c:	2f10      	cmp	r7, #16
  40211e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402120:	4d8e      	ldr	r5, [pc, #568]	; (40235c <_svfprintf_r+0x56c>)
  402122:	dd27      	ble.n	402174 <_svfprintf_r+0x384>
  402124:	4642      	mov	r2, r8
  402126:	4621      	mov	r1, r4
  402128:	46b0      	mov	r8, r6
  40212a:	f04f 0b10 	mov.w	fp, #16
  40212e:	462e      	mov	r6, r5
  402130:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402132:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402134:	e004      	b.n	402140 <_svfprintf_r+0x350>
  402136:	3f10      	subs	r7, #16
  402138:	2f10      	cmp	r7, #16
  40213a:	f102 0208 	add.w	r2, r2, #8
  40213e:	dd15      	ble.n	40216c <_svfprintf_r+0x37c>
  402140:	3301      	adds	r3, #1
  402142:	3110      	adds	r1, #16
  402144:	2b07      	cmp	r3, #7
  402146:	9127      	str	r1, [sp, #156]	; 0x9c
  402148:	9326      	str	r3, [sp, #152]	; 0x98
  40214a:	e882 0840 	stmia.w	r2, {r6, fp}
  40214e:	ddf2      	ble.n	402136 <_svfprintf_r+0x346>
  402150:	aa25      	add	r2, sp, #148	; 0x94
  402152:	4629      	mov	r1, r5
  402154:	4620      	mov	r0, r4
  402156:	f003 f841 	bl	4051dc <__ssprint_r>
  40215a:	2800      	cmp	r0, #0
  40215c:	f47f af1a 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402160:	3f10      	subs	r7, #16
  402162:	2f10      	cmp	r7, #16
  402164:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402166:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402168:	464a      	mov	r2, r9
  40216a:	dce9      	bgt.n	402140 <_svfprintf_r+0x350>
  40216c:	4635      	mov	r5, r6
  40216e:	460c      	mov	r4, r1
  402170:	4646      	mov	r6, r8
  402172:	4690      	mov	r8, r2
  402174:	3301      	adds	r3, #1
  402176:	443c      	add	r4, r7
  402178:	2b07      	cmp	r3, #7
  40217a:	9427      	str	r4, [sp, #156]	; 0x9c
  40217c:	9326      	str	r3, [sp, #152]	; 0x98
  40217e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402182:	f300 837e 	bgt.w	402882 <_svfprintf_r+0xa92>
  402186:	f108 0808 	add.w	r8, r8, #8
  40218a:	9b07      	ldr	r3, [sp, #28]
  40218c:	05df      	lsls	r7, r3, #23
  40218e:	f100 8267 	bmi.w	402660 <_svfprintf_r+0x870>
  402192:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402194:	990e      	ldr	r1, [sp, #56]	; 0x38
  402196:	f8c8 6000 	str.w	r6, [r8]
  40219a:	3301      	adds	r3, #1
  40219c:	440c      	add	r4, r1
  40219e:	2b07      	cmp	r3, #7
  4021a0:	9427      	str	r4, [sp, #156]	; 0x9c
  4021a2:	f8c8 1004 	str.w	r1, [r8, #4]
  4021a6:	9326      	str	r3, [sp, #152]	; 0x98
  4021a8:	f300 834a 	bgt.w	402840 <_svfprintf_r+0xa50>
  4021ac:	f108 0808 	add.w	r8, r8, #8
  4021b0:	9b07      	ldr	r3, [sp, #28]
  4021b2:	075b      	lsls	r3, r3, #29
  4021b4:	d53a      	bpl.n	40222c <_svfprintf_r+0x43c>
  4021b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4021b8:	9a08      	ldr	r2, [sp, #32]
  4021ba:	1a9d      	subs	r5, r3, r2
  4021bc:	2d00      	cmp	r5, #0
  4021be:	dd35      	ble.n	40222c <_svfprintf_r+0x43c>
  4021c0:	2d10      	cmp	r5, #16
  4021c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4021c4:	dd20      	ble.n	402208 <_svfprintf_r+0x418>
  4021c6:	2610      	movs	r6, #16
  4021c8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4021ca:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4021ce:	e004      	b.n	4021da <_svfprintf_r+0x3ea>
  4021d0:	3d10      	subs	r5, #16
  4021d2:	2d10      	cmp	r5, #16
  4021d4:	f108 0808 	add.w	r8, r8, #8
  4021d8:	dd16      	ble.n	402208 <_svfprintf_r+0x418>
  4021da:	3301      	adds	r3, #1
  4021dc:	4a5e      	ldr	r2, [pc, #376]	; (402358 <_svfprintf_r+0x568>)
  4021de:	9326      	str	r3, [sp, #152]	; 0x98
  4021e0:	3410      	adds	r4, #16
  4021e2:	2b07      	cmp	r3, #7
  4021e4:	9427      	str	r4, [sp, #156]	; 0x9c
  4021e6:	e888 0044 	stmia.w	r8, {r2, r6}
  4021ea:	ddf1      	ble.n	4021d0 <_svfprintf_r+0x3e0>
  4021ec:	aa25      	add	r2, sp, #148	; 0x94
  4021ee:	4659      	mov	r1, fp
  4021f0:	4638      	mov	r0, r7
  4021f2:	f002 fff3 	bl	4051dc <__ssprint_r>
  4021f6:	2800      	cmp	r0, #0
  4021f8:	f47f aecc 	bne.w	401f94 <_svfprintf_r+0x1a4>
  4021fc:	3d10      	subs	r5, #16
  4021fe:	2d10      	cmp	r5, #16
  402200:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402202:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402204:	46c8      	mov	r8, r9
  402206:	dce8      	bgt.n	4021da <_svfprintf_r+0x3ea>
  402208:	3301      	adds	r3, #1
  40220a:	4a53      	ldr	r2, [pc, #332]	; (402358 <_svfprintf_r+0x568>)
  40220c:	9326      	str	r3, [sp, #152]	; 0x98
  40220e:	442c      	add	r4, r5
  402210:	2b07      	cmp	r3, #7
  402212:	9427      	str	r4, [sp, #156]	; 0x9c
  402214:	e888 0024 	stmia.w	r8, {r2, r5}
  402218:	dd08      	ble.n	40222c <_svfprintf_r+0x43c>
  40221a:	aa25      	add	r2, sp, #148	; 0x94
  40221c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40221e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402220:	f002 ffdc 	bl	4051dc <__ssprint_r>
  402224:	2800      	cmp	r0, #0
  402226:	f47f aeb5 	bne.w	401f94 <_svfprintf_r+0x1a4>
  40222a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40222c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40222e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402230:	9908      	ldr	r1, [sp, #32]
  402232:	428a      	cmp	r2, r1
  402234:	bfac      	ite	ge
  402236:	189b      	addge	r3, r3, r2
  402238:	185b      	addlt	r3, r3, r1
  40223a:	9309      	str	r3, [sp, #36]	; 0x24
  40223c:	2c00      	cmp	r4, #0
  40223e:	f040 830a 	bne.w	402856 <_svfprintf_r+0xa66>
  402242:	2300      	movs	r3, #0
  402244:	9326      	str	r3, [sp, #152]	; 0x98
  402246:	46c8      	mov	r8, r9
  402248:	e5f9      	b.n	401e3e <_svfprintf_r+0x4e>
  40224a:	9311      	str	r3, [sp, #68]	; 0x44
  40224c:	f01b 0320 	ands.w	r3, fp, #32
  402250:	f040 81e2 	bne.w	402618 <_svfprintf_r+0x828>
  402254:	f01b 0210 	ands.w	r2, fp, #16
  402258:	f040 842c 	bne.w	402ab4 <_svfprintf_r+0xcc4>
  40225c:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402260:	f000 8428 	beq.w	402ab4 <_svfprintf_r+0xcc4>
  402264:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402266:	4613      	mov	r3, r2
  402268:	460a      	mov	r2, r1
  40226a:	3204      	adds	r2, #4
  40226c:	880c      	ldrh	r4, [r1, #0]
  40226e:	920f      	str	r2, [sp, #60]	; 0x3c
  402270:	2500      	movs	r5, #0
  402272:	e6b0      	b.n	401fd6 <_svfprintf_r+0x1e6>
  402274:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402276:	9311      	str	r3, [sp, #68]	; 0x44
  402278:	6816      	ldr	r6, [r2, #0]
  40227a:	2400      	movs	r4, #0
  40227c:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402280:	1d15      	adds	r5, r2, #4
  402282:	2e00      	cmp	r6, #0
  402284:	f000 86a5 	beq.w	402fd2 <_svfprintf_r+0x11e2>
  402288:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40228a:	1c53      	adds	r3, r2, #1
  40228c:	f000 8607 	beq.w	402e9e <_svfprintf_r+0x10ae>
  402290:	4621      	mov	r1, r4
  402292:	4630      	mov	r0, r6
  402294:	f002 fa7c 	bl	404790 <memchr>
  402298:	2800      	cmp	r0, #0
  40229a:	f000 86df 	beq.w	40305c <_svfprintf_r+0x126c>
  40229e:	1b83      	subs	r3, r0, r6
  4022a0:	930e      	str	r3, [sp, #56]	; 0x38
  4022a2:	940a      	str	r4, [sp, #40]	; 0x28
  4022a4:	950f      	str	r5, [sp, #60]	; 0x3c
  4022a6:	f8cd b01c 	str.w	fp, [sp, #28]
  4022aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4022ae:	9308      	str	r3, [sp, #32]
  4022b0:	9412      	str	r4, [sp, #72]	; 0x48
  4022b2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4022b6:	e6b3      	b.n	402020 <_svfprintf_r+0x230>
  4022b8:	f89a 3000 	ldrb.w	r3, [sl]
  4022bc:	2201      	movs	r2, #1
  4022be:	212b      	movs	r1, #43	; 0x2b
  4022c0:	e5ee      	b.n	401ea0 <_svfprintf_r+0xb0>
  4022c2:	f04b 0b20 	orr.w	fp, fp, #32
  4022c6:	f89a 3000 	ldrb.w	r3, [sl]
  4022ca:	e5e9      	b.n	401ea0 <_svfprintf_r+0xb0>
  4022cc:	9311      	str	r3, [sp, #68]	; 0x44
  4022ce:	2a00      	cmp	r2, #0
  4022d0:	f040 878d 	bne.w	4031ee <_svfprintf_r+0x13fe>
  4022d4:	4b22      	ldr	r3, [pc, #136]	; (402360 <_svfprintf_r+0x570>)
  4022d6:	9318      	str	r3, [sp, #96]	; 0x60
  4022d8:	f01b 0f20 	tst.w	fp, #32
  4022dc:	f040 8111 	bne.w	402502 <_svfprintf_r+0x712>
  4022e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4022e2:	f01b 0f10 	tst.w	fp, #16
  4022e6:	4613      	mov	r3, r2
  4022e8:	f040 83df 	bne.w	402aaa <_svfprintf_r+0xcba>
  4022ec:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4022f0:	f000 83db 	beq.w	402aaa <_svfprintf_r+0xcba>
  4022f4:	3304      	adds	r3, #4
  4022f6:	8814      	ldrh	r4, [r2, #0]
  4022f8:	930f      	str	r3, [sp, #60]	; 0x3c
  4022fa:	2500      	movs	r5, #0
  4022fc:	f01b 0f01 	tst.w	fp, #1
  402300:	f000 810c 	beq.w	40251c <_svfprintf_r+0x72c>
  402304:	ea54 0305 	orrs.w	r3, r4, r5
  402308:	f000 8108 	beq.w	40251c <_svfprintf_r+0x72c>
  40230c:	2330      	movs	r3, #48	; 0x30
  40230e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402312:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402316:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40231a:	f04b 0b02 	orr.w	fp, fp, #2
  40231e:	2302      	movs	r3, #2
  402320:	e659      	b.n	401fd6 <_svfprintf_r+0x1e6>
  402322:	f89a 3000 	ldrb.w	r3, [sl]
  402326:	2900      	cmp	r1, #0
  402328:	f47f adba 	bne.w	401ea0 <_svfprintf_r+0xb0>
  40232c:	2201      	movs	r2, #1
  40232e:	2120      	movs	r1, #32
  402330:	e5b6      	b.n	401ea0 <_svfprintf_r+0xb0>
  402332:	f04b 0b01 	orr.w	fp, fp, #1
  402336:	f89a 3000 	ldrb.w	r3, [sl]
  40233a:	e5b1      	b.n	401ea0 <_svfprintf_r+0xb0>
  40233c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40233e:	6823      	ldr	r3, [r4, #0]
  402340:	930d      	str	r3, [sp, #52]	; 0x34
  402342:	4618      	mov	r0, r3
  402344:	2800      	cmp	r0, #0
  402346:	4623      	mov	r3, r4
  402348:	f103 0304 	add.w	r3, r3, #4
  40234c:	f6ff ae0a 	blt.w	401f64 <_svfprintf_r+0x174>
  402350:	930f      	str	r3, [sp, #60]	; 0x3c
  402352:	f89a 3000 	ldrb.w	r3, [sl]
  402356:	e5a3      	b.n	401ea0 <_svfprintf_r+0xb0>
  402358:	00407478 	.word	0x00407478
  40235c:	00407488 	.word	0x00407488
  402360:	00407458 	.word	0x00407458
  402364:	f04b 0b10 	orr.w	fp, fp, #16
  402368:	f01b 0f20 	tst.w	fp, #32
  40236c:	9311      	str	r3, [sp, #68]	; 0x44
  40236e:	f43f ae23 	beq.w	401fb8 <_svfprintf_r+0x1c8>
  402372:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402374:	3507      	adds	r5, #7
  402376:	f025 0307 	bic.w	r3, r5, #7
  40237a:	f103 0208 	add.w	r2, r3, #8
  40237e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402382:	920f      	str	r2, [sp, #60]	; 0x3c
  402384:	2301      	movs	r3, #1
  402386:	e626      	b.n	401fd6 <_svfprintf_r+0x1e6>
  402388:	f89a 3000 	ldrb.w	r3, [sl]
  40238c:	2b2a      	cmp	r3, #42	; 0x2a
  40238e:	f10a 0401 	add.w	r4, sl, #1
  402392:	f000 871f 	beq.w	4031d4 <_svfprintf_r+0x13e4>
  402396:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40239a:	2809      	cmp	r0, #9
  40239c:	46a2      	mov	sl, r4
  40239e:	f200 86ab 	bhi.w	4030f8 <_svfprintf_r+0x1308>
  4023a2:	2300      	movs	r3, #0
  4023a4:	461c      	mov	r4, r3
  4023a6:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4023aa:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4023ae:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4023b2:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4023b6:	2809      	cmp	r0, #9
  4023b8:	d9f5      	bls.n	4023a6 <_svfprintf_r+0x5b6>
  4023ba:	940a      	str	r4, [sp, #40]	; 0x28
  4023bc:	e572      	b.n	401ea4 <_svfprintf_r+0xb4>
  4023be:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4023c2:	f89a 3000 	ldrb.w	r3, [sl]
  4023c6:	e56b      	b.n	401ea0 <_svfprintf_r+0xb0>
  4023c8:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4023cc:	f89a 3000 	ldrb.w	r3, [sl]
  4023d0:	e566      	b.n	401ea0 <_svfprintf_r+0xb0>
  4023d2:	f89a 3000 	ldrb.w	r3, [sl]
  4023d6:	2b6c      	cmp	r3, #108	; 0x6c
  4023d8:	bf03      	ittte	eq
  4023da:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4023de:	f04b 0b20 	orreq.w	fp, fp, #32
  4023e2:	f10a 0a01 	addeq.w	sl, sl, #1
  4023e6:	f04b 0b10 	orrne.w	fp, fp, #16
  4023ea:	e559      	b.n	401ea0 <_svfprintf_r+0xb0>
  4023ec:	2a00      	cmp	r2, #0
  4023ee:	f040 8709 	bne.w	403204 <_svfprintf_r+0x1414>
  4023f2:	f01b 0f20 	tst.w	fp, #32
  4023f6:	f040 84f7 	bne.w	402de8 <_svfprintf_r+0xff8>
  4023fa:	f01b 0f10 	tst.w	fp, #16
  4023fe:	f040 84aa 	bne.w	402d56 <_svfprintf_r+0xf66>
  402402:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402406:	f000 84a6 	beq.w	402d56 <_svfprintf_r+0xf66>
  40240a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40240c:	6813      	ldr	r3, [r2, #0]
  40240e:	3204      	adds	r2, #4
  402410:	920f      	str	r2, [sp, #60]	; 0x3c
  402412:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402416:	801a      	strh	r2, [r3, #0]
  402418:	e511      	b.n	401e3e <_svfprintf_r+0x4e>
  40241a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40241c:	4bb2      	ldr	r3, [pc, #712]	; (4026e8 <_svfprintf_r+0x8f8>)
  40241e:	680c      	ldr	r4, [r1, #0]
  402420:	9318      	str	r3, [sp, #96]	; 0x60
  402422:	2230      	movs	r2, #48	; 0x30
  402424:	2378      	movs	r3, #120	; 0x78
  402426:	3104      	adds	r1, #4
  402428:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  40242c:	9311      	str	r3, [sp, #68]	; 0x44
  40242e:	f04b 0b02 	orr.w	fp, fp, #2
  402432:	910f      	str	r1, [sp, #60]	; 0x3c
  402434:	2500      	movs	r5, #0
  402436:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40243a:	2302      	movs	r3, #2
  40243c:	e5cb      	b.n	401fd6 <_svfprintf_r+0x1e6>
  40243e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402440:	9311      	str	r3, [sp, #68]	; 0x44
  402442:	680a      	ldr	r2, [r1, #0]
  402444:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402448:	2300      	movs	r3, #0
  40244a:	460a      	mov	r2, r1
  40244c:	461f      	mov	r7, r3
  40244e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402452:	3204      	adds	r2, #4
  402454:	2301      	movs	r3, #1
  402456:	9308      	str	r3, [sp, #32]
  402458:	f8cd b01c 	str.w	fp, [sp, #28]
  40245c:	970a      	str	r7, [sp, #40]	; 0x28
  40245e:	9712      	str	r7, [sp, #72]	; 0x48
  402460:	920f      	str	r2, [sp, #60]	; 0x3c
  402462:	930e      	str	r3, [sp, #56]	; 0x38
  402464:	ae28      	add	r6, sp, #160	; 0xa0
  402466:	e5df      	b.n	402028 <_svfprintf_r+0x238>
  402468:	9311      	str	r3, [sp, #68]	; 0x44
  40246a:	2a00      	cmp	r2, #0
  40246c:	f040 86e2 	bne.w	403234 <_svfprintf_r+0x1444>
  402470:	f01b 0f20 	tst.w	fp, #32
  402474:	d15d      	bne.n	402532 <_svfprintf_r+0x742>
  402476:	f01b 0f10 	tst.w	fp, #16
  40247a:	f040 8306 	bne.w	402a8a <_svfprintf_r+0xc9a>
  40247e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402482:	f000 8302 	beq.w	402a8a <_svfprintf_r+0xc9a>
  402486:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402488:	f9b1 4000 	ldrsh.w	r4, [r1]
  40248c:	3104      	adds	r1, #4
  40248e:	17e5      	asrs	r5, r4, #31
  402490:	4622      	mov	r2, r4
  402492:	462b      	mov	r3, r5
  402494:	910f      	str	r1, [sp, #60]	; 0x3c
  402496:	2a00      	cmp	r2, #0
  402498:	f173 0300 	sbcs.w	r3, r3, #0
  40249c:	db58      	blt.n	402550 <_svfprintf_r+0x760>
  40249e:	990a      	ldr	r1, [sp, #40]	; 0x28
  4024a0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4024a4:	1c4a      	adds	r2, r1, #1
  4024a6:	f04f 0301 	mov.w	r3, #1
  4024aa:	f47f ad9b 	bne.w	401fe4 <_svfprintf_r+0x1f4>
  4024ae:	ea54 0205 	orrs.w	r2, r4, r5
  4024b2:	f000 81dc 	beq.w	40286e <_svfprintf_r+0xa7e>
  4024b6:	f8cd b01c 	str.w	fp, [sp, #28]
  4024ba:	2b01      	cmp	r3, #1
  4024bc:	f000 8278 	beq.w	4029b0 <_svfprintf_r+0xbc0>
  4024c0:	2b02      	cmp	r3, #2
  4024c2:	f040 8203 	bne.w	4028cc <_svfprintf_r+0xadc>
  4024c6:	9818      	ldr	r0, [sp, #96]	; 0x60
  4024c8:	464e      	mov	r6, r9
  4024ca:	0923      	lsrs	r3, r4, #4
  4024cc:	f004 010f 	and.w	r1, r4, #15
  4024d0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4024d4:	092a      	lsrs	r2, r5, #4
  4024d6:	461c      	mov	r4, r3
  4024d8:	4615      	mov	r5, r2
  4024da:	5c43      	ldrb	r3, [r0, r1]
  4024dc:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4024e0:	ea54 0305 	orrs.w	r3, r4, r5
  4024e4:	d1f1      	bne.n	4024ca <_svfprintf_r+0x6da>
  4024e6:	eba9 0306 	sub.w	r3, r9, r6
  4024ea:	930e      	str	r3, [sp, #56]	; 0x38
  4024ec:	e590      	b.n	402010 <_svfprintf_r+0x220>
  4024ee:	9311      	str	r3, [sp, #68]	; 0x44
  4024f0:	2a00      	cmp	r2, #0
  4024f2:	f040 869b 	bne.w	40322c <_svfprintf_r+0x143c>
  4024f6:	4b7d      	ldr	r3, [pc, #500]	; (4026ec <_svfprintf_r+0x8fc>)
  4024f8:	9318      	str	r3, [sp, #96]	; 0x60
  4024fa:	f01b 0f20 	tst.w	fp, #32
  4024fe:	f43f aeef 	beq.w	4022e0 <_svfprintf_r+0x4f0>
  402502:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402504:	3507      	adds	r5, #7
  402506:	f025 0307 	bic.w	r3, r5, #7
  40250a:	f103 0208 	add.w	r2, r3, #8
  40250e:	f01b 0f01 	tst.w	fp, #1
  402512:	920f      	str	r2, [sp, #60]	; 0x3c
  402514:	e9d3 4500 	ldrd	r4, r5, [r3]
  402518:	f47f aef4 	bne.w	402304 <_svfprintf_r+0x514>
  40251c:	2302      	movs	r3, #2
  40251e:	e55a      	b.n	401fd6 <_svfprintf_r+0x1e6>
  402520:	9311      	str	r3, [sp, #68]	; 0x44
  402522:	2a00      	cmp	r2, #0
  402524:	f040 867e 	bne.w	403224 <_svfprintf_r+0x1434>
  402528:	f04b 0b10 	orr.w	fp, fp, #16
  40252c:	f01b 0f20 	tst.w	fp, #32
  402530:	d0a1      	beq.n	402476 <_svfprintf_r+0x686>
  402532:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402534:	3507      	adds	r5, #7
  402536:	f025 0507 	bic.w	r5, r5, #7
  40253a:	e9d5 2300 	ldrd	r2, r3, [r5]
  40253e:	2a00      	cmp	r2, #0
  402540:	f105 0108 	add.w	r1, r5, #8
  402544:	461d      	mov	r5, r3
  402546:	f173 0300 	sbcs.w	r3, r3, #0
  40254a:	910f      	str	r1, [sp, #60]	; 0x3c
  40254c:	4614      	mov	r4, r2
  40254e:	daa6      	bge.n	40249e <_svfprintf_r+0x6ae>
  402550:	272d      	movs	r7, #45	; 0x2d
  402552:	4264      	negs	r4, r4
  402554:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402558:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40255c:	2301      	movs	r3, #1
  40255e:	e53d      	b.n	401fdc <_svfprintf_r+0x1ec>
  402560:	9311      	str	r3, [sp, #68]	; 0x44
  402562:	2a00      	cmp	r2, #0
  402564:	f040 865a 	bne.w	40321c <_svfprintf_r+0x142c>
  402568:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40256a:	3507      	adds	r5, #7
  40256c:	f025 0307 	bic.w	r3, r5, #7
  402570:	f103 0208 	add.w	r2, r3, #8
  402574:	920f      	str	r2, [sp, #60]	; 0x3c
  402576:	681a      	ldr	r2, [r3, #0]
  402578:	9214      	str	r2, [sp, #80]	; 0x50
  40257a:	685b      	ldr	r3, [r3, #4]
  40257c:	9315      	str	r3, [sp, #84]	; 0x54
  40257e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402580:	9d14      	ldr	r5, [sp, #80]	; 0x50
  402582:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402586:	4628      	mov	r0, r5
  402588:	4621      	mov	r1, r4
  40258a:	f04f 32ff 	mov.w	r2, #4294967295
  40258e:	4b58      	ldr	r3, [pc, #352]	; (4026f0 <_svfprintf_r+0x900>)
  402590:	f003 feda 	bl	406348 <__aeabi_dcmpun>
  402594:	2800      	cmp	r0, #0
  402596:	f040 8348 	bne.w	402c2a <_svfprintf_r+0xe3a>
  40259a:	4628      	mov	r0, r5
  40259c:	4621      	mov	r1, r4
  40259e:	f04f 32ff 	mov.w	r2, #4294967295
  4025a2:	4b53      	ldr	r3, [pc, #332]	; (4026f0 <_svfprintf_r+0x900>)
  4025a4:	f003 feb2 	bl	40630c <__aeabi_dcmple>
  4025a8:	2800      	cmp	r0, #0
  4025aa:	f040 833e 	bne.w	402c2a <_svfprintf_r+0xe3a>
  4025ae:	a814      	add	r0, sp, #80	; 0x50
  4025b0:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4025b2:	f003 fea1 	bl	4062f8 <__aeabi_dcmplt>
  4025b6:	2800      	cmp	r0, #0
  4025b8:	f040 852f 	bne.w	40301a <_svfprintf_r+0x122a>
  4025bc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4025c0:	4e4c      	ldr	r6, [pc, #304]	; (4026f4 <_svfprintf_r+0x904>)
  4025c2:	4b4d      	ldr	r3, [pc, #308]	; (4026f8 <_svfprintf_r+0x908>)
  4025c4:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4025c8:	9007      	str	r0, [sp, #28]
  4025ca:	9811      	ldr	r0, [sp, #68]	; 0x44
  4025cc:	2203      	movs	r2, #3
  4025ce:	2100      	movs	r1, #0
  4025d0:	9208      	str	r2, [sp, #32]
  4025d2:	910a      	str	r1, [sp, #40]	; 0x28
  4025d4:	2847      	cmp	r0, #71	; 0x47
  4025d6:	bfd8      	it	le
  4025d8:	461e      	movle	r6, r3
  4025da:	920e      	str	r2, [sp, #56]	; 0x38
  4025dc:	9112      	str	r1, [sp, #72]	; 0x48
  4025de:	e51f      	b.n	402020 <_svfprintf_r+0x230>
  4025e0:	f04b 0b08 	orr.w	fp, fp, #8
  4025e4:	f89a 3000 	ldrb.w	r3, [sl]
  4025e8:	e45a      	b.n	401ea0 <_svfprintf_r+0xb0>
  4025ea:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4025ee:	2300      	movs	r3, #0
  4025f0:	461c      	mov	r4, r3
  4025f2:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4025f6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4025fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4025fe:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402602:	2809      	cmp	r0, #9
  402604:	d9f5      	bls.n	4025f2 <_svfprintf_r+0x802>
  402606:	940d      	str	r4, [sp, #52]	; 0x34
  402608:	e44c      	b.n	401ea4 <_svfprintf_r+0xb4>
  40260a:	f04b 0b10 	orr.w	fp, fp, #16
  40260e:	9311      	str	r3, [sp, #68]	; 0x44
  402610:	f01b 0320 	ands.w	r3, fp, #32
  402614:	f43f ae1e 	beq.w	402254 <_svfprintf_r+0x464>
  402618:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40261a:	3507      	adds	r5, #7
  40261c:	f025 0307 	bic.w	r3, r5, #7
  402620:	f103 0208 	add.w	r2, r3, #8
  402624:	e9d3 4500 	ldrd	r4, r5, [r3]
  402628:	920f      	str	r2, [sp, #60]	; 0x3c
  40262a:	2300      	movs	r3, #0
  40262c:	e4d3      	b.n	401fd6 <_svfprintf_r+0x1e6>
  40262e:	9311      	str	r3, [sp, #68]	; 0x44
  402630:	2a00      	cmp	r2, #0
  402632:	f040 85e0 	bne.w	4031f6 <_svfprintf_r+0x1406>
  402636:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402638:	2a00      	cmp	r2, #0
  40263a:	f43f aca4 	beq.w	401f86 <_svfprintf_r+0x196>
  40263e:	2300      	movs	r3, #0
  402640:	2101      	movs	r1, #1
  402642:	461f      	mov	r7, r3
  402644:	9108      	str	r1, [sp, #32]
  402646:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40264a:	f8cd b01c 	str.w	fp, [sp, #28]
  40264e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402652:	930a      	str	r3, [sp, #40]	; 0x28
  402654:	9312      	str	r3, [sp, #72]	; 0x48
  402656:	910e      	str	r1, [sp, #56]	; 0x38
  402658:	ae28      	add	r6, sp, #160	; 0xa0
  40265a:	e4e5      	b.n	402028 <_svfprintf_r+0x238>
  40265c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40265e:	e535      	b.n	4020cc <_svfprintf_r+0x2dc>
  402660:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402662:	2b65      	cmp	r3, #101	; 0x65
  402664:	f340 80a6 	ble.w	4027b4 <_svfprintf_r+0x9c4>
  402668:	a814      	add	r0, sp, #80	; 0x50
  40266a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  40266c:	f003 fe3a 	bl	4062e4 <__aeabi_dcmpeq>
  402670:	2800      	cmp	r0, #0
  402672:	f000 814f 	beq.w	402914 <_svfprintf_r+0xb24>
  402676:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402678:	4a20      	ldr	r2, [pc, #128]	; (4026fc <_svfprintf_r+0x90c>)
  40267a:	f8c8 2000 	str.w	r2, [r8]
  40267e:	3301      	adds	r3, #1
  402680:	3401      	adds	r4, #1
  402682:	2201      	movs	r2, #1
  402684:	2b07      	cmp	r3, #7
  402686:	9427      	str	r4, [sp, #156]	; 0x9c
  402688:	9326      	str	r3, [sp, #152]	; 0x98
  40268a:	f8c8 2004 	str.w	r2, [r8, #4]
  40268e:	f300 836a 	bgt.w	402d66 <_svfprintf_r+0xf76>
  402692:	f108 0808 	add.w	r8, r8, #8
  402696:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402698:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40269a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40269c:	4293      	cmp	r3, r2
  40269e:	db03      	blt.n	4026a8 <_svfprintf_r+0x8b8>
  4026a0:	9b07      	ldr	r3, [sp, #28]
  4026a2:	07dd      	lsls	r5, r3, #31
  4026a4:	f57f ad84 	bpl.w	4021b0 <_svfprintf_r+0x3c0>
  4026a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026aa:	9919      	ldr	r1, [sp, #100]	; 0x64
  4026ac:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4026ae:	f8c8 2000 	str.w	r2, [r8]
  4026b2:	3301      	adds	r3, #1
  4026b4:	440c      	add	r4, r1
  4026b6:	2b07      	cmp	r3, #7
  4026b8:	f8c8 1004 	str.w	r1, [r8, #4]
  4026bc:	9427      	str	r4, [sp, #156]	; 0x9c
  4026be:	9326      	str	r3, [sp, #152]	; 0x98
  4026c0:	f300 839e 	bgt.w	402e00 <_svfprintf_r+0x1010>
  4026c4:	f108 0808 	add.w	r8, r8, #8
  4026c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4026ca:	1e5e      	subs	r6, r3, #1
  4026cc:	2e00      	cmp	r6, #0
  4026ce:	f77f ad6f 	ble.w	4021b0 <_svfprintf_r+0x3c0>
  4026d2:	2e10      	cmp	r6, #16
  4026d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026d6:	4d0a      	ldr	r5, [pc, #40]	; (402700 <_svfprintf_r+0x910>)
  4026d8:	f340 81f5 	ble.w	402ac6 <_svfprintf_r+0xcd6>
  4026dc:	4622      	mov	r2, r4
  4026de:	2710      	movs	r7, #16
  4026e0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4026e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4026e6:	e013      	b.n	402710 <_svfprintf_r+0x920>
  4026e8:	00407458 	.word	0x00407458
  4026ec:	00407444 	.word	0x00407444
  4026f0:	7fefffff 	.word	0x7fefffff
  4026f4:	00407438 	.word	0x00407438
  4026f8:	00407434 	.word	0x00407434
  4026fc:	00407474 	.word	0x00407474
  402700:	00407488 	.word	0x00407488
  402704:	f108 0808 	add.w	r8, r8, #8
  402708:	3e10      	subs	r6, #16
  40270a:	2e10      	cmp	r6, #16
  40270c:	f340 81da 	ble.w	402ac4 <_svfprintf_r+0xcd4>
  402710:	3301      	adds	r3, #1
  402712:	3210      	adds	r2, #16
  402714:	2b07      	cmp	r3, #7
  402716:	9227      	str	r2, [sp, #156]	; 0x9c
  402718:	9326      	str	r3, [sp, #152]	; 0x98
  40271a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40271e:	ddf1      	ble.n	402704 <_svfprintf_r+0x914>
  402720:	aa25      	add	r2, sp, #148	; 0x94
  402722:	4621      	mov	r1, r4
  402724:	4658      	mov	r0, fp
  402726:	f002 fd59 	bl	4051dc <__ssprint_r>
  40272a:	2800      	cmp	r0, #0
  40272c:	f47f ac32 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402730:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402732:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402734:	46c8      	mov	r8, r9
  402736:	e7e7      	b.n	402708 <_svfprintf_r+0x918>
  402738:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40273a:	9a08      	ldr	r2, [sp, #32]
  40273c:	1a9f      	subs	r7, r3, r2
  40273e:	2f00      	cmp	r7, #0
  402740:	f77f ace7 	ble.w	402112 <_svfprintf_r+0x322>
  402744:	2f10      	cmp	r7, #16
  402746:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402748:	4db6      	ldr	r5, [pc, #728]	; (402a24 <_svfprintf_r+0xc34>)
  40274a:	dd27      	ble.n	40279c <_svfprintf_r+0x9ac>
  40274c:	4642      	mov	r2, r8
  40274e:	4621      	mov	r1, r4
  402750:	46b0      	mov	r8, r6
  402752:	f04f 0b10 	mov.w	fp, #16
  402756:	462e      	mov	r6, r5
  402758:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40275a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40275c:	e004      	b.n	402768 <_svfprintf_r+0x978>
  40275e:	3f10      	subs	r7, #16
  402760:	2f10      	cmp	r7, #16
  402762:	f102 0208 	add.w	r2, r2, #8
  402766:	dd15      	ble.n	402794 <_svfprintf_r+0x9a4>
  402768:	3301      	adds	r3, #1
  40276a:	3110      	adds	r1, #16
  40276c:	2b07      	cmp	r3, #7
  40276e:	9127      	str	r1, [sp, #156]	; 0x9c
  402770:	9326      	str	r3, [sp, #152]	; 0x98
  402772:	e882 0840 	stmia.w	r2, {r6, fp}
  402776:	ddf2      	ble.n	40275e <_svfprintf_r+0x96e>
  402778:	aa25      	add	r2, sp, #148	; 0x94
  40277a:	4629      	mov	r1, r5
  40277c:	4620      	mov	r0, r4
  40277e:	f002 fd2d 	bl	4051dc <__ssprint_r>
  402782:	2800      	cmp	r0, #0
  402784:	f47f ac06 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402788:	3f10      	subs	r7, #16
  40278a:	2f10      	cmp	r7, #16
  40278c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40278e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402790:	464a      	mov	r2, r9
  402792:	dce9      	bgt.n	402768 <_svfprintf_r+0x978>
  402794:	4635      	mov	r5, r6
  402796:	460c      	mov	r4, r1
  402798:	4646      	mov	r6, r8
  40279a:	4690      	mov	r8, r2
  40279c:	3301      	adds	r3, #1
  40279e:	443c      	add	r4, r7
  4027a0:	2b07      	cmp	r3, #7
  4027a2:	9427      	str	r4, [sp, #156]	; 0x9c
  4027a4:	9326      	str	r3, [sp, #152]	; 0x98
  4027a6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4027aa:	f300 8232 	bgt.w	402c12 <_svfprintf_r+0xe22>
  4027ae:	f108 0808 	add.w	r8, r8, #8
  4027b2:	e4ae      	b.n	402112 <_svfprintf_r+0x322>
  4027b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4027b6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4027b8:	2b01      	cmp	r3, #1
  4027ba:	f340 81fe 	ble.w	402bba <_svfprintf_r+0xdca>
  4027be:	3701      	adds	r7, #1
  4027c0:	3401      	adds	r4, #1
  4027c2:	2301      	movs	r3, #1
  4027c4:	2f07      	cmp	r7, #7
  4027c6:	9427      	str	r4, [sp, #156]	; 0x9c
  4027c8:	9726      	str	r7, [sp, #152]	; 0x98
  4027ca:	f8c8 6000 	str.w	r6, [r8]
  4027ce:	f8c8 3004 	str.w	r3, [r8, #4]
  4027d2:	f300 8203 	bgt.w	402bdc <_svfprintf_r+0xdec>
  4027d6:	f108 0808 	add.w	r8, r8, #8
  4027da:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4027dc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4027de:	f8c8 3000 	str.w	r3, [r8]
  4027e2:	3701      	adds	r7, #1
  4027e4:	4414      	add	r4, r2
  4027e6:	2f07      	cmp	r7, #7
  4027e8:	9427      	str	r4, [sp, #156]	; 0x9c
  4027ea:	9726      	str	r7, [sp, #152]	; 0x98
  4027ec:	f8c8 2004 	str.w	r2, [r8, #4]
  4027f0:	f300 8200 	bgt.w	402bf4 <_svfprintf_r+0xe04>
  4027f4:	f108 0808 	add.w	r8, r8, #8
  4027f8:	a814      	add	r0, sp, #80	; 0x50
  4027fa:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4027fc:	f003 fd72 	bl	4062e4 <__aeabi_dcmpeq>
  402800:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402802:	2800      	cmp	r0, #0
  402804:	f040 8101 	bne.w	402a0a <_svfprintf_r+0xc1a>
  402808:	3b01      	subs	r3, #1
  40280a:	3701      	adds	r7, #1
  40280c:	3601      	adds	r6, #1
  40280e:	441c      	add	r4, r3
  402810:	2f07      	cmp	r7, #7
  402812:	9726      	str	r7, [sp, #152]	; 0x98
  402814:	9427      	str	r4, [sp, #156]	; 0x9c
  402816:	f8c8 6000 	str.w	r6, [r8]
  40281a:	f8c8 3004 	str.w	r3, [r8, #4]
  40281e:	f300 8128 	bgt.w	402a72 <_svfprintf_r+0xc82>
  402822:	f108 0808 	add.w	r8, r8, #8
  402826:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402828:	f8c8 2004 	str.w	r2, [r8, #4]
  40282c:	3701      	adds	r7, #1
  40282e:	4414      	add	r4, r2
  402830:	ab21      	add	r3, sp, #132	; 0x84
  402832:	2f07      	cmp	r7, #7
  402834:	9427      	str	r4, [sp, #156]	; 0x9c
  402836:	9726      	str	r7, [sp, #152]	; 0x98
  402838:	f8c8 3000 	str.w	r3, [r8]
  40283c:	f77f acb6 	ble.w	4021ac <_svfprintf_r+0x3bc>
  402840:	aa25      	add	r2, sp, #148	; 0x94
  402842:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402844:	980c      	ldr	r0, [sp, #48]	; 0x30
  402846:	f002 fcc9 	bl	4051dc <__ssprint_r>
  40284a:	2800      	cmp	r0, #0
  40284c:	f47f aba2 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402850:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402852:	46c8      	mov	r8, r9
  402854:	e4ac      	b.n	4021b0 <_svfprintf_r+0x3c0>
  402856:	aa25      	add	r2, sp, #148	; 0x94
  402858:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40285a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40285c:	f002 fcbe 	bl	4051dc <__ssprint_r>
  402860:	2800      	cmp	r0, #0
  402862:	f43f acee 	beq.w	402242 <_svfprintf_r+0x452>
  402866:	f7ff bb95 	b.w	401f94 <_svfprintf_r+0x1a4>
  40286a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40286e:	2b01      	cmp	r3, #1
  402870:	f000 8135 	beq.w	402ade <_svfprintf_r+0xcee>
  402874:	2b02      	cmp	r3, #2
  402876:	d125      	bne.n	4028c4 <_svfprintf_r+0xad4>
  402878:	f8cd b01c 	str.w	fp, [sp, #28]
  40287c:	2400      	movs	r4, #0
  40287e:	2500      	movs	r5, #0
  402880:	e621      	b.n	4024c6 <_svfprintf_r+0x6d6>
  402882:	aa25      	add	r2, sp, #148	; 0x94
  402884:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402886:	980c      	ldr	r0, [sp, #48]	; 0x30
  402888:	f002 fca8 	bl	4051dc <__ssprint_r>
  40288c:	2800      	cmp	r0, #0
  40288e:	f47f ab81 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402892:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402894:	46c8      	mov	r8, r9
  402896:	e478      	b.n	40218a <_svfprintf_r+0x39a>
  402898:	aa25      	add	r2, sp, #148	; 0x94
  40289a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40289c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40289e:	f002 fc9d 	bl	4051dc <__ssprint_r>
  4028a2:	2800      	cmp	r0, #0
  4028a4:	f47f ab76 	bne.w	401f94 <_svfprintf_r+0x1a4>
  4028a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028aa:	46c8      	mov	r8, r9
  4028ac:	e41e      	b.n	4020ec <_svfprintf_r+0x2fc>
  4028ae:	aa25      	add	r2, sp, #148	; 0x94
  4028b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028b4:	f002 fc92 	bl	4051dc <__ssprint_r>
  4028b8:	2800      	cmp	r0, #0
  4028ba:	f47f ab6b 	bne.w	401f94 <_svfprintf_r+0x1a4>
  4028be:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028c0:	46c8      	mov	r8, r9
  4028c2:	e423      	b.n	40210c <_svfprintf_r+0x31c>
  4028c4:	f8cd b01c 	str.w	fp, [sp, #28]
  4028c8:	2400      	movs	r4, #0
  4028ca:	2500      	movs	r5, #0
  4028cc:	4649      	mov	r1, r9
  4028ce:	e000      	b.n	4028d2 <_svfprintf_r+0xae2>
  4028d0:	4631      	mov	r1, r6
  4028d2:	08e2      	lsrs	r2, r4, #3
  4028d4:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  4028d8:	08e8      	lsrs	r0, r5, #3
  4028da:	f004 0307 	and.w	r3, r4, #7
  4028de:	4605      	mov	r5, r0
  4028e0:	4614      	mov	r4, r2
  4028e2:	3330      	adds	r3, #48	; 0x30
  4028e4:	ea54 0205 	orrs.w	r2, r4, r5
  4028e8:	f801 3c01 	strb.w	r3, [r1, #-1]
  4028ec:	f101 36ff 	add.w	r6, r1, #4294967295
  4028f0:	d1ee      	bne.n	4028d0 <_svfprintf_r+0xae0>
  4028f2:	9a07      	ldr	r2, [sp, #28]
  4028f4:	07d2      	lsls	r2, r2, #31
  4028f6:	f57f adf6 	bpl.w	4024e6 <_svfprintf_r+0x6f6>
  4028fa:	2b30      	cmp	r3, #48	; 0x30
  4028fc:	f43f adf3 	beq.w	4024e6 <_svfprintf_r+0x6f6>
  402900:	3902      	subs	r1, #2
  402902:	2330      	movs	r3, #48	; 0x30
  402904:	f806 3c01 	strb.w	r3, [r6, #-1]
  402908:	eba9 0301 	sub.w	r3, r9, r1
  40290c:	930e      	str	r3, [sp, #56]	; 0x38
  40290e:	460e      	mov	r6, r1
  402910:	f7ff bb7e 	b.w	402010 <_svfprintf_r+0x220>
  402914:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402916:	2900      	cmp	r1, #0
  402918:	f340 822f 	ble.w	402d7a <_svfprintf_r+0xf8a>
  40291c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40291e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402920:	4293      	cmp	r3, r2
  402922:	bfa8      	it	ge
  402924:	4613      	movge	r3, r2
  402926:	2b00      	cmp	r3, #0
  402928:	461f      	mov	r7, r3
  40292a:	dd0d      	ble.n	402948 <_svfprintf_r+0xb58>
  40292c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40292e:	f8c8 6000 	str.w	r6, [r8]
  402932:	3301      	adds	r3, #1
  402934:	443c      	add	r4, r7
  402936:	2b07      	cmp	r3, #7
  402938:	9427      	str	r4, [sp, #156]	; 0x9c
  40293a:	f8c8 7004 	str.w	r7, [r8, #4]
  40293e:	9326      	str	r3, [sp, #152]	; 0x98
  402940:	f300 8320 	bgt.w	402f84 <_svfprintf_r+0x1194>
  402944:	f108 0808 	add.w	r8, r8, #8
  402948:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40294a:	2f00      	cmp	r7, #0
  40294c:	bfa8      	it	ge
  40294e:	1bdb      	subge	r3, r3, r7
  402950:	2b00      	cmp	r3, #0
  402952:	461f      	mov	r7, r3
  402954:	f340 80d7 	ble.w	402b06 <_svfprintf_r+0xd16>
  402958:	2f10      	cmp	r7, #16
  40295a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40295c:	4d31      	ldr	r5, [pc, #196]	; (402a24 <_svfprintf_r+0xc34>)
  40295e:	f340 81ee 	ble.w	402d3e <_svfprintf_r+0xf4e>
  402962:	4642      	mov	r2, r8
  402964:	4621      	mov	r1, r4
  402966:	46b0      	mov	r8, r6
  402968:	f04f 0b10 	mov.w	fp, #16
  40296c:	462e      	mov	r6, r5
  40296e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402970:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402972:	e004      	b.n	40297e <_svfprintf_r+0xb8e>
  402974:	3208      	adds	r2, #8
  402976:	3f10      	subs	r7, #16
  402978:	2f10      	cmp	r7, #16
  40297a:	f340 81dc 	ble.w	402d36 <_svfprintf_r+0xf46>
  40297e:	3301      	adds	r3, #1
  402980:	3110      	adds	r1, #16
  402982:	2b07      	cmp	r3, #7
  402984:	9127      	str	r1, [sp, #156]	; 0x9c
  402986:	9326      	str	r3, [sp, #152]	; 0x98
  402988:	e882 0840 	stmia.w	r2, {r6, fp}
  40298c:	ddf2      	ble.n	402974 <_svfprintf_r+0xb84>
  40298e:	aa25      	add	r2, sp, #148	; 0x94
  402990:	4629      	mov	r1, r5
  402992:	4620      	mov	r0, r4
  402994:	f002 fc22 	bl	4051dc <__ssprint_r>
  402998:	2800      	cmp	r0, #0
  40299a:	f47f aafb 	bne.w	401f94 <_svfprintf_r+0x1a4>
  40299e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4029a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029a2:	464a      	mov	r2, r9
  4029a4:	e7e7      	b.n	402976 <_svfprintf_r+0xb86>
  4029a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4029a8:	930e      	str	r3, [sp, #56]	; 0x38
  4029aa:	464e      	mov	r6, r9
  4029ac:	f7ff bb30 	b.w	402010 <_svfprintf_r+0x220>
  4029b0:	2d00      	cmp	r5, #0
  4029b2:	bf08      	it	eq
  4029b4:	2c0a      	cmpeq	r4, #10
  4029b6:	f0c0 8090 	bcc.w	402ada <_svfprintf_r+0xcea>
  4029ba:	464e      	mov	r6, r9
  4029bc:	4620      	mov	r0, r4
  4029be:	4629      	mov	r1, r5
  4029c0:	220a      	movs	r2, #10
  4029c2:	2300      	movs	r3, #0
  4029c4:	f003 fcfe 	bl	4063c4 <__aeabi_uldivmod>
  4029c8:	3230      	adds	r2, #48	; 0x30
  4029ca:	f806 2d01 	strb.w	r2, [r6, #-1]!
  4029ce:	4620      	mov	r0, r4
  4029d0:	4629      	mov	r1, r5
  4029d2:	2300      	movs	r3, #0
  4029d4:	220a      	movs	r2, #10
  4029d6:	f003 fcf5 	bl	4063c4 <__aeabi_uldivmod>
  4029da:	4604      	mov	r4, r0
  4029dc:	460d      	mov	r5, r1
  4029de:	ea54 0305 	orrs.w	r3, r4, r5
  4029e2:	d1eb      	bne.n	4029bc <_svfprintf_r+0xbcc>
  4029e4:	eba9 0306 	sub.w	r3, r9, r6
  4029e8:	930e      	str	r3, [sp, #56]	; 0x38
  4029ea:	f7ff bb11 	b.w	402010 <_svfprintf_r+0x220>
  4029ee:	aa25      	add	r2, sp, #148	; 0x94
  4029f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4029f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029f4:	f002 fbf2 	bl	4051dc <__ssprint_r>
  4029f8:	2800      	cmp	r0, #0
  4029fa:	f47f aacb 	bne.w	401f94 <_svfprintf_r+0x1a4>
  4029fe:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a02:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a04:	46c8      	mov	r8, r9
  402a06:	f7ff bb61 	b.w	4020cc <_svfprintf_r+0x2dc>
  402a0a:	1e5e      	subs	r6, r3, #1
  402a0c:	2e00      	cmp	r6, #0
  402a0e:	f77f af0a 	ble.w	402826 <_svfprintf_r+0xa36>
  402a12:	2e10      	cmp	r6, #16
  402a14:	4d03      	ldr	r5, [pc, #12]	; (402a24 <_svfprintf_r+0xc34>)
  402a16:	dd23      	ble.n	402a60 <_svfprintf_r+0xc70>
  402a18:	4622      	mov	r2, r4
  402a1a:	f04f 0b10 	mov.w	fp, #16
  402a1e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402a20:	e007      	b.n	402a32 <_svfprintf_r+0xc42>
  402a22:	bf00      	nop
  402a24:	00407488 	.word	0x00407488
  402a28:	3e10      	subs	r6, #16
  402a2a:	2e10      	cmp	r6, #16
  402a2c:	f108 0808 	add.w	r8, r8, #8
  402a30:	dd15      	ble.n	402a5e <_svfprintf_r+0xc6e>
  402a32:	3701      	adds	r7, #1
  402a34:	3210      	adds	r2, #16
  402a36:	2f07      	cmp	r7, #7
  402a38:	9227      	str	r2, [sp, #156]	; 0x9c
  402a3a:	9726      	str	r7, [sp, #152]	; 0x98
  402a3c:	e888 0820 	stmia.w	r8, {r5, fp}
  402a40:	ddf2      	ble.n	402a28 <_svfprintf_r+0xc38>
  402a42:	aa25      	add	r2, sp, #148	; 0x94
  402a44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a46:	4620      	mov	r0, r4
  402a48:	f002 fbc8 	bl	4051dc <__ssprint_r>
  402a4c:	2800      	cmp	r0, #0
  402a4e:	f47f aaa1 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402a52:	3e10      	subs	r6, #16
  402a54:	2e10      	cmp	r6, #16
  402a56:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402a58:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a5a:	46c8      	mov	r8, r9
  402a5c:	dce9      	bgt.n	402a32 <_svfprintf_r+0xc42>
  402a5e:	4614      	mov	r4, r2
  402a60:	3701      	adds	r7, #1
  402a62:	4434      	add	r4, r6
  402a64:	2f07      	cmp	r7, #7
  402a66:	9427      	str	r4, [sp, #156]	; 0x9c
  402a68:	9726      	str	r7, [sp, #152]	; 0x98
  402a6a:	e888 0060 	stmia.w	r8, {r5, r6}
  402a6e:	f77f aed8 	ble.w	402822 <_svfprintf_r+0xa32>
  402a72:	aa25      	add	r2, sp, #148	; 0x94
  402a74:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a76:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a78:	f002 fbb0 	bl	4051dc <__ssprint_r>
  402a7c:	2800      	cmp	r0, #0
  402a7e:	f47f aa89 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402a82:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a84:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a86:	46c8      	mov	r8, r9
  402a88:	e6cd      	b.n	402826 <_svfprintf_r+0xa36>
  402a8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a8c:	6814      	ldr	r4, [r2, #0]
  402a8e:	4613      	mov	r3, r2
  402a90:	3304      	adds	r3, #4
  402a92:	17e5      	asrs	r5, r4, #31
  402a94:	930f      	str	r3, [sp, #60]	; 0x3c
  402a96:	4622      	mov	r2, r4
  402a98:	462b      	mov	r3, r5
  402a9a:	e4fc      	b.n	402496 <_svfprintf_r+0x6a6>
  402a9c:	3204      	adds	r2, #4
  402a9e:	681c      	ldr	r4, [r3, #0]
  402aa0:	920f      	str	r2, [sp, #60]	; 0x3c
  402aa2:	2301      	movs	r3, #1
  402aa4:	2500      	movs	r5, #0
  402aa6:	f7ff ba96 	b.w	401fd6 <_svfprintf_r+0x1e6>
  402aaa:	681c      	ldr	r4, [r3, #0]
  402aac:	3304      	adds	r3, #4
  402aae:	930f      	str	r3, [sp, #60]	; 0x3c
  402ab0:	2500      	movs	r5, #0
  402ab2:	e423      	b.n	4022fc <_svfprintf_r+0x50c>
  402ab4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402ab6:	460a      	mov	r2, r1
  402ab8:	3204      	adds	r2, #4
  402aba:	680c      	ldr	r4, [r1, #0]
  402abc:	920f      	str	r2, [sp, #60]	; 0x3c
  402abe:	2500      	movs	r5, #0
  402ac0:	f7ff ba89 	b.w	401fd6 <_svfprintf_r+0x1e6>
  402ac4:	4614      	mov	r4, r2
  402ac6:	3301      	adds	r3, #1
  402ac8:	4434      	add	r4, r6
  402aca:	2b07      	cmp	r3, #7
  402acc:	9427      	str	r4, [sp, #156]	; 0x9c
  402ace:	9326      	str	r3, [sp, #152]	; 0x98
  402ad0:	e888 0060 	stmia.w	r8, {r5, r6}
  402ad4:	f77f ab6a 	ble.w	4021ac <_svfprintf_r+0x3bc>
  402ad8:	e6b2      	b.n	402840 <_svfprintf_r+0xa50>
  402ada:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402ade:	f8cd b01c 	str.w	fp, [sp, #28]
  402ae2:	ae42      	add	r6, sp, #264	; 0x108
  402ae4:	3430      	adds	r4, #48	; 0x30
  402ae6:	2301      	movs	r3, #1
  402ae8:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402aec:	930e      	str	r3, [sp, #56]	; 0x38
  402aee:	f7ff ba8f 	b.w	402010 <_svfprintf_r+0x220>
  402af2:	aa25      	add	r2, sp, #148	; 0x94
  402af4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402af6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402af8:	f002 fb70 	bl	4051dc <__ssprint_r>
  402afc:	2800      	cmp	r0, #0
  402afe:	f47f aa49 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402b02:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b04:	46c8      	mov	r8, r9
  402b06:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402b08:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b0a:	429a      	cmp	r2, r3
  402b0c:	db44      	blt.n	402b98 <_svfprintf_r+0xda8>
  402b0e:	9b07      	ldr	r3, [sp, #28]
  402b10:	07d9      	lsls	r1, r3, #31
  402b12:	d441      	bmi.n	402b98 <_svfprintf_r+0xda8>
  402b14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b16:	9812      	ldr	r0, [sp, #72]	; 0x48
  402b18:	1a9a      	subs	r2, r3, r2
  402b1a:	1a1d      	subs	r5, r3, r0
  402b1c:	4295      	cmp	r5, r2
  402b1e:	bfa8      	it	ge
  402b20:	4615      	movge	r5, r2
  402b22:	2d00      	cmp	r5, #0
  402b24:	dd0e      	ble.n	402b44 <_svfprintf_r+0xd54>
  402b26:	9926      	ldr	r1, [sp, #152]	; 0x98
  402b28:	f8c8 5004 	str.w	r5, [r8, #4]
  402b2c:	3101      	adds	r1, #1
  402b2e:	4406      	add	r6, r0
  402b30:	442c      	add	r4, r5
  402b32:	2907      	cmp	r1, #7
  402b34:	f8c8 6000 	str.w	r6, [r8]
  402b38:	9427      	str	r4, [sp, #156]	; 0x9c
  402b3a:	9126      	str	r1, [sp, #152]	; 0x98
  402b3c:	f300 823b 	bgt.w	402fb6 <_svfprintf_r+0x11c6>
  402b40:	f108 0808 	add.w	r8, r8, #8
  402b44:	2d00      	cmp	r5, #0
  402b46:	bfac      	ite	ge
  402b48:	1b56      	subge	r6, r2, r5
  402b4a:	4616      	movlt	r6, r2
  402b4c:	2e00      	cmp	r6, #0
  402b4e:	f77f ab2f 	ble.w	4021b0 <_svfprintf_r+0x3c0>
  402b52:	2e10      	cmp	r6, #16
  402b54:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b56:	4db0      	ldr	r5, [pc, #704]	; (402e18 <_svfprintf_r+0x1028>)
  402b58:	ddb5      	ble.n	402ac6 <_svfprintf_r+0xcd6>
  402b5a:	4622      	mov	r2, r4
  402b5c:	2710      	movs	r7, #16
  402b5e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402b62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402b64:	e004      	b.n	402b70 <_svfprintf_r+0xd80>
  402b66:	f108 0808 	add.w	r8, r8, #8
  402b6a:	3e10      	subs	r6, #16
  402b6c:	2e10      	cmp	r6, #16
  402b6e:	dda9      	ble.n	402ac4 <_svfprintf_r+0xcd4>
  402b70:	3301      	adds	r3, #1
  402b72:	3210      	adds	r2, #16
  402b74:	2b07      	cmp	r3, #7
  402b76:	9227      	str	r2, [sp, #156]	; 0x9c
  402b78:	9326      	str	r3, [sp, #152]	; 0x98
  402b7a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b7e:	ddf2      	ble.n	402b66 <_svfprintf_r+0xd76>
  402b80:	aa25      	add	r2, sp, #148	; 0x94
  402b82:	4621      	mov	r1, r4
  402b84:	4658      	mov	r0, fp
  402b86:	f002 fb29 	bl	4051dc <__ssprint_r>
  402b8a:	2800      	cmp	r0, #0
  402b8c:	f47f aa02 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402b90:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402b92:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b94:	46c8      	mov	r8, r9
  402b96:	e7e8      	b.n	402b6a <_svfprintf_r+0xd7a>
  402b98:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b9a:	9819      	ldr	r0, [sp, #100]	; 0x64
  402b9c:	991a      	ldr	r1, [sp, #104]	; 0x68
  402b9e:	f8c8 1000 	str.w	r1, [r8]
  402ba2:	3301      	adds	r3, #1
  402ba4:	4404      	add	r4, r0
  402ba6:	2b07      	cmp	r3, #7
  402ba8:	9427      	str	r4, [sp, #156]	; 0x9c
  402baa:	f8c8 0004 	str.w	r0, [r8, #4]
  402bae:	9326      	str	r3, [sp, #152]	; 0x98
  402bb0:	f300 81f5 	bgt.w	402f9e <_svfprintf_r+0x11ae>
  402bb4:	f108 0808 	add.w	r8, r8, #8
  402bb8:	e7ac      	b.n	402b14 <_svfprintf_r+0xd24>
  402bba:	9b07      	ldr	r3, [sp, #28]
  402bbc:	07da      	lsls	r2, r3, #31
  402bbe:	f53f adfe 	bmi.w	4027be <_svfprintf_r+0x9ce>
  402bc2:	3701      	adds	r7, #1
  402bc4:	3401      	adds	r4, #1
  402bc6:	2301      	movs	r3, #1
  402bc8:	2f07      	cmp	r7, #7
  402bca:	9427      	str	r4, [sp, #156]	; 0x9c
  402bcc:	9726      	str	r7, [sp, #152]	; 0x98
  402bce:	f8c8 6000 	str.w	r6, [r8]
  402bd2:	f8c8 3004 	str.w	r3, [r8, #4]
  402bd6:	f77f ae24 	ble.w	402822 <_svfprintf_r+0xa32>
  402bda:	e74a      	b.n	402a72 <_svfprintf_r+0xc82>
  402bdc:	aa25      	add	r2, sp, #148	; 0x94
  402bde:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402be0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402be2:	f002 fafb 	bl	4051dc <__ssprint_r>
  402be6:	2800      	cmp	r0, #0
  402be8:	f47f a9d4 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402bec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402bee:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402bf0:	46c8      	mov	r8, r9
  402bf2:	e5f2      	b.n	4027da <_svfprintf_r+0x9ea>
  402bf4:	aa25      	add	r2, sp, #148	; 0x94
  402bf6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402bf8:	980c      	ldr	r0, [sp, #48]	; 0x30
  402bfa:	f002 faef 	bl	4051dc <__ssprint_r>
  402bfe:	2800      	cmp	r0, #0
  402c00:	f47f a9c8 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402c04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c06:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c08:	46c8      	mov	r8, r9
  402c0a:	e5f5      	b.n	4027f8 <_svfprintf_r+0xa08>
  402c0c:	464e      	mov	r6, r9
  402c0e:	f7ff b9ff 	b.w	402010 <_svfprintf_r+0x220>
  402c12:	aa25      	add	r2, sp, #148	; 0x94
  402c14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c16:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c18:	f002 fae0 	bl	4051dc <__ssprint_r>
  402c1c:	2800      	cmp	r0, #0
  402c1e:	f47f a9b9 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402c22:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c24:	46c8      	mov	r8, r9
  402c26:	f7ff ba74 	b.w	402112 <_svfprintf_r+0x322>
  402c2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402c2c:	4622      	mov	r2, r4
  402c2e:	4620      	mov	r0, r4
  402c30:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402c32:	4623      	mov	r3, r4
  402c34:	4621      	mov	r1, r4
  402c36:	f003 fb87 	bl	406348 <__aeabi_dcmpun>
  402c3a:	2800      	cmp	r0, #0
  402c3c:	f040 8286 	bne.w	40314c <_svfprintf_r+0x135c>
  402c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402c42:	3301      	adds	r3, #1
  402c44:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c46:	f023 0320 	bic.w	r3, r3, #32
  402c4a:	930e      	str	r3, [sp, #56]	; 0x38
  402c4c:	f000 81e2 	beq.w	403014 <_svfprintf_r+0x1224>
  402c50:	2b47      	cmp	r3, #71	; 0x47
  402c52:	f000 811e 	beq.w	402e92 <_svfprintf_r+0x10a2>
  402c56:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402c5a:	9307      	str	r3, [sp, #28]
  402c5c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402c5e:	1e1f      	subs	r7, r3, #0
  402c60:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402c62:	9308      	str	r3, [sp, #32]
  402c64:	bfbb      	ittet	lt
  402c66:	463b      	movlt	r3, r7
  402c68:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402c6c:	2300      	movge	r3, #0
  402c6e:	232d      	movlt	r3, #45	; 0x2d
  402c70:	9310      	str	r3, [sp, #64]	; 0x40
  402c72:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c74:	2b66      	cmp	r3, #102	; 0x66
  402c76:	f000 81bb 	beq.w	402ff0 <_svfprintf_r+0x1200>
  402c7a:	2b46      	cmp	r3, #70	; 0x46
  402c7c:	f000 80df 	beq.w	402e3e <_svfprintf_r+0x104e>
  402c80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c82:	9a08      	ldr	r2, [sp, #32]
  402c84:	2b45      	cmp	r3, #69	; 0x45
  402c86:	bf0c      	ite	eq
  402c88:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402c8a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402c8c:	a823      	add	r0, sp, #140	; 0x8c
  402c8e:	a920      	add	r1, sp, #128	; 0x80
  402c90:	bf08      	it	eq
  402c92:	1c5d      	addeq	r5, r3, #1
  402c94:	9004      	str	r0, [sp, #16]
  402c96:	9103      	str	r1, [sp, #12]
  402c98:	a81f      	add	r0, sp, #124	; 0x7c
  402c9a:	2102      	movs	r1, #2
  402c9c:	463b      	mov	r3, r7
  402c9e:	9002      	str	r0, [sp, #8]
  402ca0:	9501      	str	r5, [sp, #4]
  402ca2:	9100      	str	r1, [sp, #0]
  402ca4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ca6:	f000 fb6f 	bl	403388 <_dtoa_r>
  402caa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cac:	2b67      	cmp	r3, #103	; 0x67
  402cae:	4606      	mov	r6, r0
  402cb0:	f040 81e0 	bne.w	403074 <_svfprintf_r+0x1284>
  402cb4:	f01b 0f01 	tst.w	fp, #1
  402cb8:	f000 8246 	beq.w	403148 <_svfprintf_r+0x1358>
  402cbc:	1974      	adds	r4, r6, r5
  402cbe:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402cc0:	9808      	ldr	r0, [sp, #32]
  402cc2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402cc4:	4639      	mov	r1, r7
  402cc6:	f003 fb0d 	bl	4062e4 <__aeabi_dcmpeq>
  402cca:	2800      	cmp	r0, #0
  402ccc:	f040 8165 	bne.w	402f9a <_svfprintf_r+0x11aa>
  402cd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402cd2:	42a3      	cmp	r3, r4
  402cd4:	d206      	bcs.n	402ce4 <_svfprintf_r+0xef4>
  402cd6:	2130      	movs	r1, #48	; 0x30
  402cd8:	1c5a      	adds	r2, r3, #1
  402cda:	9223      	str	r2, [sp, #140]	; 0x8c
  402cdc:	7019      	strb	r1, [r3, #0]
  402cde:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402ce0:	429c      	cmp	r4, r3
  402ce2:	d8f9      	bhi.n	402cd8 <_svfprintf_r+0xee8>
  402ce4:	1b9b      	subs	r3, r3, r6
  402ce6:	9313      	str	r3, [sp, #76]	; 0x4c
  402ce8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402cea:	2b47      	cmp	r3, #71	; 0x47
  402cec:	f000 80e9 	beq.w	402ec2 <_svfprintf_r+0x10d2>
  402cf0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cf2:	2b65      	cmp	r3, #101	; 0x65
  402cf4:	f340 81cd 	ble.w	403092 <_svfprintf_r+0x12a2>
  402cf8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402cfa:	2b66      	cmp	r3, #102	; 0x66
  402cfc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402cfe:	9312      	str	r3, [sp, #72]	; 0x48
  402d00:	f000 819e 	beq.w	403040 <_svfprintf_r+0x1250>
  402d04:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d06:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402d08:	4619      	mov	r1, r3
  402d0a:	4291      	cmp	r1, r2
  402d0c:	f300 818a 	bgt.w	403024 <_svfprintf_r+0x1234>
  402d10:	f01b 0f01 	tst.w	fp, #1
  402d14:	f040 8213 	bne.w	40313e <_svfprintf_r+0x134e>
  402d18:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402d1c:	9308      	str	r3, [sp, #32]
  402d1e:	2367      	movs	r3, #103	; 0x67
  402d20:	920e      	str	r2, [sp, #56]	; 0x38
  402d22:	9311      	str	r3, [sp, #68]	; 0x44
  402d24:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402d26:	2b00      	cmp	r3, #0
  402d28:	f040 80c4 	bne.w	402eb4 <_svfprintf_r+0x10c4>
  402d2c:	930a      	str	r3, [sp, #40]	; 0x28
  402d2e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d32:	f7ff b975 	b.w	402020 <_svfprintf_r+0x230>
  402d36:	4635      	mov	r5, r6
  402d38:	460c      	mov	r4, r1
  402d3a:	4646      	mov	r6, r8
  402d3c:	4690      	mov	r8, r2
  402d3e:	3301      	adds	r3, #1
  402d40:	443c      	add	r4, r7
  402d42:	2b07      	cmp	r3, #7
  402d44:	9427      	str	r4, [sp, #156]	; 0x9c
  402d46:	9326      	str	r3, [sp, #152]	; 0x98
  402d48:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d4c:	f73f aed1 	bgt.w	402af2 <_svfprintf_r+0xd02>
  402d50:	f108 0808 	add.w	r8, r8, #8
  402d54:	e6d7      	b.n	402b06 <_svfprintf_r+0xd16>
  402d56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402d58:	6813      	ldr	r3, [r2, #0]
  402d5a:	3204      	adds	r2, #4
  402d5c:	920f      	str	r2, [sp, #60]	; 0x3c
  402d5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402d60:	601a      	str	r2, [r3, #0]
  402d62:	f7ff b86c 	b.w	401e3e <_svfprintf_r+0x4e>
  402d66:	aa25      	add	r2, sp, #148	; 0x94
  402d68:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d6a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d6c:	f002 fa36 	bl	4051dc <__ssprint_r>
  402d70:	2800      	cmp	r0, #0
  402d72:	f47f a90f 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402d76:	46c8      	mov	r8, r9
  402d78:	e48d      	b.n	402696 <_svfprintf_r+0x8a6>
  402d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d7c:	4a27      	ldr	r2, [pc, #156]	; (402e1c <_svfprintf_r+0x102c>)
  402d7e:	f8c8 2000 	str.w	r2, [r8]
  402d82:	3301      	adds	r3, #1
  402d84:	3401      	adds	r4, #1
  402d86:	2201      	movs	r2, #1
  402d88:	2b07      	cmp	r3, #7
  402d8a:	9427      	str	r4, [sp, #156]	; 0x9c
  402d8c:	9326      	str	r3, [sp, #152]	; 0x98
  402d8e:	f8c8 2004 	str.w	r2, [r8, #4]
  402d92:	dc72      	bgt.n	402e7a <_svfprintf_r+0x108a>
  402d94:	f108 0808 	add.w	r8, r8, #8
  402d98:	b929      	cbnz	r1, 402da6 <_svfprintf_r+0xfb6>
  402d9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d9c:	b91b      	cbnz	r3, 402da6 <_svfprintf_r+0xfb6>
  402d9e:	9b07      	ldr	r3, [sp, #28]
  402da0:	07d8      	lsls	r0, r3, #31
  402da2:	f57f aa05 	bpl.w	4021b0 <_svfprintf_r+0x3c0>
  402da6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402da8:	9819      	ldr	r0, [sp, #100]	; 0x64
  402daa:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402dac:	f8c8 2000 	str.w	r2, [r8]
  402db0:	3301      	adds	r3, #1
  402db2:	4602      	mov	r2, r0
  402db4:	4422      	add	r2, r4
  402db6:	2b07      	cmp	r3, #7
  402db8:	9227      	str	r2, [sp, #156]	; 0x9c
  402dba:	f8c8 0004 	str.w	r0, [r8, #4]
  402dbe:	9326      	str	r3, [sp, #152]	; 0x98
  402dc0:	f300 818d 	bgt.w	4030de <_svfprintf_r+0x12ee>
  402dc4:	f108 0808 	add.w	r8, r8, #8
  402dc8:	2900      	cmp	r1, #0
  402dca:	f2c0 8165 	blt.w	403098 <_svfprintf_r+0x12a8>
  402dce:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402dd0:	f8c8 6000 	str.w	r6, [r8]
  402dd4:	3301      	adds	r3, #1
  402dd6:	188c      	adds	r4, r1, r2
  402dd8:	2b07      	cmp	r3, #7
  402dda:	9427      	str	r4, [sp, #156]	; 0x9c
  402ddc:	9326      	str	r3, [sp, #152]	; 0x98
  402dde:	f8c8 1004 	str.w	r1, [r8, #4]
  402de2:	f77f a9e3 	ble.w	4021ac <_svfprintf_r+0x3bc>
  402de6:	e52b      	b.n	402840 <_svfprintf_r+0xa50>
  402de8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402dea:	9909      	ldr	r1, [sp, #36]	; 0x24
  402dec:	6813      	ldr	r3, [r2, #0]
  402dee:	17cd      	asrs	r5, r1, #31
  402df0:	4608      	mov	r0, r1
  402df2:	3204      	adds	r2, #4
  402df4:	4629      	mov	r1, r5
  402df6:	920f      	str	r2, [sp, #60]	; 0x3c
  402df8:	e9c3 0100 	strd	r0, r1, [r3]
  402dfc:	f7ff b81f 	b.w	401e3e <_svfprintf_r+0x4e>
  402e00:	aa25      	add	r2, sp, #148	; 0x94
  402e02:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e04:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e06:	f002 f9e9 	bl	4051dc <__ssprint_r>
  402e0a:	2800      	cmp	r0, #0
  402e0c:	f47f a8c2 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402e10:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e12:	46c8      	mov	r8, r9
  402e14:	e458      	b.n	4026c8 <_svfprintf_r+0x8d8>
  402e16:	bf00      	nop
  402e18:	00407488 	.word	0x00407488
  402e1c:	00407474 	.word	0x00407474
  402e20:	2140      	movs	r1, #64	; 0x40
  402e22:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e24:	f001 fa02 	bl	40422c <_malloc_r>
  402e28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402e2a:	6010      	str	r0, [r2, #0]
  402e2c:	6110      	str	r0, [r2, #16]
  402e2e:	2800      	cmp	r0, #0
  402e30:	f000 81ec 	beq.w	40320c <_svfprintf_r+0x141c>
  402e34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402e36:	2340      	movs	r3, #64	; 0x40
  402e38:	6153      	str	r3, [r2, #20]
  402e3a:	f7fe bff0 	b.w	401e1e <_svfprintf_r+0x2e>
  402e3e:	a823      	add	r0, sp, #140	; 0x8c
  402e40:	a920      	add	r1, sp, #128	; 0x80
  402e42:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402e44:	9004      	str	r0, [sp, #16]
  402e46:	9103      	str	r1, [sp, #12]
  402e48:	a81f      	add	r0, sp, #124	; 0x7c
  402e4a:	2103      	movs	r1, #3
  402e4c:	9002      	str	r0, [sp, #8]
  402e4e:	9a08      	ldr	r2, [sp, #32]
  402e50:	9401      	str	r4, [sp, #4]
  402e52:	463b      	mov	r3, r7
  402e54:	9100      	str	r1, [sp, #0]
  402e56:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e58:	f000 fa96 	bl	403388 <_dtoa_r>
  402e5c:	4625      	mov	r5, r4
  402e5e:	4606      	mov	r6, r0
  402e60:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402e62:	2b46      	cmp	r3, #70	; 0x46
  402e64:	eb06 0405 	add.w	r4, r6, r5
  402e68:	f47f af29 	bne.w	402cbe <_svfprintf_r+0xece>
  402e6c:	7833      	ldrb	r3, [r6, #0]
  402e6e:	2b30      	cmp	r3, #48	; 0x30
  402e70:	f000 8172 	beq.w	403158 <_svfprintf_r+0x1368>
  402e74:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402e76:	442c      	add	r4, r5
  402e78:	e721      	b.n	402cbe <_svfprintf_r+0xece>
  402e7a:	aa25      	add	r2, sp, #148	; 0x94
  402e7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e7e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e80:	f002 f9ac 	bl	4051dc <__ssprint_r>
  402e84:	2800      	cmp	r0, #0
  402e86:	f47f a885 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402e8a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402e8c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e8e:	46c8      	mov	r8, r9
  402e90:	e782      	b.n	402d98 <_svfprintf_r+0xfa8>
  402e92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e94:	2b00      	cmp	r3, #0
  402e96:	bf08      	it	eq
  402e98:	2301      	moveq	r3, #1
  402e9a:	930a      	str	r3, [sp, #40]	; 0x28
  402e9c:	e6db      	b.n	402c56 <_svfprintf_r+0xe66>
  402e9e:	4630      	mov	r0, r6
  402ea0:	940a      	str	r4, [sp, #40]	; 0x28
  402ea2:	f002 f92d 	bl	405100 <strlen>
  402ea6:	950f      	str	r5, [sp, #60]	; 0x3c
  402ea8:	900e      	str	r0, [sp, #56]	; 0x38
  402eaa:	f8cd b01c 	str.w	fp, [sp, #28]
  402eae:	4603      	mov	r3, r0
  402eb0:	f7ff b9fb 	b.w	4022aa <_svfprintf_r+0x4ba>
  402eb4:	272d      	movs	r7, #45	; 0x2d
  402eb6:	2300      	movs	r3, #0
  402eb8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402ebc:	930a      	str	r3, [sp, #40]	; 0x28
  402ebe:	f7ff b8b0 	b.w	402022 <_svfprintf_r+0x232>
  402ec2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402ec4:	9312      	str	r3, [sp, #72]	; 0x48
  402ec6:	461a      	mov	r2, r3
  402ec8:	3303      	adds	r3, #3
  402eca:	db04      	blt.n	402ed6 <_svfprintf_r+0x10e6>
  402ecc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402ece:	4619      	mov	r1, r3
  402ed0:	4291      	cmp	r1, r2
  402ed2:	f6bf af17 	bge.w	402d04 <_svfprintf_r+0xf14>
  402ed6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ed8:	3b02      	subs	r3, #2
  402eda:	9311      	str	r3, [sp, #68]	; 0x44
  402edc:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402ee0:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402ee4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ee6:	3b01      	subs	r3, #1
  402ee8:	2b00      	cmp	r3, #0
  402eea:	931f      	str	r3, [sp, #124]	; 0x7c
  402eec:	bfbd      	ittte	lt
  402eee:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402ef0:	f1c3 0301 	rsblt	r3, r3, #1
  402ef4:	222d      	movlt	r2, #45	; 0x2d
  402ef6:	222b      	movge	r2, #43	; 0x2b
  402ef8:	2b09      	cmp	r3, #9
  402efa:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402efe:	f340 8116 	ble.w	40312e <_svfprintf_r+0x133e>
  402f02:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402f06:	4620      	mov	r0, r4
  402f08:	4dad      	ldr	r5, [pc, #692]	; (4031c0 <_svfprintf_r+0x13d0>)
  402f0a:	e000      	b.n	402f0e <_svfprintf_r+0x111e>
  402f0c:	4610      	mov	r0, r2
  402f0e:	fb85 1203 	smull	r1, r2, r5, r3
  402f12:	17d9      	asrs	r1, r3, #31
  402f14:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402f18:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402f1c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402f20:	3230      	adds	r2, #48	; 0x30
  402f22:	2909      	cmp	r1, #9
  402f24:	f800 2c01 	strb.w	r2, [r0, #-1]
  402f28:	460b      	mov	r3, r1
  402f2a:	f100 32ff 	add.w	r2, r0, #4294967295
  402f2e:	dced      	bgt.n	402f0c <_svfprintf_r+0x111c>
  402f30:	3330      	adds	r3, #48	; 0x30
  402f32:	3802      	subs	r0, #2
  402f34:	b2d9      	uxtb	r1, r3
  402f36:	4284      	cmp	r4, r0
  402f38:	f802 1c01 	strb.w	r1, [r2, #-1]
  402f3c:	f240 815f 	bls.w	4031fe <_svfprintf_r+0x140e>
  402f40:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402f44:	4613      	mov	r3, r2
  402f46:	e001      	b.n	402f4c <_svfprintf_r+0x115c>
  402f48:	f813 1b01 	ldrb.w	r1, [r3], #1
  402f4c:	f800 1b01 	strb.w	r1, [r0], #1
  402f50:	42a3      	cmp	r3, r4
  402f52:	d1f9      	bne.n	402f48 <_svfprintf_r+0x1158>
  402f54:	3301      	adds	r3, #1
  402f56:	1a9b      	subs	r3, r3, r2
  402f58:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402f5c:	4413      	add	r3, r2
  402f5e:	aa21      	add	r2, sp, #132	; 0x84
  402f60:	1a9b      	subs	r3, r3, r2
  402f62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f64:	931b      	str	r3, [sp, #108]	; 0x6c
  402f66:	2a01      	cmp	r2, #1
  402f68:	4413      	add	r3, r2
  402f6a:	930e      	str	r3, [sp, #56]	; 0x38
  402f6c:	f340 8113 	ble.w	403196 <_svfprintf_r+0x13a6>
  402f70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402f72:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402f74:	4413      	add	r3, r2
  402f76:	930e      	str	r3, [sp, #56]	; 0x38
  402f78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402f7c:	9308      	str	r3, [sp, #32]
  402f7e:	2300      	movs	r3, #0
  402f80:	9312      	str	r3, [sp, #72]	; 0x48
  402f82:	e6cf      	b.n	402d24 <_svfprintf_r+0xf34>
  402f84:	aa25      	add	r2, sp, #148	; 0x94
  402f86:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f88:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f8a:	f002 f927 	bl	4051dc <__ssprint_r>
  402f8e:	2800      	cmp	r0, #0
  402f90:	f47f a800 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402f94:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f96:	46c8      	mov	r8, r9
  402f98:	e4d6      	b.n	402948 <_svfprintf_r+0xb58>
  402f9a:	4623      	mov	r3, r4
  402f9c:	e6a2      	b.n	402ce4 <_svfprintf_r+0xef4>
  402f9e:	aa25      	add	r2, sp, #148	; 0x94
  402fa0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fa2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fa4:	f002 f91a 	bl	4051dc <__ssprint_r>
  402fa8:	2800      	cmp	r0, #0
  402faa:	f47e aff3 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402fae:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402fb0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fb2:	46c8      	mov	r8, r9
  402fb4:	e5ae      	b.n	402b14 <_svfprintf_r+0xd24>
  402fb6:	aa25      	add	r2, sp, #148	; 0x94
  402fb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fba:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fbc:	f002 f90e 	bl	4051dc <__ssprint_r>
  402fc0:	2800      	cmp	r0, #0
  402fc2:	f47e afe7 	bne.w	401f94 <_svfprintf_r+0x1a4>
  402fc6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402fc8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fcc:	1a9a      	subs	r2, r3, r2
  402fce:	46c8      	mov	r8, r9
  402fd0:	e5b8      	b.n	402b44 <_svfprintf_r+0xd54>
  402fd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fd4:	9612      	str	r6, [sp, #72]	; 0x48
  402fd6:	2b06      	cmp	r3, #6
  402fd8:	bf28      	it	cs
  402fda:	2306      	movcs	r3, #6
  402fdc:	960a      	str	r6, [sp, #40]	; 0x28
  402fde:	4637      	mov	r7, r6
  402fe0:	9308      	str	r3, [sp, #32]
  402fe2:	950f      	str	r5, [sp, #60]	; 0x3c
  402fe4:	f8cd b01c 	str.w	fp, [sp, #28]
  402fe8:	930e      	str	r3, [sp, #56]	; 0x38
  402fea:	4e76      	ldr	r6, [pc, #472]	; (4031c4 <_svfprintf_r+0x13d4>)
  402fec:	f7ff b818 	b.w	402020 <_svfprintf_r+0x230>
  402ff0:	a823      	add	r0, sp, #140	; 0x8c
  402ff2:	a920      	add	r1, sp, #128	; 0x80
  402ff4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402ff6:	9004      	str	r0, [sp, #16]
  402ff8:	9103      	str	r1, [sp, #12]
  402ffa:	a81f      	add	r0, sp, #124	; 0x7c
  402ffc:	2103      	movs	r1, #3
  402ffe:	9002      	str	r0, [sp, #8]
  403000:	9a08      	ldr	r2, [sp, #32]
  403002:	9501      	str	r5, [sp, #4]
  403004:	463b      	mov	r3, r7
  403006:	9100      	str	r1, [sp, #0]
  403008:	980c      	ldr	r0, [sp, #48]	; 0x30
  40300a:	f000 f9bd 	bl	403388 <_dtoa_r>
  40300e:	4606      	mov	r6, r0
  403010:	1944      	adds	r4, r0, r5
  403012:	e72b      	b.n	402e6c <_svfprintf_r+0x107c>
  403014:	2306      	movs	r3, #6
  403016:	930a      	str	r3, [sp, #40]	; 0x28
  403018:	e61d      	b.n	402c56 <_svfprintf_r+0xe66>
  40301a:	272d      	movs	r7, #45	; 0x2d
  40301c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403020:	f7ff bace 	b.w	4025c0 <_svfprintf_r+0x7d0>
  403024:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403026:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403028:	4413      	add	r3, r2
  40302a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40302c:	930e      	str	r3, [sp, #56]	; 0x38
  40302e:	2a00      	cmp	r2, #0
  403030:	f340 80aa 	ble.w	403188 <_svfprintf_r+0x1398>
  403034:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403038:	9308      	str	r3, [sp, #32]
  40303a:	2367      	movs	r3, #103	; 0x67
  40303c:	9311      	str	r3, [sp, #68]	; 0x44
  40303e:	e671      	b.n	402d24 <_svfprintf_r+0xf34>
  403040:	2b00      	cmp	r3, #0
  403042:	f340 80b2 	ble.w	4031aa <_svfprintf_r+0x13ba>
  403046:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403048:	2a00      	cmp	r2, #0
  40304a:	f040 8093 	bne.w	403174 <_svfprintf_r+0x1384>
  40304e:	f01b 0f01 	tst.w	fp, #1
  403052:	f040 808f 	bne.w	403174 <_svfprintf_r+0x1384>
  403056:	9308      	str	r3, [sp, #32]
  403058:	930e      	str	r3, [sp, #56]	; 0x38
  40305a:	e663      	b.n	402d24 <_svfprintf_r+0xf34>
  40305c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40305e:	9308      	str	r3, [sp, #32]
  403060:	930e      	str	r3, [sp, #56]	; 0x38
  403062:	900a      	str	r0, [sp, #40]	; 0x28
  403064:	950f      	str	r5, [sp, #60]	; 0x3c
  403066:	f8cd b01c 	str.w	fp, [sp, #28]
  40306a:	9012      	str	r0, [sp, #72]	; 0x48
  40306c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403070:	f7fe bfd6 	b.w	402020 <_svfprintf_r+0x230>
  403074:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403076:	2b47      	cmp	r3, #71	; 0x47
  403078:	f47f ae20 	bne.w	402cbc <_svfprintf_r+0xecc>
  40307c:	f01b 0f01 	tst.w	fp, #1
  403080:	f47f aeee 	bne.w	402e60 <_svfprintf_r+0x1070>
  403084:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403086:	1b9b      	subs	r3, r3, r6
  403088:	9313      	str	r3, [sp, #76]	; 0x4c
  40308a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40308c:	2b47      	cmp	r3, #71	; 0x47
  40308e:	f43f af18 	beq.w	402ec2 <_svfprintf_r+0x10d2>
  403092:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403094:	9312      	str	r3, [sp, #72]	; 0x48
  403096:	e721      	b.n	402edc <_svfprintf_r+0x10ec>
  403098:	424f      	negs	r7, r1
  40309a:	3110      	adds	r1, #16
  40309c:	4d4a      	ldr	r5, [pc, #296]	; (4031c8 <_svfprintf_r+0x13d8>)
  40309e:	da2f      	bge.n	403100 <_svfprintf_r+0x1310>
  4030a0:	2410      	movs	r4, #16
  4030a2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4030a6:	e004      	b.n	4030b2 <_svfprintf_r+0x12c2>
  4030a8:	f108 0808 	add.w	r8, r8, #8
  4030ac:	3f10      	subs	r7, #16
  4030ae:	2f10      	cmp	r7, #16
  4030b0:	dd26      	ble.n	403100 <_svfprintf_r+0x1310>
  4030b2:	3301      	adds	r3, #1
  4030b4:	3210      	adds	r2, #16
  4030b6:	2b07      	cmp	r3, #7
  4030b8:	9227      	str	r2, [sp, #156]	; 0x9c
  4030ba:	9326      	str	r3, [sp, #152]	; 0x98
  4030bc:	f8c8 5000 	str.w	r5, [r8]
  4030c0:	f8c8 4004 	str.w	r4, [r8, #4]
  4030c4:	ddf0      	ble.n	4030a8 <_svfprintf_r+0x12b8>
  4030c6:	aa25      	add	r2, sp, #148	; 0x94
  4030c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030ca:	4658      	mov	r0, fp
  4030cc:	f002 f886 	bl	4051dc <__ssprint_r>
  4030d0:	2800      	cmp	r0, #0
  4030d2:	f47e af5f 	bne.w	401f94 <_svfprintf_r+0x1a4>
  4030d6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030da:	46c8      	mov	r8, r9
  4030dc:	e7e6      	b.n	4030ac <_svfprintf_r+0x12bc>
  4030de:	aa25      	add	r2, sp, #148	; 0x94
  4030e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030e4:	f002 f87a 	bl	4051dc <__ssprint_r>
  4030e8:	2800      	cmp	r0, #0
  4030ea:	f47e af53 	bne.w	401f94 <_svfprintf_r+0x1a4>
  4030ee:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4030f0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4030f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030f4:	46c8      	mov	r8, r9
  4030f6:	e667      	b.n	402dc8 <_svfprintf_r+0xfd8>
  4030f8:	2000      	movs	r0, #0
  4030fa:	900a      	str	r0, [sp, #40]	; 0x28
  4030fc:	f7fe bed2 	b.w	401ea4 <_svfprintf_r+0xb4>
  403100:	3301      	adds	r3, #1
  403102:	443a      	add	r2, r7
  403104:	2b07      	cmp	r3, #7
  403106:	e888 00a0 	stmia.w	r8, {r5, r7}
  40310a:	9227      	str	r2, [sp, #156]	; 0x9c
  40310c:	9326      	str	r3, [sp, #152]	; 0x98
  40310e:	f108 0808 	add.w	r8, r8, #8
  403112:	f77f ae5c 	ble.w	402dce <_svfprintf_r+0xfde>
  403116:	aa25      	add	r2, sp, #148	; 0x94
  403118:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40311a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40311c:	f002 f85e 	bl	4051dc <__ssprint_r>
  403120:	2800      	cmp	r0, #0
  403122:	f47e af37 	bne.w	401f94 <_svfprintf_r+0x1a4>
  403126:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403128:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40312a:	46c8      	mov	r8, r9
  40312c:	e64f      	b.n	402dce <_svfprintf_r+0xfde>
  40312e:	3330      	adds	r3, #48	; 0x30
  403130:	2230      	movs	r2, #48	; 0x30
  403132:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403136:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40313a:	ab22      	add	r3, sp, #136	; 0x88
  40313c:	e70f      	b.n	402f5e <_svfprintf_r+0x116e>
  40313e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403140:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403142:	4413      	add	r3, r2
  403144:	930e      	str	r3, [sp, #56]	; 0x38
  403146:	e775      	b.n	403034 <_svfprintf_r+0x1244>
  403148:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40314a:	e5cb      	b.n	402ce4 <_svfprintf_r+0xef4>
  40314c:	4e1f      	ldr	r6, [pc, #124]	; (4031cc <_svfprintf_r+0x13dc>)
  40314e:	4b20      	ldr	r3, [pc, #128]	; (4031d0 <_svfprintf_r+0x13e0>)
  403150:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403154:	f7ff ba36 	b.w	4025c4 <_svfprintf_r+0x7d4>
  403158:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40315a:	9808      	ldr	r0, [sp, #32]
  40315c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40315e:	4639      	mov	r1, r7
  403160:	f003 f8c0 	bl	4062e4 <__aeabi_dcmpeq>
  403164:	2800      	cmp	r0, #0
  403166:	f47f ae85 	bne.w	402e74 <_svfprintf_r+0x1084>
  40316a:	f1c5 0501 	rsb	r5, r5, #1
  40316e:	951f      	str	r5, [sp, #124]	; 0x7c
  403170:	442c      	add	r4, r5
  403172:	e5a4      	b.n	402cbe <_svfprintf_r+0xece>
  403174:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403176:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403178:	4413      	add	r3, r2
  40317a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40317c:	441a      	add	r2, r3
  40317e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403182:	920e      	str	r2, [sp, #56]	; 0x38
  403184:	9308      	str	r3, [sp, #32]
  403186:	e5cd      	b.n	402d24 <_svfprintf_r+0xf34>
  403188:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40318a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40318c:	f1c3 0301 	rsb	r3, r3, #1
  403190:	441a      	add	r2, r3
  403192:	4613      	mov	r3, r2
  403194:	e7d6      	b.n	403144 <_svfprintf_r+0x1354>
  403196:	f01b 0301 	ands.w	r3, fp, #1
  40319a:	9312      	str	r3, [sp, #72]	; 0x48
  40319c:	f47f aee8 	bne.w	402f70 <_svfprintf_r+0x1180>
  4031a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4031a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4031a6:	9308      	str	r3, [sp, #32]
  4031a8:	e5bc      	b.n	402d24 <_svfprintf_r+0xf34>
  4031aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4031ac:	b913      	cbnz	r3, 4031b4 <_svfprintf_r+0x13c4>
  4031ae:	f01b 0f01 	tst.w	fp, #1
  4031b2:	d002      	beq.n	4031ba <_svfprintf_r+0x13ca>
  4031b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4031b6:	3301      	adds	r3, #1
  4031b8:	e7df      	b.n	40317a <_svfprintf_r+0x138a>
  4031ba:	2301      	movs	r3, #1
  4031bc:	e74b      	b.n	403056 <_svfprintf_r+0x1266>
  4031be:	bf00      	nop
  4031c0:	66666667 	.word	0x66666667
  4031c4:	0040746c 	.word	0x0040746c
  4031c8:	00407488 	.word	0x00407488
  4031cc:	00407440 	.word	0x00407440
  4031d0:	0040743c 	.word	0x0040743c
  4031d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4031d6:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4031da:	6828      	ldr	r0, [r5, #0]
  4031dc:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4031e0:	900a      	str	r0, [sp, #40]	; 0x28
  4031e2:	4628      	mov	r0, r5
  4031e4:	3004      	adds	r0, #4
  4031e6:	46a2      	mov	sl, r4
  4031e8:	900f      	str	r0, [sp, #60]	; 0x3c
  4031ea:	f7fe be59 	b.w	401ea0 <_svfprintf_r+0xb0>
  4031ee:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031f2:	f7ff b86f 	b.w	4022d4 <_svfprintf_r+0x4e4>
  4031f6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4031fa:	f7ff ba1c 	b.w	402636 <_svfprintf_r+0x846>
  4031fe:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403202:	e6ac      	b.n	402f5e <_svfprintf_r+0x116e>
  403204:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403208:	f7ff b8f3 	b.w	4023f2 <_svfprintf_r+0x602>
  40320c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40320e:	230c      	movs	r3, #12
  403210:	6013      	str	r3, [r2, #0]
  403212:	f04f 33ff 	mov.w	r3, #4294967295
  403216:	9309      	str	r3, [sp, #36]	; 0x24
  403218:	f7fe bec5 	b.w	401fa6 <_svfprintf_r+0x1b6>
  40321c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403220:	f7ff b9a2 	b.w	402568 <_svfprintf_r+0x778>
  403224:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403228:	f7ff b97e 	b.w	402528 <_svfprintf_r+0x738>
  40322c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403230:	f7ff b961 	b.w	4024f6 <_svfprintf_r+0x706>
  403234:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403238:	f7ff b91a 	b.w	402470 <_svfprintf_r+0x680>

0040323c <register_fini>:
  40323c:	4b02      	ldr	r3, [pc, #8]	; (403248 <register_fini+0xc>)
  40323e:	b113      	cbz	r3, 403246 <register_fini+0xa>
  403240:	4802      	ldr	r0, [pc, #8]	; (40324c <register_fini+0x10>)
  403242:	f000 b805 	b.w	403250 <atexit>
  403246:	4770      	bx	lr
  403248:	00000000 	.word	0x00000000
  40324c:	004041dd 	.word	0x004041dd

00403250 <atexit>:
  403250:	2300      	movs	r3, #0
  403252:	4601      	mov	r1, r0
  403254:	461a      	mov	r2, r3
  403256:	4618      	mov	r0, r3
  403258:	f002 b83e 	b.w	4052d8 <__register_exitproc>

0040325c <quorem>:
  40325c:	6902      	ldr	r2, [r0, #16]
  40325e:	690b      	ldr	r3, [r1, #16]
  403260:	4293      	cmp	r3, r2
  403262:	f300 808d 	bgt.w	403380 <quorem+0x124>
  403266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40326a:	f103 38ff 	add.w	r8, r3, #4294967295
  40326e:	f101 0714 	add.w	r7, r1, #20
  403272:	f100 0b14 	add.w	fp, r0, #20
  403276:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40327a:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40327e:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403282:	b083      	sub	sp, #12
  403284:	3201      	adds	r2, #1
  403286:	fbb3 f9f2 	udiv	r9, r3, r2
  40328a:	eb0b 0304 	add.w	r3, fp, r4
  40328e:	9400      	str	r4, [sp, #0]
  403290:	eb07 0a04 	add.w	sl, r7, r4
  403294:	9301      	str	r3, [sp, #4]
  403296:	f1b9 0f00 	cmp.w	r9, #0
  40329a:	d039      	beq.n	403310 <quorem+0xb4>
  40329c:	2500      	movs	r5, #0
  40329e:	462e      	mov	r6, r5
  4032a0:	46bc      	mov	ip, r7
  4032a2:	46de      	mov	lr, fp
  4032a4:	f85c 4b04 	ldr.w	r4, [ip], #4
  4032a8:	f8de 3000 	ldr.w	r3, [lr]
  4032ac:	b2a2      	uxth	r2, r4
  4032ae:	fb09 5502 	mla	r5, r9, r2, r5
  4032b2:	0c22      	lsrs	r2, r4, #16
  4032b4:	0c2c      	lsrs	r4, r5, #16
  4032b6:	fb09 4202 	mla	r2, r9, r2, r4
  4032ba:	b2ad      	uxth	r5, r5
  4032bc:	1b75      	subs	r5, r6, r5
  4032be:	b296      	uxth	r6, r2
  4032c0:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4032c4:	fa15 f383 	uxtah	r3, r5, r3
  4032c8:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4032cc:	b29b      	uxth	r3, r3
  4032ce:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4032d2:	45e2      	cmp	sl, ip
  4032d4:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4032d8:	f84e 3b04 	str.w	r3, [lr], #4
  4032dc:	ea4f 4626 	mov.w	r6, r6, asr #16
  4032e0:	d2e0      	bcs.n	4032a4 <quorem+0x48>
  4032e2:	9b00      	ldr	r3, [sp, #0]
  4032e4:	f85b 3003 	ldr.w	r3, [fp, r3]
  4032e8:	b993      	cbnz	r3, 403310 <quorem+0xb4>
  4032ea:	9c01      	ldr	r4, [sp, #4]
  4032ec:	1f23      	subs	r3, r4, #4
  4032ee:	459b      	cmp	fp, r3
  4032f0:	d20c      	bcs.n	40330c <quorem+0xb0>
  4032f2:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4032f6:	b94b      	cbnz	r3, 40330c <quorem+0xb0>
  4032f8:	f1a4 0308 	sub.w	r3, r4, #8
  4032fc:	e002      	b.n	403304 <quorem+0xa8>
  4032fe:	681a      	ldr	r2, [r3, #0]
  403300:	3b04      	subs	r3, #4
  403302:	b91a      	cbnz	r2, 40330c <quorem+0xb0>
  403304:	459b      	cmp	fp, r3
  403306:	f108 38ff 	add.w	r8, r8, #4294967295
  40330a:	d3f8      	bcc.n	4032fe <quorem+0xa2>
  40330c:	f8c0 8010 	str.w	r8, [r0, #16]
  403310:	4604      	mov	r4, r0
  403312:	f001 fd59 	bl	404dc8 <__mcmp>
  403316:	2800      	cmp	r0, #0
  403318:	db2e      	blt.n	403378 <quorem+0x11c>
  40331a:	f109 0901 	add.w	r9, r9, #1
  40331e:	465d      	mov	r5, fp
  403320:	2300      	movs	r3, #0
  403322:	f857 1b04 	ldr.w	r1, [r7], #4
  403326:	6828      	ldr	r0, [r5, #0]
  403328:	b28a      	uxth	r2, r1
  40332a:	1a9a      	subs	r2, r3, r2
  40332c:	0c0b      	lsrs	r3, r1, #16
  40332e:	fa12 f280 	uxtah	r2, r2, r0
  403332:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403336:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40333a:	b292      	uxth	r2, r2
  40333c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403340:	45ba      	cmp	sl, r7
  403342:	f845 2b04 	str.w	r2, [r5], #4
  403346:	ea4f 4323 	mov.w	r3, r3, asr #16
  40334a:	d2ea      	bcs.n	403322 <quorem+0xc6>
  40334c:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403350:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403354:	b982      	cbnz	r2, 403378 <quorem+0x11c>
  403356:	1f1a      	subs	r2, r3, #4
  403358:	4593      	cmp	fp, r2
  40335a:	d20b      	bcs.n	403374 <quorem+0x118>
  40335c:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403360:	b942      	cbnz	r2, 403374 <quorem+0x118>
  403362:	3b08      	subs	r3, #8
  403364:	e002      	b.n	40336c <quorem+0x110>
  403366:	681a      	ldr	r2, [r3, #0]
  403368:	3b04      	subs	r3, #4
  40336a:	b91a      	cbnz	r2, 403374 <quorem+0x118>
  40336c:	459b      	cmp	fp, r3
  40336e:	f108 38ff 	add.w	r8, r8, #4294967295
  403372:	d3f8      	bcc.n	403366 <quorem+0x10a>
  403374:	f8c4 8010 	str.w	r8, [r4, #16]
  403378:	4648      	mov	r0, r9
  40337a:	b003      	add	sp, #12
  40337c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403380:	2000      	movs	r0, #0
  403382:	4770      	bx	lr
  403384:	0000      	movs	r0, r0
	...

00403388 <_dtoa_r>:
  403388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40338c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40338e:	b09b      	sub	sp, #108	; 0x6c
  403390:	4604      	mov	r4, r0
  403392:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403394:	4692      	mov	sl, r2
  403396:	469b      	mov	fp, r3
  403398:	b141      	cbz	r1, 4033ac <_dtoa_r+0x24>
  40339a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40339c:	604a      	str	r2, [r1, #4]
  40339e:	2301      	movs	r3, #1
  4033a0:	4093      	lsls	r3, r2
  4033a2:	608b      	str	r3, [r1, #8]
  4033a4:	f001 fb38 	bl	404a18 <_Bfree>
  4033a8:	2300      	movs	r3, #0
  4033aa:	6423      	str	r3, [r4, #64]	; 0x40
  4033ac:	f1bb 0f00 	cmp.w	fp, #0
  4033b0:	465d      	mov	r5, fp
  4033b2:	db35      	blt.n	403420 <_dtoa_r+0x98>
  4033b4:	2300      	movs	r3, #0
  4033b6:	6033      	str	r3, [r6, #0]
  4033b8:	4b9d      	ldr	r3, [pc, #628]	; (403630 <_dtoa_r+0x2a8>)
  4033ba:	43ab      	bics	r3, r5
  4033bc:	d015      	beq.n	4033ea <_dtoa_r+0x62>
  4033be:	4650      	mov	r0, sl
  4033c0:	4659      	mov	r1, fp
  4033c2:	2200      	movs	r2, #0
  4033c4:	2300      	movs	r3, #0
  4033c6:	f002 ff8d 	bl	4062e4 <__aeabi_dcmpeq>
  4033ca:	4680      	mov	r8, r0
  4033cc:	2800      	cmp	r0, #0
  4033ce:	d02d      	beq.n	40342c <_dtoa_r+0xa4>
  4033d0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4033d2:	2301      	movs	r3, #1
  4033d4:	6013      	str	r3, [r2, #0]
  4033d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4033d8:	2b00      	cmp	r3, #0
  4033da:	f000 80bd 	beq.w	403558 <_dtoa_r+0x1d0>
  4033de:	4895      	ldr	r0, [pc, #596]	; (403634 <_dtoa_r+0x2ac>)
  4033e0:	6018      	str	r0, [r3, #0]
  4033e2:	3801      	subs	r0, #1
  4033e4:	b01b      	add	sp, #108	; 0x6c
  4033e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4033ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4033ec:	f242 730f 	movw	r3, #9999	; 0x270f
  4033f0:	6013      	str	r3, [r2, #0]
  4033f2:	f1ba 0f00 	cmp.w	sl, #0
  4033f6:	d10d      	bne.n	403414 <_dtoa_r+0x8c>
  4033f8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4033fc:	b955      	cbnz	r5, 403414 <_dtoa_r+0x8c>
  4033fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403400:	488d      	ldr	r0, [pc, #564]	; (403638 <_dtoa_r+0x2b0>)
  403402:	2b00      	cmp	r3, #0
  403404:	d0ee      	beq.n	4033e4 <_dtoa_r+0x5c>
  403406:	f100 0308 	add.w	r3, r0, #8
  40340a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40340c:	6013      	str	r3, [r2, #0]
  40340e:	b01b      	add	sp, #108	; 0x6c
  403410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403414:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403416:	4889      	ldr	r0, [pc, #548]	; (40363c <_dtoa_r+0x2b4>)
  403418:	2b00      	cmp	r3, #0
  40341a:	d0e3      	beq.n	4033e4 <_dtoa_r+0x5c>
  40341c:	1cc3      	adds	r3, r0, #3
  40341e:	e7f4      	b.n	40340a <_dtoa_r+0x82>
  403420:	2301      	movs	r3, #1
  403422:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403426:	6033      	str	r3, [r6, #0]
  403428:	46ab      	mov	fp, r5
  40342a:	e7c5      	b.n	4033b8 <_dtoa_r+0x30>
  40342c:	aa18      	add	r2, sp, #96	; 0x60
  40342e:	ab19      	add	r3, sp, #100	; 0x64
  403430:	9201      	str	r2, [sp, #4]
  403432:	9300      	str	r3, [sp, #0]
  403434:	4652      	mov	r2, sl
  403436:	465b      	mov	r3, fp
  403438:	4620      	mov	r0, r4
  40343a:	f001 fd65 	bl	404f08 <__d2b>
  40343e:	0d2b      	lsrs	r3, r5, #20
  403440:	4681      	mov	r9, r0
  403442:	d071      	beq.n	403528 <_dtoa_r+0x1a0>
  403444:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403448:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40344c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40344e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403452:	4650      	mov	r0, sl
  403454:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403458:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40345c:	2200      	movs	r2, #0
  40345e:	4b78      	ldr	r3, [pc, #480]	; (403640 <_dtoa_r+0x2b8>)
  403460:	f002 fb24 	bl	405aac <__aeabi_dsub>
  403464:	a36c      	add	r3, pc, #432	; (adr r3, 403618 <_dtoa_r+0x290>)
  403466:	e9d3 2300 	ldrd	r2, r3, [r3]
  40346a:	f002 fcd3 	bl	405e14 <__aeabi_dmul>
  40346e:	a36c      	add	r3, pc, #432	; (adr r3, 403620 <_dtoa_r+0x298>)
  403470:	e9d3 2300 	ldrd	r2, r3, [r3]
  403474:	f002 fb1c 	bl	405ab0 <__adddf3>
  403478:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40347c:	4630      	mov	r0, r6
  40347e:	f002 fc63 	bl	405d48 <__aeabi_i2d>
  403482:	a369      	add	r3, pc, #420	; (adr r3, 403628 <_dtoa_r+0x2a0>)
  403484:	e9d3 2300 	ldrd	r2, r3, [r3]
  403488:	f002 fcc4 	bl	405e14 <__aeabi_dmul>
  40348c:	4602      	mov	r2, r0
  40348e:	460b      	mov	r3, r1
  403490:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403494:	f002 fb0c 	bl	405ab0 <__adddf3>
  403498:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40349c:	f002 ff6a 	bl	406374 <__aeabi_d2iz>
  4034a0:	2200      	movs	r2, #0
  4034a2:	9002      	str	r0, [sp, #8]
  4034a4:	2300      	movs	r3, #0
  4034a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4034aa:	f002 ff25 	bl	4062f8 <__aeabi_dcmplt>
  4034ae:	2800      	cmp	r0, #0
  4034b0:	f040 8173 	bne.w	40379a <_dtoa_r+0x412>
  4034b4:	9d02      	ldr	r5, [sp, #8]
  4034b6:	2d16      	cmp	r5, #22
  4034b8:	f200 815d 	bhi.w	403776 <_dtoa_r+0x3ee>
  4034bc:	4b61      	ldr	r3, [pc, #388]	; (403644 <_dtoa_r+0x2bc>)
  4034be:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4034c2:	e9d3 0100 	ldrd	r0, r1, [r3]
  4034c6:	4652      	mov	r2, sl
  4034c8:	465b      	mov	r3, fp
  4034ca:	f002 ff33 	bl	406334 <__aeabi_dcmpgt>
  4034ce:	2800      	cmp	r0, #0
  4034d0:	f000 81c5 	beq.w	40385e <_dtoa_r+0x4d6>
  4034d4:	1e6b      	subs	r3, r5, #1
  4034d6:	9302      	str	r3, [sp, #8]
  4034d8:	2300      	movs	r3, #0
  4034da:	930e      	str	r3, [sp, #56]	; 0x38
  4034dc:	1bbf      	subs	r7, r7, r6
  4034de:	1e7b      	subs	r3, r7, #1
  4034e0:	9306      	str	r3, [sp, #24]
  4034e2:	f100 8154 	bmi.w	40378e <_dtoa_r+0x406>
  4034e6:	2300      	movs	r3, #0
  4034e8:	9308      	str	r3, [sp, #32]
  4034ea:	9b02      	ldr	r3, [sp, #8]
  4034ec:	2b00      	cmp	r3, #0
  4034ee:	f2c0 8145 	blt.w	40377c <_dtoa_r+0x3f4>
  4034f2:	9a06      	ldr	r2, [sp, #24]
  4034f4:	930d      	str	r3, [sp, #52]	; 0x34
  4034f6:	4611      	mov	r1, r2
  4034f8:	4419      	add	r1, r3
  4034fa:	2300      	movs	r3, #0
  4034fc:	9106      	str	r1, [sp, #24]
  4034fe:	930c      	str	r3, [sp, #48]	; 0x30
  403500:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403502:	2b09      	cmp	r3, #9
  403504:	d82a      	bhi.n	40355c <_dtoa_r+0x1d4>
  403506:	2b05      	cmp	r3, #5
  403508:	f340 865b 	ble.w	4041c2 <_dtoa_r+0xe3a>
  40350c:	3b04      	subs	r3, #4
  40350e:	9324      	str	r3, [sp, #144]	; 0x90
  403510:	2500      	movs	r5, #0
  403512:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403514:	3b02      	subs	r3, #2
  403516:	2b03      	cmp	r3, #3
  403518:	f200 8642 	bhi.w	4041a0 <_dtoa_r+0xe18>
  40351c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403520:	02c903d4 	.word	0x02c903d4
  403524:	046103df 	.word	0x046103df
  403528:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40352a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40352c:	443e      	add	r6, r7
  40352e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403532:	2b20      	cmp	r3, #32
  403534:	f340 818e 	ble.w	403854 <_dtoa_r+0x4cc>
  403538:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40353c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403540:	409d      	lsls	r5, r3
  403542:	fa2a f000 	lsr.w	r0, sl, r0
  403546:	4328      	orrs	r0, r5
  403548:	f002 fbee 	bl	405d28 <__aeabi_ui2d>
  40354c:	2301      	movs	r3, #1
  40354e:	3e01      	subs	r6, #1
  403550:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403554:	9314      	str	r3, [sp, #80]	; 0x50
  403556:	e781      	b.n	40345c <_dtoa_r+0xd4>
  403558:	483b      	ldr	r0, [pc, #236]	; (403648 <_dtoa_r+0x2c0>)
  40355a:	e743      	b.n	4033e4 <_dtoa_r+0x5c>
  40355c:	2100      	movs	r1, #0
  40355e:	6461      	str	r1, [r4, #68]	; 0x44
  403560:	4620      	mov	r0, r4
  403562:	9125      	str	r1, [sp, #148]	; 0x94
  403564:	f001 fa32 	bl	4049cc <_Balloc>
  403568:	f04f 33ff 	mov.w	r3, #4294967295
  40356c:	930a      	str	r3, [sp, #40]	; 0x28
  40356e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403570:	930f      	str	r3, [sp, #60]	; 0x3c
  403572:	2301      	movs	r3, #1
  403574:	9004      	str	r0, [sp, #16]
  403576:	6420      	str	r0, [r4, #64]	; 0x40
  403578:	9224      	str	r2, [sp, #144]	; 0x90
  40357a:	930b      	str	r3, [sp, #44]	; 0x2c
  40357c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40357e:	2b00      	cmp	r3, #0
  403580:	f2c0 80d9 	blt.w	403736 <_dtoa_r+0x3ae>
  403584:	9a02      	ldr	r2, [sp, #8]
  403586:	2a0e      	cmp	r2, #14
  403588:	f300 80d5 	bgt.w	403736 <_dtoa_r+0x3ae>
  40358c:	4b2d      	ldr	r3, [pc, #180]	; (403644 <_dtoa_r+0x2bc>)
  40358e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403592:	e9d3 2300 	ldrd	r2, r3, [r3]
  403596:	e9cd 2308 	strd	r2, r3, [sp, #32]
  40359a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40359c:	2b00      	cmp	r3, #0
  40359e:	f2c0 83ba 	blt.w	403d16 <_dtoa_r+0x98e>
  4035a2:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4035a6:	4650      	mov	r0, sl
  4035a8:	462a      	mov	r2, r5
  4035aa:	4633      	mov	r3, r6
  4035ac:	4659      	mov	r1, fp
  4035ae:	f002 fd5b 	bl	406068 <__aeabi_ddiv>
  4035b2:	f002 fedf 	bl	406374 <__aeabi_d2iz>
  4035b6:	4680      	mov	r8, r0
  4035b8:	f002 fbc6 	bl	405d48 <__aeabi_i2d>
  4035bc:	462a      	mov	r2, r5
  4035be:	4633      	mov	r3, r6
  4035c0:	f002 fc28 	bl	405e14 <__aeabi_dmul>
  4035c4:	460b      	mov	r3, r1
  4035c6:	4602      	mov	r2, r0
  4035c8:	4659      	mov	r1, fp
  4035ca:	4650      	mov	r0, sl
  4035cc:	f002 fa6e 	bl	405aac <__aeabi_dsub>
  4035d0:	9d04      	ldr	r5, [sp, #16]
  4035d2:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4035d6:	702b      	strb	r3, [r5, #0]
  4035d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035da:	2b01      	cmp	r3, #1
  4035dc:	4606      	mov	r6, r0
  4035de:	460f      	mov	r7, r1
  4035e0:	f105 0501 	add.w	r5, r5, #1
  4035e4:	d068      	beq.n	4036b8 <_dtoa_r+0x330>
  4035e6:	2200      	movs	r2, #0
  4035e8:	4b18      	ldr	r3, [pc, #96]	; (40364c <_dtoa_r+0x2c4>)
  4035ea:	f002 fc13 	bl	405e14 <__aeabi_dmul>
  4035ee:	2200      	movs	r2, #0
  4035f0:	2300      	movs	r3, #0
  4035f2:	4606      	mov	r6, r0
  4035f4:	460f      	mov	r7, r1
  4035f6:	f002 fe75 	bl	4062e4 <__aeabi_dcmpeq>
  4035fa:	2800      	cmp	r0, #0
  4035fc:	f040 8088 	bne.w	403710 <_dtoa_r+0x388>
  403600:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403604:	f04f 0a00 	mov.w	sl, #0
  403608:	f8df b040 	ldr.w	fp, [pc, #64]	; 40364c <_dtoa_r+0x2c4>
  40360c:	940c      	str	r4, [sp, #48]	; 0x30
  40360e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403612:	e028      	b.n	403666 <_dtoa_r+0x2de>
  403614:	f3af 8000 	nop.w
  403618:	636f4361 	.word	0x636f4361
  40361c:	3fd287a7 	.word	0x3fd287a7
  403620:	8b60c8b3 	.word	0x8b60c8b3
  403624:	3fc68a28 	.word	0x3fc68a28
  403628:	509f79fb 	.word	0x509f79fb
  40362c:	3fd34413 	.word	0x3fd34413
  403630:	7ff00000 	.word	0x7ff00000
  403634:	00407475 	.word	0x00407475
  403638:	00407498 	.word	0x00407498
  40363c:	004074a4 	.word	0x004074a4
  403640:	3ff80000 	.word	0x3ff80000
  403644:	004074d0 	.word	0x004074d0
  403648:	00407474 	.word	0x00407474
  40364c:	40240000 	.word	0x40240000
  403650:	f002 fbe0 	bl	405e14 <__aeabi_dmul>
  403654:	2200      	movs	r2, #0
  403656:	2300      	movs	r3, #0
  403658:	4606      	mov	r6, r0
  40365a:	460f      	mov	r7, r1
  40365c:	f002 fe42 	bl	4062e4 <__aeabi_dcmpeq>
  403660:	2800      	cmp	r0, #0
  403662:	f040 83c1 	bne.w	403de8 <_dtoa_r+0xa60>
  403666:	4642      	mov	r2, r8
  403668:	464b      	mov	r3, r9
  40366a:	4630      	mov	r0, r6
  40366c:	4639      	mov	r1, r7
  40366e:	f002 fcfb 	bl	406068 <__aeabi_ddiv>
  403672:	f002 fe7f 	bl	406374 <__aeabi_d2iz>
  403676:	4604      	mov	r4, r0
  403678:	f002 fb66 	bl	405d48 <__aeabi_i2d>
  40367c:	4642      	mov	r2, r8
  40367e:	464b      	mov	r3, r9
  403680:	f002 fbc8 	bl	405e14 <__aeabi_dmul>
  403684:	4602      	mov	r2, r0
  403686:	460b      	mov	r3, r1
  403688:	4630      	mov	r0, r6
  40368a:	4639      	mov	r1, r7
  40368c:	f002 fa0e 	bl	405aac <__aeabi_dsub>
  403690:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403694:	9e04      	ldr	r6, [sp, #16]
  403696:	f805 eb01 	strb.w	lr, [r5], #1
  40369a:	eba5 0e06 	sub.w	lr, r5, r6
  40369e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4036a0:	45b6      	cmp	lr, r6
  4036a2:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4036a6:	4652      	mov	r2, sl
  4036a8:	465b      	mov	r3, fp
  4036aa:	d1d1      	bne.n	403650 <_dtoa_r+0x2c8>
  4036ac:	46a0      	mov	r8, r4
  4036ae:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4036b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4036b4:	4606      	mov	r6, r0
  4036b6:	460f      	mov	r7, r1
  4036b8:	4632      	mov	r2, r6
  4036ba:	463b      	mov	r3, r7
  4036bc:	4630      	mov	r0, r6
  4036be:	4639      	mov	r1, r7
  4036c0:	f002 f9f6 	bl	405ab0 <__adddf3>
  4036c4:	4606      	mov	r6, r0
  4036c6:	460f      	mov	r7, r1
  4036c8:	4602      	mov	r2, r0
  4036ca:	460b      	mov	r3, r1
  4036cc:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4036d0:	f002 fe12 	bl	4062f8 <__aeabi_dcmplt>
  4036d4:	b948      	cbnz	r0, 4036ea <_dtoa_r+0x362>
  4036d6:	4632      	mov	r2, r6
  4036d8:	463b      	mov	r3, r7
  4036da:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4036de:	f002 fe01 	bl	4062e4 <__aeabi_dcmpeq>
  4036e2:	b1a8      	cbz	r0, 403710 <_dtoa_r+0x388>
  4036e4:	f018 0f01 	tst.w	r8, #1
  4036e8:	d012      	beq.n	403710 <_dtoa_r+0x388>
  4036ea:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4036ee:	9a04      	ldr	r2, [sp, #16]
  4036f0:	1e6b      	subs	r3, r5, #1
  4036f2:	e004      	b.n	4036fe <_dtoa_r+0x376>
  4036f4:	429a      	cmp	r2, r3
  4036f6:	f000 8401 	beq.w	403efc <_dtoa_r+0xb74>
  4036fa:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4036fe:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403702:	f103 0501 	add.w	r5, r3, #1
  403706:	d0f5      	beq.n	4036f4 <_dtoa_r+0x36c>
  403708:	f108 0801 	add.w	r8, r8, #1
  40370c:	f883 8000 	strb.w	r8, [r3]
  403710:	4649      	mov	r1, r9
  403712:	4620      	mov	r0, r4
  403714:	f001 f980 	bl	404a18 <_Bfree>
  403718:	2200      	movs	r2, #0
  40371a:	9b02      	ldr	r3, [sp, #8]
  40371c:	702a      	strb	r2, [r5, #0]
  40371e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403720:	3301      	adds	r3, #1
  403722:	6013      	str	r3, [r2, #0]
  403724:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403726:	2b00      	cmp	r3, #0
  403728:	f000 839e 	beq.w	403e68 <_dtoa_r+0xae0>
  40372c:	9804      	ldr	r0, [sp, #16]
  40372e:	601d      	str	r5, [r3, #0]
  403730:	b01b      	add	sp, #108	; 0x6c
  403732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403736:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403738:	2a00      	cmp	r2, #0
  40373a:	d03e      	beq.n	4037ba <_dtoa_r+0x432>
  40373c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40373e:	2a01      	cmp	r2, #1
  403740:	f340 8311 	ble.w	403d66 <_dtoa_r+0x9de>
  403744:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403746:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403748:	1e5f      	subs	r7, r3, #1
  40374a:	42ba      	cmp	r2, r7
  40374c:	f2c0 838f 	blt.w	403e6e <_dtoa_r+0xae6>
  403750:	1bd7      	subs	r7, r2, r7
  403752:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403754:	2b00      	cmp	r3, #0
  403756:	f2c0 848b 	blt.w	404070 <_dtoa_r+0xce8>
  40375a:	9d08      	ldr	r5, [sp, #32]
  40375c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40375e:	9a08      	ldr	r2, [sp, #32]
  403760:	441a      	add	r2, r3
  403762:	9208      	str	r2, [sp, #32]
  403764:	9a06      	ldr	r2, [sp, #24]
  403766:	2101      	movs	r1, #1
  403768:	441a      	add	r2, r3
  40376a:	4620      	mov	r0, r4
  40376c:	9206      	str	r2, [sp, #24]
  40376e:	f001 f9ed 	bl	404b4c <__i2b>
  403772:	4606      	mov	r6, r0
  403774:	e024      	b.n	4037c0 <_dtoa_r+0x438>
  403776:	2301      	movs	r3, #1
  403778:	930e      	str	r3, [sp, #56]	; 0x38
  40377a:	e6af      	b.n	4034dc <_dtoa_r+0x154>
  40377c:	9a08      	ldr	r2, [sp, #32]
  40377e:	9b02      	ldr	r3, [sp, #8]
  403780:	1ad2      	subs	r2, r2, r3
  403782:	425b      	negs	r3, r3
  403784:	930c      	str	r3, [sp, #48]	; 0x30
  403786:	2300      	movs	r3, #0
  403788:	9208      	str	r2, [sp, #32]
  40378a:	930d      	str	r3, [sp, #52]	; 0x34
  40378c:	e6b8      	b.n	403500 <_dtoa_r+0x178>
  40378e:	f1c7 0301 	rsb	r3, r7, #1
  403792:	9308      	str	r3, [sp, #32]
  403794:	2300      	movs	r3, #0
  403796:	9306      	str	r3, [sp, #24]
  403798:	e6a7      	b.n	4034ea <_dtoa_r+0x162>
  40379a:	9d02      	ldr	r5, [sp, #8]
  40379c:	4628      	mov	r0, r5
  40379e:	f002 fad3 	bl	405d48 <__aeabi_i2d>
  4037a2:	4602      	mov	r2, r0
  4037a4:	460b      	mov	r3, r1
  4037a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4037aa:	f002 fd9b 	bl	4062e4 <__aeabi_dcmpeq>
  4037ae:	2800      	cmp	r0, #0
  4037b0:	f47f ae80 	bne.w	4034b4 <_dtoa_r+0x12c>
  4037b4:	1e6b      	subs	r3, r5, #1
  4037b6:	9302      	str	r3, [sp, #8]
  4037b8:	e67c      	b.n	4034b4 <_dtoa_r+0x12c>
  4037ba:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4037bc:	9d08      	ldr	r5, [sp, #32]
  4037be:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4037c0:	2d00      	cmp	r5, #0
  4037c2:	dd0c      	ble.n	4037de <_dtoa_r+0x456>
  4037c4:	9906      	ldr	r1, [sp, #24]
  4037c6:	2900      	cmp	r1, #0
  4037c8:	460b      	mov	r3, r1
  4037ca:	dd08      	ble.n	4037de <_dtoa_r+0x456>
  4037cc:	42a9      	cmp	r1, r5
  4037ce:	9a08      	ldr	r2, [sp, #32]
  4037d0:	bfa8      	it	ge
  4037d2:	462b      	movge	r3, r5
  4037d4:	1ad2      	subs	r2, r2, r3
  4037d6:	1aed      	subs	r5, r5, r3
  4037d8:	1acb      	subs	r3, r1, r3
  4037da:	9208      	str	r2, [sp, #32]
  4037dc:	9306      	str	r3, [sp, #24]
  4037de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4037e0:	b1d3      	cbz	r3, 403818 <_dtoa_r+0x490>
  4037e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4037e4:	2b00      	cmp	r3, #0
  4037e6:	f000 82b7 	beq.w	403d58 <_dtoa_r+0x9d0>
  4037ea:	2f00      	cmp	r7, #0
  4037ec:	dd10      	ble.n	403810 <_dtoa_r+0x488>
  4037ee:	4631      	mov	r1, r6
  4037f0:	463a      	mov	r2, r7
  4037f2:	4620      	mov	r0, r4
  4037f4:	f001 fa46 	bl	404c84 <__pow5mult>
  4037f8:	464a      	mov	r2, r9
  4037fa:	4601      	mov	r1, r0
  4037fc:	4606      	mov	r6, r0
  4037fe:	4620      	mov	r0, r4
  403800:	f001 f9ae 	bl	404b60 <__multiply>
  403804:	4649      	mov	r1, r9
  403806:	4680      	mov	r8, r0
  403808:	4620      	mov	r0, r4
  40380a:	f001 f905 	bl	404a18 <_Bfree>
  40380e:	46c1      	mov	r9, r8
  403810:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403812:	1bda      	subs	r2, r3, r7
  403814:	f040 82a1 	bne.w	403d5a <_dtoa_r+0x9d2>
  403818:	2101      	movs	r1, #1
  40381a:	4620      	mov	r0, r4
  40381c:	f001 f996 	bl	404b4c <__i2b>
  403820:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403822:	2b00      	cmp	r3, #0
  403824:	4680      	mov	r8, r0
  403826:	dd1c      	ble.n	403862 <_dtoa_r+0x4da>
  403828:	4601      	mov	r1, r0
  40382a:	461a      	mov	r2, r3
  40382c:	4620      	mov	r0, r4
  40382e:	f001 fa29 	bl	404c84 <__pow5mult>
  403832:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403834:	2b01      	cmp	r3, #1
  403836:	4680      	mov	r8, r0
  403838:	f340 8254 	ble.w	403ce4 <_dtoa_r+0x95c>
  40383c:	2300      	movs	r3, #0
  40383e:	930c      	str	r3, [sp, #48]	; 0x30
  403840:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403844:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403848:	6918      	ldr	r0, [r3, #16]
  40384a:	f001 f92f 	bl	404aac <__hi0bits>
  40384e:	f1c0 0020 	rsb	r0, r0, #32
  403852:	e010      	b.n	403876 <_dtoa_r+0x4ee>
  403854:	f1c3 0520 	rsb	r5, r3, #32
  403858:	fa0a f005 	lsl.w	r0, sl, r5
  40385c:	e674      	b.n	403548 <_dtoa_r+0x1c0>
  40385e:	900e      	str	r0, [sp, #56]	; 0x38
  403860:	e63c      	b.n	4034dc <_dtoa_r+0x154>
  403862:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403864:	2b01      	cmp	r3, #1
  403866:	f340 8287 	ble.w	403d78 <_dtoa_r+0x9f0>
  40386a:	2300      	movs	r3, #0
  40386c:	930c      	str	r3, [sp, #48]	; 0x30
  40386e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403870:	2001      	movs	r0, #1
  403872:	2b00      	cmp	r3, #0
  403874:	d1e4      	bne.n	403840 <_dtoa_r+0x4b8>
  403876:	9a06      	ldr	r2, [sp, #24]
  403878:	4410      	add	r0, r2
  40387a:	f010 001f 	ands.w	r0, r0, #31
  40387e:	f000 80a1 	beq.w	4039c4 <_dtoa_r+0x63c>
  403882:	f1c0 0320 	rsb	r3, r0, #32
  403886:	2b04      	cmp	r3, #4
  403888:	f340 849e 	ble.w	4041c8 <_dtoa_r+0xe40>
  40388c:	9b08      	ldr	r3, [sp, #32]
  40388e:	f1c0 001c 	rsb	r0, r0, #28
  403892:	4403      	add	r3, r0
  403894:	9308      	str	r3, [sp, #32]
  403896:	4613      	mov	r3, r2
  403898:	4403      	add	r3, r0
  40389a:	4405      	add	r5, r0
  40389c:	9306      	str	r3, [sp, #24]
  40389e:	9b08      	ldr	r3, [sp, #32]
  4038a0:	2b00      	cmp	r3, #0
  4038a2:	dd05      	ble.n	4038b0 <_dtoa_r+0x528>
  4038a4:	4649      	mov	r1, r9
  4038a6:	461a      	mov	r2, r3
  4038a8:	4620      	mov	r0, r4
  4038aa:	f001 fa3b 	bl	404d24 <__lshift>
  4038ae:	4681      	mov	r9, r0
  4038b0:	9b06      	ldr	r3, [sp, #24]
  4038b2:	2b00      	cmp	r3, #0
  4038b4:	dd05      	ble.n	4038c2 <_dtoa_r+0x53a>
  4038b6:	4641      	mov	r1, r8
  4038b8:	461a      	mov	r2, r3
  4038ba:	4620      	mov	r0, r4
  4038bc:	f001 fa32 	bl	404d24 <__lshift>
  4038c0:	4680      	mov	r8, r0
  4038c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4038c4:	2b00      	cmp	r3, #0
  4038c6:	f040 8086 	bne.w	4039d6 <_dtoa_r+0x64e>
  4038ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038cc:	2b00      	cmp	r3, #0
  4038ce:	f340 8266 	ble.w	403d9e <_dtoa_r+0xa16>
  4038d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4038d4:	2b00      	cmp	r3, #0
  4038d6:	f000 8098 	beq.w	403a0a <_dtoa_r+0x682>
  4038da:	2d00      	cmp	r5, #0
  4038dc:	dd05      	ble.n	4038ea <_dtoa_r+0x562>
  4038de:	4631      	mov	r1, r6
  4038e0:	462a      	mov	r2, r5
  4038e2:	4620      	mov	r0, r4
  4038e4:	f001 fa1e 	bl	404d24 <__lshift>
  4038e8:	4606      	mov	r6, r0
  4038ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4038ec:	2b00      	cmp	r3, #0
  4038ee:	f040 8337 	bne.w	403f60 <_dtoa_r+0xbd8>
  4038f2:	9606      	str	r6, [sp, #24]
  4038f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038f6:	9a04      	ldr	r2, [sp, #16]
  4038f8:	f8dd b018 	ldr.w	fp, [sp, #24]
  4038fc:	3b01      	subs	r3, #1
  4038fe:	18d3      	adds	r3, r2, r3
  403900:	930b      	str	r3, [sp, #44]	; 0x2c
  403902:	f00a 0301 	and.w	r3, sl, #1
  403906:	930c      	str	r3, [sp, #48]	; 0x30
  403908:	4617      	mov	r7, r2
  40390a:	46c2      	mov	sl, r8
  40390c:	4651      	mov	r1, sl
  40390e:	4648      	mov	r0, r9
  403910:	f7ff fca4 	bl	40325c <quorem>
  403914:	4631      	mov	r1, r6
  403916:	4605      	mov	r5, r0
  403918:	4648      	mov	r0, r9
  40391a:	f001 fa55 	bl	404dc8 <__mcmp>
  40391e:	465a      	mov	r2, fp
  403920:	900a      	str	r0, [sp, #40]	; 0x28
  403922:	4651      	mov	r1, sl
  403924:	4620      	mov	r0, r4
  403926:	f001 fa6b 	bl	404e00 <__mdiff>
  40392a:	68c2      	ldr	r2, [r0, #12]
  40392c:	4680      	mov	r8, r0
  40392e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403932:	2a00      	cmp	r2, #0
  403934:	f040 822b 	bne.w	403d8e <_dtoa_r+0xa06>
  403938:	4601      	mov	r1, r0
  40393a:	4648      	mov	r0, r9
  40393c:	9308      	str	r3, [sp, #32]
  40393e:	f001 fa43 	bl	404dc8 <__mcmp>
  403942:	4641      	mov	r1, r8
  403944:	9006      	str	r0, [sp, #24]
  403946:	4620      	mov	r0, r4
  403948:	f001 f866 	bl	404a18 <_Bfree>
  40394c:	9a06      	ldr	r2, [sp, #24]
  40394e:	9b08      	ldr	r3, [sp, #32]
  403950:	b932      	cbnz	r2, 403960 <_dtoa_r+0x5d8>
  403952:	9924      	ldr	r1, [sp, #144]	; 0x90
  403954:	b921      	cbnz	r1, 403960 <_dtoa_r+0x5d8>
  403956:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403958:	2a00      	cmp	r2, #0
  40395a:	f000 83ef 	beq.w	40413c <_dtoa_r+0xdb4>
  40395e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403960:	990a      	ldr	r1, [sp, #40]	; 0x28
  403962:	2900      	cmp	r1, #0
  403964:	f2c0 829f 	blt.w	403ea6 <_dtoa_r+0xb1e>
  403968:	d105      	bne.n	403976 <_dtoa_r+0x5ee>
  40396a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40396c:	b919      	cbnz	r1, 403976 <_dtoa_r+0x5ee>
  40396e:	990c      	ldr	r1, [sp, #48]	; 0x30
  403970:	2900      	cmp	r1, #0
  403972:	f000 8298 	beq.w	403ea6 <_dtoa_r+0xb1e>
  403976:	2a00      	cmp	r2, #0
  403978:	f300 8306 	bgt.w	403f88 <_dtoa_r+0xc00>
  40397c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40397e:	703b      	strb	r3, [r7, #0]
  403980:	f107 0801 	add.w	r8, r7, #1
  403984:	4297      	cmp	r7, r2
  403986:	4645      	mov	r5, r8
  403988:	f000 830c 	beq.w	403fa4 <_dtoa_r+0xc1c>
  40398c:	4649      	mov	r1, r9
  40398e:	2300      	movs	r3, #0
  403990:	220a      	movs	r2, #10
  403992:	4620      	mov	r0, r4
  403994:	f001 f84a 	bl	404a2c <__multadd>
  403998:	455e      	cmp	r6, fp
  40399a:	4681      	mov	r9, r0
  40399c:	4631      	mov	r1, r6
  40399e:	f04f 0300 	mov.w	r3, #0
  4039a2:	f04f 020a 	mov.w	r2, #10
  4039a6:	4620      	mov	r0, r4
  4039a8:	f000 81eb 	beq.w	403d82 <_dtoa_r+0x9fa>
  4039ac:	f001 f83e 	bl	404a2c <__multadd>
  4039b0:	4659      	mov	r1, fp
  4039b2:	4606      	mov	r6, r0
  4039b4:	2300      	movs	r3, #0
  4039b6:	220a      	movs	r2, #10
  4039b8:	4620      	mov	r0, r4
  4039ba:	f001 f837 	bl	404a2c <__multadd>
  4039be:	4647      	mov	r7, r8
  4039c0:	4683      	mov	fp, r0
  4039c2:	e7a3      	b.n	40390c <_dtoa_r+0x584>
  4039c4:	201c      	movs	r0, #28
  4039c6:	9b08      	ldr	r3, [sp, #32]
  4039c8:	4403      	add	r3, r0
  4039ca:	9308      	str	r3, [sp, #32]
  4039cc:	9b06      	ldr	r3, [sp, #24]
  4039ce:	4403      	add	r3, r0
  4039d0:	4405      	add	r5, r0
  4039d2:	9306      	str	r3, [sp, #24]
  4039d4:	e763      	b.n	40389e <_dtoa_r+0x516>
  4039d6:	4641      	mov	r1, r8
  4039d8:	4648      	mov	r0, r9
  4039da:	f001 f9f5 	bl	404dc8 <__mcmp>
  4039de:	2800      	cmp	r0, #0
  4039e0:	f6bf af73 	bge.w	4038ca <_dtoa_r+0x542>
  4039e4:	9f02      	ldr	r7, [sp, #8]
  4039e6:	4649      	mov	r1, r9
  4039e8:	2300      	movs	r3, #0
  4039ea:	220a      	movs	r2, #10
  4039ec:	4620      	mov	r0, r4
  4039ee:	3f01      	subs	r7, #1
  4039f0:	9702      	str	r7, [sp, #8]
  4039f2:	f001 f81b 	bl	404a2c <__multadd>
  4039f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4039f8:	4681      	mov	r9, r0
  4039fa:	2b00      	cmp	r3, #0
  4039fc:	f040 83b6 	bne.w	40416c <_dtoa_r+0xde4>
  403a00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403a02:	2b00      	cmp	r3, #0
  403a04:	f340 83bf 	ble.w	404186 <_dtoa_r+0xdfe>
  403a08:	930a      	str	r3, [sp, #40]	; 0x28
  403a0a:	f8dd b010 	ldr.w	fp, [sp, #16]
  403a0e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403a10:	465d      	mov	r5, fp
  403a12:	e002      	b.n	403a1a <_dtoa_r+0x692>
  403a14:	f001 f80a 	bl	404a2c <__multadd>
  403a18:	4681      	mov	r9, r0
  403a1a:	4641      	mov	r1, r8
  403a1c:	4648      	mov	r0, r9
  403a1e:	f7ff fc1d 	bl	40325c <quorem>
  403a22:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403a26:	f805 ab01 	strb.w	sl, [r5], #1
  403a2a:	eba5 030b 	sub.w	r3, r5, fp
  403a2e:	42bb      	cmp	r3, r7
  403a30:	f04f 020a 	mov.w	r2, #10
  403a34:	f04f 0300 	mov.w	r3, #0
  403a38:	4649      	mov	r1, r9
  403a3a:	4620      	mov	r0, r4
  403a3c:	dbea      	blt.n	403a14 <_dtoa_r+0x68c>
  403a3e:	9b04      	ldr	r3, [sp, #16]
  403a40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403a42:	2a01      	cmp	r2, #1
  403a44:	bfac      	ite	ge
  403a46:	189b      	addge	r3, r3, r2
  403a48:	3301      	addlt	r3, #1
  403a4a:	461d      	mov	r5, r3
  403a4c:	f04f 0b00 	mov.w	fp, #0
  403a50:	4649      	mov	r1, r9
  403a52:	2201      	movs	r2, #1
  403a54:	4620      	mov	r0, r4
  403a56:	f001 f965 	bl	404d24 <__lshift>
  403a5a:	4641      	mov	r1, r8
  403a5c:	4681      	mov	r9, r0
  403a5e:	f001 f9b3 	bl	404dc8 <__mcmp>
  403a62:	2800      	cmp	r0, #0
  403a64:	f340 823d 	ble.w	403ee2 <_dtoa_r+0xb5a>
  403a68:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403a6c:	9904      	ldr	r1, [sp, #16]
  403a6e:	1e6b      	subs	r3, r5, #1
  403a70:	e004      	b.n	403a7c <_dtoa_r+0x6f4>
  403a72:	428b      	cmp	r3, r1
  403a74:	f000 81ae 	beq.w	403dd4 <_dtoa_r+0xa4c>
  403a78:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403a7c:	2a39      	cmp	r2, #57	; 0x39
  403a7e:	f103 0501 	add.w	r5, r3, #1
  403a82:	d0f6      	beq.n	403a72 <_dtoa_r+0x6ea>
  403a84:	3201      	adds	r2, #1
  403a86:	701a      	strb	r2, [r3, #0]
  403a88:	4641      	mov	r1, r8
  403a8a:	4620      	mov	r0, r4
  403a8c:	f000 ffc4 	bl	404a18 <_Bfree>
  403a90:	2e00      	cmp	r6, #0
  403a92:	f43f ae3d 	beq.w	403710 <_dtoa_r+0x388>
  403a96:	f1bb 0f00 	cmp.w	fp, #0
  403a9a:	d005      	beq.n	403aa8 <_dtoa_r+0x720>
  403a9c:	45b3      	cmp	fp, r6
  403a9e:	d003      	beq.n	403aa8 <_dtoa_r+0x720>
  403aa0:	4659      	mov	r1, fp
  403aa2:	4620      	mov	r0, r4
  403aa4:	f000 ffb8 	bl	404a18 <_Bfree>
  403aa8:	4631      	mov	r1, r6
  403aaa:	4620      	mov	r0, r4
  403aac:	f000 ffb4 	bl	404a18 <_Bfree>
  403ab0:	e62e      	b.n	403710 <_dtoa_r+0x388>
  403ab2:	2300      	movs	r3, #0
  403ab4:	930b      	str	r3, [sp, #44]	; 0x2c
  403ab6:	9b02      	ldr	r3, [sp, #8]
  403ab8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403aba:	4413      	add	r3, r2
  403abc:	930f      	str	r3, [sp, #60]	; 0x3c
  403abe:	3301      	adds	r3, #1
  403ac0:	2b01      	cmp	r3, #1
  403ac2:	461f      	mov	r7, r3
  403ac4:	461e      	mov	r6, r3
  403ac6:	930a      	str	r3, [sp, #40]	; 0x28
  403ac8:	bfb8      	it	lt
  403aca:	2701      	movlt	r7, #1
  403acc:	2100      	movs	r1, #0
  403ace:	2f17      	cmp	r7, #23
  403ad0:	6461      	str	r1, [r4, #68]	; 0x44
  403ad2:	d90a      	bls.n	403aea <_dtoa_r+0x762>
  403ad4:	2201      	movs	r2, #1
  403ad6:	2304      	movs	r3, #4
  403ad8:	005b      	lsls	r3, r3, #1
  403ada:	f103 0014 	add.w	r0, r3, #20
  403ade:	4287      	cmp	r7, r0
  403ae0:	4611      	mov	r1, r2
  403ae2:	f102 0201 	add.w	r2, r2, #1
  403ae6:	d2f7      	bcs.n	403ad8 <_dtoa_r+0x750>
  403ae8:	6461      	str	r1, [r4, #68]	; 0x44
  403aea:	4620      	mov	r0, r4
  403aec:	f000 ff6e 	bl	4049cc <_Balloc>
  403af0:	2e0e      	cmp	r6, #14
  403af2:	9004      	str	r0, [sp, #16]
  403af4:	6420      	str	r0, [r4, #64]	; 0x40
  403af6:	f63f ad41 	bhi.w	40357c <_dtoa_r+0x1f4>
  403afa:	2d00      	cmp	r5, #0
  403afc:	f43f ad3e 	beq.w	40357c <_dtoa_r+0x1f4>
  403b00:	9902      	ldr	r1, [sp, #8]
  403b02:	2900      	cmp	r1, #0
  403b04:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403b08:	f340 8202 	ble.w	403f10 <_dtoa_r+0xb88>
  403b0c:	4bb8      	ldr	r3, [pc, #736]	; (403df0 <_dtoa_r+0xa68>)
  403b0e:	f001 020f 	and.w	r2, r1, #15
  403b12:	110d      	asrs	r5, r1, #4
  403b14:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b18:	06e9      	lsls	r1, r5, #27
  403b1a:	e9d3 6700 	ldrd	r6, r7, [r3]
  403b1e:	f140 81ae 	bpl.w	403e7e <_dtoa_r+0xaf6>
  403b22:	4bb4      	ldr	r3, [pc, #720]	; (403df4 <_dtoa_r+0xa6c>)
  403b24:	4650      	mov	r0, sl
  403b26:	4659      	mov	r1, fp
  403b28:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403b2c:	f002 fa9c 	bl	406068 <__aeabi_ddiv>
  403b30:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403b34:	f005 050f 	and.w	r5, r5, #15
  403b38:	f04f 0a03 	mov.w	sl, #3
  403b3c:	b18d      	cbz	r5, 403b62 <_dtoa_r+0x7da>
  403b3e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403df4 <_dtoa_r+0xa6c>
  403b42:	07ea      	lsls	r2, r5, #31
  403b44:	d509      	bpl.n	403b5a <_dtoa_r+0x7d2>
  403b46:	4630      	mov	r0, r6
  403b48:	4639      	mov	r1, r7
  403b4a:	e9d8 2300 	ldrd	r2, r3, [r8]
  403b4e:	f002 f961 	bl	405e14 <__aeabi_dmul>
  403b52:	f10a 0a01 	add.w	sl, sl, #1
  403b56:	4606      	mov	r6, r0
  403b58:	460f      	mov	r7, r1
  403b5a:	106d      	asrs	r5, r5, #1
  403b5c:	f108 0808 	add.w	r8, r8, #8
  403b60:	d1ef      	bne.n	403b42 <_dtoa_r+0x7ba>
  403b62:	463b      	mov	r3, r7
  403b64:	4632      	mov	r2, r6
  403b66:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403b6a:	f002 fa7d 	bl	406068 <__aeabi_ddiv>
  403b6e:	4607      	mov	r7, r0
  403b70:	4688      	mov	r8, r1
  403b72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b74:	b143      	cbz	r3, 403b88 <_dtoa_r+0x800>
  403b76:	2200      	movs	r2, #0
  403b78:	4b9f      	ldr	r3, [pc, #636]	; (403df8 <_dtoa_r+0xa70>)
  403b7a:	4638      	mov	r0, r7
  403b7c:	4641      	mov	r1, r8
  403b7e:	f002 fbbb 	bl	4062f8 <__aeabi_dcmplt>
  403b82:	2800      	cmp	r0, #0
  403b84:	f040 8286 	bne.w	404094 <_dtoa_r+0xd0c>
  403b88:	4650      	mov	r0, sl
  403b8a:	f002 f8dd 	bl	405d48 <__aeabi_i2d>
  403b8e:	463a      	mov	r2, r7
  403b90:	4643      	mov	r3, r8
  403b92:	f002 f93f 	bl	405e14 <__aeabi_dmul>
  403b96:	4b99      	ldr	r3, [pc, #612]	; (403dfc <_dtoa_r+0xa74>)
  403b98:	2200      	movs	r2, #0
  403b9a:	f001 ff89 	bl	405ab0 <__adddf3>
  403b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ba0:	4605      	mov	r5, r0
  403ba2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403ba6:	2b00      	cmp	r3, #0
  403ba8:	f000 813e 	beq.w	403e28 <_dtoa_r+0xaa0>
  403bac:	9b02      	ldr	r3, [sp, #8]
  403bae:	9315      	str	r3, [sp, #84]	; 0x54
  403bb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bb2:	9312      	str	r3, [sp, #72]	; 0x48
  403bb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403bb6:	2b00      	cmp	r3, #0
  403bb8:	f000 81fa 	beq.w	403fb0 <_dtoa_r+0xc28>
  403bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403bbe:	4b8c      	ldr	r3, [pc, #560]	; (403df0 <_dtoa_r+0xa68>)
  403bc0:	498f      	ldr	r1, [pc, #572]	; (403e00 <_dtoa_r+0xa78>)
  403bc2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403bc6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403bca:	2000      	movs	r0, #0
  403bcc:	f002 fa4c 	bl	406068 <__aeabi_ddiv>
  403bd0:	462a      	mov	r2, r5
  403bd2:	4633      	mov	r3, r6
  403bd4:	f001 ff6a 	bl	405aac <__aeabi_dsub>
  403bd8:	4682      	mov	sl, r0
  403bda:	468b      	mov	fp, r1
  403bdc:	4638      	mov	r0, r7
  403bde:	4641      	mov	r1, r8
  403be0:	f002 fbc8 	bl	406374 <__aeabi_d2iz>
  403be4:	4605      	mov	r5, r0
  403be6:	f002 f8af 	bl	405d48 <__aeabi_i2d>
  403bea:	4602      	mov	r2, r0
  403bec:	460b      	mov	r3, r1
  403bee:	4638      	mov	r0, r7
  403bf0:	4641      	mov	r1, r8
  403bf2:	f001 ff5b 	bl	405aac <__aeabi_dsub>
  403bf6:	3530      	adds	r5, #48	; 0x30
  403bf8:	fa5f f885 	uxtb.w	r8, r5
  403bfc:	9d04      	ldr	r5, [sp, #16]
  403bfe:	4606      	mov	r6, r0
  403c00:	460f      	mov	r7, r1
  403c02:	f885 8000 	strb.w	r8, [r5]
  403c06:	4602      	mov	r2, r0
  403c08:	460b      	mov	r3, r1
  403c0a:	4650      	mov	r0, sl
  403c0c:	4659      	mov	r1, fp
  403c0e:	3501      	adds	r5, #1
  403c10:	f002 fb90 	bl	406334 <__aeabi_dcmpgt>
  403c14:	2800      	cmp	r0, #0
  403c16:	d154      	bne.n	403cc2 <_dtoa_r+0x93a>
  403c18:	4632      	mov	r2, r6
  403c1a:	463b      	mov	r3, r7
  403c1c:	2000      	movs	r0, #0
  403c1e:	4976      	ldr	r1, [pc, #472]	; (403df8 <_dtoa_r+0xa70>)
  403c20:	f001 ff44 	bl	405aac <__aeabi_dsub>
  403c24:	4602      	mov	r2, r0
  403c26:	460b      	mov	r3, r1
  403c28:	4650      	mov	r0, sl
  403c2a:	4659      	mov	r1, fp
  403c2c:	f002 fb82 	bl	406334 <__aeabi_dcmpgt>
  403c30:	2800      	cmp	r0, #0
  403c32:	f040 8270 	bne.w	404116 <_dtoa_r+0xd8e>
  403c36:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403c38:	2a01      	cmp	r2, #1
  403c3a:	f000 8111 	beq.w	403e60 <_dtoa_r+0xad8>
  403c3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c40:	9a04      	ldr	r2, [sp, #16]
  403c42:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403c46:	4413      	add	r3, r2
  403c48:	4699      	mov	r9, r3
  403c4a:	e00d      	b.n	403c68 <_dtoa_r+0x8e0>
  403c4c:	2000      	movs	r0, #0
  403c4e:	496a      	ldr	r1, [pc, #424]	; (403df8 <_dtoa_r+0xa70>)
  403c50:	f001 ff2c 	bl	405aac <__aeabi_dsub>
  403c54:	4652      	mov	r2, sl
  403c56:	465b      	mov	r3, fp
  403c58:	f002 fb4e 	bl	4062f8 <__aeabi_dcmplt>
  403c5c:	2800      	cmp	r0, #0
  403c5e:	f040 8258 	bne.w	404112 <_dtoa_r+0xd8a>
  403c62:	454d      	cmp	r5, r9
  403c64:	f000 80fa 	beq.w	403e5c <_dtoa_r+0xad4>
  403c68:	4650      	mov	r0, sl
  403c6a:	4659      	mov	r1, fp
  403c6c:	2200      	movs	r2, #0
  403c6e:	4b65      	ldr	r3, [pc, #404]	; (403e04 <_dtoa_r+0xa7c>)
  403c70:	f002 f8d0 	bl	405e14 <__aeabi_dmul>
  403c74:	2200      	movs	r2, #0
  403c76:	4b63      	ldr	r3, [pc, #396]	; (403e04 <_dtoa_r+0xa7c>)
  403c78:	4682      	mov	sl, r0
  403c7a:	468b      	mov	fp, r1
  403c7c:	4630      	mov	r0, r6
  403c7e:	4639      	mov	r1, r7
  403c80:	f002 f8c8 	bl	405e14 <__aeabi_dmul>
  403c84:	460f      	mov	r7, r1
  403c86:	4606      	mov	r6, r0
  403c88:	f002 fb74 	bl	406374 <__aeabi_d2iz>
  403c8c:	4680      	mov	r8, r0
  403c8e:	f002 f85b 	bl	405d48 <__aeabi_i2d>
  403c92:	4602      	mov	r2, r0
  403c94:	460b      	mov	r3, r1
  403c96:	4630      	mov	r0, r6
  403c98:	4639      	mov	r1, r7
  403c9a:	f001 ff07 	bl	405aac <__aeabi_dsub>
  403c9e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403ca2:	fa5f f888 	uxtb.w	r8, r8
  403ca6:	4652      	mov	r2, sl
  403ca8:	465b      	mov	r3, fp
  403caa:	f805 8b01 	strb.w	r8, [r5], #1
  403cae:	4606      	mov	r6, r0
  403cb0:	460f      	mov	r7, r1
  403cb2:	f002 fb21 	bl	4062f8 <__aeabi_dcmplt>
  403cb6:	4632      	mov	r2, r6
  403cb8:	463b      	mov	r3, r7
  403cba:	2800      	cmp	r0, #0
  403cbc:	d0c6      	beq.n	403c4c <_dtoa_r+0x8c4>
  403cbe:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403cc2:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403cc4:	9302      	str	r3, [sp, #8]
  403cc6:	e523      	b.n	403710 <_dtoa_r+0x388>
  403cc8:	2300      	movs	r3, #0
  403cca:	930b      	str	r3, [sp, #44]	; 0x2c
  403ccc:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403cce:	2b00      	cmp	r3, #0
  403cd0:	f340 80dc 	ble.w	403e8c <_dtoa_r+0xb04>
  403cd4:	461f      	mov	r7, r3
  403cd6:	461e      	mov	r6, r3
  403cd8:	930f      	str	r3, [sp, #60]	; 0x3c
  403cda:	930a      	str	r3, [sp, #40]	; 0x28
  403cdc:	e6f6      	b.n	403acc <_dtoa_r+0x744>
  403cde:	2301      	movs	r3, #1
  403ce0:	930b      	str	r3, [sp, #44]	; 0x2c
  403ce2:	e7f3      	b.n	403ccc <_dtoa_r+0x944>
  403ce4:	f1ba 0f00 	cmp.w	sl, #0
  403ce8:	f47f ada8 	bne.w	40383c <_dtoa_r+0x4b4>
  403cec:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403cf0:	2b00      	cmp	r3, #0
  403cf2:	f47f adba 	bne.w	40386a <_dtoa_r+0x4e2>
  403cf6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403cfa:	0d3f      	lsrs	r7, r7, #20
  403cfc:	053f      	lsls	r7, r7, #20
  403cfe:	2f00      	cmp	r7, #0
  403d00:	f000 820d 	beq.w	40411e <_dtoa_r+0xd96>
  403d04:	9b08      	ldr	r3, [sp, #32]
  403d06:	3301      	adds	r3, #1
  403d08:	9308      	str	r3, [sp, #32]
  403d0a:	9b06      	ldr	r3, [sp, #24]
  403d0c:	3301      	adds	r3, #1
  403d0e:	9306      	str	r3, [sp, #24]
  403d10:	2301      	movs	r3, #1
  403d12:	930c      	str	r3, [sp, #48]	; 0x30
  403d14:	e5ab      	b.n	40386e <_dtoa_r+0x4e6>
  403d16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d18:	2b00      	cmp	r3, #0
  403d1a:	f73f ac42 	bgt.w	4035a2 <_dtoa_r+0x21a>
  403d1e:	f040 8221 	bne.w	404164 <_dtoa_r+0xddc>
  403d22:	2200      	movs	r2, #0
  403d24:	4b38      	ldr	r3, [pc, #224]	; (403e08 <_dtoa_r+0xa80>)
  403d26:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d2a:	f002 f873 	bl	405e14 <__aeabi_dmul>
  403d2e:	4652      	mov	r2, sl
  403d30:	465b      	mov	r3, fp
  403d32:	f002 faf5 	bl	406320 <__aeabi_dcmpge>
  403d36:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403d3a:	4646      	mov	r6, r8
  403d3c:	2800      	cmp	r0, #0
  403d3e:	d041      	beq.n	403dc4 <_dtoa_r+0xa3c>
  403d40:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403d42:	9d04      	ldr	r5, [sp, #16]
  403d44:	43db      	mvns	r3, r3
  403d46:	9302      	str	r3, [sp, #8]
  403d48:	4641      	mov	r1, r8
  403d4a:	4620      	mov	r0, r4
  403d4c:	f000 fe64 	bl	404a18 <_Bfree>
  403d50:	2e00      	cmp	r6, #0
  403d52:	f43f acdd 	beq.w	403710 <_dtoa_r+0x388>
  403d56:	e6a7      	b.n	403aa8 <_dtoa_r+0x720>
  403d58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d5a:	4649      	mov	r1, r9
  403d5c:	4620      	mov	r0, r4
  403d5e:	f000 ff91 	bl	404c84 <__pow5mult>
  403d62:	4681      	mov	r9, r0
  403d64:	e558      	b.n	403818 <_dtoa_r+0x490>
  403d66:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403d68:	2a00      	cmp	r2, #0
  403d6a:	f000 8187 	beq.w	40407c <_dtoa_r+0xcf4>
  403d6e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403d72:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d74:	9d08      	ldr	r5, [sp, #32]
  403d76:	e4f2      	b.n	40375e <_dtoa_r+0x3d6>
  403d78:	f1ba 0f00 	cmp.w	sl, #0
  403d7c:	f47f ad75 	bne.w	40386a <_dtoa_r+0x4e2>
  403d80:	e7b4      	b.n	403cec <_dtoa_r+0x964>
  403d82:	f000 fe53 	bl	404a2c <__multadd>
  403d86:	4647      	mov	r7, r8
  403d88:	4606      	mov	r6, r0
  403d8a:	4683      	mov	fp, r0
  403d8c:	e5be      	b.n	40390c <_dtoa_r+0x584>
  403d8e:	4601      	mov	r1, r0
  403d90:	4620      	mov	r0, r4
  403d92:	9306      	str	r3, [sp, #24]
  403d94:	f000 fe40 	bl	404a18 <_Bfree>
  403d98:	2201      	movs	r2, #1
  403d9a:	9b06      	ldr	r3, [sp, #24]
  403d9c:	e5e0      	b.n	403960 <_dtoa_r+0x5d8>
  403d9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403da0:	2b02      	cmp	r3, #2
  403da2:	f77f ad96 	ble.w	4038d2 <_dtoa_r+0x54a>
  403da6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403da8:	2b00      	cmp	r3, #0
  403daa:	d1c9      	bne.n	403d40 <_dtoa_r+0x9b8>
  403dac:	4641      	mov	r1, r8
  403dae:	2205      	movs	r2, #5
  403db0:	4620      	mov	r0, r4
  403db2:	f000 fe3b 	bl	404a2c <__multadd>
  403db6:	4601      	mov	r1, r0
  403db8:	4680      	mov	r8, r0
  403dba:	4648      	mov	r0, r9
  403dbc:	f001 f804 	bl	404dc8 <__mcmp>
  403dc0:	2800      	cmp	r0, #0
  403dc2:	ddbd      	ble.n	403d40 <_dtoa_r+0x9b8>
  403dc4:	9a02      	ldr	r2, [sp, #8]
  403dc6:	9904      	ldr	r1, [sp, #16]
  403dc8:	2331      	movs	r3, #49	; 0x31
  403dca:	3201      	adds	r2, #1
  403dcc:	9202      	str	r2, [sp, #8]
  403dce:	700b      	strb	r3, [r1, #0]
  403dd0:	1c4d      	adds	r5, r1, #1
  403dd2:	e7b9      	b.n	403d48 <_dtoa_r+0x9c0>
  403dd4:	9a02      	ldr	r2, [sp, #8]
  403dd6:	3201      	adds	r2, #1
  403dd8:	9202      	str	r2, [sp, #8]
  403dda:	9a04      	ldr	r2, [sp, #16]
  403ddc:	2331      	movs	r3, #49	; 0x31
  403dde:	7013      	strb	r3, [r2, #0]
  403de0:	e652      	b.n	403a88 <_dtoa_r+0x700>
  403de2:	2301      	movs	r3, #1
  403de4:	930b      	str	r3, [sp, #44]	; 0x2c
  403de6:	e666      	b.n	403ab6 <_dtoa_r+0x72e>
  403de8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403dec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403dee:	e48f      	b.n	403710 <_dtoa_r+0x388>
  403df0:	004074d0 	.word	0x004074d0
  403df4:	004074a8 	.word	0x004074a8
  403df8:	3ff00000 	.word	0x3ff00000
  403dfc:	401c0000 	.word	0x401c0000
  403e00:	3fe00000 	.word	0x3fe00000
  403e04:	40240000 	.word	0x40240000
  403e08:	40140000 	.word	0x40140000
  403e0c:	4650      	mov	r0, sl
  403e0e:	f001 ff9b 	bl	405d48 <__aeabi_i2d>
  403e12:	463a      	mov	r2, r7
  403e14:	4643      	mov	r3, r8
  403e16:	f001 fffd 	bl	405e14 <__aeabi_dmul>
  403e1a:	2200      	movs	r2, #0
  403e1c:	4bc1      	ldr	r3, [pc, #772]	; (404124 <_dtoa_r+0xd9c>)
  403e1e:	f001 fe47 	bl	405ab0 <__adddf3>
  403e22:	4605      	mov	r5, r0
  403e24:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403e28:	4641      	mov	r1, r8
  403e2a:	2200      	movs	r2, #0
  403e2c:	4bbe      	ldr	r3, [pc, #760]	; (404128 <_dtoa_r+0xda0>)
  403e2e:	4638      	mov	r0, r7
  403e30:	f001 fe3c 	bl	405aac <__aeabi_dsub>
  403e34:	462a      	mov	r2, r5
  403e36:	4633      	mov	r3, r6
  403e38:	4682      	mov	sl, r0
  403e3a:	468b      	mov	fp, r1
  403e3c:	f002 fa7a 	bl	406334 <__aeabi_dcmpgt>
  403e40:	4680      	mov	r8, r0
  403e42:	2800      	cmp	r0, #0
  403e44:	f040 8110 	bne.w	404068 <_dtoa_r+0xce0>
  403e48:	462a      	mov	r2, r5
  403e4a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403e4e:	4650      	mov	r0, sl
  403e50:	4659      	mov	r1, fp
  403e52:	f002 fa51 	bl	4062f8 <__aeabi_dcmplt>
  403e56:	b118      	cbz	r0, 403e60 <_dtoa_r+0xad8>
  403e58:	4646      	mov	r6, r8
  403e5a:	e771      	b.n	403d40 <_dtoa_r+0x9b8>
  403e5c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e60:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403e64:	f7ff bb8a 	b.w	40357c <_dtoa_r+0x1f4>
  403e68:	9804      	ldr	r0, [sp, #16]
  403e6a:	f7ff babb 	b.w	4033e4 <_dtoa_r+0x5c>
  403e6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e70:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403e72:	970c      	str	r7, [sp, #48]	; 0x30
  403e74:	1afb      	subs	r3, r7, r3
  403e76:	441a      	add	r2, r3
  403e78:	920d      	str	r2, [sp, #52]	; 0x34
  403e7a:	2700      	movs	r7, #0
  403e7c:	e469      	b.n	403752 <_dtoa_r+0x3ca>
  403e7e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403e82:	f04f 0a02 	mov.w	sl, #2
  403e86:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403e8a:	e657      	b.n	403b3c <_dtoa_r+0x7b4>
  403e8c:	2100      	movs	r1, #0
  403e8e:	2301      	movs	r3, #1
  403e90:	6461      	str	r1, [r4, #68]	; 0x44
  403e92:	4620      	mov	r0, r4
  403e94:	9325      	str	r3, [sp, #148]	; 0x94
  403e96:	f000 fd99 	bl	4049cc <_Balloc>
  403e9a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403e9c:	9004      	str	r0, [sp, #16]
  403e9e:	6420      	str	r0, [r4, #64]	; 0x40
  403ea0:	930a      	str	r3, [sp, #40]	; 0x28
  403ea2:	930f      	str	r3, [sp, #60]	; 0x3c
  403ea4:	e629      	b.n	403afa <_dtoa_r+0x772>
  403ea6:	2a00      	cmp	r2, #0
  403ea8:	46d0      	mov	r8, sl
  403eaa:	f8cd b018 	str.w	fp, [sp, #24]
  403eae:	469a      	mov	sl, r3
  403eb0:	dd11      	ble.n	403ed6 <_dtoa_r+0xb4e>
  403eb2:	4649      	mov	r1, r9
  403eb4:	2201      	movs	r2, #1
  403eb6:	4620      	mov	r0, r4
  403eb8:	f000 ff34 	bl	404d24 <__lshift>
  403ebc:	4641      	mov	r1, r8
  403ebe:	4681      	mov	r9, r0
  403ec0:	f000 ff82 	bl	404dc8 <__mcmp>
  403ec4:	2800      	cmp	r0, #0
  403ec6:	f340 8146 	ble.w	404156 <_dtoa_r+0xdce>
  403eca:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403ece:	f000 8106 	beq.w	4040de <_dtoa_r+0xd56>
  403ed2:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403ed6:	46b3      	mov	fp, r6
  403ed8:	f887 a000 	strb.w	sl, [r7]
  403edc:	1c7d      	adds	r5, r7, #1
  403ede:	9e06      	ldr	r6, [sp, #24]
  403ee0:	e5d2      	b.n	403a88 <_dtoa_r+0x700>
  403ee2:	d104      	bne.n	403eee <_dtoa_r+0xb66>
  403ee4:	f01a 0f01 	tst.w	sl, #1
  403ee8:	d001      	beq.n	403eee <_dtoa_r+0xb66>
  403eea:	e5bd      	b.n	403a68 <_dtoa_r+0x6e0>
  403eec:	4615      	mov	r5, r2
  403eee:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403ef2:	2b30      	cmp	r3, #48	; 0x30
  403ef4:	f105 32ff 	add.w	r2, r5, #4294967295
  403ef8:	d0f8      	beq.n	403eec <_dtoa_r+0xb64>
  403efa:	e5c5      	b.n	403a88 <_dtoa_r+0x700>
  403efc:	9904      	ldr	r1, [sp, #16]
  403efe:	2230      	movs	r2, #48	; 0x30
  403f00:	700a      	strb	r2, [r1, #0]
  403f02:	9a02      	ldr	r2, [sp, #8]
  403f04:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403f08:	3201      	adds	r2, #1
  403f0a:	9202      	str	r2, [sp, #8]
  403f0c:	f7ff bbfc 	b.w	403708 <_dtoa_r+0x380>
  403f10:	f000 80bb 	beq.w	40408a <_dtoa_r+0xd02>
  403f14:	9b02      	ldr	r3, [sp, #8]
  403f16:	425d      	negs	r5, r3
  403f18:	4b84      	ldr	r3, [pc, #528]	; (40412c <_dtoa_r+0xda4>)
  403f1a:	f005 020f 	and.w	r2, r5, #15
  403f1e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403f22:	e9d3 2300 	ldrd	r2, r3, [r3]
  403f26:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403f2a:	f001 ff73 	bl	405e14 <__aeabi_dmul>
  403f2e:	112d      	asrs	r5, r5, #4
  403f30:	4607      	mov	r7, r0
  403f32:	4688      	mov	r8, r1
  403f34:	f000 812c 	beq.w	404190 <_dtoa_r+0xe08>
  403f38:	4e7d      	ldr	r6, [pc, #500]	; (404130 <_dtoa_r+0xda8>)
  403f3a:	f04f 0a02 	mov.w	sl, #2
  403f3e:	07eb      	lsls	r3, r5, #31
  403f40:	d509      	bpl.n	403f56 <_dtoa_r+0xbce>
  403f42:	4638      	mov	r0, r7
  403f44:	4641      	mov	r1, r8
  403f46:	e9d6 2300 	ldrd	r2, r3, [r6]
  403f4a:	f001 ff63 	bl	405e14 <__aeabi_dmul>
  403f4e:	f10a 0a01 	add.w	sl, sl, #1
  403f52:	4607      	mov	r7, r0
  403f54:	4688      	mov	r8, r1
  403f56:	106d      	asrs	r5, r5, #1
  403f58:	f106 0608 	add.w	r6, r6, #8
  403f5c:	d1ef      	bne.n	403f3e <_dtoa_r+0xbb6>
  403f5e:	e608      	b.n	403b72 <_dtoa_r+0x7ea>
  403f60:	6871      	ldr	r1, [r6, #4]
  403f62:	4620      	mov	r0, r4
  403f64:	f000 fd32 	bl	4049cc <_Balloc>
  403f68:	6933      	ldr	r3, [r6, #16]
  403f6a:	3302      	adds	r3, #2
  403f6c:	009a      	lsls	r2, r3, #2
  403f6e:	4605      	mov	r5, r0
  403f70:	f106 010c 	add.w	r1, r6, #12
  403f74:	300c      	adds	r0, #12
  403f76:	f000 fc8b 	bl	404890 <memcpy>
  403f7a:	4629      	mov	r1, r5
  403f7c:	2201      	movs	r2, #1
  403f7e:	4620      	mov	r0, r4
  403f80:	f000 fed0 	bl	404d24 <__lshift>
  403f84:	9006      	str	r0, [sp, #24]
  403f86:	e4b5      	b.n	4038f4 <_dtoa_r+0x56c>
  403f88:	2b39      	cmp	r3, #57	; 0x39
  403f8a:	f8cd b018 	str.w	fp, [sp, #24]
  403f8e:	46d0      	mov	r8, sl
  403f90:	f000 80a5 	beq.w	4040de <_dtoa_r+0xd56>
  403f94:	f103 0a01 	add.w	sl, r3, #1
  403f98:	46b3      	mov	fp, r6
  403f9a:	f887 a000 	strb.w	sl, [r7]
  403f9e:	1c7d      	adds	r5, r7, #1
  403fa0:	9e06      	ldr	r6, [sp, #24]
  403fa2:	e571      	b.n	403a88 <_dtoa_r+0x700>
  403fa4:	465a      	mov	r2, fp
  403fa6:	46d0      	mov	r8, sl
  403fa8:	46b3      	mov	fp, r6
  403faa:	469a      	mov	sl, r3
  403fac:	4616      	mov	r6, r2
  403fae:	e54f      	b.n	403a50 <_dtoa_r+0x6c8>
  403fb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403fb2:	495e      	ldr	r1, [pc, #376]	; (40412c <_dtoa_r+0xda4>)
  403fb4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403fb8:	462a      	mov	r2, r5
  403fba:	4633      	mov	r3, r6
  403fbc:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403fc0:	f001 ff28 	bl	405e14 <__aeabi_dmul>
  403fc4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403fc8:	4638      	mov	r0, r7
  403fca:	4641      	mov	r1, r8
  403fcc:	f002 f9d2 	bl	406374 <__aeabi_d2iz>
  403fd0:	4605      	mov	r5, r0
  403fd2:	f001 feb9 	bl	405d48 <__aeabi_i2d>
  403fd6:	460b      	mov	r3, r1
  403fd8:	4602      	mov	r2, r0
  403fda:	4641      	mov	r1, r8
  403fdc:	4638      	mov	r0, r7
  403fde:	f001 fd65 	bl	405aac <__aeabi_dsub>
  403fe2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403fe4:	460f      	mov	r7, r1
  403fe6:	9904      	ldr	r1, [sp, #16]
  403fe8:	3530      	adds	r5, #48	; 0x30
  403fea:	2b01      	cmp	r3, #1
  403fec:	700d      	strb	r5, [r1, #0]
  403fee:	4606      	mov	r6, r0
  403ff0:	f101 0501 	add.w	r5, r1, #1
  403ff4:	d026      	beq.n	404044 <_dtoa_r+0xcbc>
  403ff6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403ff8:	9a04      	ldr	r2, [sp, #16]
  403ffa:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404138 <_dtoa_r+0xdb0>
  403ffe:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404002:	4413      	add	r3, r2
  404004:	f04f 0a00 	mov.w	sl, #0
  404008:	4699      	mov	r9, r3
  40400a:	4652      	mov	r2, sl
  40400c:	465b      	mov	r3, fp
  40400e:	4630      	mov	r0, r6
  404010:	4639      	mov	r1, r7
  404012:	f001 feff 	bl	405e14 <__aeabi_dmul>
  404016:	460f      	mov	r7, r1
  404018:	4606      	mov	r6, r0
  40401a:	f002 f9ab 	bl	406374 <__aeabi_d2iz>
  40401e:	4680      	mov	r8, r0
  404020:	f001 fe92 	bl	405d48 <__aeabi_i2d>
  404024:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404028:	4602      	mov	r2, r0
  40402a:	460b      	mov	r3, r1
  40402c:	4630      	mov	r0, r6
  40402e:	4639      	mov	r1, r7
  404030:	f001 fd3c 	bl	405aac <__aeabi_dsub>
  404034:	f805 8b01 	strb.w	r8, [r5], #1
  404038:	454d      	cmp	r5, r9
  40403a:	4606      	mov	r6, r0
  40403c:	460f      	mov	r7, r1
  40403e:	d1e4      	bne.n	40400a <_dtoa_r+0xc82>
  404040:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404044:	4b3b      	ldr	r3, [pc, #236]	; (404134 <_dtoa_r+0xdac>)
  404046:	2200      	movs	r2, #0
  404048:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40404c:	f001 fd30 	bl	405ab0 <__adddf3>
  404050:	4632      	mov	r2, r6
  404052:	463b      	mov	r3, r7
  404054:	f002 f950 	bl	4062f8 <__aeabi_dcmplt>
  404058:	2800      	cmp	r0, #0
  40405a:	d046      	beq.n	4040ea <_dtoa_r+0xd62>
  40405c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40405e:	9302      	str	r3, [sp, #8]
  404060:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404064:	f7ff bb43 	b.w	4036ee <_dtoa_r+0x366>
  404068:	f04f 0800 	mov.w	r8, #0
  40406c:	4646      	mov	r6, r8
  40406e:	e6a9      	b.n	403dc4 <_dtoa_r+0xa3c>
  404070:	9b08      	ldr	r3, [sp, #32]
  404072:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404074:	1a9d      	subs	r5, r3, r2
  404076:	2300      	movs	r3, #0
  404078:	f7ff bb71 	b.w	40375e <_dtoa_r+0x3d6>
  40407c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40407e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404080:	9d08      	ldr	r5, [sp, #32]
  404082:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404086:	f7ff bb6a 	b.w	40375e <_dtoa_r+0x3d6>
  40408a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40408e:	f04f 0a02 	mov.w	sl, #2
  404092:	e56e      	b.n	403b72 <_dtoa_r+0x7ea>
  404094:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404096:	2b00      	cmp	r3, #0
  404098:	f43f aeb8 	beq.w	403e0c <_dtoa_r+0xa84>
  40409c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40409e:	2b00      	cmp	r3, #0
  4040a0:	f77f aede 	ble.w	403e60 <_dtoa_r+0xad8>
  4040a4:	2200      	movs	r2, #0
  4040a6:	4b24      	ldr	r3, [pc, #144]	; (404138 <_dtoa_r+0xdb0>)
  4040a8:	4638      	mov	r0, r7
  4040aa:	4641      	mov	r1, r8
  4040ac:	f001 feb2 	bl	405e14 <__aeabi_dmul>
  4040b0:	4607      	mov	r7, r0
  4040b2:	4688      	mov	r8, r1
  4040b4:	f10a 0001 	add.w	r0, sl, #1
  4040b8:	f001 fe46 	bl	405d48 <__aeabi_i2d>
  4040bc:	463a      	mov	r2, r7
  4040be:	4643      	mov	r3, r8
  4040c0:	f001 fea8 	bl	405e14 <__aeabi_dmul>
  4040c4:	2200      	movs	r2, #0
  4040c6:	4b17      	ldr	r3, [pc, #92]	; (404124 <_dtoa_r+0xd9c>)
  4040c8:	f001 fcf2 	bl	405ab0 <__adddf3>
  4040cc:	9a02      	ldr	r2, [sp, #8]
  4040ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040d0:	9312      	str	r3, [sp, #72]	; 0x48
  4040d2:	3a01      	subs	r2, #1
  4040d4:	4605      	mov	r5, r0
  4040d6:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4040da:	9215      	str	r2, [sp, #84]	; 0x54
  4040dc:	e56a      	b.n	403bb4 <_dtoa_r+0x82c>
  4040de:	2239      	movs	r2, #57	; 0x39
  4040e0:	46b3      	mov	fp, r6
  4040e2:	703a      	strb	r2, [r7, #0]
  4040e4:	9e06      	ldr	r6, [sp, #24]
  4040e6:	1c7d      	adds	r5, r7, #1
  4040e8:	e4c0      	b.n	403a6c <_dtoa_r+0x6e4>
  4040ea:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4040ee:	2000      	movs	r0, #0
  4040f0:	4910      	ldr	r1, [pc, #64]	; (404134 <_dtoa_r+0xdac>)
  4040f2:	f001 fcdb 	bl	405aac <__aeabi_dsub>
  4040f6:	4632      	mov	r2, r6
  4040f8:	463b      	mov	r3, r7
  4040fa:	f002 f91b 	bl	406334 <__aeabi_dcmpgt>
  4040fe:	b908      	cbnz	r0, 404104 <_dtoa_r+0xd7c>
  404100:	e6ae      	b.n	403e60 <_dtoa_r+0xad8>
  404102:	4615      	mov	r5, r2
  404104:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404108:	2b30      	cmp	r3, #48	; 0x30
  40410a:	f105 32ff 	add.w	r2, r5, #4294967295
  40410e:	d0f8      	beq.n	404102 <_dtoa_r+0xd7a>
  404110:	e5d7      	b.n	403cc2 <_dtoa_r+0x93a>
  404112:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404116:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404118:	9302      	str	r3, [sp, #8]
  40411a:	f7ff bae8 	b.w	4036ee <_dtoa_r+0x366>
  40411e:	970c      	str	r7, [sp, #48]	; 0x30
  404120:	f7ff bba5 	b.w	40386e <_dtoa_r+0x4e6>
  404124:	401c0000 	.word	0x401c0000
  404128:	40140000 	.word	0x40140000
  40412c:	004074d0 	.word	0x004074d0
  404130:	004074a8 	.word	0x004074a8
  404134:	3fe00000 	.word	0x3fe00000
  404138:	40240000 	.word	0x40240000
  40413c:	2b39      	cmp	r3, #57	; 0x39
  40413e:	f8cd b018 	str.w	fp, [sp, #24]
  404142:	46d0      	mov	r8, sl
  404144:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404148:	469a      	mov	sl, r3
  40414a:	d0c8      	beq.n	4040de <_dtoa_r+0xd56>
  40414c:	f1bb 0f00 	cmp.w	fp, #0
  404150:	f73f aebf 	bgt.w	403ed2 <_dtoa_r+0xb4a>
  404154:	e6bf      	b.n	403ed6 <_dtoa_r+0xb4e>
  404156:	f47f aebe 	bne.w	403ed6 <_dtoa_r+0xb4e>
  40415a:	f01a 0f01 	tst.w	sl, #1
  40415e:	f43f aeba 	beq.w	403ed6 <_dtoa_r+0xb4e>
  404162:	e6b2      	b.n	403eca <_dtoa_r+0xb42>
  404164:	f04f 0800 	mov.w	r8, #0
  404168:	4646      	mov	r6, r8
  40416a:	e5e9      	b.n	403d40 <_dtoa_r+0x9b8>
  40416c:	4631      	mov	r1, r6
  40416e:	2300      	movs	r3, #0
  404170:	220a      	movs	r2, #10
  404172:	4620      	mov	r0, r4
  404174:	f000 fc5a 	bl	404a2c <__multadd>
  404178:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40417a:	2b00      	cmp	r3, #0
  40417c:	4606      	mov	r6, r0
  40417e:	dd0a      	ble.n	404196 <_dtoa_r+0xe0e>
  404180:	930a      	str	r3, [sp, #40]	; 0x28
  404182:	f7ff bbaa 	b.w	4038da <_dtoa_r+0x552>
  404186:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404188:	2b02      	cmp	r3, #2
  40418a:	dc23      	bgt.n	4041d4 <_dtoa_r+0xe4c>
  40418c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40418e:	e43b      	b.n	403a08 <_dtoa_r+0x680>
  404190:	f04f 0a02 	mov.w	sl, #2
  404194:	e4ed      	b.n	403b72 <_dtoa_r+0x7ea>
  404196:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404198:	2b02      	cmp	r3, #2
  40419a:	dc1b      	bgt.n	4041d4 <_dtoa_r+0xe4c>
  40419c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40419e:	e7ef      	b.n	404180 <_dtoa_r+0xdf8>
  4041a0:	2500      	movs	r5, #0
  4041a2:	6465      	str	r5, [r4, #68]	; 0x44
  4041a4:	4629      	mov	r1, r5
  4041a6:	4620      	mov	r0, r4
  4041a8:	f000 fc10 	bl	4049cc <_Balloc>
  4041ac:	f04f 33ff 	mov.w	r3, #4294967295
  4041b0:	930a      	str	r3, [sp, #40]	; 0x28
  4041b2:	930f      	str	r3, [sp, #60]	; 0x3c
  4041b4:	2301      	movs	r3, #1
  4041b6:	9004      	str	r0, [sp, #16]
  4041b8:	9525      	str	r5, [sp, #148]	; 0x94
  4041ba:	6420      	str	r0, [r4, #64]	; 0x40
  4041bc:	930b      	str	r3, [sp, #44]	; 0x2c
  4041be:	f7ff b9dd 	b.w	40357c <_dtoa_r+0x1f4>
  4041c2:	2501      	movs	r5, #1
  4041c4:	f7ff b9a5 	b.w	403512 <_dtoa_r+0x18a>
  4041c8:	f43f ab69 	beq.w	40389e <_dtoa_r+0x516>
  4041cc:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4041d0:	f7ff bbf9 	b.w	4039c6 <_dtoa_r+0x63e>
  4041d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4041d6:	930a      	str	r3, [sp, #40]	; 0x28
  4041d8:	e5e5      	b.n	403da6 <_dtoa_r+0xa1e>
  4041da:	bf00      	nop

004041dc <__libc_fini_array>:
  4041dc:	b538      	push	{r3, r4, r5, lr}
  4041de:	4c0a      	ldr	r4, [pc, #40]	; (404208 <__libc_fini_array+0x2c>)
  4041e0:	4d0a      	ldr	r5, [pc, #40]	; (40420c <__libc_fini_array+0x30>)
  4041e2:	1b64      	subs	r4, r4, r5
  4041e4:	10a4      	asrs	r4, r4, #2
  4041e6:	d00a      	beq.n	4041fe <__libc_fini_array+0x22>
  4041e8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4041ec:	3b01      	subs	r3, #1
  4041ee:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4041f2:	3c01      	subs	r4, #1
  4041f4:	f855 3904 	ldr.w	r3, [r5], #-4
  4041f8:	4798      	blx	r3
  4041fa:	2c00      	cmp	r4, #0
  4041fc:	d1f9      	bne.n	4041f2 <__libc_fini_array+0x16>
  4041fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404202:	f003 ba63 	b.w	4076cc <_fini>
  404206:	bf00      	nop
  404208:	004076dc 	.word	0x004076dc
  40420c:	004076d8 	.word	0x004076d8

00404210 <_localeconv_r>:
  404210:	4a04      	ldr	r2, [pc, #16]	; (404224 <_localeconv_r+0x14>)
  404212:	4b05      	ldr	r3, [pc, #20]	; (404228 <_localeconv_r+0x18>)
  404214:	6812      	ldr	r2, [r2, #0]
  404216:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404218:	2800      	cmp	r0, #0
  40421a:	bf08      	it	eq
  40421c:	4618      	moveq	r0, r3
  40421e:	30f0      	adds	r0, #240	; 0xf0
  404220:	4770      	bx	lr
  404222:	bf00      	nop
  404224:	20000010 	.word	0x20000010
  404228:	20000850 	.word	0x20000850

0040422c <_malloc_r>:
  40422c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404230:	f101 060b 	add.w	r6, r1, #11
  404234:	2e16      	cmp	r6, #22
  404236:	b083      	sub	sp, #12
  404238:	4605      	mov	r5, r0
  40423a:	f240 809e 	bls.w	40437a <_malloc_r+0x14e>
  40423e:	f036 0607 	bics.w	r6, r6, #7
  404242:	f100 80bd 	bmi.w	4043c0 <_malloc_r+0x194>
  404246:	42b1      	cmp	r1, r6
  404248:	f200 80ba 	bhi.w	4043c0 <_malloc_r+0x194>
  40424c:	f000 fbba 	bl	4049c4 <__malloc_lock>
  404250:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404254:	f0c0 8293 	bcc.w	40477e <_malloc_r+0x552>
  404258:	0a73      	lsrs	r3, r6, #9
  40425a:	f000 80b8 	beq.w	4043ce <_malloc_r+0x1a2>
  40425e:	2b04      	cmp	r3, #4
  404260:	f200 8179 	bhi.w	404556 <_malloc_r+0x32a>
  404264:	09b3      	lsrs	r3, r6, #6
  404266:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40426a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40426e:	00c3      	lsls	r3, r0, #3
  404270:	4fbf      	ldr	r7, [pc, #764]	; (404570 <_malloc_r+0x344>)
  404272:	443b      	add	r3, r7
  404274:	f1a3 0108 	sub.w	r1, r3, #8
  404278:	685c      	ldr	r4, [r3, #4]
  40427a:	42a1      	cmp	r1, r4
  40427c:	d106      	bne.n	40428c <_malloc_r+0x60>
  40427e:	e00c      	b.n	40429a <_malloc_r+0x6e>
  404280:	2a00      	cmp	r2, #0
  404282:	f280 80aa 	bge.w	4043da <_malloc_r+0x1ae>
  404286:	68e4      	ldr	r4, [r4, #12]
  404288:	42a1      	cmp	r1, r4
  40428a:	d006      	beq.n	40429a <_malloc_r+0x6e>
  40428c:	6863      	ldr	r3, [r4, #4]
  40428e:	f023 0303 	bic.w	r3, r3, #3
  404292:	1b9a      	subs	r2, r3, r6
  404294:	2a0f      	cmp	r2, #15
  404296:	ddf3      	ble.n	404280 <_malloc_r+0x54>
  404298:	4670      	mov	r0, lr
  40429a:	693c      	ldr	r4, [r7, #16]
  40429c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404584 <_malloc_r+0x358>
  4042a0:	4574      	cmp	r4, lr
  4042a2:	f000 81ab 	beq.w	4045fc <_malloc_r+0x3d0>
  4042a6:	6863      	ldr	r3, [r4, #4]
  4042a8:	f023 0303 	bic.w	r3, r3, #3
  4042ac:	1b9a      	subs	r2, r3, r6
  4042ae:	2a0f      	cmp	r2, #15
  4042b0:	f300 8190 	bgt.w	4045d4 <_malloc_r+0x3a8>
  4042b4:	2a00      	cmp	r2, #0
  4042b6:	f8c7 e014 	str.w	lr, [r7, #20]
  4042ba:	f8c7 e010 	str.w	lr, [r7, #16]
  4042be:	f280 809d 	bge.w	4043fc <_malloc_r+0x1d0>
  4042c2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4042c6:	f080 8161 	bcs.w	40458c <_malloc_r+0x360>
  4042ca:	08db      	lsrs	r3, r3, #3
  4042cc:	f103 0c01 	add.w	ip, r3, #1
  4042d0:	1099      	asrs	r1, r3, #2
  4042d2:	687a      	ldr	r2, [r7, #4]
  4042d4:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4042d8:	f8c4 8008 	str.w	r8, [r4, #8]
  4042dc:	2301      	movs	r3, #1
  4042de:	408b      	lsls	r3, r1
  4042e0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4042e4:	4313      	orrs	r3, r2
  4042e6:	3908      	subs	r1, #8
  4042e8:	60e1      	str	r1, [r4, #12]
  4042ea:	607b      	str	r3, [r7, #4]
  4042ec:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4042f0:	f8c8 400c 	str.w	r4, [r8, #12]
  4042f4:	1082      	asrs	r2, r0, #2
  4042f6:	2401      	movs	r4, #1
  4042f8:	4094      	lsls	r4, r2
  4042fa:	429c      	cmp	r4, r3
  4042fc:	f200 808b 	bhi.w	404416 <_malloc_r+0x1ea>
  404300:	421c      	tst	r4, r3
  404302:	d106      	bne.n	404312 <_malloc_r+0xe6>
  404304:	f020 0003 	bic.w	r0, r0, #3
  404308:	0064      	lsls	r4, r4, #1
  40430a:	421c      	tst	r4, r3
  40430c:	f100 0004 	add.w	r0, r0, #4
  404310:	d0fa      	beq.n	404308 <_malloc_r+0xdc>
  404312:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404316:	46cc      	mov	ip, r9
  404318:	4680      	mov	r8, r0
  40431a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40431e:	459c      	cmp	ip, r3
  404320:	d107      	bne.n	404332 <_malloc_r+0x106>
  404322:	e16d      	b.n	404600 <_malloc_r+0x3d4>
  404324:	2a00      	cmp	r2, #0
  404326:	f280 817b 	bge.w	404620 <_malloc_r+0x3f4>
  40432a:	68db      	ldr	r3, [r3, #12]
  40432c:	459c      	cmp	ip, r3
  40432e:	f000 8167 	beq.w	404600 <_malloc_r+0x3d4>
  404332:	6859      	ldr	r1, [r3, #4]
  404334:	f021 0103 	bic.w	r1, r1, #3
  404338:	1b8a      	subs	r2, r1, r6
  40433a:	2a0f      	cmp	r2, #15
  40433c:	ddf2      	ble.n	404324 <_malloc_r+0xf8>
  40433e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404342:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404346:	9300      	str	r3, [sp, #0]
  404348:	199c      	adds	r4, r3, r6
  40434a:	4628      	mov	r0, r5
  40434c:	f046 0601 	orr.w	r6, r6, #1
  404350:	f042 0501 	orr.w	r5, r2, #1
  404354:	605e      	str	r6, [r3, #4]
  404356:	f8c8 c00c 	str.w	ip, [r8, #12]
  40435a:	f8cc 8008 	str.w	r8, [ip, #8]
  40435e:	617c      	str	r4, [r7, #20]
  404360:	613c      	str	r4, [r7, #16]
  404362:	f8c4 e00c 	str.w	lr, [r4, #12]
  404366:	f8c4 e008 	str.w	lr, [r4, #8]
  40436a:	6065      	str	r5, [r4, #4]
  40436c:	505a      	str	r2, [r3, r1]
  40436e:	f000 fb2b 	bl	4049c8 <__malloc_unlock>
  404372:	9b00      	ldr	r3, [sp, #0]
  404374:	f103 0408 	add.w	r4, r3, #8
  404378:	e01e      	b.n	4043b8 <_malloc_r+0x18c>
  40437a:	2910      	cmp	r1, #16
  40437c:	d820      	bhi.n	4043c0 <_malloc_r+0x194>
  40437e:	f000 fb21 	bl	4049c4 <__malloc_lock>
  404382:	2610      	movs	r6, #16
  404384:	2318      	movs	r3, #24
  404386:	2002      	movs	r0, #2
  404388:	4f79      	ldr	r7, [pc, #484]	; (404570 <_malloc_r+0x344>)
  40438a:	443b      	add	r3, r7
  40438c:	f1a3 0208 	sub.w	r2, r3, #8
  404390:	685c      	ldr	r4, [r3, #4]
  404392:	4294      	cmp	r4, r2
  404394:	f000 813d 	beq.w	404612 <_malloc_r+0x3e6>
  404398:	6863      	ldr	r3, [r4, #4]
  40439a:	68e1      	ldr	r1, [r4, #12]
  40439c:	68a6      	ldr	r6, [r4, #8]
  40439e:	f023 0303 	bic.w	r3, r3, #3
  4043a2:	4423      	add	r3, r4
  4043a4:	4628      	mov	r0, r5
  4043a6:	685a      	ldr	r2, [r3, #4]
  4043a8:	60f1      	str	r1, [r6, #12]
  4043aa:	f042 0201 	orr.w	r2, r2, #1
  4043ae:	608e      	str	r6, [r1, #8]
  4043b0:	605a      	str	r2, [r3, #4]
  4043b2:	f000 fb09 	bl	4049c8 <__malloc_unlock>
  4043b6:	3408      	adds	r4, #8
  4043b8:	4620      	mov	r0, r4
  4043ba:	b003      	add	sp, #12
  4043bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043c0:	2400      	movs	r4, #0
  4043c2:	230c      	movs	r3, #12
  4043c4:	4620      	mov	r0, r4
  4043c6:	602b      	str	r3, [r5, #0]
  4043c8:	b003      	add	sp, #12
  4043ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043ce:	2040      	movs	r0, #64	; 0x40
  4043d0:	f44f 7300 	mov.w	r3, #512	; 0x200
  4043d4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4043d8:	e74a      	b.n	404270 <_malloc_r+0x44>
  4043da:	4423      	add	r3, r4
  4043dc:	68e1      	ldr	r1, [r4, #12]
  4043de:	685a      	ldr	r2, [r3, #4]
  4043e0:	68a6      	ldr	r6, [r4, #8]
  4043e2:	f042 0201 	orr.w	r2, r2, #1
  4043e6:	60f1      	str	r1, [r6, #12]
  4043e8:	4628      	mov	r0, r5
  4043ea:	608e      	str	r6, [r1, #8]
  4043ec:	605a      	str	r2, [r3, #4]
  4043ee:	f000 faeb 	bl	4049c8 <__malloc_unlock>
  4043f2:	3408      	adds	r4, #8
  4043f4:	4620      	mov	r0, r4
  4043f6:	b003      	add	sp, #12
  4043f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4043fc:	4423      	add	r3, r4
  4043fe:	4628      	mov	r0, r5
  404400:	685a      	ldr	r2, [r3, #4]
  404402:	f042 0201 	orr.w	r2, r2, #1
  404406:	605a      	str	r2, [r3, #4]
  404408:	f000 fade 	bl	4049c8 <__malloc_unlock>
  40440c:	3408      	adds	r4, #8
  40440e:	4620      	mov	r0, r4
  404410:	b003      	add	sp, #12
  404412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404416:	68bc      	ldr	r4, [r7, #8]
  404418:	6863      	ldr	r3, [r4, #4]
  40441a:	f023 0803 	bic.w	r8, r3, #3
  40441e:	45b0      	cmp	r8, r6
  404420:	d304      	bcc.n	40442c <_malloc_r+0x200>
  404422:	eba8 0306 	sub.w	r3, r8, r6
  404426:	2b0f      	cmp	r3, #15
  404428:	f300 8085 	bgt.w	404536 <_malloc_r+0x30a>
  40442c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404588 <_malloc_r+0x35c>
  404430:	4b50      	ldr	r3, [pc, #320]	; (404574 <_malloc_r+0x348>)
  404432:	f8d9 2000 	ldr.w	r2, [r9]
  404436:	681b      	ldr	r3, [r3, #0]
  404438:	3201      	adds	r2, #1
  40443a:	4433      	add	r3, r6
  40443c:	eb04 0a08 	add.w	sl, r4, r8
  404440:	f000 8155 	beq.w	4046ee <_malloc_r+0x4c2>
  404444:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404448:	330f      	adds	r3, #15
  40444a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40444e:	f02b 0b0f 	bic.w	fp, fp, #15
  404452:	4659      	mov	r1, fp
  404454:	4628      	mov	r0, r5
  404456:	f000 fdb3 	bl	404fc0 <_sbrk_r>
  40445a:	1c41      	adds	r1, r0, #1
  40445c:	4602      	mov	r2, r0
  40445e:	f000 80fc 	beq.w	40465a <_malloc_r+0x42e>
  404462:	4582      	cmp	sl, r0
  404464:	f200 80f7 	bhi.w	404656 <_malloc_r+0x42a>
  404468:	4b43      	ldr	r3, [pc, #268]	; (404578 <_malloc_r+0x34c>)
  40446a:	6819      	ldr	r1, [r3, #0]
  40446c:	4459      	add	r1, fp
  40446e:	6019      	str	r1, [r3, #0]
  404470:	f000 814d 	beq.w	40470e <_malloc_r+0x4e2>
  404474:	f8d9 0000 	ldr.w	r0, [r9]
  404478:	3001      	adds	r0, #1
  40447a:	bf1b      	ittet	ne
  40447c:	eba2 0a0a 	subne.w	sl, r2, sl
  404480:	4451      	addne	r1, sl
  404482:	f8c9 2000 	streq.w	r2, [r9]
  404486:	6019      	strne	r1, [r3, #0]
  404488:	f012 0107 	ands.w	r1, r2, #7
  40448c:	f000 8115 	beq.w	4046ba <_malloc_r+0x48e>
  404490:	f1c1 0008 	rsb	r0, r1, #8
  404494:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404498:	4402      	add	r2, r0
  40449a:	3108      	adds	r1, #8
  40449c:	eb02 090b 	add.w	r9, r2, fp
  4044a0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4044a4:	eba1 0909 	sub.w	r9, r1, r9
  4044a8:	4649      	mov	r1, r9
  4044aa:	4628      	mov	r0, r5
  4044ac:	9301      	str	r3, [sp, #4]
  4044ae:	9200      	str	r2, [sp, #0]
  4044b0:	f000 fd86 	bl	404fc0 <_sbrk_r>
  4044b4:	1c43      	adds	r3, r0, #1
  4044b6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4044ba:	f000 8143 	beq.w	404744 <_malloc_r+0x518>
  4044be:	1a80      	subs	r0, r0, r2
  4044c0:	4448      	add	r0, r9
  4044c2:	f040 0001 	orr.w	r0, r0, #1
  4044c6:	6819      	ldr	r1, [r3, #0]
  4044c8:	60ba      	str	r2, [r7, #8]
  4044ca:	4449      	add	r1, r9
  4044cc:	42bc      	cmp	r4, r7
  4044ce:	6050      	str	r0, [r2, #4]
  4044d0:	6019      	str	r1, [r3, #0]
  4044d2:	d017      	beq.n	404504 <_malloc_r+0x2d8>
  4044d4:	f1b8 0f0f 	cmp.w	r8, #15
  4044d8:	f240 80fb 	bls.w	4046d2 <_malloc_r+0x4a6>
  4044dc:	6860      	ldr	r0, [r4, #4]
  4044de:	f1a8 020c 	sub.w	r2, r8, #12
  4044e2:	f022 0207 	bic.w	r2, r2, #7
  4044e6:	eb04 0e02 	add.w	lr, r4, r2
  4044ea:	f000 0001 	and.w	r0, r0, #1
  4044ee:	f04f 0c05 	mov.w	ip, #5
  4044f2:	4310      	orrs	r0, r2
  4044f4:	2a0f      	cmp	r2, #15
  4044f6:	6060      	str	r0, [r4, #4]
  4044f8:	f8ce c004 	str.w	ip, [lr, #4]
  4044fc:	f8ce c008 	str.w	ip, [lr, #8]
  404500:	f200 8117 	bhi.w	404732 <_malloc_r+0x506>
  404504:	4b1d      	ldr	r3, [pc, #116]	; (40457c <_malloc_r+0x350>)
  404506:	68bc      	ldr	r4, [r7, #8]
  404508:	681a      	ldr	r2, [r3, #0]
  40450a:	4291      	cmp	r1, r2
  40450c:	bf88      	it	hi
  40450e:	6019      	strhi	r1, [r3, #0]
  404510:	4b1b      	ldr	r3, [pc, #108]	; (404580 <_malloc_r+0x354>)
  404512:	681a      	ldr	r2, [r3, #0]
  404514:	4291      	cmp	r1, r2
  404516:	6862      	ldr	r2, [r4, #4]
  404518:	bf88      	it	hi
  40451a:	6019      	strhi	r1, [r3, #0]
  40451c:	f022 0203 	bic.w	r2, r2, #3
  404520:	4296      	cmp	r6, r2
  404522:	eba2 0306 	sub.w	r3, r2, r6
  404526:	d801      	bhi.n	40452c <_malloc_r+0x300>
  404528:	2b0f      	cmp	r3, #15
  40452a:	dc04      	bgt.n	404536 <_malloc_r+0x30a>
  40452c:	4628      	mov	r0, r5
  40452e:	f000 fa4b 	bl	4049c8 <__malloc_unlock>
  404532:	2400      	movs	r4, #0
  404534:	e740      	b.n	4043b8 <_malloc_r+0x18c>
  404536:	19a2      	adds	r2, r4, r6
  404538:	f043 0301 	orr.w	r3, r3, #1
  40453c:	f046 0601 	orr.w	r6, r6, #1
  404540:	6066      	str	r6, [r4, #4]
  404542:	4628      	mov	r0, r5
  404544:	60ba      	str	r2, [r7, #8]
  404546:	6053      	str	r3, [r2, #4]
  404548:	f000 fa3e 	bl	4049c8 <__malloc_unlock>
  40454c:	3408      	adds	r4, #8
  40454e:	4620      	mov	r0, r4
  404550:	b003      	add	sp, #12
  404552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404556:	2b14      	cmp	r3, #20
  404558:	d971      	bls.n	40463e <_malloc_r+0x412>
  40455a:	2b54      	cmp	r3, #84	; 0x54
  40455c:	f200 80a3 	bhi.w	4046a6 <_malloc_r+0x47a>
  404560:	0b33      	lsrs	r3, r6, #12
  404562:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404566:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40456a:	00c3      	lsls	r3, r0, #3
  40456c:	e680      	b.n	404270 <_malloc_r+0x44>
  40456e:	bf00      	nop
  404570:	20000440 	.word	0x20000440
  404574:	20000aac 	.word	0x20000aac
  404578:	20000a7c 	.word	0x20000a7c
  40457c:	20000aa4 	.word	0x20000aa4
  404580:	20000aa8 	.word	0x20000aa8
  404584:	20000448 	.word	0x20000448
  404588:	20000848 	.word	0x20000848
  40458c:	0a5a      	lsrs	r2, r3, #9
  40458e:	2a04      	cmp	r2, #4
  404590:	d95b      	bls.n	40464a <_malloc_r+0x41e>
  404592:	2a14      	cmp	r2, #20
  404594:	f200 80ae 	bhi.w	4046f4 <_malloc_r+0x4c8>
  404598:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40459c:	00c9      	lsls	r1, r1, #3
  40459e:	325b      	adds	r2, #91	; 0x5b
  4045a0:	eb07 0c01 	add.w	ip, r7, r1
  4045a4:	5879      	ldr	r1, [r7, r1]
  4045a6:	f1ac 0c08 	sub.w	ip, ip, #8
  4045aa:	458c      	cmp	ip, r1
  4045ac:	f000 8088 	beq.w	4046c0 <_malloc_r+0x494>
  4045b0:	684a      	ldr	r2, [r1, #4]
  4045b2:	f022 0203 	bic.w	r2, r2, #3
  4045b6:	4293      	cmp	r3, r2
  4045b8:	d273      	bcs.n	4046a2 <_malloc_r+0x476>
  4045ba:	6889      	ldr	r1, [r1, #8]
  4045bc:	458c      	cmp	ip, r1
  4045be:	d1f7      	bne.n	4045b0 <_malloc_r+0x384>
  4045c0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4045c4:	687b      	ldr	r3, [r7, #4]
  4045c6:	60e2      	str	r2, [r4, #12]
  4045c8:	f8c4 c008 	str.w	ip, [r4, #8]
  4045cc:	6094      	str	r4, [r2, #8]
  4045ce:	f8cc 400c 	str.w	r4, [ip, #12]
  4045d2:	e68f      	b.n	4042f4 <_malloc_r+0xc8>
  4045d4:	19a1      	adds	r1, r4, r6
  4045d6:	f046 0c01 	orr.w	ip, r6, #1
  4045da:	f042 0601 	orr.w	r6, r2, #1
  4045de:	f8c4 c004 	str.w	ip, [r4, #4]
  4045e2:	4628      	mov	r0, r5
  4045e4:	6179      	str	r1, [r7, #20]
  4045e6:	6139      	str	r1, [r7, #16]
  4045e8:	f8c1 e00c 	str.w	lr, [r1, #12]
  4045ec:	f8c1 e008 	str.w	lr, [r1, #8]
  4045f0:	604e      	str	r6, [r1, #4]
  4045f2:	50e2      	str	r2, [r4, r3]
  4045f4:	f000 f9e8 	bl	4049c8 <__malloc_unlock>
  4045f8:	3408      	adds	r4, #8
  4045fa:	e6dd      	b.n	4043b8 <_malloc_r+0x18c>
  4045fc:	687b      	ldr	r3, [r7, #4]
  4045fe:	e679      	b.n	4042f4 <_malloc_r+0xc8>
  404600:	f108 0801 	add.w	r8, r8, #1
  404604:	f018 0f03 	tst.w	r8, #3
  404608:	f10c 0c08 	add.w	ip, ip, #8
  40460c:	f47f ae85 	bne.w	40431a <_malloc_r+0xee>
  404610:	e02d      	b.n	40466e <_malloc_r+0x442>
  404612:	68dc      	ldr	r4, [r3, #12]
  404614:	42a3      	cmp	r3, r4
  404616:	bf08      	it	eq
  404618:	3002      	addeq	r0, #2
  40461a:	f43f ae3e 	beq.w	40429a <_malloc_r+0x6e>
  40461e:	e6bb      	b.n	404398 <_malloc_r+0x16c>
  404620:	4419      	add	r1, r3
  404622:	461c      	mov	r4, r3
  404624:	684a      	ldr	r2, [r1, #4]
  404626:	68db      	ldr	r3, [r3, #12]
  404628:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40462c:	f042 0201 	orr.w	r2, r2, #1
  404630:	604a      	str	r2, [r1, #4]
  404632:	4628      	mov	r0, r5
  404634:	60f3      	str	r3, [r6, #12]
  404636:	609e      	str	r6, [r3, #8]
  404638:	f000 f9c6 	bl	4049c8 <__malloc_unlock>
  40463c:	e6bc      	b.n	4043b8 <_malloc_r+0x18c>
  40463e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404642:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404646:	00c3      	lsls	r3, r0, #3
  404648:	e612      	b.n	404270 <_malloc_r+0x44>
  40464a:	099a      	lsrs	r2, r3, #6
  40464c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404650:	00c9      	lsls	r1, r1, #3
  404652:	3238      	adds	r2, #56	; 0x38
  404654:	e7a4      	b.n	4045a0 <_malloc_r+0x374>
  404656:	42bc      	cmp	r4, r7
  404658:	d054      	beq.n	404704 <_malloc_r+0x4d8>
  40465a:	68bc      	ldr	r4, [r7, #8]
  40465c:	6862      	ldr	r2, [r4, #4]
  40465e:	f022 0203 	bic.w	r2, r2, #3
  404662:	e75d      	b.n	404520 <_malloc_r+0x2f4>
  404664:	f859 3908 	ldr.w	r3, [r9], #-8
  404668:	4599      	cmp	r9, r3
  40466a:	f040 8086 	bne.w	40477a <_malloc_r+0x54e>
  40466e:	f010 0f03 	tst.w	r0, #3
  404672:	f100 30ff 	add.w	r0, r0, #4294967295
  404676:	d1f5      	bne.n	404664 <_malloc_r+0x438>
  404678:	687b      	ldr	r3, [r7, #4]
  40467a:	ea23 0304 	bic.w	r3, r3, r4
  40467e:	607b      	str	r3, [r7, #4]
  404680:	0064      	lsls	r4, r4, #1
  404682:	429c      	cmp	r4, r3
  404684:	f63f aec7 	bhi.w	404416 <_malloc_r+0x1ea>
  404688:	2c00      	cmp	r4, #0
  40468a:	f43f aec4 	beq.w	404416 <_malloc_r+0x1ea>
  40468e:	421c      	tst	r4, r3
  404690:	4640      	mov	r0, r8
  404692:	f47f ae3e 	bne.w	404312 <_malloc_r+0xe6>
  404696:	0064      	lsls	r4, r4, #1
  404698:	421c      	tst	r4, r3
  40469a:	f100 0004 	add.w	r0, r0, #4
  40469e:	d0fa      	beq.n	404696 <_malloc_r+0x46a>
  4046a0:	e637      	b.n	404312 <_malloc_r+0xe6>
  4046a2:	468c      	mov	ip, r1
  4046a4:	e78c      	b.n	4045c0 <_malloc_r+0x394>
  4046a6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4046aa:	d815      	bhi.n	4046d8 <_malloc_r+0x4ac>
  4046ac:	0bf3      	lsrs	r3, r6, #15
  4046ae:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4046b2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4046b6:	00c3      	lsls	r3, r0, #3
  4046b8:	e5da      	b.n	404270 <_malloc_r+0x44>
  4046ba:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4046be:	e6ed      	b.n	40449c <_malloc_r+0x270>
  4046c0:	687b      	ldr	r3, [r7, #4]
  4046c2:	1092      	asrs	r2, r2, #2
  4046c4:	2101      	movs	r1, #1
  4046c6:	fa01 f202 	lsl.w	r2, r1, r2
  4046ca:	4313      	orrs	r3, r2
  4046cc:	607b      	str	r3, [r7, #4]
  4046ce:	4662      	mov	r2, ip
  4046d0:	e779      	b.n	4045c6 <_malloc_r+0x39a>
  4046d2:	2301      	movs	r3, #1
  4046d4:	6053      	str	r3, [r2, #4]
  4046d6:	e729      	b.n	40452c <_malloc_r+0x300>
  4046d8:	f240 5254 	movw	r2, #1364	; 0x554
  4046dc:	4293      	cmp	r3, r2
  4046de:	d822      	bhi.n	404726 <_malloc_r+0x4fa>
  4046e0:	0cb3      	lsrs	r3, r6, #18
  4046e2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  4046e6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4046ea:	00c3      	lsls	r3, r0, #3
  4046ec:	e5c0      	b.n	404270 <_malloc_r+0x44>
  4046ee:	f103 0b10 	add.w	fp, r3, #16
  4046f2:	e6ae      	b.n	404452 <_malloc_r+0x226>
  4046f4:	2a54      	cmp	r2, #84	; 0x54
  4046f6:	d829      	bhi.n	40474c <_malloc_r+0x520>
  4046f8:	0b1a      	lsrs	r2, r3, #12
  4046fa:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4046fe:	00c9      	lsls	r1, r1, #3
  404700:	326e      	adds	r2, #110	; 0x6e
  404702:	e74d      	b.n	4045a0 <_malloc_r+0x374>
  404704:	4b20      	ldr	r3, [pc, #128]	; (404788 <_malloc_r+0x55c>)
  404706:	6819      	ldr	r1, [r3, #0]
  404708:	4459      	add	r1, fp
  40470a:	6019      	str	r1, [r3, #0]
  40470c:	e6b2      	b.n	404474 <_malloc_r+0x248>
  40470e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404712:	2800      	cmp	r0, #0
  404714:	f47f aeae 	bne.w	404474 <_malloc_r+0x248>
  404718:	eb08 030b 	add.w	r3, r8, fp
  40471c:	68ba      	ldr	r2, [r7, #8]
  40471e:	f043 0301 	orr.w	r3, r3, #1
  404722:	6053      	str	r3, [r2, #4]
  404724:	e6ee      	b.n	404504 <_malloc_r+0x2d8>
  404726:	207f      	movs	r0, #127	; 0x7f
  404728:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40472c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404730:	e59e      	b.n	404270 <_malloc_r+0x44>
  404732:	f104 0108 	add.w	r1, r4, #8
  404736:	4628      	mov	r0, r5
  404738:	9300      	str	r3, [sp, #0]
  40473a:	f000 fe9f 	bl	40547c <_free_r>
  40473e:	9b00      	ldr	r3, [sp, #0]
  404740:	6819      	ldr	r1, [r3, #0]
  404742:	e6df      	b.n	404504 <_malloc_r+0x2d8>
  404744:	2001      	movs	r0, #1
  404746:	f04f 0900 	mov.w	r9, #0
  40474a:	e6bc      	b.n	4044c6 <_malloc_r+0x29a>
  40474c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404750:	d805      	bhi.n	40475e <_malloc_r+0x532>
  404752:	0bda      	lsrs	r2, r3, #15
  404754:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404758:	00c9      	lsls	r1, r1, #3
  40475a:	3277      	adds	r2, #119	; 0x77
  40475c:	e720      	b.n	4045a0 <_malloc_r+0x374>
  40475e:	f240 5154 	movw	r1, #1364	; 0x554
  404762:	428a      	cmp	r2, r1
  404764:	d805      	bhi.n	404772 <_malloc_r+0x546>
  404766:	0c9a      	lsrs	r2, r3, #18
  404768:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40476c:	00c9      	lsls	r1, r1, #3
  40476e:	327c      	adds	r2, #124	; 0x7c
  404770:	e716      	b.n	4045a0 <_malloc_r+0x374>
  404772:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404776:	227e      	movs	r2, #126	; 0x7e
  404778:	e712      	b.n	4045a0 <_malloc_r+0x374>
  40477a:	687b      	ldr	r3, [r7, #4]
  40477c:	e780      	b.n	404680 <_malloc_r+0x454>
  40477e:	08f0      	lsrs	r0, r6, #3
  404780:	f106 0308 	add.w	r3, r6, #8
  404784:	e600      	b.n	404388 <_malloc_r+0x15c>
  404786:	bf00      	nop
  404788:	20000a7c 	.word	0x20000a7c
  40478c:	00000000 	.word	0x00000000

00404790 <memchr>:
  404790:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404794:	2a10      	cmp	r2, #16
  404796:	db2b      	blt.n	4047f0 <memchr+0x60>
  404798:	f010 0f07 	tst.w	r0, #7
  40479c:	d008      	beq.n	4047b0 <memchr+0x20>
  40479e:	f810 3b01 	ldrb.w	r3, [r0], #1
  4047a2:	3a01      	subs	r2, #1
  4047a4:	428b      	cmp	r3, r1
  4047a6:	d02d      	beq.n	404804 <memchr+0x74>
  4047a8:	f010 0f07 	tst.w	r0, #7
  4047ac:	b342      	cbz	r2, 404800 <memchr+0x70>
  4047ae:	d1f6      	bne.n	40479e <memchr+0xe>
  4047b0:	b4f0      	push	{r4, r5, r6, r7}
  4047b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4047b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4047ba:	f022 0407 	bic.w	r4, r2, #7
  4047be:	f07f 0700 	mvns.w	r7, #0
  4047c2:	2300      	movs	r3, #0
  4047c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4047c8:	3c08      	subs	r4, #8
  4047ca:	ea85 0501 	eor.w	r5, r5, r1
  4047ce:	ea86 0601 	eor.w	r6, r6, r1
  4047d2:	fa85 f547 	uadd8	r5, r5, r7
  4047d6:	faa3 f587 	sel	r5, r3, r7
  4047da:	fa86 f647 	uadd8	r6, r6, r7
  4047de:	faa5 f687 	sel	r6, r5, r7
  4047e2:	b98e      	cbnz	r6, 404808 <memchr+0x78>
  4047e4:	d1ee      	bne.n	4047c4 <memchr+0x34>
  4047e6:	bcf0      	pop	{r4, r5, r6, r7}
  4047e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4047ec:	f002 0207 	and.w	r2, r2, #7
  4047f0:	b132      	cbz	r2, 404800 <memchr+0x70>
  4047f2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4047f6:	3a01      	subs	r2, #1
  4047f8:	ea83 0301 	eor.w	r3, r3, r1
  4047fc:	b113      	cbz	r3, 404804 <memchr+0x74>
  4047fe:	d1f8      	bne.n	4047f2 <memchr+0x62>
  404800:	2000      	movs	r0, #0
  404802:	4770      	bx	lr
  404804:	3801      	subs	r0, #1
  404806:	4770      	bx	lr
  404808:	2d00      	cmp	r5, #0
  40480a:	bf06      	itte	eq
  40480c:	4635      	moveq	r5, r6
  40480e:	3803      	subeq	r0, #3
  404810:	3807      	subne	r0, #7
  404812:	f015 0f01 	tst.w	r5, #1
  404816:	d107      	bne.n	404828 <memchr+0x98>
  404818:	3001      	adds	r0, #1
  40481a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40481e:	bf02      	ittt	eq
  404820:	3001      	addeq	r0, #1
  404822:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404826:	3001      	addeq	r0, #1
  404828:	bcf0      	pop	{r4, r5, r6, r7}
  40482a:	3801      	subs	r0, #1
  40482c:	4770      	bx	lr
  40482e:	bf00      	nop

00404830 <memcmp>:
  404830:	2a03      	cmp	r2, #3
  404832:	b470      	push	{r4, r5, r6}
  404834:	d922      	bls.n	40487c <memcmp+0x4c>
  404836:	ea40 0301 	orr.w	r3, r0, r1
  40483a:	079b      	lsls	r3, r3, #30
  40483c:	d011      	beq.n	404862 <memcmp+0x32>
  40483e:	7803      	ldrb	r3, [r0, #0]
  404840:	780c      	ldrb	r4, [r1, #0]
  404842:	42a3      	cmp	r3, r4
  404844:	d11d      	bne.n	404882 <memcmp+0x52>
  404846:	440a      	add	r2, r1
  404848:	3101      	adds	r1, #1
  40484a:	e005      	b.n	404858 <memcmp+0x28>
  40484c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  404850:	f811 4b01 	ldrb.w	r4, [r1], #1
  404854:	42a3      	cmp	r3, r4
  404856:	d114      	bne.n	404882 <memcmp+0x52>
  404858:	4291      	cmp	r1, r2
  40485a:	d1f7      	bne.n	40484c <memcmp+0x1c>
  40485c:	2000      	movs	r0, #0
  40485e:	bc70      	pop	{r4, r5, r6}
  404860:	4770      	bx	lr
  404862:	680d      	ldr	r5, [r1, #0]
  404864:	6806      	ldr	r6, [r0, #0]
  404866:	42ae      	cmp	r6, r5
  404868:	460c      	mov	r4, r1
  40486a:	4603      	mov	r3, r0
  40486c:	f101 0104 	add.w	r1, r1, #4
  404870:	f100 0004 	add.w	r0, r0, #4
  404874:	d108      	bne.n	404888 <memcmp+0x58>
  404876:	3a04      	subs	r2, #4
  404878:	2a03      	cmp	r2, #3
  40487a:	d8f2      	bhi.n	404862 <memcmp+0x32>
  40487c:	2a00      	cmp	r2, #0
  40487e:	d1de      	bne.n	40483e <memcmp+0xe>
  404880:	e7ec      	b.n	40485c <memcmp+0x2c>
  404882:	1b18      	subs	r0, r3, r4
  404884:	bc70      	pop	{r4, r5, r6}
  404886:	4770      	bx	lr
  404888:	4621      	mov	r1, r4
  40488a:	4618      	mov	r0, r3
  40488c:	e7d7      	b.n	40483e <memcmp+0xe>
  40488e:	bf00      	nop

00404890 <memcpy>:
  404890:	4684      	mov	ip, r0
  404892:	ea41 0300 	orr.w	r3, r1, r0
  404896:	f013 0303 	ands.w	r3, r3, #3
  40489a:	d16d      	bne.n	404978 <memcpy+0xe8>
  40489c:	3a40      	subs	r2, #64	; 0x40
  40489e:	d341      	bcc.n	404924 <memcpy+0x94>
  4048a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048a4:	f840 3b04 	str.w	r3, [r0], #4
  4048a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048ac:	f840 3b04 	str.w	r3, [r0], #4
  4048b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048b4:	f840 3b04 	str.w	r3, [r0], #4
  4048b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048bc:	f840 3b04 	str.w	r3, [r0], #4
  4048c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048c4:	f840 3b04 	str.w	r3, [r0], #4
  4048c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048cc:	f840 3b04 	str.w	r3, [r0], #4
  4048d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048d4:	f840 3b04 	str.w	r3, [r0], #4
  4048d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048dc:	f840 3b04 	str.w	r3, [r0], #4
  4048e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048e4:	f840 3b04 	str.w	r3, [r0], #4
  4048e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048ec:	f840 3b04 	str.w	r3, [r0], #4
  4048f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4048f4:	f840 3b04 	str.w	r3, [r0], #4
  4048f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4048fc:	f840 3b04 	str.w	r3, [r0], #4
  404900:	f851 3b04 	ldr.w	r3, [r1], #4
  404904:	f840 3b04 	str.w	r3, [r0], #4
  404908:	f851 3b04 	ldr.w	r3, [r1], #4
  40490c:	f840 3b04 	str.w	r3, [r0], #4
  404910:	f851 3b04 	ldr.w	r3, [r1], #4
  404914:	f840 3b04 	str.w	r3, [r0], #4
  404918:	f851 3b04 	ldr.w	r3, [r1], #4
  40491c:	f840 3b04 	str.w	r3, [r0], #4
  404920:	3a40      	subs	r2, #64	; 0x40
  404922:	d2bd      	bcs.n	4048a0 <memcpy+0x10>
  404924:	3230      	adds	r2, #48	; 0x30
  404926:	d311      	bcc.n	40494c <memcpy+0xbc>
  404928:	f851 3b04 	ldr.w	r3, [r1], #4
  40492c:	f840 3b04 	str.w	r3, [r0], #4
  404930:	f851 3b04 	ldr.w	r3, [r1], #4
  404934:	f840 3b04 	str.w	r3, [r0], #4
  404938:	f851 3b04 	ldr.w	r3, [r1], #4
  40493c:	f840 3b04 	str.w	r3, [r0], #4
  404940:	f851 3b04 	ldr.w	r3, [r1], #4
  404944:	f840 3b04 	str.w	r3, [r0], #4
  404948:	3a10      	subs	r2, #16
  40494a:	d2ed      	bcs.n	404928 <memcpy+0x98>
  40494c:	320c      	adds	r2, #12
  40494e:	d305      	bcc.n	40495c <memcpy+0xcc>
  404950:	f851 3b04 	ldr.w	r3, [r1], #4
  404954:	f840 3b04 	str.w	r3, [r0], #4
  404958:	3a04      	subs	r2, #4
  40495a:	d2f9      	bcs.n	404950 <memcpy+0xc0>
  40495c:	3204      	adds	r2, #4
  40495e:	d008      	beq.n	404972 <memcpy+0xe2>
  404960:	07d2      	lsls	r2, r2, #31
  404962:	bf1c      	itt	ne
  404964:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404968:	f800 3b01 	strbne.w	r3, [r0], #1
  40496c:	d301      	bcc.n	404972 <memcpy+0xe2>
  40496e:	880b      	ldrh	r3, [r1, #0]
  404970:	8003      	strh	r3, [r0, #0]
  404972:	4660      	mov	r0, ip
  404974:	4770      	bx	lr
  404976:	bf00      	nop
  404978:	2a08      	cmp	r2, #8
  40497a:	d313      	bcc.n	4049a4 <memcpy+0x114>
  40497c:	078b      	lsls	r3, r1, #30
  40497e:	d08d      	beq.n	40489c <memcpy+0xc>
  404980:	f010 0303 	ands.w	r3, r0, #3
  404984:	d08a      	beq.n	40489c <memcpy+0xc>
  404986:	f1c3 0304 	rsb	r3, r3, #4
  40498a:	1ad2      	subs	r2, r2, r3
  40498c:	07db      	lsls	r3, r3, #31
  40498e:	bf1c      	itt	ne
  404990:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404994:	f800 3b01 	strbne.w	r3, [r0], #1
  404998:	d380      	bcc.n	40489c <memcpy+0xc>
  40499a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40499e:	f820 3b02 	strh.w	r3, [r0], #2
  4049a2:	e77b      	b.n	40489c <memcpy+0xc>
  4049a4:	3a04      	subs	r2, #4
  4049a6:	d3d9      	bcc.n	40495c <memcpy+0xcc>
  4049a8:	3a01      	subs	r2, #1
  4049aa:	f811 3b01 	ldrb.w	r3, [r1], #1
  4049ae:	f800 3b01 	strb.w	r3, [r0], #1
  4049b2:	d2f9      	bcs.n	4049a8 <memcpy+0x118>
  4049b4:	780b      	ldrb	r3, [r1, #0]
  4049b6:	7003      	strb	r3, [r0, #0]
  4049b8:	784b      	ldrb	r3, [r1, #1]
  4049ba:	7043      	strb	r3, [r0, #1]
  4049bc:	788b      	ldrb	r3, [r1, #2]
  4049be:	7083      	strb	r3, [r0, #2]
  4049c0:	4660      	mov	r0, ip
  4049c2:	4770      	bx	lr

004049c4 <__malloc_lock>:
  4049c4:	4770      	bx	lr
  4049c6:	bf00      	nop

004049c8 <__malloc_unlock>:
  4049c8:	4770      	bx	lr
  4049ca:	bf00      	nop

004049cc <_Balloc>:
  4049cc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4049ce:	b570      	push	{r4, r5, r6, lr}
  4049d0:	4605      	mov	r5, r0
  4049d2:	460c      	mov	r4, r1
  4049d4:	b14b      	cbz	r3, 4049ea <_Balloc+0x1e>
  4049d6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4049da:	b180      	cbz	r0, 4049fe <_Balloc+0x32>
  4049dc:	6802      	ldr	r2, [r0, #0]
  4049de:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4049e2:	2300      	movs	r3, #0
  4049e4:	6103      	str	r3, [r0, #16]
  4049e6:	60c3      	str	r3, [r0, #12]
  4049e8:	bd70      	pop	{r4, r5, r6, pc}
  4049ea:	2221      	movs	r2, #33	; 0x21
  4049ec:	2104      	movs	r1, #4
  4049ee:	f000 fcc5 	bl	40537c <_calloc_r>
  4049f2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4049f4:	4603      	mov	r3, r0
  4049f6:	2800      	cmp	r0, #0
  4049f8:	d1ed      	bne.n	4049d6 <_Balloc+0xa>
  4049fa:	2000      	movs	r0, #0
  4049fc:	bd70      	pop	{r4, r5, r6, pc}
  4049fe:	2101      	movs	r1, #1
  404a00:	fa01 f604 	lsl.w	r6, r1, r4
  404a04:	1d72      	adds	r2, r6, #5
  404a06:	4628      	mov	r0, r5
  404a08:	0092      	lsls	r2, r2, #2
  404a0a:	f000 fcb7 	bl	40537c <_calloc_r>
  404a0e:	2800      	cmp	r0, #0
  404a10:	d0f3      	beq.n	4049fa <_Balloc+0x2e>
  404a12:	6044      	str	r4, [r0, #4]
  404a14:	6086      	str	r6, [r0, #8]
  404a16:	e7e4      	b.n	4049e2 <_Balloc+0x16>

00404a18 <_Bfree>:
  404a18:	b131      	cbz	r1, 404a28 <_Bfree+0x10>
  404a1a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404a1c:	684a      	ldr	r2, [r1, #4]
  404a1e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404a22:	6008      	str	r0, [r1, #0]
  404a24:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404a28:	4770      	bx	lr
  404a2a:	bf00      	nop

00404a2c <__multadd>:
  404a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404a2e:	690c      	ldr	r4, [r1, #16]
  404a30:	b083      	sub	sp, #12
  404a32:	460d      	mov	r5, r1
  404a34:	4606      	mov	r6, r0
  404a36:	f101 0e14 	add.w	lr, r1, #20
  404a3a:	2700      	movs	r7, #0
  404a3c:	f8de 0000 	ldr.w	r0, [lr]
  404a40:	b281      	uxth	r1, r0
  404a42:	fb02 3301 	mla	r3, r2, r1, r3
  404a46:	0c01      	lsrs	r1, r0, #16
  404a48:	0c18      	lsrs	r0, r3, #16
  404a4a:	fb02 0101 	mla	r1, r2, r1, r0
  404a4e:	b29b      	uxth	r3, r3
  404a50:	3701      	adds	r7, #1
  404a52:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404a56:	42bc      	cmp	r4, r7
  404a58:	f84e 3b04 	str.w	r3, [lr], #4
  404a5c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404a60:	dcec      	bgt.n	404a3c <__multadd+0x10>
  404a62:	b13b      	cbz	r3, 404a74 <__multadd+0x48>
  404a64:	68aa      	ldr	r2, [r5, #8]
  404a66:	4294      	cmp	r4, r2
  404a68:	da07      	bge.n	404a7a <__multadd+0x4e>
  404a6a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404a6e:	3401      	adds	r4, #1
  404a70:	6153      	str	r3, [r2, #20]
  404a72:	612c      	str	r4, [r5, #16]
  404a74:	4628      	mov	r0, r5
  404a76:	b003      	add	sp, #12
  404a78:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404a7a:	6869      	ldr	r1, [r5, #4]
  404a7c:	9301      	str	r3, [sp, #4]
  404a7e:	3101      	adds	r1, #1
  404a80:	4630      	mov	r0, r6
  404a82:	f7ff ffa3 	bl	4049cc <_Balloc>
  404a86:	692a      	ldr	r2, [r5, #16]
  404a88:	3202      	adds	r2, #2
  404a8a:	f105 010c 	add.w	r1, r5, #12
  404a8e:	4607      	mov	r7, r0
  404a90:	0092      	lsls	r2, r2, #2
  404a92:	300c      	adds	r0, #12
  404a94:	f7ff fefc 	bl	404890 <memcpy>
  404a98:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404a9a:	6869      	ldr	r1, [r5, #4]
  404a9c:	9b01      	ldr	r3, [sp, #4]
  404a9e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404aa2:	6028      	str	r0, [r5, #0]
  404aa4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404aa8:	463d      	mov	r5, r7
  404aaa:	e7de      	b.n	404a6a <__multadd+0x3e>

00404aac <__hi0bits>:
  404aac:	0c02      	lsrs	r2, r0, #16
  404aae:	0412      	lsls	r2, r2, #16
  404ab0:	4603      	mov	r3, r0
  404ab2:	b9b2      	cbnz	r2, 404ae2 <__hi0bits+0x36>
  404ab4:	0403      	lsls	r3, r0, #16
  404ab6:	2010      	movs	r0, #16
  404ab8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404abc:	bf04      	itt	eq
  404abe:	021b      	lsleq	r3, r3, #8
  404ac0:	3008      	addeq	r0, #8
  404ac2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404ac6:	bf04      	itt	eq
  404ac8:	011b      	lsleq	r3, r3, #4
  404aca:	3004      	addeq	r0, #4
  404acc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404ad0:	bf04      	itt	eq
  404ad2:	009b      	lsleq	r3, r3, #2
  404ad4:	3002      	addeq	r0, #2
  404ad6:	2b00      	cmp	r3, #0
  404ad8:	db02      	blt.n	404ae0 <__hi0bits+0x34>
  404ada:	005b      	lsls	r3, r3, #1
  404adc:	d403      	bmi.n	404ae6 <__hi0bits+0x3a>
  404ade:	2020      	movs	r0, #32
  404ae0:	4770      	bx	lr
  404ae2:	2000      	movs	r0, #0
  404ae4:	e7e8      	b.n	404ab8 <__hi0bits+0xc>
  404ae6:	3001      	adds	r0, #1
  404ae8:	4770      	bx	lr
  404aea:	bf00      	nop

00404aec <__lo0bits>:
  404aec:	6803      	ldr	r3, [r0, #0]
  404aee:	f013 0207 	ands.w	r2, r3, #7
  404af2:	4601      	mov	r1, r0
  404af4:	d007      	beq.n	404b06 <__lo0bits+0x1a>
  404af6:	07da      	lsls	r2, r3, #31
  404af8:	d421      	bmi.n	404b3e <__lo0bits+0x52>
  404afa:	0798      	lsls	r0, r3, #30
  404afc:	d421      	bmi.n	404b42 <__lo0bits+0x56>
  404afe:	089b      	lsrs	r3, r3, #2
  404b00:	600b      	str	r3, [r1, #0]
  404b02:	2002      	movs	r0, #2
  404b04:	4770      	bx	lr
  404b06:	b298      	uxth	r0, r3
  404b08:	b198      	cbz	r0, 404b32 <__lo0bits+0x46>
  404b0a:	4610      	mov	r0, r2
  404b0c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404b10:	bf04      	itt	eq
  404b12:	0a1b      	lsreq	r3, r3, #8
  404b14:	3008      	addeq	r0, #8
  404b16:	071a      	lsls	r2, r3, #28
  404b18:	bf04      	itt	eq
  404b1a:	091b      	lsreq	r3, r3, #4
  404b1c:	3004      	addeq	r0, #4
  404b1e:	079a      	lsls	r2, r3, #30
  404b20:	bf04      	itt	eq
  404b22:	089b      	lsreq	r3, r3, #2
  404b24:	3002      	addeq	r0, #2
  404b26:	07da      	lsls	r2, r3, #31
  404b28:	d407      	bmi.n	404b3a <__lo0bits+0x4e>
  404b2a:	085b      	lsrs	r3, r3, #1
  404b2c:	d104      	bne.n	404b38 <__lo0bits+0x4c>
  404b2e:	2020      	movs	r0, #32
  404b30:	4770      	bx	lr
  404b32:	0c1b      	lsrs	r3, r3, #16
  404b34:	2010      	movs	r0, #16
  404b36:	e7e9      	b.n	404b0c <__lo0bits+0x20>
  404b38:	3001      	adds	r0, #1
  404b3a:	600b      	str	r3, [r1, #0]
  404b3c:	4770      	bx	lr
  404b3e:	2000      	movs	r0, #0
  404b40:	4770      	bx	lr
  404b42:	085b      	lsrs	r3, r3, #1
  404b44:	600b      	str	r3, [r1, #0]
  404b46:	2001      	movs	r0, #1
  404b48:	4770      	bx	lr
  404b4a:	bf00      	nop

00404b4c <__i2b>:
  404b4c:	b510      	push	{r4, lr}
  404b4e:	460c      	mov	r4, r1
  404b50:	2101      	movs	r1, #1
  404b52:	f7ff ff3b 	bl	4049cc <_Balloc>
  404b56:	2201      	movs	r2, #1
  404b58:	6144      	str	r4, [r0, #20]
  404b5a:	6102      	str	r2, [r0, #16]
  404b5c:	bd10      	pop	{r4, pc}
  404b5e:	bf00      	nop

00404b60 <__multiply>:
  404b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b64:	690c      	ldr	r4, [r1, #16]
  404b66:	6915      	ldr	r5, [r2, #16]
  404b68:	42ac      	cmp	r4, r5
  404b6a:	b083      	sub	sp, #12
  404b6c:	468b      	mov	fp, r1
  404b6e:	4616      	mov	r6, r2
  404b70:	da04      	bge.n	404b7c <__multiply+0x1c>
  404b72:	4622      	mov	r2, r4
  404b74:	46b3      	mov	fp, r6
  404b76:	462c      	mov	r4, r5
  404b78:	460e      	mov	r6, r1
  404b7a:	4615      	mov	r5, r2
  404b7c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404b80:	f8db 1004 	ldr.w	r1, [fp, #4]
  404b84:	eb04 0805 	add.w	r8, r4, r5
  404b88:	4598      	cmp	r8, r3
  404b8a:	bfc8      	it	gt
  404b8c:	3101      	addgt	r1, #1
  404b8e:	f7ff ff1d 	bl	4049cc <_Balloc>
  404b92:	f100 0914 	add.w	r9, r0, #20
  404b96:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404b9a:	45d1      	cmp	r9, sl
  404b9c:	9000      	str	r0, [sp, #0]
  404b9e:	d205      	bcs.n	404bac <__multiply+0x4c>
  404ba0:	464b      	mov	r3, r9
  404ba2:	2100      	movs	r1, #0
  404ba4:	f843 1b04 	str.w	r1, [r3], #4
  404ba8:	459a      	cmp	sl, r3
  404baa:	d8fb      	bhi.n	404ba4 <__multiply+0x44>
  404bac:	f106 0c14 	add.w	ip, r6, #20
  404bb0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404bb4:	f10b 0b14 	add.w	fp, fp, #20
  404bb8:	459c      	cmp	ip, r3
  404bba:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  404bbe:	d24c      	bcs.n	404c5a <__multiply+0xfa>
  404bc0:	f8cd a004 	str.w	sl, [sp, #4]
  404bc4:	469a      	mov	sl, r3
  404bc6:	f8dc 5000 	ldr.w	r5, [ip]
  404bca:	b2af      	uxth	r7, r5
  404bcc:	b1ef      	cbz	r7, 404c0a <__multiply+0xaa>
  404bce:	2100      	movs	r1, #0
  404bd0:	464d      	mov	r5, r9
  404bd2:	465e      	mov	r6, fp
  404bd4:	460c      	mov	r4, r1
  404bd6:	f856 2b04 	ldr.w	r2, [r6], #4
  404bda:	6828      	ldr	r0, [r5, #0]
  404bdc:	b293      	uxth	r3, r2
  404bde:	b281      	uxth	r1, r0
  404be0:	fb07 1303 	mla	r3, r7, r3, r1
  404be4:	0c12      	lsrs	r2, r2, #16
  404be6:	0c01      	lsrs	r1, r0, #16
  404be8:	4423      	add	r3, r4
  404bea:	fb07 1102 	mla	r1, r7, r2, r1
  404bee:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404bf2:	b29b      	uxth	r3, r3
  404bf4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404bf8:	45b6      	cmp	lr, r6
  404bfa:	f845 3b04 	str.w	r3, [r5], #4
  404bfe:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404c02:	d8e8      	bhi.n	404bd6 <__multiply+0x76>
  404c04:	602c      	str	r4, [r5, #0]
  404c06:	f8dc 5000 	ldr.w	r5, [ip]
  404c0a:	0c2d      	lsrs	r5, r5, #16
  404c0c:	d01d      	beq.n	404c4a <__multiply+0xea>
  404c0e:	f8d9 3000 	ldr.w	r3, [r9]
  404c12:	4648      	mov	r0, r9
  404c14:	461c      	mov	r4, r3
  404c16:	4659      	mov	r1, fp
  404c18:	2200      	movs	r2, #0
  404c1a:	880e      	ldrh	r6, [r1, #0]
  404c1c:	0c24      	lsrs	r4, r4, #16
  404c1e:	fb05 4406 	mla	r4, r5, r6, r4
  404c22:	4422      	add	r2, r4
  404c24:	b29b      	uxth	r3, r3
  404c26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404c2a:	f840 3b04 	str.w	r3, [r0], #4
  404c2e:	f851 3b04 	ldr.w	r3, [r1], #4
  404c32:	6804      	ldr	r4, [r0, #0]
  404c34:	0c1b      	lsrs	r3, r3, #16
  404c36:	b2a6      	uxth	r6, r4
  404c38:	fb05 6303 	mla	r3, r5, r3, r6
  404c3c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404c40:	458e      	cmp	lr, r1
  404c42:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404c46:	d8e8      	bhi.n	404c1a <__multiply+0xba>
  404c48:	6003      	str	r3, [r0, #0]
  404c4a:	f10c 0c04 	add.w	ip, ip, #4
  404c4e:	45e2      	cmp	sl, ip
  404c50:	f109 0904 	add.w	r9, r9, #4
  404c54:	d8b7      	bhi.n	404bc6 <__multiply+0x66>
  404c56:	f8dd a004 	ldr.w	sl, [sp, #4]
  404c5a:	f1b8 0f00 	cmp.w	r8, #0
  404c5e:	dd0b      	ble.n	404c78 <__multiply+0x118>
  404c60:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404c64:	f1aa 0a04 	sub.w	sl, sl, #4
  404c68:	b11b      	cbz	r3, 404c72 <__multiply+0x112>
  404c6a:	e005      	b.n	404c78 <__multiply+0x118>
  404c6c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404c70:	b913      	cbnz	r3, 404c78 <__multiply+0x118>
  404c72:	f1b8 0801 	subs.w	r8, r8, #1
  404c76:	d1f9      	bne.n	404c6c <__multiply+0x10c>
  404c78:	9800      	ldr	r0, [sp, #0]
  404c7a:	f8c0 8010 	str.w	r8, [r0, #16]
  404c7e:	b003      	add	sp, #12
  404c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404c84 <__pow5mult>:
  404c84:	f012 0303 	ands.w	r3, r2, #3
  404c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c8c:	4614      	mov	r4, r2
  404c8e:	4607      	mov	r7, r0
  404c90:	d12e      	bne.n	404cf0 <__pow5mult+0x6c>
  404c92:	460d      	mov	r5, r1
  404c94:	10a4      	asrs	r4, r4, #2
  404c96:	d01c      	beq.n	404cd2 <__pow5mult+0x4e>
  404c98:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404c9a:	b396      	cbz	r6, 404d02 <__pow5mult+0x7e>
  404c9c:	07e3      	lsls	r3, r4, #31
  404c9e:	f04f 0800 	mov.w	r8, #0
  404ca2:	d406      	bmi.n	404cb2 <__pow5mult+0x2e>
  404ca4:	1064      	asrs	r4, r4, #1
  404ca6:	d014      	beq.n	404cd2 <__pow5mult+0x4e>
  404ca8:	6830      	ldr	r0, [r6, #0]
  404caa:	b1a8      	cbz	r0, 404cd8 <__pow5mult+0x54>
  404cac:	4606      	mov	r6, r0
  404cae:	07e3      	lsls	r3, r4, #31
  404cb0:	d5f8      	bpl.n	404ca4 <__pow5mult+0x20>
  404cb2:	4632      	mov	r2, r6
  404cb4:	4629      	mov	r1, r5
  404cb6:	4638      	mov	r0, r7
  404cb8:	f7ff ff52 	bl	404b60 <__multiply>
  404cbc:	b1b5      	cbz	r5, 404cec <__pow5mult+0x68>
  404cbe:	686a      	ldr	r2, [r5, #4]
  404cc0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404cc2:	1064      	asrs	r4, r4, #1
  404cc4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404cc8:	6029      	str	r1, [r5, #0]
  404cca:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404cce:	4605      	mov	r5, r0
  404cd0:	d1ea      	bne.n	404ca8 <__pow5mult+0x24>
  404cd2:	4628      	mov	r0, r5
  404cd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404cd8:	4632      	mov	r2, r6
  404cda:	4631      	mov	r1, r6
  404cdc:	4638      	mov	r0, r7
  404cde:	f7ff ff3f 	bl	404b60 <__multiply>
  404ce2:	6030      	str	r0, [r6, #0]
  404ce4:	f8c0 8000 	str.w	r8, [r0]
  404ce8:	4606      	mov	r6, r0
  404cea:	e7e0      	b.n	404cae <__pow5mult+0x2a>
  404cec:	4605      	mov	r5, r0
  404cee:	e7d9      	b.n	404ca4 <__pow5mult+0x20>
  404cf0:	1e5a      	subs	r2, r3, #1
  404cf2:	4d0b      	ldr	r5, [pc, #44]	; (404d20 <__pow5mult+0x9c>)
  404cf4:	2300      	movs	r3, #0
  404cf6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404cfa:	f7ff fe97 	bl	404a2c <__multadd>
  404cfe:	4605      	mov	r5, r0
  404d00:	e7c8      	b.n	404c94 <__pow5mult+0x10>
  404d02:	2101      	movs	r1, #1
  404d04:	4638      	mov	r0, r7
  404d06:	f7ff fe61 	bl	4049cc <_Balloc>
  404d0a:	f240 2171 	movw	r1, #625	; 0x271
  404d0e:	2201      	movs	r2, #1
  404d10:	2300      	movs	r3, #0
  404d12:	6141      	str	r1, [r0, #20]
  404d14:	6102      	str	r2, [r0, #16]
  404d16:	4606      	mov	r6, r0
  404d18:	64b8      	str	r0, [r7, #72]	; 0x48
  404d1a:	6003      	str	r3, [r0, #0]
  404d1c:	e7be      	b.n	404c9c <__pow5mult+0x18>
  404d1e:	bf00      	nop
  404d20:	00407598 	.word	0x00407598

00404d24 <__lshift>:
  404d24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404d28:	4691      	mov	r9, r2
  404d2a:	690a      	ldr	r2, [r1, #16]
  404d2c:	688b      	ldr	r3, [r1, #8]
  404d2e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404d32:	eb04 0802 	add.w	r8, r4, r2
  404d36:	f108 0501 	add.w	r5, r8, #1
  404d3a:	429d      	cmp	r5, r3
  404d3c:	460e      	mov	r6, r1
  404d3e:	4607      	mov	r7, r0
  404d40:	6849      	ldr	r1, [r1, #4]
  404d42:	dd04      	ble.n	404d4e <__lshift+0x2a>
  404d44:	005b      	lsls	r3, r3, #1
  404d46:	429d      	cmp	r5, r3
  404d48:	f101 0101 	add.w	r1, r1, #1
  404d4c:	dcfa      	bgt.n	404d44 <__lshift+0x20>
  404d4e:	4638      	mov	r0, r7
  404d50:	f7ff fe3c 	bl	4049cc <_Balloc>
  404d54:	2c00      	cmp	r4, #0
  404d56:	f100 0314 	add.w	r3, r0, #20
  404d5a:	dd06      	ble.n	404d6a <__lshift+0x46>
  404d5c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404d60:	2100      	movs	r1, #0
  404d62:	f843 1b04 	str.w	r1, [r3], #4
  404d66:	429a      	cmp	r2, r3
  404d68:	d1fb      	bne.n	404d62 <__lshift+0x3e>
  404d6a:	6934      	ldr	r4, [r6, #16]
  404d6c:	f106 0114 	add.w	r1, r6, #20
  404d70:	f019 091f 	ands.w	r9, r9, #31
  404d74:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404d78:	d01d      	beq.n	404db6 <__lshift+0x92>
  404d7a:	f1c9 0c20 	rsb	ip, r9, #32
  404d7e:	2200      	movs	r2, #0
  404d80:	680c      	ldr	r4, [r1, #0]
  404d82:	fa04 f409 	lsl.w	r4, r4, r9
  404d86:	4314      	orrs	r4, r2
  404d88:	f843 4b04 	str.w	r4, [r3], #4
  404d8c:	f851 2b04 	ldr.w	r2, [r1], #4
  404d90:	458e      	cmp	lr, r1
  404d92:	fa22 f20c 	lsr.w	r2, r2, ip
  404d96:	d8f3      	bhi.n	404d80 <__lshift+0x5c>
  404d98:	601a      	str	r2, [r3, #0]
  404d9a:	b10a      	cbz	r2, 404da0 <__lshift+0x7c>
  404d9c:	f108 0502 	add.w	r5, r8, #2
  404da0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404da2:	6872      	ldr	r2, [r6, #4]
  404da4:	3d01      	subs	r5, #1
  404da6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404daa:	6105      	str	r5, [r0, #16]
  404dac:	6031      	str	r1, [r6, #0]
  404dae:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404db2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404db6:	3b04      	subs	r3, #4
  404db8:	f851 2b04 	ldr.w	r2, [r1], #4
  404dbc:	f843 2f04 	str.w	r2, [r3, #4]!
  404dc0:	458e      	cmp	lr, r1
  404dc2:	d8f9      	bhi.n	404db8 <__lshift+0x94>
  404dc4:	e7ec      	b.n	404da0 <__lshift+0x7c>
  404dc6:	bf00      	nop

00404dc8 <__mcmp>:
  404dc8:	b430      	push	{r4, r5}
  404dca:	690b      	ldr	r3, [r1, #16]
  404dcc:	4605      	mov	r5, r0
  404dce:	6900      	ldr	r0, [r0, #16]
  404dd0:	1ac0      	subs	r0, r0, r3
  404dd2:	d10f      	bne.n	404df4 <__mcmp+0x2c>
  404dd4:	009b      	lsls	r3, r3, #2
  404dd6:	3514      	adds	r5, #20
  404dd8:	3114      	adds	r1, #20
  404dda:	4419      	add	r1, r3
  404ddc:	442b      	add	r3, r5
  404dde:	e001      	b.n	404de4 <__mcmp+0x1c>
  404de0:	429d      	cmp	r5, r3
  404de2:	d207      	bcs.n	404df4 <__mcmp+0x2c>
  404de4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404de8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404dec:	4294      	cmp	r4, r2
  404dee:	d0f7      	beq.n	404de0 <__mcmp+0x18>
  404df0:	d302      	bcc.n	404df8 <__mcmp+0x30>
  404df2:	2001      	movs	r0, #1
  404df4:	bc30      	pop	{r4, r5}
  404df6:	4770      	bx	lr
  404df8:	f04f 30ff 	mov.w	r0, #4294967295
  404dfc:	e7fa      	b.n	404df4 <__mcmp+0x2c>
  404dfe:	bf00      	nop

00404e00 <__mdiff>:
  404e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404e04:	690f      	ldr	r7, [r1, #16]
  404e06:	460e      	mov	r6, r1
  404e08:	6911      	ldr	r1, [r2, #16]
  404e0a:	1a7f      	subs	r7, r7, r1
  404e0c:	2f00      	cmp	r7, #0
  404e0e:	4690      	mov	r8, r2
  404e10:	d117      	bne.n	404e42 <__mdiff+0x42>
  404e12:	0089      	lsls	r1, r1, #2
  404e14:	f106 0514 	add.w	r5, r6, #20
  404e18:	f102 0e14 	add.w	lr, r2, #20
  404e1c:	186b      	adds	r3, r5, r1
  404e1e:	4471      	add	r1, lr
  404e20:	e001      	b.n	404e26 <__mdiff+0x26>
  404e22:	429d      	cmp	r5, r3
  404e24:	d25c      	bcs.n	404ee0 <__mdiff+0xe0>
  404e26:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404e2a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404e2e:	42a2      	cmp	r2, r4
  404e30:	d0f7      	beq.n	404e22 <__mdiff+0x22>
  404e32:	d25e      	bcs.n	404ef2 <__mdiff+0xf2>
  404e34:	4633      	mov	r3, r6
  404e36:	462c      	mov	r4, r5
  404e38:	4646      	mov	r6, r8
  404e3a:	4675      	mov	r5, lr
  404e3c:	4698      	mov	r8, r3
  404e3e:	2701      	movs	r7, #1
  404e40:	e005      	b.n	404e4e <__mdiff+0x4e>
  404e42:	db58      	blt.n	404ef6 <__mdiff+0xf6>
  404e44:	f106 0514 	add.w	r5, r6, #20
  404e48:	f108 0414 	add.w	r4, r8, #20
  404e4c:	2700      	movs	r7, #0
  404e4e:	6871      	ldr	r1, [r6, #4]
  404e50:	f7ff fdbc 	bl	4049cc <_Balloc>
  404e54:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404e58:	6936      	ldr	r6, [r6, #16]
  404e5a:	60c7      	str	r7, [r0, #12]
  404e5c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404e60:	46a6      	mov	lr, r4
  404e62:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404e66:	f100 0414 	add.w	r4, r0, #20
  404e6a:	2300      	movs	r3, #0
  404e6c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404e70:	f855 8b04 	ldr.w	r8, [r5], #4
  404e74:	b28a      	uxth	r2, r1
  404e76:	fa13 f388 	uxtah	r3, r3, r8
  404e7a:	0c09      	lsrs	r1, r1, #16
  404e7c:	1a9a      	subs	r2, r3, r2
  404e7e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404e82:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404e86:	b292      	uxth	r2, r2
  404e88:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404e8c:	45f4      	cmp	ip, lr
  404e8e:	f844 2b04 	str.w	r2, [r4], #4
  404e92:	ea4f 4323 	mov.w	r3, r3, asr #16
  404e96:	d8e9      	bhi.n	404e6c <__mdiff+0x6c>
  404e98:	42af      	cmp	r7, r5
  404e9a:	d917      	bls.n	404ecc <__mdiff+0xcc>
  404e9c:	46a4      	mov	ip, r4
  404e9e:	46ae      	mov	lr, r5
  404ea0:	f85e 2b04 	ldr.w	r2, [lr], #4
  404ea4:	fa13 f382 	uxtah	r3, r3, r2
  404ea8:	1419      	asrs	r1, r3, #16
  404eaa:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404eae:	b29b      	uxth	r3, r3
  404eb0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404eb4:	4577      	cmp	r7, lr
  404eb6:	f84c 2b04 	str.w	r2, [ip], #4
  404eba:	ea4f 4321 	mov.w	r3, r1, asr #16
  404ebe:	d8ef      	bhi.n	404ea0 <__mdiff+0xa0>
  404ec0:	43ed      	mvns	r5, r5
  404ec2:	442f      	add	r7, r5
  404ec4:	f027 0703 	bic.w	r7, r7, #3
  404ec8:	3704      	adds	r7, #4
  404eca:	443c      	add	r4, r7
  404ecc:	3c04      	subs	r4, #4
  404ece:	b922      	cbnz	r2, 404eda <__mdiff+0xda>
  404ed0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404ed4:	3e01      	subs	r6, #1
  404ed6:	2b00      	cmp	r3, #0
  404ed8:	d0fa      	beq.n	404ed0 <__mdiff+0xd0>
  404eda:	6106      	str	r6, [r0, #16]
  404edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ee0:	2100      	movs	r1, #0
  404ee2:	f7ff fd73 	bl	4049cc <_Balloc>
  404ee6:	2201      	movs	r2, #1
  404ee8:	2300      	movs	r3, #0
  404eea:	6102      	str	r2, [r0, #16]
  404eec:	6143      	str	r3, [r0, #20]
  404eee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ef2:	4674      	mov	r4, lr
  404ef4:	e7ab      	b.n	404e4e <__mdiff+0x4e>
  404ef6:	4633      	mov	r3, r6
  404ef8:	f106 0414 	add.w	r4, r6, #20
  404efc:	f102 0514 	add.w	r5, r2, #20
  404f00:	4616      	mov	r6, r2
  404f02:	2701      	movs	r7, #1
  404f04:	4698      	mov	r8, r3
  404f06:	e7a2      	b.n	404e4e <__mdiff+0x4e>

00404f08 <__d2b>:
  404f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404f0c:	b082      	sub	sp, #8
  404f0e:	2101      	movs	r1, #1
  404f10:	461c      	mov	r4, r3
  404f12:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404f16:	4615      	mov	r5, r2
  404f18:	9e08      	ldr	r6, [sp, #32]
  404f1a:	f7ff fd57 	bl	4049cc <_Balloc>
  404f1e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404f22:	4680      	mov	r8, r0
  404f24:	b10f      	cbz	r7, 404f2a <__d2b+0x22>
  404f26:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404f2a:	9401      	str	r4, [sp, #4]
  404f2c:	b31d      	cbz	r5, 404f76 <__d2b+0x6e>
  404f2e:	a802      	add	r0, sp, #8
  404f30:	f840 5d08 	str.w	r5, [r0, #-8]!
  404f34:	f7ff fdda 	bl	404aec <__lo0bits>
  404f38:	2800      	cmp	r0, #0
  404f3a:	d134      	bne.n	404fa6 <__d2b+0x9e>
  404f3c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404f40:	f8c8 2014 	str.w	r2, [r8, #20]
  404f44:	2b00      	cmp	r3, #0
  404f46:	bf0c      	ite	eq
  404f48:	2101      	moveq	r1, #1
  404f4a:	2102      	movne	r1, #2
  404f4c:	f8c8 3018 	str.w	r3, [r8, #24]
  404f50:	f8c8 1010 	str.w	r1, [r8, #16]
  404f54:	b9df      	cbnz	r7, 404f8e <__d2b+0x86>
  404f56:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404f5a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404f5e:	6030      	str	r0, [r6, #0]
  404f60:	6918      	ldr	r0, [r3, #16]
  404f62:	f7ff fda3 	bl	404aac <__hi0bits>
  404f66:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f68:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404f6c:	6018      	str	r0, [r3, #0]
  404f6e:	4640      	mov	r0, r8
  404f70:	b002      	add	sp, #8
  404f72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404f76:	a801      	add	r0, sp, #4
  404f78:	f7ff fdb8 	bl	404aec <__lo0bits>
  404f7c:	9b01      	ldr	r3, [sp, #4]
  404f7e:	f8c8 3014 	str.w	r3, [r8, #20]
  404f82:	2101      	movs	r1, #1
  404f84:	3020      	adds	r0, #32
  404f86:	f8c8 1010 	str.w	r1, [r8, #16]
  404f8a:	2f00      	cmp	r7, #0
  404f8c:	d0e3      	beq.n	404f56 <__d2b+0x4e>
  404f8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f90:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404f94:	4407      	add	r7, r0
  404f96:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404f9a:	6037      	str	r7, [r6, #0]
  404f9c:	6018      	str	r0, [r3, #0]
  404f9e:	4640      	mov	r0, r8
  404fa0:	b002      	add	sp, #8
  404fa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404fa6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404faa:	f1c0 0220 	rsb	r2, r0, #32
  404fae:	fa03 f202 	lsl.w	r2, r3, r2
  404fb2:	430a      	orrs	r2, r1
  404fb4:	40c3      	lsrs	r3, r0
  404fb6:	9301      	str	r3, [sp, #4]
  404fb8:	f8c8 2014 	str.w	r2, [r8, #20]
  404fbc:	e7c2      	b.n	404f44 <__d2b+0x3c>
  404fbe:	bf00      	nop

00404fc0 <_sbrk_r>:
  404fc0:	b538      	push	{r3, r4, r5, lr}
  404fc2:	4c07      	ldr	r4, [pc, #28]	; (404fe0 <_sbrk_r+0x20>)
  404fc4:	2300      	movs	r3, #0
  404fc6:	4605      	mov	r5, r0
  404fc8:	4608      	mov	r0, r1
  404fca:	6023      	str	r3, [r4, #0]
  404fcc:	f7fc fb1c 	bl	401608 <_sbrk>
  404fd0:	1c43      	adds	r3, r0, #1
  404fd2:	d000      	beq.n	404fd6 <_sbrk_r+0x16>
  404fd4:	bd38      	pop	{r3, r4, r5, pc}
  404fd6:	6823      	ldr	r3, [r4, #0]
  404fd8:	2b00      	cmp	r3, #0
  404fda:	d0fb      	beq.n	404fd4 <_sbrk_r+0x14>
  404fdc:	602b      	str	r3, [r5, #0]
  404fde:	bd38      	pop	{r3, r4, r5, pc}
  404fe0:	2000d1f8 	.word	0x2000d1f8

00404fe4 <strchr>:
  404fe4:	b2c9      	uxtb	r1, r1
  404fe6:	2900      	cmp	r1, #0
  404fe8:	d041      	beq.n	40506e <strchr+0x8a>
  404fea:	0782      	lsls	r2, r0, #30
  404fec:	b4f0      	push	{r4, r5, r6, r7}
  404fee:	d067      	beq.n	4050c0 <strchr+0xdc>
  404ff0:	7803      	ldrb	r3, [r0, #0]
  404ff2:	2b00      	cmp	r3, #0
  404ff4:	d068      	beq.n	4050c8 <strchr+0xe4>
  404ff6:	4299      	cmp	r1, r3
  404ff8:	d037      	beq.n	40506a <strchr+0x86>
  404ffa:	1c43      	adds	r3, r0, #1
  404ffc:	e004      	b.n	405008 <strchr+0x24>
  404ffe:	f813 0b01 	ldrb.w	r0, [r3], #1
  405002:	b390      	cbz	r0, 40506a <strchr+0x86>
  405004:	4281      	cmp	r1, r0
  405006:	d02f      	beq.n	405068 <strchr+0x84>
  405008:	079a      	lsls	r2, r3, #30
  40500a:	461c      	mov	r4, r3
  40500c:	d1f7      	bne.n	404ffe <strchr+0x1a>
  40500e:	6825      	ldr	r5, [r4, #0]
  405010:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  405014:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  405018:	ea83 0605 	eor.w	r6, r3, r5
  40501c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  405020:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  405024:	ea20 0006 	bic.w	r0, r0, r6
  405028:	ea22 0205 	bic.w	r2, r2, r5
  40502c:	4302      	orrs	r2, r0
  40502e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405032:	d111      	bne.n	405058 <strchr+0x74>
  405034:	4620      	mov	r0, r4
  405036:	f850 6f04 	ldr.w	r6, [r0, #4]!
  40503a:	ea83 0706 	eor.w	r7, r3, r6
  40503e:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  405042:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  405046:	ea25 0507 	bic.w	r5, r5, r7
  40504a:	ea22 0206 	bic.w	r2, r2, r6
  40504e:	432a      	orrs	r2, r5
  405050:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405054:	d0ef      	beq.n	405036 <strchr+0x52>
  405056:	4604      	mov	r4, r0
  405058:	7820      	ldrb	r0, [r4, #0]
  40505a:	b918      	cbnz	r0, 405064 <strchr+0x80>
  40505c:	e005      	b.n	40506a <strchr+0x86>
  40505e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  405062:	b110      	cbz	r0, 40506a <strchr+0x86>
  405064:	4281      	cmp	r1, r0
  405066:	d1fa      	bne.n	40505e <strchr+0x7a>
  405068:	4620      	mov	r0, r4
  40506a:	bcf0      	pop	{r4, r5, r6, r7}
  40506c:	4770      	bx	lr
  40506e:	0783      	lsls	r3, r0, #30
  405070:	d024      	beq.n	4050bc <strchr+0xd8>
  405072:	7803      	ldrb	r3, [r0, #0]
  405074:	2b00      	cmp	r3, #0
  405076:	d0f9      	beq.n	40506c <strchr+0x88>
  405078:	1c43      	adds	r3, r0, #1
  40507a:	e003      	b.n	405084 <strchr+0xa0>
  40507c:	7802      	ldrb	r2, [r0, #0]
  40507e:	3301      	adds	r3, #1
  405080:	2a00      	cmp	r2, #0
  405082:	d0f3      	beq.n	40506c <strchr+0x88>
  405084:	0799      	lsls	r1, r3, #30
  405086:	4618      	mov	r0, r3
  405088:	d1f8      	bne.n	40507c <strchr+0x98>
  40508a:	6819      	ldr	r1, [r3, #0]
  40508c:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  405090:	ea22 0201 	bic.w	r2, r2, r1
  405094:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405098:	d108      	bne.n	4050ac <strchr+0xc8>
  40509a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  40509e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  4050a2:	ea22 0201 	bic.w	r2, r2, r1
  4050a6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4050aa:	d0f6      	beq.n	40509a <strchr+0xb6>
  4050ac:	781a      	ldrb	r2, [r3, #0]
  4050ae:	4618      	mov	r0, r3
  4050b0:	b142      	cbz	r2, 4050c4 <strchr+0xe0>
  4050b2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4050b6:	2b00      	cmp	r3, #0
  4050b8:	d1fb      	bne.n	4050b2 <strchr+0xce>
  4050ba:	4770      	bx	lr
  4050bc:	4603      	mov	r3, r0
  4050be:	e7e4      	b.n	40508a <strchr+0xa6>
  4050c0:	4604      	mov	r4, r0
  4050c2:	e7a4      	b.n	40500e <strchr+0x2a>
  4050c4:	4618      	mov	r0, r3
  4050c6:	4770      	bx	lr
  4050c8:	4618      	mov	r0, r3
  4050ca:	e7ce      	b.n	40506a <strchr+0x86>
	...

00405100 <strlen>:
  405100:	f890 f000 	pld	[r0]
  405104:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405108:	f020 0107 	bic.w	r1, r0, #7
  40510c:	f06f 0c00 	mvn.w	ip, #0
  405110:	f010 0407 	ands.w	r4, r0, #7
  405114:	f891 f020 	pld	[r1, #32]
  405118:	f040 8049 	bne.w	4051ae <strlen+0xae>
  40511c:	f04f 0400 	mov.w	r4, #0
  405120:	f06f 0007 	mvn.w	r0, #7
  405124:	e9d1 2300 	ldrd	r2, r3, [r1]
  405128:	f891 f040 	pld	[r1, #64]	; 0x40
  40512c:	f100 0008 	add.w	r0, r0, #8
  405130:	fa82 f24c 	uadd8	r2, r2, ip
  405134:	faa4 f28c 	sel	r2, r4, ip
  405138:	fa83 f34c 	uadd8	r3, r3, ip
  40513c:	faa2 f38c 	sel	r3, r2, ip
  405140:	bb4b      	cbnz	r3, 405196 <strlen+0x96>
  405142:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405146:	fa82 f24c 	uadd8	r2, r2, ip
  40514a:	f100 0008 	add.w	r0, r0, #8
  40514e:	faa4 f28c 	sel	r2, r4, ip
  405152:	fa83 f34c 	uadd8	r3, r3, ip
  405156:	faa2 f38c 	sel	r3, r2, ip
  40515a:	b9e3      	cbnz	r3, 405196 <strlen+0x96>
  40515c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405160:	fa82 f24c 	uadd8	r2, r2, ip
  405164:	f100 0008 	add.w	r0, r0, #8
  405168:	faa4 f28c 	sel	r2, r4, ip
  40516c:	fa83 f34c 	uadd8	r3, r3, ip
  405170:	faa2 f38c 	sel	r3, r2, ip
  405174:	b97b      	cbnz	r3, 405196 <strlen+0x96>
  405176:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40517a:	f101 0120 	add.w	r1, r1, #32
  40517e:	fa82 f24c 	uadd8	r2, r2, ip
  405182:	f100 0008 	add.w	r0, r0, #8
  405186:	faa4 f28c 	sel	r2, r4, ip
  40518a:	fa83 f34c 	uadd8	r3, r3, ip
  40518e:	faa2 f38c 	sel	r3, r2, ip
  405192:	2b00      	cmp	r3, #0
  405194:	d0c6      	beq.n	405124 <strlen+0x24>
  405196:	2a00      	cmp	r2, #0
  405198:	bf04      	itt	eq
  40519a:	3004      	addeq	r0, #4
  40519c:	461a      	moveq	r2, r3
  40519e:	ba12      	rev	r2, r2
  4051a0:	fab2 f282 	clz	r2, r2
  4051a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4051a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4051ac:	4770      	bx	lr
  4051ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4051b2:	f004 0503 	and.w	r5, r4, #3
  4051b6:	f1c4 0000 	rsb	r0, r4, #0
  4051ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4051be:	f014 0f04 	tst.w	r4, #4
  4051c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4051c6:	fa0c f505 	lsl.w	r5, ip, r5
  4051ca:	ea62 0205 	orn	r2, r2, r5
  4051ce:	bf1c      	itt	ne
  4051d0:	ea63 0305 	ornne	r3, r3, r5
  4051d4:	4662      	movne	r2, ip
  4051d6:	f04f 0400 	mov.w	r4, #0
  4051da:	e7a9      	b.n	405130 <strlen+0x30>

004051dc <__ssprint_r>:
  4051dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4051e0:	6893      	ldr	r3, [r2, #8]
  4051e2:	b083      	sub	sp, #12
  4051e4:	4690      	mov	r8, r2
  4051e6:	2b00      	cmp	r3, #0
  4051e8:	d070      	beq.n	4052cc <__ssprint_r+0xf0>
  4051ea:	4682      	mov	sl, r0
  4051ec:	460c      	mov	r4, r1
  4051ee:	6817      	ldr	r7, [r2, #0]
  4051f0:	688d      	ldr	r5, [r1, #8]
  4051f2:	6808      	ldr	r0, [r1, #0]
  4051f4:	e042      	b.n	40527c <__ssprint_r+0xa0>
  4051f6:	89a3      	ldrh	r3, [r4, #12]
  4051f8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4051fc:	d02e      	beq.n	40525c <__ssprint_r+0x80>
  4051fe:	6965      	ldr	r5, [r4, #20]
  405200:	6921      	ldr	r1, [r4, #16]
  405202:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405206:	eba0 0b01 	sub.w	fp, r0, r1
  40520a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40520e:	f10b 0001 	add.w	r0, fp, #1
  405212:	106d      	asrs	r5, r5, #1
  405214:	4430      	add	r0, r6
  405216:	42a8      	cmp	r0, r5
  405218:	462a      	mov	r2, r5
  40521a:	bf84      	itt	hi
  40521c:	4605      	movhi	r5, r0
  40521e:	462a      	movhi	r2, r5
  405220:	055b      	lsls	r3, r3, #21
  405222:	d538      	bpl.n	405296 <__ssprint_r+0xba>
  405224:	4611      	mov	r1, r2
  405226:	4650      	mov	r0, sl
  405228:	f7ff f800 	bl	40422c <_malloc_r>
  40522c:	2800      	cmp	r0, #0
  40522e:	d03c      	beq.n	4052aa <__ssprint_r+0xce>
  405230:	465a      	mov	r2, fp
  405232:	6921      	ldr	r1, [r4, #16]
  405234:	9001      	str	r0, [sp, #4]
  405236:	f7ff fb2b 	bl	404890 <memcpy>
  40523a:	89a2      	ldrh	r2, [r4, #12]
  40523c:	9b01      	ldr	r3, [sp, #4]
  40523e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405242:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405246:	81a2      	strh	r2, [r4, #12]
  405248:	eba5 020b 	sub.w	r2, r5, fp
  40524c:	eb03 000b 	add.w	r0, r3, fp
  405250:	6165      	str	r5, [r4, #20]
  405252:	6123      	str	r3, [r4, #16]
  405254:	6020      	str	r0, [r4, #0]
  405256:	60a2      	str	r2, [r4, #8]
  405258:	4635      	mov	r5, r6
  40525a:	46b3      	mov	fp, r6
  40525c:	465a      	mov	r2, fp
  40525e:	4649      	mov	r1, r9
  405260:	f000 fa08 	bl	405674 <memmove>
  405264:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405268:	68a2      	ldr	r2, [r4, #8]
  40526a:	6820      	ldr	r0, [r4, #0]
  40526c:	1b55      	subs	r5, r2, r5
  40526e:	4458      	add	r0, fp
  405270:	1b9e      	subs	r6, r3, r6
  405272:	60a5      	str	r5, [r4, #8]
  405274:	6020      	str	r0, [r4, #0]
  405276:	f8c8 6008 	str.w	r6, [r8, #8]
  40527a:	b33e      	cbz	r6, 4052cc <__ssprint_r+0xf0>
  40527c:	687e      	ldr	r6, [r7, #4]
  40527e:	463b      	mov	r3, r7
  405280:	3708      	adds	r7, #8
  405282:	2e00      	cmp	r6, #0
  405284:	d0fa      	beq.n	40527c <__ssprint_r+0xa0>
  405286:	42ae      	cmp	r6, r5
  405288:	f8d3 9000 	ldr.w	r9, [r3]
  40528c:	46ab      	mov	fp, r5
  40528e:	d2b2      	bcs.n	4051f6 <__ssprint_r+0x1a>
  405290:	4635      	mov	r5, r6
  405292:	46b3      	mov	fp, r6
  405294:	e7e2      	b.n	40525c <__ssprint_r+0x80>
  405296:	4650      	mov	r0, sl
  405298:	f000 fa50 	bl	40573c <_realloc_r>
  40529c:	4603      	mov	r3, r0
  40529e:	2800      	cmp	r0, #0
  4052a0:	d1d2      	bne.n	405248 <__ssprint_r+0x6c>
  4052a2:	6921      	ldr	r1, [r4, #16]
  4052a4:	4650      	mov	r0, sl
  4052a6:	f000 f8e9 	bl	40547c <_free_r>
  4052aa:	230c      	movs	r3, #12
  4052ac:	f8ca 3000 	str.w	r3, [sl]
  4052b0:	89a3      	ldrh	r3, [r4, #12]
  4052b2:	2200      	movs	r2, #0
  4052b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4052b8:	f04f 30ff 	mov.w	r0, #4294967295
  4052bc:	81a3      	strh	r3, [r4, #12]
  4052be:	f8c8 2008 	str.w	r2, [r8, #8]
  4052c2:	f8c8 2004 	str.w	r2, [r8, #4]
  4052c6:	b003      	add	sp, #12
  4052c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4052cc:	2000      	movs	r0, #0
  4052ce:	f8c8 0004 	str.w	r0, [r8, #4]
  4052d2:	b003      	add	sp, #12
  4052d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004052d8 <__register_exitproc>:
  4052d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4052dc:	4c25      	ldr	r4, [pc, #148]	; (405374 <__register_exitproc+0x9c>)
  4052de:	6825      	ldr	r5, [r4, #0]
  4052e0:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  4052e4:	4606      	mov	r6, r0
  4052e6:	4688      	mov	r8, r1
  4052e8:	4692      	mov	sl, r2
  4052ea:	4699      	mov	r9, r3
  4052ec:	b3c4      	cbz	r4, 405360 <__register_exitproc+0x88>
  4052ee:	6860      	ldr	r0, [r4, #4]
  4052f0:	281f      	cmp	r0, #31
  4052f2:	dc17      	bgt.n	405324 <__register_exitproc+0x4c>
  4052f4:	1c43      	adds	r3, r0, #1
  4052f6:	b176      	cbz	r6, 405316 <__register_exitproc+0x3e>
  4052f8:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  4052fc:	2201      	movs	r2, #1
  4052fe:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  405302:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  405306:	4082      	lsls	r2, r0
  405308:	4311      	orrs	r1, r2
  40530a:	2e02      	cmp	r6, #2
  40530c:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  405310:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  405314:	d01e      	beq.n	405354 <__register_exitproc+0x7c>
  405316:	3002      	adds	r0, #2
  405318:	6063      	str	r3, [r4, #4]
  40531a:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  40531e:	2000      	movs	r0, #0
  405320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405324:	4b14      	ldr	r3, [pc, #80]	; (405378 <__register_exitproc+0xa0>)
  405326:	b303      	cbz	r3, 40536a <__register_exitproc+0x92>
  405328:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40532c:	f3af 8000 	nop.w
  405330:	4604      	mov	r4, r0
  405332:	b1d0      	cbz	r0, 40536a <__register_exitproc+0x92>
  405334:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  405338:	2700      	movs	r7, #0
  40533a:	e880 0088 	stmia.w	r0, {r3, r7}
  40533e:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  405342:	4638      	mov	r0, r7
  405344:	2301      	movs	r3, #1
  405346:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  40534a:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  40534e:	2e00      	cmp	r6, #0
  405350:	d0e1      	beq.n	405316 <__register_exitproc+0x3e>
  405352:	e7d1      	b.n	4052f8 <__register_exitproc+0x20>
  405354:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  405358:	430a      	orrs	r2, r1
  40535a:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  40535e:	e7da      	b.n	405316 <__register_exitproc+0x3e>
  405360:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  405364:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  405368:	e7c1      	b.n	4052ee <__register_exitproc+0x16>
  40536a:	f04f 30ff 	mov.w	r0, #4294967295
  40536e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405372:	bf00      	nop
  405374:	00407430 	.word	0x00407430
  405378:	00000000 	.word	0x00000000

0040537c <_calloc_r>:
  40537c:	b510      	push	{r4, lr}
  40537e:	fb02 f101 	mul.w	r1, r2, r1
  405382:	f7fe ff53 	bl	40422c <_malloc_r>
  405386:	4604      	mov	r4, r0
  405388:	b1d8      	cbz	r0, 4053c2 <_calloc_r+0x46>
  40538a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40538e:	f022 0203 	bic.w	r2, r2, #3
  405392:	3a04      	subs	r2, #4
  405394:	2a24      	cmp	r2, #36	; 0x24
  405396:	d818      	bhi.n	4053ca <_calloc_r+0x4e>
  405398:	2a13      	cmp	r2, #19
  40539a:	d914      	bls.n	4053c6 <_calloc_r+0x4a>
  40539c:	2300      	movs	r3, #0
  40539e:	2a1b      	cmp	r2, #27
  4053a0:	6003      	str	r3, [r0, #0]
  4053a2:	6043      	str	r3, [r0, #4]
  4053a4:	d916      	bls.n	4053d4 <_calloc_r+0x58>
  4053a6:	2a24      	cmp	r2, #36	; 0x24
  4053a8:	6083      	str	r3, [r0, #8]
  4053aa:	60c3      	str	r3, [r0, #12]
  4053ac:	bf11      	iteee	ne
  4053ae:	f100 0210 	addne.w	r2, r0, #16
  4053b2:	6103      	streq	r3, [r0, #16]
  4053b4:	6143      	streq	r3, [r0, #20]
  4053b6:	f100 0218 	addeq.w	r2, r0, #24
  4053ba:	2300      	movs	r3, #0
  4053bc:	6013      	str	r3, [r2, #0]
  4053be:	6053      	str	r3, [r2, #4]
  4053c0:	6093      	str	r3, [r2, #8]
  4053c2:	4620      	mov	r0, r4
  4053c4:	bd10      	pop	{r4, pc}
  4053c6:	4602      	mov	r2, r0
  4053c8:	e7f7      	b.n	4053ba <_calloc_r+0x3e>
  4053ca:	2100      	movs	r1, #0
  4053cc:	f7fc fa38 	bl	401840 <memset>
  4053d0:	4620      	mov	r0, r4
  4053d2:	bd10      	pop	{r4, pc}
  4053d4:	f100 0208 	add.w	r2, r0, #8
  4053d8:	e7ef      	b.n	4053ba <_calloc_r+0x3e>
  4053da:	bf00      	nop

004053dc <_malloc_trim_r>:
  4053dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4053de:	4f24      	ldr	r7, [pc, #144]	; (405470 <_malloc_trim_r+0x94>)
  4053e0:	460c      	mov	r4, r1
  4053e2:	4606      	mov	r6, r0
  4053e4:	f7ff faee 	bl	4049c4 <__malloc_lock>
  4053e8:	68bb      	ldr	r3, [r7, #8]
  4053ea:	685d      	ldr	r5, [r3, #4]
  4053ec:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4053f0:	310f      	adds	r1, #15
  4053f2:	f025 0503 	bic.w	r5, r5, #3
  4053f6:	4429      	add	r1, r5
  4053f8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4053fc:	f021 010f 	bic.w	r1, r1, #15
  405400:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405404:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405408:	db07      	blt.n	40541a <_malloc_trim_r+0x3e>
  40540a:	2100      	movs	r1, #0
  40540c:	4630      	mov	r0, r6
  40540e:	f7ff fdd7 	bl	404fc0 <_sbrk_r>
  405412:	68bb      	ldr	r3, [r7, #8]
  405414:	442b      	add	r3, r5
  405416:	4298      	cmp	r0, r3
  405418:	d004      	beq.n	405424 <_malloc_trim_r+0x48>
  40541a:	4630      	mov	r0, r6
  40541c:	f7ff fad4 	bl	4049c8 <__malloc_unlock>
  405420:	2000      	movs	r0, #0
  405422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405424:	4261      	negs	r1, r4
  405426:	4630      	mov	r0, r6
  405428:	f7ff fdca 	bl	404fc0 <_sbrk_r>
  40542c:	3001      	adds	r0, #1
  40542e:	d00d      	beq.n	40544c <_malloc_trim_r+0x70>
  405430:	4b10      	ldr	r3, [pc, #64]	; (405474 <_malloc_trim_r+0x98>)
  405432:	68ba      	ldr	r2, [r7, #8]
  405434:	6819      	ldr	r1, [r3, #0]
  405436:	1b2d      	subs	r5, r5, r4
  405438:	f045 0501 	orr.w	r5, r5, #1
  40543c:	4630      	mov	r0, r6
  40543e:	1b09      	subs	r1, r1, r4
  405440:	6055      	str	r5, [r2, #4]
  405442:	6019      	str	r1, [r3, #0]
  405444:	f7ff fac0 	bl	4049c8 <__malloc_unlock>
  405448:	2001      	movs	r0, #1
  40544a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40544c:	2100      	movs	r1, #0
  40544e:	4630      	mov	r0, r6
  405450:	f7ff fdb6 	bl	404fc0 <_sbrk_r>
  405454:	68ba      	ldr	r2, [r7, #8]
  405456:	1a83      	subs	r3, r0, r2
  405458:	2b0f      	cmp	r3, #15
  40545a:	ddde      	ble.n	40541a <_malloc_trim_r+0x3e>
  40545c:	4c06      	ldr	r4, [pc, #24]	; (405478 <_malloc_trim_r+0x9c>)
  40545e:	4905      	ldr	r1, [pc, #20]	; (405474 <_malloc_trim_r+0x98>)
  405460:	6824      	ldr	r4, [r4, #0]
  405462:	f043 0301 	orr.w	r3, r3, #1
  405466:	1b00      	subs	r0, r0, r4
  405468:	6053      	str	r3, [r2, #4]
  40546a:	6008      	str	r0, [r1, #0]
  40546c:	e7d5      	b.n	40541a <_malloc_trim_r+0x3e>
  40546e:	bf00      	nop
  405470:	20000440 	.word	0x20000440
  405474:	20000a7c 	.word	0x20000a7c
  405478:	20000848 	.word	0x20000848

0040547c <_free_r>:
  40547c:	2900      	cmp	r1, #0
  40547e:	d044      	beq.n	40550a <_free_r+0x8e>
  405480:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405484:	460d      	mov	r5, r1
  405486:	4680      	mov	r8, r0
  405488:	f7ff fa9c 	bl	4049c4 <__malloc_lock>
  40548c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405490:	4969      	ldr	r1, [pc, #420]	; (405638 <_free_r+0x1bc>)
  405492:	f027 0301 	bic.w	r3, r7, #1
  405496:	f1a5 0408 	sub.w	r4, r5, #8
  40549a:	18e2      	adds	r2, r4, r3
  40549c:	688e      	ldr	r6, [r1, #8]
  40549e:	6850      	ldr	r0, [r2, #4]
  4054a0:	42b2      	cmp	r2, r6
  4054a2:	f020 0003 	bic.w	r0, r0, #3
  4054a6:	d05e      	beq.n	405566 <_free_r+0xea>
  4054a8:	07fe      	lsls	r6, r7, #31
  4054aa:	6050      	str	r0, [r2, #4]
  4054ac:	d40b      	bmi.n	4054c6 <_free_r+0x4a>
  4054ae:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4054b2:	1be4      	subs	r4, r4, r7
  4054b4:	f101 0e08 	add.w	lr, r1, #8
  4054b8:	68a5      	ldr	r5, [r4, #8]
  4054ba:	4575      	cmp	r5, lr
  4054bc:	443b      	add	r3, r7
  4054be:	d06d      	beq.n	40559c <_free_r+0x120>
  4054c0:	68e7      	ldr	r7, [r4, #12]
  4054c2:	60ef      	str	r7, [r5, #12]
  4054c4:	60bd      	str	r5, [r7, #8]
  4054c6:	1815      	adds	r5, r2, r0
  4054c8:	686d      	ldr	r5, [r5, #4]
  4054ca:	07ed      	lsls	r5, r5, #31
  4054cc:	d53e      	bpl.n	40554c <_free_r+0xd0>
  4054ce:	f043 0201 	orr.w	r2, r3, #1
  4054d2:	6062      	str	r2, [r4, #4]
  4054d4:	50e3      	str	r3, [r4, r3]
  4054d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4054da:	d217      	bcs.n	40550c <_free_r+0x90>
  4054dc:	08db      	lsrs	r3, r3, #3
  4054de:	1c58      	adds	r0, r3, #1
  4054e0:	109a      	asrs	r2, r3, #2
  4054e2:	684d      	ldr	r5, [r1, #4]
  4054e4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4054e8:	60a7      	str	r7, [r4, #8]
  4054ea:	2301      	movs	r3, #1
  4054ec:	4093      	lsls	r3, r2
  4054ee:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4054f2:	432b      	orrs	r3, r5
  4054f4:	3a08      	subs	r2, #8
  4054f6:	60e2      	str	r2, [r4, #12]
  4054f8:	604b      	str	r3, [r1, #4]
  4054fa:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4054fe:	60fc      	str	r4, [r7, #12]
  405500:	4640      	mov	r0, r8
  405502:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405506:	f7ff ba5f 	b.w	4049c8 <__malloc_unlock>
  40550a:	4770      	bx	lr
  40550c:	0a5a      	lsrs	r2, r3, #9
  40550e:	2a04      	cmp	r2, #4
  405510:	d852      	bhi.n	4055b8 <_free_r+0x13c>
  405512:	099a      	lsrs	r2, r3, #6
  405514:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405518:	00ff      	lsls	r7, r7, #3
  40551a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40551e:	19c8      	adds	r0, r1, r7
  405520:	59ca      	ldr	r2, [r1, r7]
  405522:	3808      	subs	r0, #8
  405524:	4290      	cmp	r0, r2
  405526:	d04f      	beq.n	4055c8 <_free_r+0x14c>
  405528:	6851      	ldr	r1, [r2, #4]
  40552a:	f021 0103 	bic.w	r1, r1, #3
  40552e:	428b      	cmp	r3, r1
  405530:	d232      	bcs.n	405598 <_free_r+0x11c>
  405532:	6892      	ldr	r2, [r2, #8]
  405534:	4290      	cmp	r0, r2
  405536:	d1f7      	bne.n	405528 <_free_r+0xac>
  405538:	68c3      	ldr	r3, [r0, #12]
  40553a:	60a0      	str	r0, [r4, #8]
  40553c:	60e3      	str	r3, [r4, #12]
  40553e:	609c      	str	r4, [r3, #8]
  405540:	60c4      	str	r4, [r0, #12]
  405542:	4640      	mov	r0, r8
  405544:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405548:	f7ff ba3e 	b.w	4049c8 <__malloc_unlock>
  40554c:	6895      	ldr	r5, [r2, #8]
  40554e:	4f3b      	ldr	r7, [pc, #236]	; (40563c <_free_r+0x1c0>)
  405550:	42bd      	cmp	r5, r7
  405552:	4403      	add	r3, r0
  405554:	d040      	beq.n	4055d8 <_free_r+0x15c>
  405556:	68d0      	ldr	r0, [r2, #12]
  405558:	60e8      	str	r0, [r5, #12]
  40555a:	f043 0201 	orr.w	r2, r3, #1
  40555e:	6085      	str	r5, [r0, #8]
  405560:	6062      	str	r2, [r4, #4]
  405562:	50e3      	str	r3, [r4, r3]
  405564:	e7b7      	b.n	4054d6 <_free_r+0x5a>
  405566:	07ff      	lsls	r7, r7, #31
  405568:	4403      	add	r3, r0
  40556a:	d407      	bmi.n	40557c <_free_r+0x100>
  40556c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405570:	1aa4      	subs	r4, r4, r2
  405572:	4413      	add	r3, r2
  405574:	68a0      	ldr	r0, [r4, #8]
  405576:	68e2      	ldr	r2, [r4, #12]
  405578:	60c2      	str	r2, [r0, #12]
  40557a:	6090      	str	r0, [r2, #8]
  40557c:	4a30      	ldr	r2, [pc, #192]	; (405640 <_free_r+0x1c4>)
  40557e:	6812      	ldr	r2, [r2, #0]
  405580:	f043 0001 	orr.w	r0, r3, #1
  405584:	4293      	cmp	r3, r2
  405586:	6060      	str	r0, [r4, #4]
  405588:	608c      	str	r4, [r1, #8]
  40558a:	d3b9      	bcc.n	405500 <_free_r+0x84>
  40558c:	4b2d      	ldr	r3, [pc, #180]	; (405644 <_free_r+0x1c8>)
  40558e:	4640      	mov	r0, r8
  405590:	6819      	ldr	r1, [r3, #0]
  405592:	f7ff ff23 	bl	4053dc <_malloc_trim_r>
  405596:	e7b3      	b.n	405500 <_free_r+0x84>
  405598:	4610      	mov	r0, r2
  40559a:	e7cd      	b.n	405538 <_free_r+0xbc>
  40559c:	1811      	adds	r1, r2, r0
  40559e:	6849      	ldr	r1, [r1, #4]
  4055a0:	07c9      	lsls	r1, r1, #31
  4055a2:	d444      	bmi.n	40562e <_free_r+0x1b2>
  4055a4:	6891      	ldr	r1, [r2, #8]
  4055a6:	68d2      	ldr	r2, [r2, #12]
  4055a8:	60ca      	str	r2, [r1, #12]
  4055aa:	4403      	add	r3, r0
  4055ac:	f043 0001 	orr.w	r0, r3, #1
  4055b0:	6091      	str	r1, [r2, #8]
  4055b2:	6060      	str	r0, [r4, #4]
  4055b4:	50e3      	str	r3, [r4, r3]
  4055b6:	e7a3      	b.n	405500 <_free_r+0x84>
  4055b8:	2a14      	cmp	r2, #20
  4055ba:	d816      	bhi.n	4055ea <_free_r+0x16e>
  4055bc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4055c0:	00ff      	lsls	r7, r7, #3
  4055c2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4055c6:	e7aa      	b.n	40551e <_free_r+0xa2>
  4055c8:	10aa      	asrs	r2, r5, #2
  4055ca:	2301      	movs	r3, #1
  4055cc:	684d      	ldr	r5, [r1, #4]
  4055ce:	4093      	lsls	r3, r2
  4055d0:	432b      	orrs	r3, r5
  4055d2:	604b      	str	r3, [r1, #4]
  4055d4:	4603      	mov	r3, r0
  4055d6:	e7b0      	b.n	40553a <_free_r+0xbe>
  4055d8:	f043 0201 	orr.w	r2, r3, #1
  4055dc:	614c      	str	r4, [r1, #20]
  4055de:	610c      	str	r4, [r1, #16]
  4055e0:	60e5      	str	r5, [r4, #12]
  4055e2:	60a5      	str	r5, [r4, #8]
  4055e4:	6062      	str	r2, [r4, #4]
  4055e6:	50e3      	str	r3, [r4, r3]
  4055e8:	e78a      	b.n	405500 <_free_r+0x84>
  4055ea:	2a54      	cmp	r2, #84	; 0x54
  4055ec:	d806      	bhi.n	4055fc <_free_r+0x180>
  4055ee:	0b1a      	lsrs	r2, r3, #12
  4055f0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4055f4:	00ff      	lsls	r7, r7, #3
  4055f6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4055fa:	e790      	b.n	40551e <_free_r+0xa2>
  4055fc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405600:	d806      	bhi.n	405610 <_free_r+0x194>
  405602:	0bda      	lsrs	r2, r3, #15
  405604:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405608:	00ff      	lsls	r7, r7, #3
  40560a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40560e:	e786      	b.n	40551e <_free_r+0xa2>
  405610:	f240 5054 	movw	r0, #1364	; 0x554
  405614:	4282      	cmp	r2, r0
  405616:	d806      	bhi.n	405626 <_free_r+0x1aa>
  405618:	0c9a      	lsrs	r2, r3, #18
  40561a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40561e:	00ff      	lsls	r7, r7, #3
  405620:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405624:	e77b      	b.n	40551e <_free_r+0xa2>
  405626:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40562a:	257e      	movs	r5, #126	; 0x7e
  40562c:	e777      	b.n	40551e <_free_r+0xa2>
  40562e:	f043 0101 	orr.w	r1, r3, #1
  405632:	6061      	str	r1, [r4, #4]
  405634:	6013      	str	r3, [r2, #0]
  405636:	e763      	b.n	405500 <_free_r+0x84>
  405638:	20000440 	.word	0x20000440
  40563c:	20000448 	.word	0x20000448
  405640:	2000084c 	.word	0x2000084c
  405644:	20000aac 	.word	0x20000aac

00405648 <__ascii_mbtowc>:
  405648:	b082      	sub	sp, #8
  40564a:	b149      	cbz	r1, 405660 <__ascii_mbtowc+0x18>
  40564c:	b15a      	cbz	r2, 405666 <__ascii_mbtowc+0x1e>
  40564e:	b16b      	cbz	r3, 40566c <__ascii_mbtowc+0x24>
  405650:	7813      	ldrb	r3, [r2, #0]
  405652:	600b      	str	r3, [r1, #0]
  405654:	7812      	ldrb	r2, [r2, #0]
  405656:	1c10      	adds	r0, r2, #0
  405658:	bf18      	it	ne
  40565a:	2001      	movne	r0, #1
  40565c:	b002      	add	sp, #8
  40565e:	4770      	bx	lr
  405660:	a901      	add	r1, sp, #4
  405662:	2a00      	cmp	r2, #0
  405664:	d1f3      	bne.n	40564e <__ascii_mbtowc+0x6>
  405666:	4610      	mov	r0, r2
  405668:	b002      	add	sp, #8
  40566a:	4770      	bx	lr
  40566c:	f06f 0001 	mvn.w	r0, #1
  405670:	e7f4      	b.n	40565c <__ascii_mbtowc+0x14>
  405672:	bf00      	nop

00405674 <memmove>:
  405674:	4288      	cmp	r0, r1
  405676:	b5f0      	push	{r4, r5, r6, r7, lr}
  405678:	d90d      	bls.n	405696 <memmove+0x22>
  40567a:	188b      	adds	r3, r1, r2
  40567c:	4298      	cmp	r0, r3
  40567e:	d20a      	bcs.n	405696 <memmove+0x22>
  405680:	1884      	adds	r4, r0, r2
  405682:	2a00      	cmp	r2, #0
  405684:	d051      	beq.n	40572a <memmove+0xb6>
  405686:	4622      	mov	r2, r4
  405688:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40568c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405690:	4299      	cmp	r1, r3
  405692:	d1f9      	bne.n	405688 <memmove+0x14>
  405694:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405696:	2a0f      	cmp	r2, #15
  405698:	d948      	bls.n	40572c <memmove+0xb8>
  40569a:	ea41 0300 	orr.w	r3, r1, r0
  40569e:	079b      	lsls	r3, r3, #30
  4056a0:	d146      	bne.n	405730 <memmove+0xbc>
  4056a2:	f100 0410 	add.w	r4, r0, #16
  4056a6:	f101 0310 	add.w	r3, r1, #16
  4056aa:	4615      	mov	r5, r2
  4056ac:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4056b0:	f844 6c10 	str.w	r6, [r4, #-16]
  4056b4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4056b8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4056bc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4056c0:	f844 6c08 	str.w	r6, [r4, #-8]
  4056c4:	3d10      	subs	r5, #16
  4056c6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4056ca:	f844 6c04 	str.w	r6, [r4, #-4]
  4056ce:	2d0f      	cmp	r5, #15
  4056d0:	f103 0310 	add.w	r3, r3, #16
  4056d4:	f104 0410 	add.w	r4, r4, #16
  4056d8:	d8e8      	bhi.n	4056ac <memmove+0x38>
  4056da:	f1a2 0310 	sub.w	r3, r2, #16
  4056de:	f023 030f 	bic.w	r3, r3, #15
  4056e2:	f002 0e0f 	and.w	lr, r2, #15
  4056e6:	3310      	adds	r3, #16
  4056e8:	f1be 0f03 	cmp.w	lr, #3
  4056ec:	4419      	add	r1, r3
  4056ee:	4403      	add	r3, r0
  4056f0:	d921      	bls.n	405736 <memmove+0xc2>
  4056f2:	1f1e      	subs	r6, r3, #4
  4056f4:	460d      	mov	r5, r1
  4056f6:	4674      	mov	r4, lr
  4056f8:	3c04      	subs	r4, #4
  4056fa:	f855 7b04 	ldr.w	r7, [r5], #4
  4056fe:	f846 7f04 	str.w	r7, [r6, #4]!
  405702:	2c03      	cmp	r4, #3
  405704:	d8f8      	bhi.n	4056f8 <memmove+0x84>
  405706:	f1ae 0404 	sub.w	r4, lr, #4
  40570a:	f024 0403 	bic.w	r4, r4, #3
  40570e:	3404      	adds	r4, #4
  405710:	4421      	add	r1, r4
  405712:	4423      	add	r3, r4
  405714:	f002 0203 	and.w	r2, r2, #3
  405718:	b162      	cbz	r2, 405734 <memmove+0xc0>
  40571a:	3b01      	subs	r3, #1
  40571c:	440a      	add	r2, r1
  40571e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405722:	f803 4f01 	strb.w	r4, [r3, #1]!
  405726:	428a      	cmp	r2, r1
  405728:	d1f9      	bne.n	40571e <memmove+0xaa>
  40572a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40572c:	4603      	mov	r3, r0
  40572e:	e7f3      	b.n	405718 <memmove+0xa4>
  405730:	4603      	mov	r3, r0
  405732:	e7f2      	b.n	40571a <memmove+0xa6>
  405734:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405736:	4672      	mov	r2, lr
  405738:	e7ee      	b.n	405718 <memmove+0xa4>
  40573a:	bf00      	nop

0040573c <_realloc_r>:
  40573c:	2900      	cmp	r1, #0
  40573e:	f000 8095 	beq.w	40586c <_realloc_r+0x130>
  405742:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405746:	460d      	mov	r5, r1
  405748:	4616      	mov	r6, r2
  40574a:	b083      	sub	sp, #12
  40574c:	4680      	mov	r8, r0
  40574e:	f106 070b 	add.w	r7, r6, #11
  405752:	f7ff f937 	bl	4049c4 <__malloc_lock>
  405756:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40575a:	2f16      	cmp	r7, #22
  40575c:	f02e 0403 	bic.w	r4, lr, #3
  405760:	f1a5 0908 	sub.w	r9, r5, #8
  405764:	d83c      	bhi.n	4057e0 <_realloc_r+0xa4>
  405766:	2210      	movs	r2, #16
  405768:	4617      	mov	r7, r2
  40576a:	42be      	cmp	r6, r7
  40576c:	d83d      	bhi.n	4057ea <_realloc_r+0xae>
  40576e:	4294      	cmp	r4, r2
  405770:	da43      	bge.n	4057fa <_realloc_r+0xbe>
  405772:	4bc4      	ldr	r3, [pc, #784]	; (405a84 <_realloc_r+0x348>)
  405774:	6899      	ldr	r1, [r3, #8]
  405776:	eb09 0004 	add.w	r0, r9, r4
  40577a:	4288      	cmp	r0, r1
  40577c:	f000 80b4 	beq.w	4058e8 <_realloc_r+0x1ac>
  405780:	6843      	ldr	r3, [r0, #4]
  405782:	f023 0101 	bic.w	r1, r3, #1
  405786:	4401      	add	r1, r0
  405788:	6849      	ldr	r1, [r1, #4]
  40578a:	07c9      	lsls	r1, r1, #31
  40578c:	d54c      	bpl.n	405828 <_realloc_r+0xec>
  40578e:	f01e 0f01 	tst.w	lr, #1
  405792:	f000 809b 	beq.w	4058cc <_realloc_r+0x190>
  405796:	4631      	mov	r1, r6
  405798:	4640      	mov	r0, r8
  40579a:	f7fe fd47 	bl	40422c <_malloc_r>
  40579e:	4606      	mov	r6, r0
  4057a0:	2800      	cmp	r0, #0
  4057a2:	d03a      	beq.n	40581a <_realloc_r+0xde>
  4057a4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4057a8:	f023 0301 	bic.w	r3, r3, #1
  4057ac:	444b      	add	r3, r9
  4057ae:	f1a0 0208 	sub.w	r2, r0, #8
  4057b2:	429a      	cmp	r2, r3
  4057b4:	f000 8121 	beq.w	4059fa <_realloc_r+0x2be>
  4057b8:	1f22      	subs	r2, r4, #4
  4057ba:	2a24      	cmp	r2, #36	; 0x24
  4057bc:	f200 8107 	bhi.w	4059ce <_realloc_r+0x292>
  4057c0:	2a13      	cmp	r2, #19
  4057c2:	f200 80db 	bhi.w	40597c <_realloc_r+0x240>
  4057c6:	4603      	mov	r3, r0
  4057c8:	462a      	mov	r2, r5
  4057ca:	6811      	ldr	r1, [r2, #0]
  4057cc:	6019      	str	r1, [r3, #0]
  4057ce:	6851      	ldr	r1, [r2, #4]
  4057d0:	6059      	str	r1, [r3, #4]
  4057d2:	6892      	ldr	r2, [r2, #8]
  4057d4:	609a      	str	r2, [r3, #8]
  4057d6:	4629      	mov	r1, r5
  4057d8:	4640      	mov	r0, r8
  4057da:	f7ff fe4f 	bl	40547c <_free_r>
  4057de:	e01c      	b.n	40581a <_realloc_r+0xde>
  4057e0:	f027 0707 	bic.w	r7, r7, #7
  4057e4:	2f00      	cmp	r7, #0
  4057e6:	463a      	mov	r2, r7
  4057e8:	dabf      	bge.n	40576a <_realloc_r+0x2e>
  4057ea:	2600      	movs	r6, #0
  4057ec:	230c      	movs	r3, #12
  4057ee:	4630      	mov	r0, r6
  4057f0:	f8c8 3000 	str.w	r3, [r8]
  4057f4:	b003      	add	sp, #12
  4057f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4057fa:	462e      	mov	r6, r5
  4057fc:	1be3      	subs	r3, r4, r7
  4057fe:	2b0f      	cmp	r3, #15
  405800:	d81e      	bhi.n	405840 <_realloc_r+0x104>
  405802:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405806:	f003 0301 	and.w	r3, r3, #1
  40580a:	4323      	orrs	r3, r4
  40580c:	444c      	add	r4, r9
  40580e:	f8c9 3004 	str.w	r3, [r9, #4]
  405812:	6863      	ldr	r3, [r4, #4]
  405814:	f043 0301 	orr.w	r3, r3, #1
  405818:	6063      	str	r3, [r4, #4]
  40581a:	4640      	mov	r0, r8
  40581c:	f7ff f8d4 	bl	4049c8 <__malloc_unlock>
  405820:	4630      	mov	r0, r6
  405822:	b003      	add	sp, #12
  405824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405828:	f023 0303 	bic.w	r3, r3, #3
  40582c:	18e1      	adds	r1, r4, r3
  40582e:	4291      	cmp	r1, r2
  405830:	db1f      	blt.n	405872 <_realloc_r+0x136>
  405832:	68c3      	ldr	r3, [r0, #12]
  405834:	6882      	ldr	r2, [r0, #8]
  405836:	462e      	mov	r6, r5
  405838:	60d3      	str	r3, [r2, #12]
  40583a:	460c      	mov	r4, r1
  40583c:	609a      	str	r2, [r3, #8]
  40583e:	e7dd      	b.n	4057fc <_realloc_r+0xc0>
  405840:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405844:	eb09 0107 	add.w	r1, r9, r7
  405848:	f002 0201 	and.w	r2, r2, #1
  40584c:	444c      	add	r4, r9
  40584e:	f043 0301 	orr.w	r3, r3, #1
  405852:	4317      	orrs	r7, r2
  405854:	f8c9 7004 	str.w	r7, [r9, #4]
  405858:	604b      	str	r3, [r1, #4]
  40585a:	6863      	ldr	r3, [r4, #4]
  40585c:	f043 0301 	orr.w	r3, r3, #1
  405860:	3108      	adds	r1, #8
  405862:	6063      	str	r3, [r4, #4]
  405864:	4640      	mov	r0, r8
  405866:	f7ff fe09 	bl	40547c <_free_r>
  40586a:	e7d6      	b.n	40581a <_realloc_r+0xde>
  40586c:	4611      	mov	r1, r2
  40586e:	f7fe bcdd 	b.w	40422c <_malloc_r>
  405872:	f01e 0f01 	tst.w	lr, #1
  405876:	d18e      	bne.n	405796 <_realloc_r+0x5a>
  405878:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40587c:	eba9 0a01 	sub.w	sl, r9, r1
  405880:	f8da 1004 	ldr.w	r1, [sl, #4]
  405884:	f021 0103 	bic.w	r1, r1, #3
  405888:	440b      	add	r3, r1
  40588a:	4423      	add	r3, r4
  40588c:	4293      	cmp	r3, r2
  40588e:	db25      	blt.n	4058dc <_realloc_r+0x1a0>
  405890:	68c2      	ldr	r2, [r0, #12]
  405892:	6881      	ldr	r1, [r0, #8]
  405894:	4656      	mov	r6, sl
  405896:	60ca      	str	r2, [r1, #12]
  405898:	6091      	str	r1, [r2, #8]
  40589a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40589e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4058a2:	1f22      	subs	r2, r4, #4
  4058a4:	2a24      	cmp	r2, #36	; 0x24
  4058a6:	60c1      	str	r1, [r0, #12]
  4058a8:	6088      	str	r0, [r1, #8]
  4058aa:	f200 8094 	bhi.w	4059d6 <_realloc_r+0x29a>
  4058ae:	2a13      	cmp	r2, #19
  4058b0:	d96f      	bls.n	405992 <_realloc_r+0x256>
  4058b2:	6829      	ldr	r1, [r5, #0]
  4058b4:	f8ca 1008 	str.w	r1, [sl, #8]
  4058b8:	6869      	ldr	r1, [r5, #4]
  4058ba:	f8ca 100c 	str.w	r1, [sl, #12]
  4058be:	2a1b      	cmp	r2, #27
  4058c0:	f200 80a2 	bhi.w	405a08 <_realloc_r+0x2cc>
  4058c4:	3508      	adds	r5, #8
  4058c6:	f10a 0210 	add.w	r2, sl, #16
  4058ca:	e063      	b.n	405994 <_realloc_r+0x258>
  4058cc:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4058d0:	eba9 0a03 	sub.w	sl, r9, r3
  4058d4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4058d8:	f021 0103 	bic.w	r1, r1, #3
  4058dc:	1863      	adds	r3, r4, r1
  4058de:	4293      	cmp	r3, r2
  4058e0:	f6ff af59 	blt.w	405796 <_realloc_r+0x5a>
  4058e4:	4656      	mov	r6, sl
  4058e6:	e7d8      	b.n	40589a <_realloc_r+0x15e>
  4058e8:	6841      	ldr	r1, [r0, #4]
  4058ea:	f021 0b03 	bic.w	fp, r1, #3
  4058ee:	44a3      	add	fp, r4
  4058f0:	f107 0010 	add.w	r0, r7, #16
  4058f4:	4583      	cmp	fp, r0
  4058f6:	da56      	bge.n	4059a6 <_realloc_r+0x26a>
  4058f8:	f01e 0f01 	tst.w	lr, #1
  4058fc:	f47f af4b 	bne.w	405796 <_realloc_r+0x5a>
  405900:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405904:	eba9 0a01 	sub.w	sl, r9, r1
  405908:	f8da 1004 	ldr.w	r1, [sl, #4]
  40590c:	f021 0103 	bic.w	r1, r1, #3
  405910:	448b      	add	fp, r1
  405912:	4558      	cmp	r0, fp
  405914:	dce2      	bgt.n	4058dc <_realloc_r+0x1a0>
  405916:	4656      	mov	r6, sl
  405918:	f8da 100c 	ldr.w	r1, [sl, #12]
  40591c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405920:	1f22      	subs	r2, r4, #4
  405922:	2a24      	cmp	r2, #36	; 0x24
  405924:	60c1      	str	r1, [r0, #12]
  405926:	6088      	str	r0, [r1, #8]
  405928:	f200 808f 	bhi.w	405a4a <_realloc_r+0x30e>
  40592c:	2a13      	cmp	r2, #19
  40592e:	f240 808a 	bls.w	405a46 <_realloc_r+0x30a>
  405932:	6829      	ldr	r1, [r5, #0]
  405934:	f8ca 1008 	str.w	r1, [sl, #8]
  405938:	6869      	ldr	r1, [r5, #4]
  40593a:	f8ca 100c 	str.w	r1, [sl, #12]
  40593e:	2a1b      	cmp	r2, #27
  405940:	f200 808a 	bhi.w	405a58 <_realloc_r+0x31c>
  405944:	3508      	adds	r5, #8
  405946:	f10a 0210 	add.w	r2, sl, #16
  40594a:	6829      	ldr	r1, [r5, #0]
  40594c:	6011      	str	r1, [r2, #0]
  40594e:	6869      	ldr	r1, [r5, #4]
  405950:	6051      	str	r1, [r2, #4]
  405952:	68a9      	ldr	r1, [r5, #8]
  405954:	6091      	str	r1, [r2, #8]
  405956:	eb0a 0107 	add.w	r1, sl, r7
  40595a:	ebab 0207 	sub.w	r2, fp, r7
  40595e:	f042 0201 	orr.w	r2, r2, #1
  405962:	6099      	str	r1, [r3, #8]
  405964:	604a      	str	r2, [r1, #4]
  405966:	f8da 3004 	ldr.w	r3, [sl, #4]
  40596a:	f003 0301 	and.w	r3, r3, #1
  40596e:	431f      	orrs	r7, r3
  405970:	4640      	mov	r0, r8
  405972:	f8ca 7004 	str.w	r7, [sl, #4]
  405976:	f7ff f827 	bl	4049c8 <__malloc_unlock>
  40597a:	e751      	b.n	405820 <_realloc_r+0xe4>
  40597c:	682b      	ldr	r3, [r5, #0]
  40597e:	6003      	str	r3, [r0, #0]
  405980:	686b      	ldr	r3, [r5, #4]
  405982:	6043      	str	r3, [r0, #4]
  405984:	2a1b      	cmp	r2, #27
  405986:	d82d      	bhi.n	4059e4 <_realloc_r+0x2a8>
  405988:	f100 0308 	add.w	r3, r0, #8
  40598c:	f105 0208 	add.w	r2, r5, #8
  405990:	e71b      	b.n	4057ca <_realloc_r+0x8e>
  405992:	4632      	mov	r2, r6
  405994:	6829      	ldr	r1, [r5, #0]
  405996:	6011      	str	r1, [r2, #0]
  405998:	6869      	ldr	r1, [r5, #4]
  40599a:	6051      	str	r1, [r2, #4]
  40599c:	68a9      	ldr	r1, [r5, #8]
  40599e:	6091      	str	r1, [r2, #8]
  4059a0:	461c      	mov	r4, r3
  4059a2:	46d1      	mov	r9, sl
  4059a4:	e72a      	b.n	4057fc <_realloc_r+0xc0>
  4059a6:	eb09 0107 	add.w	r1, r9, r7
  4059aa:	ebab 0b07 	sub.w	fp, fp, r7
  4059ae:	f04b 0201 	orr.w	r2, fp, #1
  4059b2:	6099      	str	r1, [r3, #8]
  4059b4:	604a      	str	r2, [r1, #4]
  4059b6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4059ba:	f003 0301 	and.w	r3, r3, #1
  4059be:	431f      	orrs	r7, r3
  4059c0:	4640      	mov	r0, r8
  4059c2:	f845 7c04 	str.w	r7, [r5, #-4]
  4059c6:	f7fe ffff 	bl	4049c8 <__malloc_unlock>
  4059ca:	462e      	mov	r6, r5
  4059cc:	e728      	b.n	405820 <_realloc_r+0xe4>
  4059ce:	4629      	mov	r1, r5
  4059d0:	f7ff fe50 	bl	405674 <memmove>
  4059d4:	e6ff      	b.n	4057d6 <_realloc_r+0x9a>
  4059d6:	4629      	mov	r1, r5
  4059d8:	4630      	mov	r0, r6
  4059da:	461c      	mov	r4, r3
  4059dc:	46d1      	mov	r9, sl
  4059de:	f7ff fe49 	bl	405674 <memmove>
  4059e2:	e70b      	b.n	4057fc <_realloc_r+0xc0>
  4059e4:	68ab      	ldr	r3, [r5, #8]
  4059e6:	6083      	str	r3, [r0, #8]
  4059e8:	68eb      	ldr	r3, [r5, #12]
  4059ea:	60c3      	str	r3, [r0, #12]
  4059ec:	2a24      	cmp	r2, #36	; 0x24
  4059ee:	d017      	beq.n	405a20 <_realloc_r+0x2e4>
  4059f0:	f100 0310 	add.w	r3, r0, #16
  4059f4:	f105 0210 	add.w	r2, r5, #16
  4059f8:	e6e7      	b.n	4057ca <_realloc_r+0x8e>
  4059fa:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4059fe:	f023 0303 	bic.w	r3, r3, #3
  405a02:	441c      	add	r4, r3
  405a04:	462e      	mov	r6, r5
  405a06:	e6f9      	b.n	4057fc <_realloc_r+0xc0>
  405a08:	68a9      	ldr	r1, [r5, #8]
  405a0a:	f8ca 1010 	str.w	r1, [sl, #16]
  405a0e:	68e9      	ldr	r1, [r5, #12]
  405a10:	f8ca 1014 	str.w	r1, [sl, #20]
  405a14:	2a24      	cmp	r2, #36	; 0x24
  405a16:	d00c      	beq.n	405a32 <_realloc_r+0x2f6>
  405a18:	3510      	adds	r5, #16
  405a1a:	f10a 0218 	add.w	r2, sl, #24
  405a1e:	e7b9      	b.n	405994 <_realloc_r+0x258>
  405a20:	692b      	ldr	r3, [r5, #16]
  405a22:	6103      	str	r3, [r0, #16]
  405a24:	696b      	ldr	r3, [r5, #20]
  405a26:	6143      	str	r3, [r0, #20]
  405a28:	f105 0218 	add.w	r2, r5, #24
  405a2c:	f100 0318 	add.w	r3, r0, #24
  405a30:	e6cb      	b.n	4057ca <_realloc_r+0x8e>
  405a32:	692a      	ldr	r2, [r5, #16]
  405a34:	f8ca 2018 	str.w	r2, [sl, #24]
  405a38:	696a      	ldr	r2, [r5, #20]
  405a3a:	f8ca 201c 	str.w	r2, [sl, #28]
  405a3e:	3518      	adds	r5, #24
  405a40:	f10a 0220 	add.w	r2, sl, #32
  405a44:	e7a6      	b.n	405994 <_realloc_r+0x258>
  405a46:	4632      	mov	r2, r6
  405a48:	e77f      	b.n	40594a <_realloc_r+0x20e>
  405a4a:	4629      	mov	r1, r5
  405a4c:	4630      	mov	r0, r6
  405a4e:	9301      	str	r3, [sp, #4]
  405a50:	f7ff fe10 	bl	405674 <memmove>
  405a54:	9b01      	ldr	r3, [sp, #4]
  405a56:	e77e      	b.n	405956 <_realloc_r+0x21a>
  405a58:	68a9      	ldr	r1, [r5, #8]
  405a5a:	f8ca 1010 	str.w	r1, [sl, #16]
  405a5e:	68e9      	ldr	r1, [r5, #12]
  405a60:	f8ca 1014 	str.w	r1, [sl, #20]
  405a64:	2a24      	cmp	r2, #36	; 0x24
  405a66:	d003      	beq.n	405a70 <_realloc_r+0x334>
  405a68:	3510      	adds	r5, #16
  405a6a:	f10a 0218 	add.w	r2, sl, #24
  405a6e:	e76c      	b.n	40594a <_realloc_r+0x20e>
  405a70:	692a      	ldr	r2, [r5, #16]
  405a72:	f8ca 2018 	str.w	r2, [sl, #24]
  405a76:	696a      	ldr	r2, [r5, #20]
  405a78:	f8ca 201c 	str.w	r2, [sl, #28]
  405a7c:	3518      	adds	r5, #24
  405a7e:	f10a 0220 	add.w	r2, sl, #32
  405a82:	e762      	b.n	40594a <_realloc_r+0x20e>
  405a84:	20000440 	.word	0x20000440

00405a88 <__ascii_wctomb>:
  405a88:	b121      	cbz	r1, 405a94 <__ascii_wctomb+0xc>
  405a8a:	2aff      	cmp	r2, #255	; 0xff
  405a8c:	d804      	bhi.n	405a98 <__ascii_wctomb+0x10>
  405a8e:	700a      	strb	r2, [r1, #0]
  405a90:	2001      	movs	r0, #1
  405a92:	4770      	bx	lr
  405a94:	4608      	mov	r0, r1
  405a96:	4770      	bx	lr
  405a98:	238a      	movs	r3, #138	; 0x8a
  405a9a:	6003      	str	r3, [r0, #0]
  405a9c:	f04f 30ff 	mov.w	r0, #4294967295
  405aa0:	4770      	bx	lr
  405aa2:	bf00      	nop

00405aa4 <__aeabi_drsub>:
  405aa4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405aa8:	e002      	b.n	405ab0 <__adddf3>
  405aaa:	bf00      	nop

00405aac <__aeabi_dsub>:
  405aac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405ab0 <__adddf3>:
  405ab0:	b530      	push	{r4, r5, lr}
  405ab2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405ab6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  405aba:	ea94 0f05 	teq	r4, r5
  405abe:	bf08      	it	eq
  405ac0:	ea90 0f02 	teqeq	r0, r2
  405ac4:	bf1f      	itttt	ne
  405ac6:	ea54 0c00 	orrsne.w	ip, r4, r0
  405aca:	ea55 0c02 	orrsne.w	ip, r5, r2
  405ace:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405ad2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405ad6:	f000 80e2 	beq.w	405c9e <__adddf3+0x1ee>
  405ada:	ea4f 5454 	mov.w	r4, r4, lsr #21
  405ade:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405ae2:	bfb8      	it	lt
  405ae4:	426d      	neglt	r5, r5
  405ae6:	dd0c      	ble.n	405b02 <__adddf3+0x52>
  405ae8:	442c      	add	r4, r5
  405aea:	ea80 0202 	eor.w	r2, r0, r2
  405aee:	ea81 0303 	eor.w	r3, r1, r3
  405af2:	ea82 0000 	eor.w	r0, r2, r0
  405af6:	ea83 0101 	eor.w	r1, r3, r1
  405afa:	ea80 0202 	eor.w	r2, r0, r2
  405afe:	ea81 0303 	eor.w	r3, r1, r3
  405b02:	2d36      	cmp	r5, #54	; 0x36
  405b04:	bf88      	it	hi
  405b06:	bd30      	pophi	{r4, r5, pc}
  405b08:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405b0c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405b10:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405b14:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405b18:	d002      	beq.n	405b20 <__adddf3+0x70>
  405b1a:	4240      	negs	r0, r0
  405b1c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405b20:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405b24:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405b28:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  405b2c:	d002      	beq.n	405b34 <__adddf3+0x84>
  405b2e:	4252      	negs	r2, r2
  405b30:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405b34:	ea94 0f05 	teq	r4, r5
  405b38:	f000 80a7 	beq.w	405c8a <__adddf3+0x1da>
  405b3c:	f1a4 0401 	sub.w	r4, r4, #1
  405b40:	f1d5 0e20 	rsbs	lr, r5, #32
  405b44:	db0d      	blt.n	405b62 <__adddf3+0xb2>
  405b46:	fa02 fc0e 	lsl.w	ip, r2, lr
  405b4a:	fa22 f205 	lsr.w	r2, r2, r5
  405b4e:	1880      	adds	r0, r0, r2
  405b50:	f141 0100 	adc.w	r1, r1, #0
  405b54:	fa03 f20e 	lsl.w	r2, r3, lr
  405b58:	1880      	adds	r0, r0, r2
  405b5a:	fa43 f305 	asr.w	r3, r3, r5
  405b5e:	4159      	adcs	r1, r3
  405b60:	e00e      	b.n	405b80 <__adddf3+0xd0>
  405b62:	f1a5 0520 	sub.w	r5, r5, #32
  405b66:	f10e 0e20 	add.w	lr, lr, #32
  405b6a:	2a01      	cmp	r2, #1
  405b6c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405b70:	bf28      	it	cs
  405b72:	f04c 0c02 	orrcs.w	ip, ip, #2
  405b76:	fa43 f305 	asr.w	r3, r3, r5
  405b7a:	18c0      	adds	r0, r0, r3
  405b7c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405b80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405b84:	d507      	bpl.n	405b96 <__adddf3+0xe6>
  405b86:	f04f 0e00 	mov.w	lr, #0
  405b8a:	f1dc 0c00 	rsbs	ip, ip, #0
  405b8e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405b92:	eb6e 0101 	sbc.w	r1, lr, r1
  405b96:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  405b9a:	d31b      	bcc.n	405bd4 <__adddf3+0x124>
  405b9c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405ba0:	d30c      	bcc.n	405bbc <__adddf3+0x10c>
  405ba2:	0849      	lsrs	r1, r1, #1
  405ba4:	ea5f 0030 	movs.w	r0, r0, rrx
  405ba8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  405bac:	f104 0401 	add.w	r4, r4, #1
  405bb0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405bb4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405bb8:	f080 809a 	bcs.w	405cf0 <__adddf3+0x240>
  405bbc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405bc0:	bf08      	it	eq
  405bc2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405bc6:	f150 0000 	adcs.w	r0, r0, #0
  405bca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405bce:	ea41 0105 	orr.w	r1, r1, r5
  405bd2:	bd30      	pop	{r4, r5, pc}
  405bd4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405bd8:	4140      	adcs	r0, r0
  405bda:	eb41 0101 	adc.w	r1, r1, r1
  405bde:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405be2:	f1a4 0401 	sub.w	r4, r4, #1
  405be6:	d1e9      	bne.n	405bbc <__adddf3+0x10c>
  405be8:	f091 0f00 	teq	r1, #0
  405bec:	bf04      	itt	eq
  405bee:	4601      	moveq	r1, r0
  405bf0:	2000      	moveq	r0, #0
  405bf2:	fab1 f381 	clz	r3, r1
  405bf6:	bf08      	it	eq
  405bf8:	3320      	addeq	r3, #32
  405bfa:	f1a3 030b 	sub.w	r3, r3, #11
  405bfe:	f1b3 0220 	subs.w	r2, r3, #32
  405c02:	da0c      	bge.n	405c1e <__adddf3+0x16e>
  405c04:	320c      	adds	r2, #12
  405c06:	dd08      	ble.n	405c1a <__adddf3+0x16a>
  405c08:	f102 0c14 	add.w	ip, r2, #20
  405c0c:	f1c2 020c 	rsb	r2, r2, #12
  405c10:	fa01 f00c 	lsl.w	r0, r1, ip
  405c14:	fa21 f102 	lsr.w	r1, r1, r2
  405c18:	e00c      	b.n	405c34 <__adddf3+0x184>
  405c1a:	f102 0214 	add.w	r2, r2, #20
  405c1e:	bfd8      	it	le
  405c20:	f1c2 0c20 	rsble	ip, r2, #32
  405c24:	fa01 f102 	lsl.w	r1, r1, r2
  405c28:	fa20 fc0c 	lsr.w	ip, r0, ip
  405c2c:	bfdc      	itt	le
  405c2e:	ea41 010c 	orrle.w	r1, r1, ip
  405c32:	4090      	lslle	r0, r2
  405c34:	1ae4      	subs	r4, r4, r3
  405c36:	bfa2      	ittt	ge
  405c38:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  405c3c:	4329      	orrge	r1, r5
  405c3e:	bd30      	popge	{r4, r5, pc}
  405c40:	ea6f 0404 	mvn.w	r4, r4
  405c44:	3c1f      	subs	r4, #31
  405c46:	da1c      	bge.n	405c82 <__adddf3+0x1d2>
  405c48:	340c      	adds	r4, #12
  405c4a:	dc0e      	bgt.n	405c6a <__adddf3+0x1ba>
  405c4c:	f104 0414 	add.w	r4, r4, #20
  405c50:	f1c4 0220 	rsb	r2, r4, #32
  405c54:	fa20 f004 	lsr.w	r0, r0, r4
  405c58:	fa01 f302 	lsl.w	r3, r1, r2
  405c5c:	ea40 0003 	orr.w	r0, r0, r3
  405c60:	fa21 f304 	lsr.w	r3, r1, r4
  405c64:	ea45 0103 	orr.w	r1, r5, r3
  405c68:	bd30      	pop	{r4, r5, pc}
  405c6a:	f1c4 040c 	rsb	r4, r4, #12
  405c6e:	f1c4 0220 	rsb	r2, r4, #32
  405c72:	fa20 f002 	lsr.w	r0, r0, r2
  405c76:	fa01 f304 	lsl.w	r3, r1, r4
  405c7a:	ea40 0003 	orr.w	r0, r0, r3
  405c7e:	4629      	mov	r1, r5
  405c80:	bd30      	pop	{r4, r5, pc}
  405c82:	fa21 f004 	lsr.w	r0, r1, r4
  405c86:	4629      	mov	r1, r5
  405c88:	bd30      	pop	{r4, r5, pc}
  405c8a:	f094 0f00 	teq	r4, #0
  405c8e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405c92:	bf06      	itte	eq
  405c94:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405c98:	3401      	addeq	r4, #1
  405c9a:	3d01      	subne	r5, #1
  405c9c:	e74e      	b.n	405b3c <__adddf3+0x8c>
  405c9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405ca2:	bf18      	it	ne
  405ca4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405ca8:	d029      	beq.n	405cfe <__adddf3+0x24e>
  405caa:	ea94 0f05 	teq	r4, r5
  405cae:	bf08      	it	eq
  405cb0:	ea90 0f02 	teqeq	r0, r2
  405cb4:	d005      	beq.n	405cc2 <__adddf3+0x212>
  405cb6:	ea54 0c00 	orrs.w	ip, r4, r0
  405cba:	bf04      	itt	eq
  405cbc:	4619      	moveq	r1, r3
  405cbe:	4610      	moveq	r0, r2
  405cc0:	bd30      	pop	{r4, r5, pc}
  405cc2:	ea91 0f03 	teq	r1, r3
  405cc6:	bf1e      	ittt	ne
  405cc8:	2100      	movne	r1, #0
  405cca:	2000      	movne	r0, #0
  405ccc:	bd30      	popne	{r4, r5, pc}
  405cce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405cd2:	d105      	bne.n	405ce0 <__adddf3+0x230>
  405cd4:	0040      	lsls	r0, r0, #1
  405cd6:	4149      	adcs	r1, r1
  405cd8:	bf28      	it	cs
  405cda:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  405cde:	bd30      	pop	{r4, r5, pc}
  405ce0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405ce4:	bf3c      	itt	cc
  405ce6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405cea:	bd30      	popcc	{r4, r5, pc}
  405cec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405cf0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405cf4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405cf8:	f04f 0000 	mov.w	r0, #0
  405cfc:	bd30      	pop	{r4, r5, pc}
  405cfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405d02:	bf1a      	itte	ne
  405d04:	4619      	movne	r1, r3
  405d06:	4610      	movne	r0, r2
  405d08:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405d0c:	bf1c      	itt	ne
  405d0e:	460b      	movne	r3, r1
  405d10:	4602      	movne	r2, r0
  405d12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405d16:	bf06      	itte	eq
  405d18:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405d1c:	ea91 0f03 	teqeq	r1, r3
  405d20:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405d24:	bd30      	pop	{r4, r5, pc}
  405d26:	bf00      	nop

00405d28 <__aeabi_ui2d>:
  405d28:	f090 0f00 	teq	r0, #0
  405d2c:	bf04      	itt	eq
  405d2e:	2100      	moveq	r1, #0
  405d30:	4770      	bxeq	lr
  405d32:	b530      	push	{r4, r5, lr}
  405d34:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d38:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d3c:	f04f 0500 	mov.w	r5, #0
  405d40:	f04f 0100 	mov.w	r1, #0
  405d44:	e750      	b.n	405be8 <__adddf3+0x138>
  405d46:	bf00      	nop

00405d48 <__aeabi_i2d>:
  405d48:	f090 0f00 	teq	r0, #0
  405d4c:	bf04      	itt	eq
  405d4e:	2100      	moveq	r1, #0
  405d50:	4770      	bxeq	lr
  405d52:	b530      	push	{r4, r5, lr}
  405d54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405d58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405d5c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405d60:	bf48      	it	mi
  405d62:	4240      	negmi	r0, r0
  405d64:	f04f 0100 	mov.w	r1, #0
  405d68:	e73e      	b.n	405be8 <__adddf3+0x138>
  405d6a:	bf00      	nop

00405d6c <__aeabi_f2d>:
  405d6c:	0042      	lsls	r2, r0, #1
  405d6e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405d72:	ea4f 0131 	mov.w	r1, r1, rrx
  405d76:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405d7a:	bf1f      	itttt	ne
  405d7c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405d80:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d84:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405d88:	4770      	bxne	lr
  405d8a:	f092 0f00 	teq	r2, #0
  405d8e:	bf14      	ite	ne
  405d90:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405d94:	4770      	bxeq	lr
  405d96:	b530      	push	{r4, r5, lr}
  405d98:	f44f 7460 	mov.w	r4, #896	; 0x380
  405d9c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405da0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405da4:	e720      	b.n	405be8 <__adddf3+0x138>
  405da6:	bf00      	nop

00405da8 <__aeabi_ul2d>:
  405da8:	ea50 0201 	orrs.w	r2, r0, r1
  405dac:	bf08      	it	eq
  405dae:	4770      	bxeq	lr
  405db0:	b530      	push	{r4, r5, lr}
  405db2:	f04f 0500 	mov.w	r5, #0
  405db6:	e00a      	b.n	405dce <__aeabi_l2d+0x16>

00405db8 <__aeabi_l2d>:
  405db8:	ea50 0201 	orrs.w	r2, r0, r1
  405dbc:	bf08      	it	eq
  405dbe:	4770      	bxeq	lr
  405dc0:	b530      	push	{r4, r5, lr}
  405dc2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405dc6:	d502      	bpl.n	405dce <__aeabi_l2d+0x16>
  405dc8:	4240      	negs	r0, r0
  405dca:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405dce:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405dd2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405dd6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405dda:	f43f aedc 	beq.w	405b96 <__adddf3+0xe6>
  405dde:	f04f 0203 	mov.w	r2, #3
  405de2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405de6:	bf18      	it	ne
  405de8:	3203      	addne	r2, #3
  405dea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405dee:	bf18      	it	ne
  405df0:	3203      	addne	r2, #3
  405df2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405df6:	f1c2 0320 	rsb	r3, r2, #32
  405dfa:	fa00 fc03 	lsl.w	ip, r0, r3
  405dfe:	fa20 f002 	lsr.w	r0, r0, r2
  405e02:	fa01 fe03 	lsl.w	lr, r1, r3
  405e06:	ea40 000e 	orr.w	r0, r0, lr
  405e0a:	fa21 f102 	lsr.w	r1, r1, r2
  405e0e:	4414      	add	r4, r2
  405e10:	e6c1      	b.n	405b96 <__adddf3+0xe6>
  405e12:	bf00      	nop

00405e14 <__aeabi_dmul>:
  405e14:	b570      	push	{r4, r5, r6, lr}
  405e16:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405e1a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405e1e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405e22:	bf1d      	ittte	ne
  405e24:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405e28:	ea94 0f0c 	teqne	r4, ip
  405e2c:	ea95 0f0c 	teqne	r5, ip
  405e30:	f000 f8de 	bleq	405ff0 <__aeabi_dmul+0x1dc>
  405e34:	442c      	add	r4, r5
  405e36:	ea81 0603 	eor.w	r6, r1, r3
  405e3a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405e3e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405e42:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405e46:	bf18      	it	ne
  405e48:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405e4c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405e50:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405e54:	d038      	beq.n	405ec8 <__aeabi_dmul+0xb4>
  405e56:	fba0 ce02 	umull	ip, lr, r0, r2
  405e5a:	f04f 0500 	mov.w	r5, #0
  405e5e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405e62:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405e66:	fbe0 e503 	umlal	lr, r5, r0, r3
  405e6a:	f04f 0600 	mov.w	r6, #0
  405e6e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405e72:	f09c 0f00 	teq	ip, #0
  405e76:	bf18      	it	ne
  405e78:	f04e 0e01 	orrne.w	lr, lr, #1
  405e7c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405e80:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405e84:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405e88:	d204      	bcs.n	405e94 <__aeabi_dmul+0x80>
  405e8a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405e8e:	416d      	adcs	r5, r5
  405e90:	eb46 0606 	adc.w	r6, r6, r6
  405e94:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405e98:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405e9c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405ea0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405ea4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405ea8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405eac:	bf88      	it	hi
  405eae:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405eb2:	d81e      	bhi.n	405ef2 <__aeabi_dmul+0xde>
  405eb4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405eb8:	bf08      	it	eq
  405eba:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405ebe:	f150 0000 	adcs.w	r0, r0, #0
  405ec2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405ec6:	bd70      	pop	{r4, r5, r6, pc}
  405ec8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405ecc:	ea46 0101 	orr.w	r1, r6, r1
  405ed0:	ea40 0002 	orr.w	r0, r0, r2
  405ed4:	ea81 0103 	eor.w	r1, r1, r3
  405ed8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405edc:	bfc2      	ittt	gt
  405ede:	ebd4 050c 	rsbsgt	r5, r4, ip
  405ee2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405ee6:	bd70      	popgt	{r4, r5, r6, pc}
  405ee8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405eec:	f04f 0e00 	mov.w	lr, #0
  405ef0:	3c01      	subs	r4, #1
  405ef2:	f300 80ab 	bgt.w	40604c <__aeabi_dmul+0x238>
  405ef6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405efa:	bfde      	ittt	le
  405efc:	2000      	movle	r0, #0
  405efe:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405f02:	bd70      	pople	{r4, r5, r6, pc}
  405f04:	f1c4 0400 	rsb	r4, r4, #0
  405f08:	3c20      	subs	r4, #32
  405f0a:	da35      	bge.n	405f78 <__aeabi_dmul+0x164>
  405f0c:	340c      	adds	r4, #12
  405f0e:	dc1b      	bgt.n	405f48 <__aeabi_dmul+0x134>
  405f10:	f104 0414 	add.w	r4, r4, #20
  405f14:	f1c4 0520 	rsb	r5, r4, #32
  405f18:	fa00 f305 	lsl.w	r3, r0, r5
  405f1c:	fa20 f004 	lsr.w	r0, r0, r4
  405f20:	fa01 f205 	lsl.w	r2, r1, r5
  405f24:	ea40 0002 	orr.w	r0, r0, r2
  405f28:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405f2c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405f30:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405f34:	fa21 f604 	lsr.w	r6, r1, r4
  405f38:	eb42 0106 	adc.w	r1, r2, r6
  405f3c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f40:	bf08      	it	eq
  405f42:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f46:	bd70      	pop	{r4, r5, r6, pc}
  405f48:	f1c4 040c 	rsb	r4, r4, #12
  405f4c:	f1c4 0520 	rsb	r5, r4, #32
  405f50:	fa00 f304 	lsl.w	r3, r0, r4
  405f54:	fa20 f005 	lsr.w	r0, r0, r5
  405f58:	fa01 f204 	lsl.w	r2, r1, r4
  405f5c:	ea40 0002 	orr.w	r0, r0, r2
  405f60:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f64:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405f68:	f141 0100 	adc.w	r1, r1, #0
  405f6c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405f70:	bf08      	it	eq
  405f72:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405f76:	bd70      	pop	{r4, r5, r6, pc}
  405f78:	f1c4 0520 	rsb	r5, r4, #32
  405f7c:	fa00 f205 	lsl.w	r2, r0, r5
  405f80:	ea4e 0e02 	orr.w	lr, lr, r2
  405f84:	fa20 f304 	lsr.w	r3, r0, r4
  405f88:	fa01 f205 	lsl.w	r2, r1, r5
  405f8c:	ea43 0302 	orr.w	r3, r3, r2
  405f90:	fa21 f004 	lsr.w	r0, r1, r4
  405f94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405f98:	fa21 f204 	lsr.w	r2, r1, r4
  405f9c:	ea20 0002 	bic.w	r0, r0, r2
  405fa0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405fa4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405fa8:	bf08      	it	eq
  405faa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405fae:	bd70      	pop	{r4, r5, r6, pc}
  405fb0:	f094 0f00 	teq	r4, #0
  405fb4:	d10f      	bne.n	405fd6 <__aeabi_dmul+0x1c2>
  405fb6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405fba:	0040      	lsls	r0, r0, #1
  405fbc:	eb41 0101 	adc.w	r1, r1, r1
  405fc0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405fc4:	bf08      	it	eq
  405fc6:	3c01      	subeq	r4, #1
  405fc8:	d0f7      	beq.n	405fba <__aeabi_dmul+0x1a6>
  405fca:	ea41 0106 	orr.w	r1, r1, r6
  405fce:	f095 0f00 	teq	r5, #0
  405fd2:	bf18      	it	ne
  405fd4:	4770      	bxne	lr
  405fd6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405fda:	0052      	lsls	r2, r2, #1
  405fdc:	eb43 0303 	adc.w	r3, r3, r3
  405fe0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405fe4:	bf08      	it	eq
  405fe6:	3d01      	subeq	r5, #1
  405fe8:	d0f7      	beq.n	405fda <__aeabi_dmul+0x1c6>
  405fea:	ea43 0306 	orr.w	r3, r3, r6
  405fee:	4770      	bx	lr
  405ff0:	ea94 0f0c 	teq	r4, ip
  405ff4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405ff8:	bf18      	it	ne
  405ffa:	ea95 0f0c 	teqne	r5, ip
  405ffe:	d00c      	beq.n	40601a <__aeabi_dmul+0x206>
  406000:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406004:	bf18      	it	ne
  406006:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40600a:	d1d1      	bne.n	405fb0 <__aeabi_dmul+0x19c>
  40600c:	ea81 0103 	eor.w	r1, r1, r3
  406010:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406014:	f04f 0000 	mov.w	r0, #0
  406018:	bd70      	pop	{r4, r5, r6, pc}
  40601a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40601e:	bf06      	itte	eq
  406020:	4610      	moveq	r0, r2
  406022:	4619      	moveq	r1, r3
  406024:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406028:	d019      	beq.n	40605e <__aeabi_dmul+0x24a>
  40602a:	ea94 0f0c 	teq	r4, ip
  40602e:	d102      	bne.n	406036 <__aeabi_dmul+0x222>
  406030:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406034:	d113      	bne.n	40605e <__aeabi_dmul+0x24a>
  406036:	ea95 0f0c 	teq	r5, ip
  40603a:	d105      	bne.n	406048 <__aeabi_dmul+0x234>
  40603c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  406040:	bf1c      	itt	ne
  406042:	4610      	movne	r0, r2
  406044:	4619      	movne	r1, r3
  406046:	d10a      	bne.n	40605e <__aeabi_dmul+0x24a>
  406048:	ea81 0103 	eor.w	r1, r1, r3
  40604c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406050:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406054:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  406058:	f04f 0000 	mov.w	r0, #0
  40605c:	bd70      	pop	{r4, r5, r6, pc}
  40605e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406062:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406066:	bd70      	pop	{r4, r5, r6, pc}

00406068 <__aeabi_ddiv>:
  406068:	b570      	push	{r4, r5, r6, lr}
  40606a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40606e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406072:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406076:	bf1d      	ittte	ne
  406078:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40607c:	ea94 0f0c 	teqne	r4, ip
  406080:	ea95 0f0c 	teqne	r5, ip
  406084:	f000 f8a7 	bleq	4061d6 <__aeabi_ddiv+0x16e>
  406088:	eba4 0405 	sub.w	r4, r4, r5
  40608c:	ea81 0e03 	eor.w	lr, r1, r3
  406090:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  406094:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406098:	f000 8088 	beq.w	4061ac <__aeabi_ddiv+0x144>
  40609c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4060a0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4060a4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4060a8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4060ac:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4060b0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4060b4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4060b8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4060bc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4060c0:	429d      	cmp	r5, r3
  4060c2:	bf08      	it	eq
  4060c4:	4296      	cmpeq	r6, r2
  4060c6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4060ca:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4060ce:	d202      	bcs.n	4060d6 <__aeabi_ddiv+0x6e>
  4060d0:	085b      	lsrs	r3, r3, #1
  4060d2:	ea4f 0232 	mov.w	r2, r2, rrx
  4060d6:	1ab6      	subs	r6, r6, r2
  4060d8:	eb65 0503 	sbc.w	r5, r5, r3
  4060dc:	085b      	lsrs	r3, r3, #1
  4060de:	ea4f 0232 	mov.w	r2, r2, rrx
  4060e2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4060e6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4060ea:	ebb6 0e02 	subs.w	lr, r6, r2
  4060ee:	eb75 0e03 	sbcs.w	lr, r5, r3
  4060f2:	bf22      	ittt	cs
  4060f4:	1ab6      	subcs	r6, r6, r2
  4060f6:	4675      	movcs	r5, lr
  4060f8:	ea40 000c 	orrcs.w	r0, r0, ip
  4060fc:	085b      	lsrs	r3, r3, #1
  4060fe:	ea4f 0232 	mov.w	r2, r2, rrx
  406102:	ebb6 0e02 	subs.w	lr, r6, r2
  406106:	eb75 0e03 	sbcs.w	lr, r5, r3
  40610a:	bf22      	ittt	cs
  40610c:	1ab6      	subcs	r6, r6, r2
  40610e:	4675      	movcs	r5, lr
  406110:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  406114:	085b      	lsrs	r3, r3, #1
  406116:	ea4f 0232 	mov.w	r2, r2, rrx
  40611a:	ebb6 0e02 	subs.w	lr, r6, r2
  40611e:	eb75 0e03 	sbcs.w	lr, r5, r3
  406122:	bf22      	ittt	cs
  406124:	1ab6      	subcs	r6, r6, r2
  406126:	4675      	movcs	r5, lr
  406128:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40612c:	085b      	lsrs	r3, r3, #1
  40612e:	ea4f 0232 	mov.w	r2, r2, rrx
  406132:	ebb6 0e02 	subs.w	lr, r6, r2
  406136:	eb75 0e03 	sbcs.w	lr, r5, r3
  40613a:	bf22      	ittt	cs
  40613c:	1ab6      	subcs	r6, r6, r2
  40613e:	4675      	movcs	r5, lr
  406140:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  406144:	ea55 0e06 	orrs.w	lr, r5, r6
  406148:	d018      	beq.n	40617c <__aeabi_ddiv+0x114>
  40614a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40614e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  406152:	ea4f 1606 	mov.w	r6, r6, lsl #4
  406156:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40615a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40615e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  406162:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  406166:	d1c0      	bne.n	4060ea <__aeabi_ddiv+0x82>
  406168:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40616c:	d10b      	bne.n	406186 <__aeabi_ddiv+0x11e>
  40616e:	ea41 0100 	orr.w	r1, r1, r0
  406172:	f04f 0000 	mov.w	r0, #0
  406176:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40617a:	e7b6      	b.n	4060ea <__aeabi_ddiv+0x82>
  40617c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406180:	bf04      	itt	eq
  406182:	4301      	orreq	r1, r0
  406184:	2000      	moveq	r0, #0
  406186:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40618a:	bf88      	it	hi
  40618c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406190:	f63f aeaf 	bhi.w	405ef2 <__aeabi_dmul+0xde>
  406194:	ebb5 0c03 	subs.w	ip, r5, r3
  406198:	bf04      	itt	eq
  40619a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40619e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4061a2:	f150 0000 	adcs.w	r0, r0, #0
  4061a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4061aa:	bd70      	pop	{r4, r5, r6, pc}
  4061ac:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4061b0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4061b4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4061b8:	bfc2      	ittt	gt
  4061ba:	ebd4 050c 	rsbsgt	r5, r4, ip
  4061be:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4061c2:	bd70      	popgt	{r4, r5, r6, pc}
  4061c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4061c8:	f04f 0e00 	mov.w	lr, #0
  4061cc:	3c01      	subs	r4, #1
  4061ce:	e690      	b.n	405ef2 <__aeabi_dmul+0xde>
  4061d0:	ea45 0e06 	orr.w	lr, r5, r6
  4061d4:	e68d      	b.n	405ef2 <__aeabi_dmul+0xde>
  4061d6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4061da:	ea94 0f0c 	teq	r4, ip
  4061de:	bf08      	it	eq
  4061e0:	ea95 0f0c 	teqeq	r5, ip
  4061e4:	f43f af3b 	beq.w	40605e <__aeabi_dmul+0x24a>
  4061e8:	ea94 0f0c 	teq	r4, ip
  4061ec:	d10a      	bne.n	406204 <__aeabi_ddiv+0x19c>
  4061ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4061f2:	f47f af34 	bne.w	40605e <__aeabi_dmul+0x24a>
  4061f6:	ea95 0f0c 	teq	r5, ip
  4061fa:	f47f af25 	bne.w	406048 <__aeabi_dmul+0x234>
  4061fe:	4610      	mov	r0, r2
  406200:	4619      	mov	r1, r3
  406202:	e72c      	b.n	40605e <__aeabi_dmul+0x24a>
  406204:	ea95 0f0c 	teq	r5, ip
  406208:	d106      	bne.n	406218 <__aeabi_ddiv+0x1b0>
  40620a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40620e:	f43f aefd 	beq.w	40600c <__aeabi_dmul+0x1f8>
  406212:	4610      	mov	r0, r2
  406214:	4619      	mov	r1, r3
  406216:	e722      	b.n	40605e <__aeabi_dmul+0x24a>
  406218:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40621c:	bf18      	it	ne
  40621e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406222:	f47f aec5 	bne.w	405fb0 <__aeabi_dmul+0x19c>
  406226:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40622a:	f47f af0d 	bne.w	406048 <__aeabi_dmul+0x234>
  40622e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  406232:	f47f aeeb 	bne.w	40600c <__aeabi_dmul+0x1f8>
  406236:	e712      	b.n	40605e <__aeabi_dmul+0x24a>

00406238 <__gedf2>:
  406238:	f04f 3cff 	mov.w	ip, #4294967295
  40623c:	e006      	b.n	40624c <__cmpdf2+0x4>
  40623e:	bf00      	nop

00406240 <__ledf2>:
  406240:	f04f 0c01 	mov.w	ip, #1
  406244:	e002      	b.n	40624c <__cmpdf2+0x4>
  406246:	bf00      	nop

00406248 <__cmpdf2>:
  406248:	f04f 0c01 	mov.w	ip, #1
  40624c:	f84d cd04 	str.w	ip, [sp, #-4]!
  406250:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406254:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406258:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40625c:	bf18      	it	ne
  40625e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406262:	d01b      	beq.n	40629c <__cmpdf2+0x54>
  406264:	b001      	add	sp, #4
  406266:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40626a:	bf0c      	ite	eq
  40626c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  406270:	ea91 0f03 	teqne	r1, r3
  406274:	bf02      	ittt	eq
  406276:	ea90 0f02 	teqeq	r0, r2
  40627a:	2000      	moveq	r0, #0
  40627c:	4770      	bxeq	lr
  40627e:	f110 0f00 	cmn.w	r0, #0
  406282:	ea91 0f03 	teq	r1, r3
  406286:	bf58      	it	pl
  406288:	4299      	cmppl	r1, r3
  40628a:	bf08      	it	eq
  40628c:	4290      	cmpeq	r0, r2
  40628e:	bf2c      	ite	cs
  406290:	17d8      	asrcs	r0, r3, #31
  406292:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406296:	f040 0001 	orr.w	r0, r0, #1
  40629a:	4770      	bx	lr
  40629c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4062a0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062a4:	d102      	bne.n	4062ac <__cmpdf2+0x64>
  4062a6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4062aa:	d107      	bne.n	4062bc <__cmpdf2+0x74>
  4062ac:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4062b0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4062b4:	d1d6      	bne.n	406264 <__cmpdf2+0x1c>
  4062b6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4062ba:	d0d3      	beq.n	406264 <__cmpdf2+0x1c>
  4062bc:	f85d 0b04 	ldr.w	r0, [sp], #4
  4062c0:	4770      	bx	lr
  4062c2:	bf00      	nop

004062c4 <__aeabi_cdrcmple>:
  4062c4:	4684      	mov	ip, r0
  4062c6:	4610      	mov	r0, r2
  4062c8:	4662      	mov	r2, ip
  4062ca:	468c      	mov	ip, r1
  4062cc:	4619      	mov	r1, r3
  4062ce:	4663      	mov	r3, ip
  4062d0:	e000      	b.n	4062d4 <__aeabi_cdcmpeq>
  4062d2:	bf00      	nop

004062d4 <__aeabi_cdcmpeq>:
  4062d4:	b501      	push	{r0, lr}
  4062d6:	f7ff ffb7 	bl	406248 <__cmpdf2>
  4062da:	2800      	cmp	r0, #0
  4062dc:	bf48      	it	mi
  4062de:	f110 0f00 	cmnmi.w	r0, #0
  4062e2:	bd01      	pop	{r0, pc}

004062e4 <__aeabi_dcmpeq>:
  4062e4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062e8:	f7ff fff4 	bl	4062d4 <__aeabi_cdcmpeq>
  4062ec:	bf0c      	ite	eq
  4062ee:	2001      	moveq	r0, #1
  4062f0:	2000      	movne	r0, #0
  4062f2:	f85d fb08 	ldr.w	pc, [sp], #8
  4062f6:	bf00      	nop

004062f8 <__aeabi_dcmplt>:
  4062f8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4062fc:	f7ff ffea 	bl	4062d4 <__aeabi_cdcmpeq>
  406300:	bf34      	ite	cc
  406302:	2001      	movcc	r0, #1
  406304:	2000      	movcs	r0, #0
  406306:	f85d fb08 	ldr.w	pc, [sp], #8
  40630a:	bf00      	nop

0040630c <__aeabi_dcmple>:
  40630c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406310:	f7ff ffe0 	bl	4062d4 <__aeabi_cdcmpeq>
  406314:	bf94      	ite	ls
  406316:	2001      	movls	r0, #1
  406318:	2000      	movhi	r0, #0
  40631a:	f85d fb08 	ldr.w	pc, [sp], #8
  40631e:	bf00      	nop

00406320 <__aeabi_dcmpge>:
  406320:	f84d ed08 	str.w	lr, [sp, #-8]!
  406324:	f7ff ffce 	bl	4062c4 <__aeabi_cdrcmple>
  406328:	bf94      	ite	ls
  40632a:	2001      	movls	r0, #1
  40632c:	2000      	movhi	r0, #0
  40632e:	f85d fb08 	ldr.w	pc, [sp], #8
  406332:	bf00      	nop

00406334 <__aeabi_dcmpgt>:
  406334:	f84d ed08 	str.w	lr, [sp, #-8]!
  406338:	f7ff ffc4 	bl	4062c4 <__aeabi_cdrcmple>
  40633c:	bf34      	ite	cc
  40633e:	2001      	movcc	r0, #1
  406340:	2000      	movcs	r0, #0
  406342:	f85d fb08 	ldr.w	pc, [sp], #8
  406346:	bf00      	nop

00406348 <__aeabi_dcmpun>:
  406348:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40634c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406350:	d102      	bne.n	406358 <__aeabi_dcmpun+0x10>
  406352:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406356:	d10a      	bne.n	40636e <__aeabi_dcmpun+0x26>
  406358:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40635c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406360:	d102      	bne.n	406368 <__aeabi_dcmpun+0x20>
  406362:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406366:	d102      	bne.n	40636e <__aeabi_dcmpun+0x26>
  406368:	f04f 0000 	mov.w	r0, #0
  40636c:	4770      	bx	lr
  40636e:	f04f 0001 	mov.w	r0, #1
  406372:	4770      	bx	lr

00406374 <__aeabi_d2iz>:
  406374:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406378:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40637c:	d215      	bcs.n	4063aa <__aeabi_d2iz+0x36>
  40637e:	d511      	bpl.n	4063a4 <__aeabi_d2iz+0x30>
  406380:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406384:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406388:	d912      	bls.n	4063b0 <__aeabi_d2iz+0x3c>
  40638a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40638e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  406392:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  406396:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40639a:	fa23 f002 	lsr.w	r0, r3, r2
  40639e:	bf18      	it	ne
  4063a0:	4240      	negne	r0, r0
  4063a2:	4770      	bx	lr
  4063a4:	f04f 0000 	mov.w	r0, #0
  4063a8:	4770      	bx	lr
  4063aa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4063ae:	d105      	bne.n	4063bc <__aeabi_d2iz+0x48>
  4063b0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4063b4:	bf08      	it	eq
  4063b6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4063ba:	4770      	bx	lr
  4063bc:	f04f 0000 	mov.w	r0, #0
  4063c0:	4770      	bx	lr
  4063c2:	bf00      	nop

004063c4 <__aeabi_uldivmod>:
  4063c4:	b953      	cbnz	r3, 4063dc <__aeabi_uldivmod+0x18>
  4063c6:	b94a      	cbnz	r2, 4063dc <__aeabi_uldivmod+0x18>
  4063c8:	2900      	cmp	r1, #0
  4063ca:	bf08      	it	eq
  4063cc:	2800      	cmpeq	r0, #0
  4063ce:	bf1c      	itt	ne
  4063d0:	f04f 31ff 	movne.w	r1, #4294967295
  4063d4:	f04f 30ff 	movne.w	r0, #4294967295
  4063d8:	f000 b97a 	b.w	4066d0 <__aeabi_idiv0>
  4063dc:	f1ad 0c08 	sub.w	ip, sp, #8
  4063e0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4063e4:	f000 f806 	bl	4063f4 <__udivmoddi4>
  4063e8:	f8dd e004 	ldr.w	lr, [sp, #4]
  4063ec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4063f0:	b004      	add	sp, #16
  4063f2:	4770      	bx	lr

004063f4 <__udivmoddi4>:
  4063f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4063f8:	468c      	mov	ip, r1
  4063fa:	460d      	mov	r5, r1
  4063fc:	4604      	mov	r4, r0
  4063fe:	9e08      	ldr	r6, [sp, #32]
  406400:	2b00      	cmp	r3, #0
  406402:	d151      	bne.n	4064a8 <__udivmoddi4+0xb4>
  406404:	428a      	cmp	r2, r1
  406406:	4617      	mov	r7, r2
  406408:	d96d      	bls.n	4064e6 <__udivmoddi4+0xf2>
  40640a:	fab2 fe82 	clz	lr, r2
  40640e:	f1be 0f00 	cmp.w	lr, #0
  406412:	d00b      	beq.n	40642c <__udivmoddi4+0x38>
  406414:	f1ce 0c20 	rsb	ip, lr, #32
  406418:	fa01 f50e 	lsl.w	r5, r1, lr
  40641c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406420:	fa02 f70e 	lsl.w	r7, r2, lr
  406424:	ea4c 0c05 	orr.w	ip, ip, r5
  406428:	fa00 f40e 	lsl.w	r4, r0, lr
  40642c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406430:	0c25      	lsrs	r5, r4, #16
  406432:	fbbc f8fa 	udiv	r8, ip, sl
  406436:	fa1f f987 	uxth.w	r9, r7
  40643a:	fb0a cc18 	mls	ip, sl, r8, ip
  40643e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406442:	fb08 f309 	mul.w	r3, r8, r9
  406446:	42ab      	cmp	r3, r5
  406448:	d90a      	bls.n	406460 <__udivmoddi4+0x6c>
  40644a:	19ed      	adds	r5, r5, r7
  40644c:	f108 32ff 	add.w	r2, r8, #4294967295
  406450:	f080 8123 	bcs.w	40669a <__udivmoddi4+0x2a6>
  406454:	42ab      	cmp	r3, r5
  406456:	f240 8120 	bls.w	40669a <__udivmoddi4+0x2a6>
  40645a:	f1a8 0802 	sub.w	r8, r8, #2
  40645e:	443d      	add	r5, r7
  406460:	1aed      	subs	r5, r5, r3
  406462:	b2a4      	uxth	r4, r4
  406464:	fbb5 f0fa 	udiv	r0, r5, sl
  406468:	fb0a 5510 	mls	r5, sl, r0, r5
  40646c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406470:	fb00 f909 	mul.w	r9, r0, r9
  406474:	45a1      	cmp	r9, r4
  406476:	d909      	bls.n	40648c <__udivmoddi4+0x98>
  406478:	19e4      	adds	r4, r4, r7
  40647a:	f100 33ff 	add.w	r3, r0, #4294967295
  40647e:	f080 810a 	bcs.w	406696 <__udivmoddi4+0x2a2>
  406482:	45a1      	cmp	r9, r4
  406484:	f240 8107 	bls.w	406696 <__udivmoddi4+0x2a2>
  406488:	3802      	subs	r0, #2
  40648a:	443c      	add	r4, r7
  40648c:	eba4 0409 	sub.w	r4, r4, r9
  406490:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406494:	2100      	movs	r1, #0
  406496:	2e00      	cmp	r6, #0
  406498:	d061      	beq.n	40655e <__udivmoddi4+0x16a>
  40649a:	fa24 f40e 	lsr.w	r4, r4, lr
  40649e:	2300      	movs	r3, #0
  4064a0:	6034      	str	r4, [r6, #0]
  4064a2:	6073      	str	r3, [r6, #4]
  4064a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4064a8:	428b      	cmp	r3, r1
  4064aa:	d907      	bls.n	4064bc <__udivmoddi4+0xc8>
  4064ac:	2e00      	cmp	r6, #0
  4064ae:	d054      	beq.n	40655a <__udivmoddi4+0x166>
  4064b0:	2100      	movs	r1, #0
  4064b2:	e886 0021 	stmia.w	r6, {r0, r5}
  4064b6:	4608      	mov	r0, r1
  4064b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4064bc:	fab3 f183 	clz	r1, r3
  4064c0:	2900      	cmp	r1, #0
  4064c2:	f040 808e 	bne.w	4065e2 <__udivmoddi4+0x1ee>
  4064c6:	42ab      	cmp	r3, r5
  4064c8:	d302      	bcc.n	4064d0 <__udivmoddi4+0xdc>
  4064ca:	4282      	cmp	r2, r0
  4064cc:	f200 80fa 	bhi.w	4066c4 <__udivmoddi4+0x2d0>
  4064d0:	1a84      	subs	r4, r0, r2
  4064d2:	eb65 0503 	sbc.w	r5, r5, r3
  4064d6:	2001      	movs	r0, #1
  4064d8:	46ac      	mov	ip, r5
  4064da:	2e00      	cmp	r6, #0
  4064dc:	d03f      	beq.n	40655e <__udivmoddi4+0x16a>
  4064de:	e886 1010 	stmia.w	r6, {r4, ip}
  4064e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4064e6:	b912      	cbnz	r2, 4064ee <__udivmoddi4+0xfa>
  4064e8:	2701      	movs	r7, #1
  4064ea:	fbb7 f7f2 	udiv	r7, r7, r2
  4064ee:	fab7 fe87 	clz	lr, r7
  4064f2:	f1be 0f00 	cmp.w	lr, #0
  4064f6:	d134      	bne.n	406562 <__udivmoddi4+0x16e>
  4064f8:	1beb      	subs	r3, r5, r7
  4064fa:	0c3a      	lsrs	r2, r7, #16
  4064fc:	fa1f fc87 	uxth.w	ip, r7
  406500:	2101      	movs	r1, #1
  406502:	fbb3 f8f2 	udiv	r8, r3, r2
  406506:	0c25      	lsrs	r5, r4, #16
  406508:	fb02 3318 	mls	r3, r2, r8, r3
  40650c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406510:	fb0c f308 	mul.w	r3, ip, r8
  406514:	42ab      	cmp	r3, r5
  406516:	d907      	bls.n	406528 <__udivmoddi4+0x134>
  406518:	19ed      	adds	r5, r5, r7
  40651a:	f108 30ff 	add.w	r0, r8, #4294967295
  40651e:	d202      	bcs.n	406526 <__udivmoddi4+0x132>
  406520:	42ab      	cmp	r3, r5
  406522:	f200 80d1 	bhi.w	4066c8 <__udivmoddi4+0x2d4>
  406526:	4680      	mov	r8, r0
  406528:	1aed      	subs	r5, r5, r3
  40652a:	b2a3      	uxth	r3, r4
  40652c:	fbb5 f0f2 	udiv	r0, r5, r2
  406530:	fb02 5510 	mls	r5, r2, r0, r5
  406534:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406538:	fb0c fc00 	mul.w	ip, ip, r0
  40653c:	45a4      	cmp	ip, r4
  40653e:	d907      	bls.n	406550 <__udivmoddi4+0x15c>
  406540:	19e4      	adds	r4, r4, r7
  406542:	f100 33ff 	add.w	r3, r0, #4294967295
  406546:	d202      	bcs.n	40654e <__udivmoddi4+0x15a>
  406548:	45a4      	cmp	ip, r4
  40654a:	f200 80b8 	bhi.w	4066be <__udivmoddi4+0x2ca>
  40654e:	4618      	mov	r0, r3
  406550:	eba4 040c 	sub.w	r4, r4, ip
  406554:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406558:	e79d      	b.n	406496 <__udivmoddi4+0xa2>
  40655a:	4631      	mov	r1, r6
  40655c:	4630      	mov	r0, r6
  40655e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406562:	f1ce 0420 	rsb	r4, lr, #32
  406566:	fa05 f30e 	lsl.w	r3, r5, lr
  40656a:	fa07 f70e 	lsl.w	r7, r7, lr
  40656e:	fa20 f804 	lsr.w	r8, r0, r4
  406572:	0c3a      	lsrs	r2, r7, #16
  406574:	fa25 f404 	lsr.w	r4, r5, r4
  406578:	ea48 0803 	orr.w	r8, r8, r3
  40657c:	fbb4 f1f2 	udiv	r1, r4, r2
  406580:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406584:	fb02 4411 	mls	r4, r2, r1, r4
  406588:	fa1f fc87 	uxth.w	ip, r7
  40658c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406590:	fb01 f30c 	mul.w	r3, r1, ip
  406594:	42ab      	cmp	r3, r5
  406596:	fa00 f40e 	lsl.w	r4, r0, lr
  40659a:	d909      	bls.n	4065b0 <__udivmoddi4+0x1bc>
  40659c:	19ed      	adds	r5, r5, r7
  40659e:	f101 30ff 	add.w	r0, r1, #4294967295
  4065a2:	f080 808a 	bcs.w	4066ba <__udivmoddi4+0x2c6>
  4065a6:	42ab      	cmp	r3, r5
  4065a8:	f240 8087 	bls.w	4066ba <__udivmoddi4+0x2c6>
  4065ac:	3902      	subs	r1, #2
  4065ae:	443d      	add	r5, r7
  4065b0:	1aeb      	subs	r3, r5, r3
  4065b2:	fa1f f588 	uxth.w	r5, r8
  4065b6:	fbb3 f0f2 	udiv	r0, r3, r2
  4065ba:	fb02 3310 	mls	r3, r2, r0, r3
  4065be:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4065c2:	fb00 f30c 	mul.w	r3, r0, ip
  4065c6:	42ab      	cmp	r3, r5
  4065c8:	d907      	bls.n	4065da <__udivmoddi4+0x1e6>
  4065ca:	19ed      	adds	r5, r5, r7
  4065cc:	f100 38ff 	add.w	r8, r0, #4294967295
  4065d0:	d26f      	bcs.n	4066b2 <__udivmoddi4+0x2be>
  4065d2:	42ab      	cmp	r3, r5
  4065d4:	d96d      	bls.n	4066b2 <__udivmoddi4+0x2be>
  4065d6:	3802      	subs	r0, #2
  4065d8:	443d      	add	r5, r7
  4065da:	1aeb      	subs	r3, r5, r3
  4065dc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4065e0:	e78f      	b.n	406502 <__udivmoddi4+0x10e>
  4065e2:	f1c1 0720 	rsb	r7, r1, #32
  4065e6:	fa22 f807 	lsr.w	r8, r2, r7
  4065ea:	408b      	lsls	r3, r1
  4065ec:	fa05 f401 	lsl.w	r4, r5, r1
  4065f0:	ea48 0303 	orr.w	r3, r8, r3
  4065f4:	fa20 fe07 	lsr.w	lr, r0, r7
  4065f8:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4065fc:	40fd      	lsrs	r5, r7
  4065fe:	ea4e 0e04 	orr.w	lr, lr, r4
  406602:	fbb5 f9fc 	udiv	r9, r5, ip
  406606:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40660a:	fb0c 5519 	mls	r5, ip, r9, r5
  40660e:	fa1f f883 	uxth.w	r8, r3
  406612:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406616:	fb09 f408 	mul.w	r4, r9, r8
  40661a:	42ac      	cmp	r4, r5
  40661c:	fa02 f201 	lsl.w	r2, r2, r1
  406620:	fa00 fa01 	lsl.w	sl, r0, r1
  406624:	d908      	bls.n	406638 <__udivmoddi4+0x244>
  406626:	18ed      	adds	r5, r5, r3
  406628:	f109 30ff 	add.w	r0, r9, #4294967295
  40662c:	d243      	bcs.n	4066b6 <__udivmoddi4+0x2c2>
  40662e:	42ac      	cmp	r4, r5
  406630:	d941      	bls.n	4066b6 <__udivmoddi4+0x2c2>
  406632:	f1a9 0902 	sub.w	r9, r9, #2
  406636:	441d      	add	r5, r3
  406638:	1b2d      	subs	r5, r5, r4
  40663a:	fa1f fe8e 	uxth.w	lr, lr
  40663e:	fbb5 f0fc 	udiv	r0, r5, ip
  406642:	fb0c 5510 	mls	r5, ip, r0, r5
  406646:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40664a:	fb00 f808 	mul.w	r8, r0, r8
  40664e:	45a0      	cmp	r8, r4
  406650:	d907      	bls.n	406662 <__udivmoddi4+0x26e>
  406652:	18e4      	adds	r4, r4, r3
  406654:	f100 35ff 	add.w	r5, r0, #4294967295
  406658:	d229      	bcs.n	4066ae <__udivmoddi4+0x2ba>
  40665a:	45a0      	cmp	r8, r4
  40665c:	d927      	bls.n	4066ae <__udivmoddi4+0x2ba>
  40665e:	3802      	subs	r0, #2
  406660:	441c      	add	r4, r3
  406662:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406666:	eba4 0408 	sub.w	r4, r4, r8
  40666a:	fba0 8902 	umull	r8, r9, r0, r2
  40666e:	454c      	cmp	r4, r9
  406670:	46c6      	mov	lr, r8
  406672:	464d      	mov	r5, r9
  406674:	d315      	bcc.n	4066a2 <__udivmoddi4+0x2ae>
  406676:	d012      	beq.n	40669e <__udivmoddi4+0x2aa>
  406678:	b156      	cbz	r6, 406690 <__udivmoddi4+0x29c>
  40667a:	ebba 030e 	subs.w	r3, sl, lr
  40667e:	eb64 0405 	sbc.w	r4, r4, r5
  406682:	fa04 f707 	lsl.w	r7, r4, r7
  406686:	40cb      	lsrs	r3, r1
  406688:	431f      	orrs	r7, r3
  40668a:	40cc      	lsrs	r4, r1
  40668c:	6037      	str	r7, [r6, #0]
  40668e:	6074      	str	r4, [r6, #4]
  406690:	2100      	movs	r1, #0
  406692:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406696:	4618      	mov	r0, r3
  406698:	e6f8      	b.n	40648c <__udivmoddi4+0x98>
  40669a:	4690      	mov	r8, r2
  40669c:	e6e0      	b.n	406460 <__udivmoddi4+0x6c>
  40669e:	45c2      	cmp	sl, r8
  4066a0:	d2ea      	bcs.n	406678 <__udivmoddi4+0x284>
  4066a2:	ebb8 0e02 	subs.w	lr, r8, r2
  4066a6:	eb69 0503 	sbc.w	r5, r9, r3
  4066aa:	3801      	subs	r0, #1
  4066ac:	e7e4      	b.n	406678 <__udivmoddi4+0x284>
  4066ae:	4628      	mov	r0, r5
  4066b0:	e7d7      	b.n	406662 <__udivmoddi4+0x26e>
  4066b2:	4640      	mov	r0, r8
  4066b4:	e791      	b.n	4065da <__udivmoddi4+0x1e6>
  4066b6:	4681      	mov	r9, r0
  4066b8:	e7be      	b.n	406638 <__udivmoddi4+0x244>
  4066ba:	4601      	mov	r1, r0
  4066bc:	e778      	b.n	4065b0 <__udivmoddi4+0x1bc>
  4066be:	3802      	subs	r0, #2
  4066c0:	443c      	add	r4, r7
  4066c2:	e745      	b.n	406550 <__udivmoddi4+0x15c>
  4066c4:	4608      	mov	r0, r1
  4066c6:	e708      	b.n	4064da <__udivmoddi4+0xe6>
  4066c8:	f1a8 0802 	sub.w	r8, r8, #2
  4066cc:	443d      	add	r5, r7
  4066ce:	e72b      	b.n	406528 <__udivmoddi4+0x134>

004066d0 <__aeabi_idiv0>:
  4066d0:	4770      	bx	lr
  4066d2:	bf00      	nop

004066d4 <OV2640_JPEG>:
  4066d4:	14e0 77e1 1fe5 03d7 10da 00e0 01ff 0804     ...w............
  4066e4:	ffff 0000                                   ....

004066e8 <OV2640_JPEG_1024x768>:
  4066e8:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  4066f8:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406708:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406718:	c8c0 96c1 008c 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406728:	0054 8855 005a c05b 015c 02d3 ffff 0000     T.U.Z.[.\.......

00406738 <OV2640_JPEG_1280x1024>:
  406738:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406748:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406758:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406768:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  406778:	0054 8855 0057 405a f05b 015c 02d3 00e0     T.U.W.Z@[.\.....
  406788:	ffff 0000                                   ....

0040678c <OV2640_JPEG_1600x1200>:
  40678c:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  40679c:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4067ac:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4067bc:	04e0 c8c0 96c1 3d86 0050 9051 2c52 0053     .......=P.Q.R,S.
  4067cc:	0054 8855 0057 905a 2c5b 055c 02d3 00e0     T.U.W.Z.[,\.....
  4067dc:	ffff 0000                                   ....

004067e0 <OV2640_JPEG_320x240>:
  4067e0:	01ff 4012 1117 4318 0019 4b1a 0932 ca4f     ...@...C...K2.O.
  4067f0:	a850 235a 006d 1239 da35 1a22 c337 0023     P.Z#m.9.5.".7.#.
  406800:	c034 1a36 8806 c007 870d 410e 004c 00ff     4.6........AL...
  406810:	04e0 64c0 4bc1 3586 8950 c851 9652 0053     ...d.K.5P.Q.R.S.
  406820:	0054 0055 0057 505a 3c5b 005c 00e0 ffff     T.U.W.ZP[<\.....

00406830 <OV2640_JPEG_640x480>:
  406830:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406840:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  406850:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  406860:	04e0 c8c0 96c1 3d86 8950 9051 2c52 0053     .......=P.Q.R,S.
  406870:	0054 8855 0057 a05a 785b 005c 04d3 00e0     T.U.W.Z.[x\.....
  406880:	ffff 0000                                   ....

00406884 <OV2640_JPEG_800x600>:
  406884:	01ff 0111 0012 1117 7518 3632 0119 971a     .........u26....
  406894:	0f03 4037 bb4f 9c50 575a 806d 343d 0239     ..7@O.P.ZWm.=49.
  4068a4:	8835 0a22 4037 a034 0206 b70d 010e 00ff     5.".7@4.........
  4068b4:	04e0 c8c0 96c1 3586 8950 9051 2c52 0053     .......5P.Q.R,S.
  4068c4:	0054 8855 0057 c85a 965b 005c 02d3 00e0     T.U.W.Z.[.\.....
  4068d4:	ffff 0000                                   ....

004068d8 <OV2640_JPEG_INIT>:
  4068d8:	00ff ff2c df2e 01ff 323c 0111 0209 2804     ..,.....<2.....(
  4068e8:	e513 4814 0c2c 7833 333a fb3b 003e 1143     ...H,.3x:3;.>.C.
  4068f8:	1016 9239 da35 1a22 c337 0023 c034 1a36     ..9.5.".7.#.4.6.
  406908:	8806 c007 870d 410e 004c 0048 005b 0342     .......AL.H.[.B.
  406918:	814a 9921 4024 3825 8226 005c 0063 7061     J.!.$@%8&.\.c.ap
  406928:	8062 057c 8020 3028 006c 806d 006e 0270     b.|. .(0l.m.n.p.
  406938:	9471 c173 4012 1117 4318 0019 4b1a 0932     q.s..@...C...K2.
  406948:	c037 604f a850 006d 383d 3f46 604f 3c0c     7.O`P.m.=8F?O`.<
  406958:	00ff 7fe5 c0f9 2441 14e0 ff76 a033 2042     ......A$..v.3.B 
  406968:	1843 004c d587 3f88 03d7 10d9 82d3 08c8     C.L....?........
  406978:	80c9 007c 007d 037c 487d 487d 087c 207d     ..|.}.|.}H}H|.} 
  406988:	107d 0e7d 0090 0e91 1a91 3191 5a91 6991     }.}........1.Z.i
  406998:	7591 7e91 8891 8f91 9691 a391 af91 c491     .u.~............
  4069a8:	d791 e891 2091 0092 0693 e393 0593 0593     ..... ..........
  4069b8:	0093 0493 0093 0093 0093 0093 0093 0093     ................
  4069c8:	0093 0096 0897 1997 0297 0c97 2497 3097     .............$.0
  4069d8:	2897 2697 0297 9897 8097 0097 0097 edc3     .(.&............
  4069e8:	00a4 00a8 11c5 51c6 80bf 10c7 66b6 a5b8     .......Q.....f..
  4069f8:	64b7 7cb9 afb3 97b4 ffb5 c5b0 94b1 0fb2     .d.|............
  406a08:	5cc4 64c0 4bc1 008c 3d86 0050 c851 9652     .\.d.K...=P.Q.R.
  406a18:	0053 0054 0055 c85a 965b 005c 00d3 edc3     S.T.U.Z.[.\.....
  406a28:	007f 00da 1fe5 67e1 00e0 7fdd 0005 4012     .......g.......@
  406a38:	04d3 16c0 12c1 008c 3d86 0050 2c51 2452     .........=P.Q,R$
  406a48:	0053 0054 0055 2c5a 245b 005c ffff 0000     S.T.U.Z,[$\.....

00406a58 <OV2640_QQVGA_RGB888>:
  406a58:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406a68:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406a78:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406a88:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406a98:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406aa8:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406ab8:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406ac8:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406ad8:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406ae8:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406af8:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406b08:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406b18:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406b28:	605d 6eac ffbe 00bf 2831 3c32 3f82 0112     ]`.n....1(2<.?..
  406b38:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406b48:	0228 ffff                                   (...

00406b4c <OV2640_QQVGA_YUV422>:
  406b4c:	000e 8012 0013 0111 0012 10d5 540c 340d     .............T.4
  406b5c:	0116 2517 a018 0319 f01a 891b 0322 1829     ...%........".).
  406b6c:	f82b 012c a031 f032 c433 b43a 3f36 6004     +.,.1.2.3.:.6?.`
  406b7c:	8027 0f3d 803e 403f 7f40 6a41 2942 e544     '.=.>.?@@.AjB)D.
  406b8c:	4145 0247 6449 a14a 704b 1a4c 504d 134e     EAG.IdJ.KpL.MPN.
  406b9c:	0064 8867 1a68 3814 3c24 3025 7226 9750     d.g.h..8$<%0&rP.
  406bac:	7e51 0052 0053 0020 2321 1438 00e9 5556     Q~R.S. .!#8...VU
  406bbc:	ff57 ff58 ff59 045f 00ec ff13 7f80 3f81     W.X.Y._........?
  406bcc:	3282 0183 1138 7084 0085 0386 0187 0588     .2..8..p........
  406bdc:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406bec:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406bfc:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406c0c:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406c1c:	885c 605d 6eac ffbe 00bf 2831 3c32 0034     \.]`.n....1(2<4.
  406c2c:	3f82 0012 3f36 0053 0033 891b 0322 0228     .?..6?S.3...".(.
  406c3c:	00d9 ffff                                   ....

00406c40 <OV2640_QVGA_RGB888>:
  406c40:	000e 8012 0013 0111 0012 10d5 120c 340d     ...............4
  406c50:	2517 a018 0319 f01a 891b 0322 1829 f82b     .%........".).+.
  406c60:	012c a031 f032 c433 b43a 3f36 6004 8027     ,.1.2.3.:.6?.`'.
  406c70:	0f3d 803e 403f 7f40 6a41 2942 e544 4145     =.>.?@@.AjB)D.EA
  406c80:	0247 6449 a14a 704b 1a4c 504d 134e 0064     G.IdJ.KpL.MPN.d.
  406c90:	8867 1a68 3814 3c24 3025 7226 9750 7e51     g.h..8$<%0&rP.Q~
  406ca0:	0052 0053 0020 2321 1438 00e9 5556 ff57     R.S. .!#8...VUW.
  406cb0:	ff58 ff59 045f 00ec ff13 7f80 3f81 3282     X.Y._........?.2
  406cc0:	0183 1138 7084 0085 0386 0187 0588 3089     ..8..p.........0
  406cd0:	308d 858f 3093 8595 3099 859b 089c 129d     .0...0...0......
  406ce0:	239e 459f 55a0 64a1 72a2 7fa3 8ba4 95a5     .#.E.U.d.r......
  406cf0:	a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce 6ecf     .............x.n
  406d00:	0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b 885c     ..........Z$[.\.
  406d10:	605d 6eac ffbe 00bf 5031 7832 3f82 0112     ]`.n....1P2x.?..
  406d20:	2f36 0483 0053 f433 8a1b 0322 0084 0084     6/..S.3...".....
  406d30:	0228 ffff                                   (...

00406d34 <OV2640_QVGA_YUV422_10FPS>:
  406d34:	000e 8012 05fe 0013 0511 0012 10d5 d40c     ................
  406d44:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406d54:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406d64:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406d74:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406d84:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406d94:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406da4:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406db4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406dc4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406dd4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406de4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406df4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406e04:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406e14:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406e24 <OV2640_QVGA_YUV422_15FPS>:
  406e24:	000e 8012 05fe 0013 0311 0012 10d5 d40c     ................
  406e34:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406e44:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406e54:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406e64:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406e74:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406e84:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406e94:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406ea4:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406eb4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406ec4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406ed4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406ee4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406ef4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406f04:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00406f14 <OV2640_QVGA_YUV422_20FPS>:
  406f14:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  406f24:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  406f34:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  406f44:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  406f54:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  406f64:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  406f74:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  406f84:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  406f94:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  406fa4:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  406fb4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  406fc4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  406fd4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  406fe4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  406ff4:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

00407004 <OV2640_QVGA_YUV422_30FPS>:
  407004:	000e 8012 05fe 0013 0111 0012 10d5 d40c     ................
  407014:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407024:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407034:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407044:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407054:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407064:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407074:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407084:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407094:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  4070a4:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  4070b4:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4070c4:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4070d4:	885c 605d 6eac ffbe 00bf 5031 7832 3f82     \.]`.n....1P2x.?
  4070e4:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004070f4 <OV2640_TEST_PATTERN>:
  4070f4:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  407104:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407114:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407124:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407134:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407144:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407154:	9750 7e51 0052 0053 0020 2321 0738 0284     P.Q~R.S. .!#8...
  407164:	1438 00e9 5556 ff57 ff58 ff59 045f 00ec     8...VUW.X.Y._...
  407174:	ff13 7f80 3f81 3282 0183 1138 0085 0386     .....?.2..8.....
  407184:	0187 0588 3089 308d 858f 3093 8595 3099     .....0.0...0...0
  407194:	859b 089c 129d 239e 459f 55a0 64a1 72a2     .......#.E.U.d.r
  4071a4:	7fa3 8ba4 95a5 a7a6 b5a7 cba8 dda9 ecaa     ................
  4071b4:	1aab 78ce 6ecf 0ad0 0cd1 84d2 90d3 1ed4     ...x.n..........
  4071c4:	245a 1f5b 885c 605d 6eac ffbe 00bf 5031     Z$[.\.]`.n....1P
  4071d4:	7832 3f82 0012 3f36 0053 c433 891b 0322     2x.?..6?S.3...".
  4071e4:	0228 ffff                                   (...

004071e8 <OV2640_VGA_YUV422_20FPS>:
  4071e8:	000e 8012 05fe 0013 0211 0012 10d5 d40c     ................
  4071f8:	340d 0116 2517 a018 0319 f01a 891b 0322     .4...%........".
  407208:	1829 f82b 012c a031 f032 c433 b43a 3f36     ).+.,.1.2.3.:.6?
  407218:	6004 8027 0f3d 803e 403f 7f40 6a41 2942     .`'.=.>.?@@.AjB)
  407228:	e544 4145 0247 6449 a14a 704b 1a4c 504d     D.EAG.IdJ.KpL.MP
  407238:	134e 0064 8867 1a68 3814 3c24 3025 7226     N.d.g.h..8$<%0&r
  407248:	9750 7e51 0052 0053 0020 2321 1438 00e9     P.Q~R.S. .!#8...
  407258:	5556 ff57 ff58 ff59 045f 00ec ff13 7f80     VUW.X.Y._.......
  407268:	3f81 3282 0183 1138 0085 0386 0187 0588     .?.2..8.........
  407278:	3089 308d 858f 3093 8595 3099 859b 089c     .0.0...0...0....
  407288:	129d 239e 459f 55a0 64a1 72a2 7fa3 8ba4     ...#.E.U.d.r....
  407298:	95a5 a7a6 b5a7 cba8 dda9 ecaa 1aab 78ce     ...............x
  4072a8:	6ecf 0ad0 0cd1 84d2 90d3 1ed4 245a 1f5b     .n..........Z$[.
  4072b8:	885c 605d 6eac ffbe 00bf a031 f032 3f82     \.]`.n....1.2..?
  4072c8:	0012 3f36 0053 c433 891b 0322 0228 ffff     ..6?S.3...".(...

004072d8 <OV2640_YUV422>:
  4072d8:	00ff 0005 10da 03d7 00df 8033 403c 77e1     ..........3.<@.w
  4072e8:	0000 ffff c200 0001 00c0 0000 0800 0000     ................
	...
  407304:	6f4e 656e 0000 0000 6d49 6761 0065 0000     None....Image...
  407314:	6d69 6761 5f65 7274 6e61 6673 7265 2520     image_transfer %
  407324:	0d64 000a 6f43 706d 656c 6574 0a0d 0000     d...Complete....
  407334:	6573 2074 6175 7472 662e 6f6c 2077 2030     set uart.flow 0 
  407344:	6e6f 0d20 000a 0000 6573 2074 7562 2e73     on .....set bus.
  407354:	6f63 6d6d 6e61 2e64 7872 625f 6675 6973     command.rx_bufsi
  407364:	657a 3520 3030 0d30 000a 0000 6573 2074     ze 5000.....set 
  407374:	7973 6920 6720 7720 616c 206e 3032 0a0d     sy i g wlan 20..
  407384:	0000 0000 6573 2074 7973 6920 6720 6e20     ....set sy i g n
  407394:	7465 6f77 6b72 3120 0d39 000a 6573 2074     etwork 19...set 
  4073a4:	7973 6920 6720 7320 666f 6174 2070 3132     sy i g softap 21
  4073b4:	0a0d 0000 6573 2074 7973 7473 6d65 632e     ....set system.c
  4073c4:	646d 672e 6970 206f 3331 0a0d 0000 0000     md.gpio 13......
  4073d4:	6573 2074 6c77 6e20 6f20 3120 0d34 000a     set wl n o 14...
  4073e4:	6173 6576 0a0d 0000 6572 6f62 746f 0a0d     save....reboot..
  4073f4:	0000 0000 6573 7574 2070 6577 0d62 000a     ....setup web...
  407404:	6573 2074 7973 6320 7020 6f20 6666 0a0d     set sy c p off..
  407414:	0000 0000 6577 2062 6573 7574 0070 0000     ....web setup...
  407424:	6f70 6c6c 6120 6c6c 0a0d 0000               poll all....

00407430 <_global_impure_ptr>:
  407430:	0018 2000 4e49 0046 6e69 0066 414e 004e     ... INF.inf.NAN.
  407440:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407450:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407460:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407470:	296c 0000 0030 0000                         l)..0...

00407478 <blanks.7208>:
  407478:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407488 <zeroes.7209>:
  407488:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  407498:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

004074a8 <__mprec_bigtens>:
  4074a8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4074b8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4074c8:	bf3c 7f73 4fdd 7515                         <.s..O.u

004074d0 <__mprec_tens>:
  4074d0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4074e0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4074f0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407500:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407510:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407520:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407530:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407540:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407550:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407560:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407570:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407580:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407590:	9db4 79d9 7843 44ea                         ...yCx.D

00407598 <p05.6040>:
  407598:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4075a8:	4f50 4953 0058 0000 002e 0000               POSIX.......

004075b4 <_ctype_>:
  4075b4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4075c4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4075d4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4075e4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4075f4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  407604:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407614:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  407624:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  407634:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004076b8 <_init>:
  4076b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4076ba:	bf00      	nop
  4076bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4076be:	bc08      	pop	{r3}
  4076c0:	469e      	mov	lr, r3
  4076c2:	4770      	bx	lr

004076c4 <__init_array_start>:
  4076c4:	0040323d 	.word	0x0040323d

004076c8 <__frame_dummy_init_array_entry>:
  4076c8:	004000f1                                ..@.

004076cc <_fini>:
  4076cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4076ce:	bf00      	nop
  4076d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4076d2:	bc08      	pop	{r3}
  4076d4:	469e      	mov	lr, r3
  4076d6:	4770      	bx	lr

004076d8 <__fini_array_start>:
  4076d8:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__malloc_av_>:
	...
20000448:	0440 2000 0440 2000 0448 2000 0448 2000     @.. @.. H.. H.. 
20000458:	0450 2000 0450 2000 0458 2000 0458 2000     P.. P.. X.. X.. 
20000468:	0460 2000 0460 2000 0468 2000 0468 2000     `.. `.. h.. h.. 
20000478:	0470 2000 0470 2000 0478 2000 0478 2000     p.. p.. x.. x.. 
20000488:	0480 2000 0480 2000 0488 2000 0488 2000     ... ... ... ... 
20000498:	0490 2000 0490 2000 0498 2000 0498 2000     ... ... ... ... 
200004a8:	04a0 2000 04a0 2000 04a8 2000 04a8 2000     ... ... ... ... 
200004b8:	04b0 2000 04b0 2000 04b8 2000 04b8 2000     ... ... ... ... 
200004c8:	04c0 2000 04c0 2000 04c8 2000 04c8 2000     ... ... ... ... 
200004d8:	04d0 2000 04d0 2000 04d8 2000 04d8 2000     ... ... ... ... 
200004e8:	04e0 2000 04e0 2000 04e8 2000 04e8 2000     ... ... ... ... 
200004f8:	04f0 2000 04f0 2000 04f8 2000 04f8 2000     ... ... ... ... 
20000508:	0500 2000 0500 2000 0508 2000 0508 2000     ... ... ... ... 
20000518:	0510 2000 0510 2000 0518 2000 0518 2000     ... ... ... ... 
20000528:	0520 2000 0520 2000 0528 2000 0528 2000      ..  .. (.. (.. 
20000538:	0530 2000 0530 2000 0538 2000 0538 2000     0.. 0.. 8.. 8.. 
20000548:	0540 2000 0540 2000 0548 2000 0548 2000     @.. @.. H.. H.. 
20000558:	0550 2000 0550 2000 0558 2000 0558 2000     P.. P.. X.. X.. 
20000568:	0560 2000 0560 2000 0568 2000 0568 2000     `.. `.. h.. h.. 
20000578:	0570 2000 0570 2000 0578 2000 0578 2000     p.. p.. x.. x.. 
20000588:	0580 2000 0580 2000 0588 2000 0588 2000     ... ... ... ... 
20000598:	0590 2000 0590 2000 0598 2000 0598 2000     ... ... ... ... 
200005a8:	05a0 2000 05a0 2000 05a8 2000 05a8 2000     ... ... ... ... 
200005b8:	05b0 2000 05b0 2000 05b8 2000 05b8 2000     ... ... ... ... 
200005c8:	05c0 2000 05c0 2000 05c8 2000 05c8 2000     ... ... ... ... 
200005d8:	05d0 2000 05d0 2000 05d8 2000 05d8 2000     ... ... ... ... 
200005e8:	05e0 2000 05e0 2000 05e8 2000 05e8 2000     ... ... ... ... 
200005f8:	05f0 2000 05f0 2000 05f8 2000 05f8 2000     ... ... ... ... 
20000608:	0600 2000 0600 2000 0608 2000 0608 2000     ... ... ... ... 
20000618:	0610 2000 0610 2000 0618 2000 0618 2000     ... ... ... ... 
20000628:	0620 2000 0620 2000 0628 2000 0628 2000      ..  .. (.. (.. 
20000638:	0630 2000 0630 2000 0638 2000 0638 2000     0.. 0.. 8.. 8.. 
20000648:	0640 2000 0640 2000 0648 2000 0648 2000     @.. @.. H.. H.. 
20000658:	0650 2000 0650 2000 0658 2000 0658 2000     P.. P.. X.. X.. 
20000668:	0660 2000 0660 2000 0668 2000 0668 2000     `.. `.. h.. h.. 
20000678:	0670 2000 0670 2000 0678 2000 0678 2000     p.. p.. x.. x.. 
20000688:	0680 2000 0680 2000 0688 2000 0688 2000     ... ... ... ... 
20000698:	0690 2000 0690 2000 0698 2000 0698 2000     ... ... ... ... 
200006a8:	06a0 2000 06a0 2000 06a8 2000 06a8 2000     ... ... ... ... 
200006b8:	06b0 2000 06b0 2000 06b8 2000 06b8 2000     ... ... ... ... 
200006c8:	06c0 2000 06c0 2000 06c8 2000 06c8 2000     ... ... ... ... 
200006d8:	06d0 2000 06d0 2000 06d8 2000 06d8 2000     ... ... ... ... 
200006e8:	06e0 2000 06e0 2000 06e8 2000 06e8 2000     ... ... ... ... 
200006f8:	06f0 2000 06f0 2000 06f8 2000 06f8 2000     ... ... ... ... 
20000708:	0700 2000 0700 2000 0708 2000 0708 2000     ... ... ... ... 
20000718:	0710 2000 0710 2000 0718 2000 0718 2000     ... ... ... ... 
20000728:	0720 2000 0720 2000 0728 2000 0728 2000      ..  .. (.. (.. 
20000738:	0730 2000 0730 2000 0738 2000 0738 2000     0.. 0.. 8.. 8.. 
20000748:	0740 2000 0740 2000 0748 2000 0748 2000     @.. @.. H.. H.. 
20000758:	0750 2000 0750 2000 0758 2000 0758 2000     P.. P.. X.. X.. 
20000768:	0760 2000 0760 2000 0768 2000 0768 2000     `.. `.. h.. h.. 
20000778:	0770 2000 0770 2000 0778 2000 0778 2000     p.. p.. x.. x.. 
20000788:	0780 2000 0780 2000 0788 2000 0788 2000     ... ... ... ... 
20000798:	0790 2000 0790 2000 0798 2000 0798 2000     ... ... ... ... 
200007a8:	07a0 2000 07a0 2000 07a8 2000 07a8 2000     ... ... ... ... 
200007b8:	07b0 2000 07b0 2000 07b8 2000 07b8 2000     ... ... ... ... 
200007c8:	07c0 2000 07c0 2000 07c8 2000 07c8 2000     ... ... ... ... 
200007d8:	07d0 2000 07d0 2000 07d8 2000 07d8 2000     ... ... ... ... 
200007e8:	07e0 2000 07e0 2000 07e8 2000 07e8 2000     ... ... ... ... 
200007f8:	07f0 2000 07f0 2000 07f8 2000 07f8 2000     ... ... ... ... 
20000808:	0800 2000 0800 2000 0808 2000 0808 2000     ... ... ... ... 
20000818:	0810 2000 0810 2000 0818 2000 0818 2000     ... ... ... ... 
20000828:	0820 2000 0820 2000 0828 2000 0828 2000      ..  .. (.. (.. 
20000838:	0830 2000 0830 2000 0838 2000 0838 2000     0.. 0.. 8.. 8.. 

20000848 <__malloc_sbrk_base>:
20000848:	ffff ffff                                   ....

2000084c <__malloc_trim_threshold>:
2000084c:	0000 0002                                   ....

20000850 <__global_locale>:
20000850:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000870:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000890:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000910:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000930:	5a89 0040 5649 0040 0000 0000 75b4 0040     .Z@.IV@......u@.
20000940:	75b0 0040 7384 0040 7384 0040 7384 0040     .u@..s@..s@..s@.
20000950:	7384 0040 7384 0040 7384 0040 7384 0040     .s@..s@..s@..s@.
20000960:	7384 0040 7384 0040 ffff ffff ffff ffff     .s@..s@.........
20000970:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20000998:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
